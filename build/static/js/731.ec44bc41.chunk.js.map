{"version":3,"file":"static/js/731.ec44bc41.chunk.js","mappings":"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","sources":["../node_modules/@ethersproject/base64/src.ts/browser-base64.ts","../node_modules/@ethersproject/networks/src.ts/_version.ts","../node_modules/@ethersproject/networks/src.ts/index.ts","../node_modules/@ethersproject/properties/src.ts/index.ts","../node_modules/@ethersproject/properties/src.ts/_version.ts","../node_modules/@ethersproject/providers/src.ts/_version.ts","../node_modules/@ethersproject/abstract-signer/src.ts/index.ts","../node_modules/@ethersproject/abstract-signer/src.ts/_version.ts","../node_modules/@ethersproject/keccak256/src.ts/index.ts","../node_modules/@ethersproject/rlp/src.ts/_version.ts","../node_modules/@ethersproject/rlp/src.ts/index.ts","../node_modules/@ethersproject/address/src.ts/_version.ts","../node_modules/@ethersproject/address/src.ts/index.ts","../node_modules/@ethersproject/hash/src.ts/_version.ts","../node_modules/@ethersproject/hash/src.ts/id.ts","../node_modules/@ethersproject/hash/src.ts/typed-data.ts","../node_modules/@ethersproject/constants/src.ts/bignumbers.ts","../node_modules/node_modules/minimalistic-assert/index.js","../node_modules/node_modules/minimalistic-crypto-utils/lib/utils.js","../node_modules/node_modules/elliptic/lib/elliptic/utils.js","../node_modules/node_modules/elliptic/lib/elliptic/curve/base.js","../node_modules/node_modules/inherits/inherits_browser.js","../node_modules/node_modules/elliptic/lib/elliptic/curve/short.js","../node_modules/node_modules/elliptic/lib/elliptic/curve/index.js","../node_modules/node_modules/elliptic/lib/elliptic/curves.js","../node_modules/node_modules/hmac-drbg/lib/hmac-drbg.js","../node_modules/node_modules/elliptic/lib/elliptic/ec/key.js","../node_modules/node_modules/elliptic/lib/elliptic/ec/signature.js","../node_modules/node_modules/elliptic/lib/elliptic/ec/index.js","../node_modules/@ethersproject/signing-key/lib.esm/elliptic.js","../node_modules/node_modules/elliptic/lib/elliptic.js","../node_modules/@ethersproject/signing-key/src.ts/_version.ts","../node_modules/@ethersproject/signing-key/src.ts/index.ts","../node_modules/@ethersproject/transactions/src.ts/_version.ts","../node_modules/@ethersproject/transactions/src.ts/index.ts","../node_modules/@ethersproject/abstract-provider/src.ts/index.ts","../node_modules/@ethersproject/abstract-provider/src.ts/_version.ts","../node_modules/@ethersproject/basex/src.ts/index.ts","../node_modules/@ethersproject/hash/src.ts/ens-normalize/decoder.ts","../node_modules/@ethersproject/hash/src.ts/ens-normalize/lib.ts","../node_modules/@ethersproject/hash/src.ts/ens-normalize/include.ts","../node_modules/@ethersproject/hash/src.ts/namehash.ts","../node_modules/@ethersproject/sha2/src.ts/browser-sha2.ts","../node_modules/@ethersproject/sha2/src.ts/_version.ts","../node_modules/@ethersproject/constants/src.ts/addresses.ts","../node_modules/@ethersproject/providers/src.ts/formatter.ts","../node_modules/@ethersproject/providers/src.ts/base-provider.ts","../node_modules/@ethersproject/constants/src.ts/hashes.ts","../node_modules/@ethersproject/providers/src.ts/json-rpc-provider.ts","../node_modules/@ethersproject/strings/src.ts/_version.ts","../node_modules/@ethersproject/strings/src.ts/utf8.ts","../node_modules/@ethersproject/web/src.ts/browser-geturl.ts","../node_modules/@ethersproject/web/src.ts/index.ts","../node_modules/@ethersproject/web/src.ts/_version.ts","../node_modules/alchemy-sdk/src/internal/request-batcher.ts","../node_modules/alchemy-sdk/src/api/alchemy-provider.ts","../node_modules/bech32/index.js","../node_modules/hash.js/lib/hash.js","../node_modules/hash.js/lib/hash/common.js","../node_modules/hash.js/lib/hash/hmac.js","../node_modules/hash.js/lib/hash/ripemd.js","../node_modules/hash.js/lib/hash/sha.js","../node_modules/hash.js/lib/hash/sha/1.js","../node_modules/hash.js/lib/hash/sha/224.js","../node_modules/hash.js/lib/hash/sha/256.js","../node_modules/hash.js/lib/hash/sha/384.js","../node_modules/hash.js/lib/hash/sha/512.js","../node_modules/hash.js/lib/hash/sha/common.js","../node_modules/hash.js/lib/hash/utils.js","../node_modules/inherits/inherits_browser.js","../node_modules/js-sha3/src/sha3.js","../node_modules/minimalistic-assert/index.js"],"sourcesContent":["\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function decode(textData: string): Uint8Array {\n    textData = atob(textData);\n    const data = [];\n    for (let i = 0; i < textData.length; i++) {\n        data.push(textData.charCodeAt(i));\n    }\n    return arrayify(data);\n}\n\nexport function encode(data: BytesLike): string {\n    data = arrayify(data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n\n\n","export const version = \"networks/5.7.1\";\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Network, Networkish } from \"./types\";\n\nexport {\n    Network,\n    Networkish\n};\n\ntype DefaultProviderFunc = (providers: any, options?: any) => any;\n\ninterface Renetworkable extends DefaultProviderFunc {\n    renetwork: (network: Network) => DefaultProviderFunc;\n};\n\nfunction isRenetworkable(value: any): value is Renetworkable {\n    return (value && typeof(value.renetwork) === \"function\");\n}\n\nfunction ethDefaultProvider(network: string | Network): Renetworkable {\n    const func = function(providers: any, options?: any): any {\n        if (options == null) { options = { }; }\n        const providerList: Array<any> = [];\n\n        if (providers.InfuraProvider && options.infura !== \"-\") {\n            try {\n                providerList.push(new providers.InfuraProvider(network, options.infura));\n            } catch(error) { }\n        }\n\n        if (providers.EtherscanProvider && options.etherscan !== \"-\") {\n            try {\n                providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n            } catch(error) { }\n        }\n\n        if (providers.AlchemyProvider && options.alchemy !== \"-\") {\n            try {\n                providerList.push(new providers.AlchemyProvider(network, options.alchemy));\n            } catch(error) { }\n        }\n\n        if (providers.PocketProvider && options.pocket !== \"-\") {\n            // These networks are currently faulty on Pocket as their\n            // network does not handle the Berlin hardfork, which is\n            // live on these ones.\n            // @TODO: This goes away once Pocket has upgraded their nodes\n            const skip = [ \"goerli\", \"ropsten\", \"rinkeby\", \"sepolia\" ];\n            try {\n                const provider = new providers.PocketProvider(network, options.pocket);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            } catch(error) { }\n        }\n\n        if (providers.CloudflareProvider && options.cloudflare !== \"-\") {\n            try {\n                providerList.push(new providers.CloudflareProvider(network));\n            } catch(error) { }\n        }\n\n        if (providers.AnkrProvider && options.ankr !== \"-\") {\n            try {\n                const skip = [ \"ropsten\" ];\n                const provider = new providers.AnkrProvider(network, options.ankr);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            } catch(error) { }\n        }\n\n        if (providerList.length === 0) { return null; }\n\n        if (providers.FallbackProvider) {\n            let quorum = 1;\n            if (options.quorum != null) {\n                quorum = options.quorum;\n            } else if (network === \"homestead\") {\n                quorum = 2;\n            }\n            return new providers.FallbackProvider(providerList, quorum);\n        }\n\n        return providerList[0];\n    };\n\n    func.renetwork = function(network: Network) {\n        return ethDefaultProvider(network);\n    };\n\n    return func;\n}\n\nfunction etcDefaultProvider(url: string, network: string | Network): Renetworkable {\n    const func = function(providers: any, options?: any): any {\n        if (providers.JsonRpcProvider) {\n            return new providers.JsonRpcProvider(url, network);\n        }\n\n        return null;\n    };\n\n    func.renetwork = function(network: Network) {\n        return etcDefaultProvider(url, network);\n    };\n\n    return func;\n}\n\nconst homestead: Network = {\n    chainId: 1,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"homestead\",\n    _defaultProvider: ethDefaultProvider(\"homestead\")\n};\n\nconst ropsten: Network = {\n    chainId: 3,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"ropsten\",\n    _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\n\nconst classicMordor: Network = {\n    chainId: 63,\n    name: \"classicMordor\",\n    _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\n\n// See: https://chainlist.org\nconst networks: { [name: string]: Network } = {\n    unspecified: { chainId: 0, name: \"unspecified\" },\n\n    homestead: homestead,\n    mainnet: homestead,\n\n    morden: { chainId: 2, name: \"morden\" },\n\n    ropsten: ropsten,\n    testnet: ropsten,\n\n    rinkeby: {\n        chainId: 4,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"rinkeby\",\n        _defaultProvider: ethDefaultProvider(\"rinkeby\")\n    },\n\n    kovan: {\n        chainId: 42,\n        name: \"kovan\",\n        _defaultProvider: ethDefaultProvider(\"kovan\")\n    },\n\n    goerli: {\n        chainId: 5,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"goerli\",\n        _defaultProvider: ethDefaultProvider(\"goerli\")\n    },\n\n    kintsugi: { chainId: 1337702, name: \"kintsugi\" },\n\n    sepolia: {\n        chainId: 11155111,\n        name: \"sepolia\",\n        _defaultProvider: ethDefaultProvider(\"sepolia\")\n    },\n\n\n    // ETC (See: #351)\n    classic: {\n        chainId: 61,\n        name: \"classic\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/etc\", \"classic\")\n    },\n\n    classicMorden: { chainId: 62, name: \"classicMorden\" },\n\n    classicMordor: classicMordor,\n    classicTestnet: classicMordor,\n\n    classicKotti: {\n        chainId: 6,\n        name: \"classicKotti\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/kotti\", \"classicKotti\")\n    },\n\n    xdai: { chainId: 100, name: \"xdai\" },\n\n    matic: {\n        chainId: 137,\n        name: \"matic\",\n        _defaultProvider: ethDefaultProvider(\"matic\")\n    },\n    maticmum: { chainId: 80001, name: \"maticmum\" },\n\n    optimism: {\n        chainId: 10,\n        name: \"optimism\",\n        _defaultProvider: ethDefaultProvider(\"optimism\")\n    },\n    \"optimism-kovan\": { chainId: 69, name: \"optimism-kovan\" },\n    \"optimism-goerli\": { chainId: 420, name: \"optimism-goerli\" },\n\n    arbitrum: { chainId: 42161, name: \"arbitrum\" },\n    \"arbitrum-rinkeby\": { chainId: 421611, name: \"arbitrum-rinkeby\" },\n    \"arbitrum-goerli\": { chainId: 421613, name: \"arbitrum-goerli\" },\n\n    bnb: { chainId: 56, name: \"bnb\" },\n    bnbt: { chainId: 97, name: \"bnbt\" },\n}\n\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\nexport function getNetwork(network: Networkish): Network {\n    // No network (null)\n    if (network == null) { return null; }\n\n    if (typeof(network) === \"number\") {\n        for (const name in networks) {\n            const standard = networks[name];\n            if (standard.chainId === network) {\n                return {\n                    name: standard.name,\n                    chainId: standard.chainId,\n                    ensAddress: (standard.ensAddress || null),\n                    _defaultProvider: (standard._defaultProvider || null)\n                };\n            }\n        }\n\n        return {\n            chainId: network,\n            name: \"unknown\"\n        };\n    }\n\n    if (typeof(network) === \"string\") {\n        const standard = networks[network];\n        if (standard == null) { return null; }\n        return {\n            name: standard.name,\n            chainId: standard.chainId,\n            ensAddress: standard.ensAddress,\n            _defaultProvider: (standard._defaultProvider || null)\n        };\n    }\n\n    const standard  = networks[network.name];\n\n    // Not a standard network; check that it is a valid network in general\n    if (!standard) {\n        if (typeof(network.chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid network chainId\", \"network\", network);\n        }\n        return network;\n    }\n\n    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n    if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n        logger.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n    }\n\n    // @TODO: In the next major version add an attach function to a defaultProvider\n    // class and move the _defaultProvider internal to this file (extend Network)\n    let defaultProvider: DefaultProviderFunc = network._defaultProvider || null;\n    if (defaultProvider == null && standard._defaultProvider) {\n        if (isRenetworkable(standard._defaultProvider)) {\n            defaultProvider = standard._defaultProvider.renetwork(network);\n        } else {\n            defaultProvider = standard._defaultProvider;\n        }\n    }\n\n    // Standard Network (allow overriding the ENS address)\n    return {\n        name: network.name,\n        chainId: standard.chainId,\n        ensAddress: (network.ensAddress || standard.ensAddress || null),\n        _defaultProvider: defaultProvider\n    };\n}\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport function defineReadOnly<T, K extends keyof T>(object: T, name: K, value: T[K]): void {\n    Object.defineProperty(object, name, {\n        enumerable: true,\n        value: value,\n        writable: false,\n    });\n}\n\n// Crawl up the constructor chain to find a static method\nexport function getStatic<T>(ctor: any, key: string): T {\n    for (let i = 0; i < 32; i++) {\n        if (ctor[key]) { return ctor[key]; }\n        if (!ctor.prototype || typeof(ctor.prototype) !== \"object\") { break; }\n        ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n    }\n    return null;\n}\n\nexport type Deferrable<T> = {\n    [ K in keyof T ]: T[K] | Promise<T[K]>;\n}\n\n\ntype Result = { key: string, value: any};\n\nexport async function resolveProperties<T>(object: Readonly<Deferrable<T>>): Promise<T> {\n    const promises: Array<Promise<Result>> = Object.keys(object).map((key) => {\n        const value = object[<keyof Deferrable<T>>key];\n        return Promise.resolve(value).then((v) => ({ key: key, value: v }));\n    });\n\n    const results = await Promise.all(promises);\n\n    return results.reduce((accum, result) => {\n        accum[<keyof T>(result.key)] = result.value;\n        return accum;\n    }, <T>{ });\n}\n\nexport function checkProperties(object: any, properties: { [ name: string ]: boolean }): void {\n    if (!object || typeof(object) !== \"object\") {\n        logger.throwArgumentError(\"invalid object\", \"object\", object);\n    }\n\n    Object.keys(object).forEach((key) => {\n        if (!properties[key]) {\n            logger.throwArgumentError(\"invalid object key - \" + key, \"transaction:\" + key, object);\n        }\n    });\n}\n\nexport function shallowCopy<T>(object: T): T {\n    const result: any = {};\n    for (const key in object) { result[key] = object[key]; }\n    return result;\n}\n\nconst opaque: { [key: string]: boolean } = { bigint: true, boolean: true, \"function\": true, number: true, string: true };\n\nfunction _isFrozen(object: any): boolean {\n\n    // Opaque objects are not mutable, so safe to copy by assignment\n    if (object === undefined || object === null || opaque[typeof(object)]) { return true; }\n\n    if (Array.isArray(object) || typeof(object) === \"object\") {\n        if (!Object.isFrozen(object)) { return false; }\n\n        const keys = Object.keys(object);\n        for (let i = 0; i < keys.length; i++) {\n            let value: any = null;\n            try {\n                value = object[keys[i]];\n            } catch (error) {\n                // If accessing a value triggers an error, it is a getter\n                // designed to do so (e.g. Result) and is therefore \"frozen\"\n                continue;\n            }\n\n            if (!_isFrozen(value)) { return false; }\n        }\n\n        return true;\n    }\n\n    return logger.throwArgumentError(`Cannot deepCopy ${ typeof(object) }`, \"object\", object);\n}\n\n// Returns a new copy of object, such that no properties may be replaced.\n// New properties may be added only to objects.\nfunction _deepCopy(object: any): any {\n\n    if (_isFrozen(object)) { return object; }\n\n    // Arrays are mutable, so we need to create a copy\n    if (Array.isArray(object)) {\n        return Object.freeze(object.map((item) => deepCopy(item)));\n    }\n\n    if (typeof(object) === \"object\") {\n        const result: { [ key: string ]: any } = {};\n        for (const key in object) {\n            const value = object[key];\n            if (value === undefined) { continue; }\n            defineReadOnly(result, key, deepCopy(value));\n        }\n\n        return result;\n    }\n\n    return logger.throwArgumentError(`Cannot deepCopy ${ typeof(object) }`, \"object\", object);\n}\n\nexport function deepCopy<T>(object: T): T {\n    return _deepCopy(object);\n}\n\nexport class Description<T = any> {\n    constructor(info: { [ K in keyof T ]: T[K] }) {\n        for (const key in info) {\n            (<any>this)[key] = deepCopy(info[key]);\n        }\n    }\n}\n","export const version = \"properties/5.7.0\";\n","export const version = \"providers/5.7.2\";\n","\"use strict\";\n\nimport { BlockTag, FeeData, Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { Bytes, BytesLike } from \"@ethersproject/bytes\";\nimport { Deferrable, defineReadOnly, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst allowedTransactionKeys: Array<string> = [\n    \"accessList\", \"ccipReadEnabled\", \"chainId\", \"customData\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"to\", \"type\", \"value\"\n];\n\nconst forwardErrors = [\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n];\n\n// EIP-712 Typed Data\n// See: https://eips.ethereum.org/EIPS/eip-712\n\nexport interface TypedDataDomain {\n    name?: string;\n    version?: string;\n    chainId?: BigNumberish;\n    verifyingContract?: string;\n    salt?: BytesLike;\n};\n\nexport interface TypedDataField {\n    name: string;\n    type: string;\n};\n\n// Sub-classes of Signer may optionally extend this interface to indicate\n// they have a private key available synchronously\nexport interface ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n}\n\n// Sub-Class Notes:\n//  - A Signer MUST always make sure, that if present, the \"from\" field\n//    matches the Signer, before sending or signing a transaction\n//  - A Signer SHOULD always wrap private information (such as a private\n//    key or mnemonic) in a function, so that console.log does not leak\n//    the data\n\n// @TODO: This is a temporary measure to preserve backwards compatibility\n//        In v6, the method on TypedDataSigner will be added to Signer\nexport interface TypedDataSigner {\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string>;\n}\n\nexport abstract class Signer {\n    readonly provider?: Provider;\n\n    ///////////////////\n    // Sub-classes MUST implement these\n\n    // Returns the checksum address\n    abstract getAddress(): Promise<string>\n\n    // Returns the signed prefixed-message. This MUST treat:\n    // - Bytes as a binary message\n    // - string as a UTF8-message\n    // i.e. \"0x1234\" is a SIX (6) byte string, NOT 2 bytes of data\n    abstract signMessage(message: Bytes | string): Promise<string>;\n\n    // Signs a transaction and returns the fully serialized, signed transaction.\n    // The EXACT transaction MUST be signed, and NO additional properties to be added.\n    // - This MAY throw if signing transactions is not supports, but if\n    //   it does, sentTransaction MUST be overridden.\n    abstract signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string>;\n\n    // Returns a new instance of the Signer, connected to provider.\n    // This MAY throw if changing providers is not supported.\n    abstract connect(provider: Provider): Signer;\n\n    readonly _isSigner: boolean;\n\n\n    ///////////////////\n    // Sub-classes MUST call super\n    constructor() {\n        logger.checkAbstract(new.target, Signer);\n        defineReadOnly(this, \"_isSigner\", true);\n    }\n\n\n    ///////////////////\n    // Sub-classes MAY override these\n\n    async getBalance(blockTag?: BlockTag): Promise<BigNumber> {\n        this._checkProvider(\"getBalance\");\n        return await this.provider.getBalance(this.getAddress(), blockTag);\n    }\n\n    async getTransactionCount(blockTag?: BlockTag): Promise<number> {\n        this._checkProvider(\"getTransactionCount\");\n        return await this.provider.getTransactionCount(this.getAddress(), blockTag);\n    }\n\n    // Populates \"from\" if unspecified, and estimates the gas for the transaction\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        this._checkProvider(\"estimateGas\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.estimateGas(tx);\n    }\n\n    // Populates \"from\" if unspecified, and calls with the transaction\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag): Promise<string> {\n        this._checkProvider(\"call\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.call(tx, blockTag);\n    }\n\n    // Populates all fields in a transaction, signs it and sends it to the network\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        this._checkProvider(\"sendTransaction\");\n        const tx = await this.populateTransaction(transaction);\n        const signedTx = await this.signTransaction(tx);\n        return await this.provider.sendTransaction(signedTx);\n    }\n\n    async getChainId(): Promise<number> {\n        this._checkProvider(\"getChainId\");\n        const network = await this.provider.getNetwork();\n        return network.chainId;\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        this._checkProvider(\"getGasPrice\");\n        return await this.provider.getGasPrice();\n    }\n\n    async getFeeData(): Promise<FeeData> {\n        this._checkProvider(\"getFeeData\");\n        return await this.provider.getFeeData();\n    }\n\n\n    async resolveName(name: string): Promise<string> {\n        this._checkProvider(\"resolveName\");\n        return await this.provider.resolveName(name);\n    }\n\n\n\n    // Checks a transaction does not contain invalid keys and if\n    // no \"from\" is provided, populates it.\n    // - does NOT require a provider\n    // - adds \"from\" is not present\n    // - returns a COPY (safe to mutate the result)\n    // By default called from: (overriding these prevents it)\n    //   - call\n    //   - estimateGas\n    //   - populateTransaction (and therefor sendTransaction)\n    checkTransaction(transaction: Deferrable<TransactionRequest>): Deferrable<TransactionRequest> {\n        for (const key in transaction) {\n            if (allowedTransactionKeys.indexOf(key) === -1) {\n                logger.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n            }\n        }\n\n        const tx = shallowCopy(transaction);\n\n        if (tx.from == null) {\n            tx.from = this.getAddress();\n\n        } else {\n            // Make sure any provided address matches this signer\n            tx.from = Promise.all([\n                Promise.resolve(tx.from),\n                this.getAddress()\n            ]).then((result) => {\n                if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n                return result[0];\n            });\n        }\n\n        return tx;\n    }\n\n    // Populates ALL keys for a transaction and checks that \"from\" matches\n    // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n    // By default called from: (overriding these prevents it)\n    //   - sendTransaction\n    //\n    // Notes:\n    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas\n    async populateTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionRequest> {\n\n        const tx: Deferrable<TransactionRequest> = await resolveProperties(this.checkTransaction(transaction))\n\n        if (tx.to != null) {\n            tx.to = Promise.resolve(tx.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n\n            // Prevent this error from causing an UnhandledPromiseException\n            tx.to.catch((error) => {  });\n        }\n\n        // Do not allow mixing pre-eip-1559 and eip-1559 properties\n        const hasEip1559 = (tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null);\n        if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {\n            logger.throwArgumentError(\"eip-1559 transaction do not support gasPrice\", \"transaction\", transaction);\n        } else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {\n            logger.throwArgumentError(\"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"transaction\", transaction);\n        }\n\n        if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {\n            // Fully-formed EIP-1559 transaction (skip getFeeData)\n            tx.type = 2;\n\n        } else if (tx.type === 0 || tx.type === 1) {\n            // Explicit Legacy or EIP-2930 transaction\n\n            // Populate missing gasPrice\n            if (tx.gasPrice == null) { tx.gasPrice = this.getGasPrice(); }\n\n        } else {\n\n            // We need to get fee data to determine things\n            const feeData = await this.getFeeData();\n\n            if (tx.type == null) {\n                // We need to auto-detect the intended type of this transaction...\n\n                if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                    // The network supports EIP-1559!\n\n                    // Upgrade transaction from null to eip-1559\n                    tx.type = 2;\n\n                    if (tx.gasPrice != null) {\n                        // Using legacy gasPrice property on an eip-1559 network,\n                        // so use gasPrice as both fee properties\n                        const gasPrice = tx.gasPrice;\n                        delete tx.gasPrice;\n                        tx.maxFeePerGas = gasPrice;\n                        tx.maxPriorityFeePerGas = gasPrice;\n\n                    } else {\n                        // Populate missing fee data\n                        if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                        if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n                    }\n\n                } else if (feeData.gasPrice != null) {\n                    // Network doesn't support EIP-1559...\n\n                    // ...but they are trying to use EIP-1559 properties\n                    if (hasEip1559) {\n                        logger.throwError(\"network does not support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"populateTransaction\"\n                        });\n                    }\n\n                    // Populate missing fee data\n                    if (tx.gasPrice == null) { tx.gasPrice = feeData.gasPrice; }\n\n                    // Explicitly set untyped transaction to legacy\n                    tx.type = 0;\n\n                } else {\n                    // getFeeData has failed us.\n                    logger.throwError(\"failed to get consistent fee data\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"signer.getFeeData\"\n                    });\n                }\n\n            } else if (tx.type === 2) {\n                // Explicitly using EIP-1559\n\n                // Populate missing fee data\n                if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n            }\n        }\n\n        if (tx.nonce == null) { tx.nonce = this.getTransactionCount(\"pending\"); }\n\n        if (tx.gasLimit == null) {\n            tx.gasLimit = this.estimateGas(tx).catch((error) => {\n                if (forwardErrors.indexOf(error.code) >= 0) {\n                    throw error;\n                }\n\n                return logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                    error: error,\n                    tx: tx\n                });\n            });\n        }\n\n        if (tx.chainId == null) {\n            tx.chainId = this.getChainId();\n        } else {\n            tx.chainId = Promise.all([\n                Promise.resolve(tx.chainId),\n                this.getChainId()\n            ]).then((results) => {\n                if (results[1] !== 0 && results[0] !== results[1]) {\n                    logger.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                }\n                return results[0];\n            });\n        }\n\n        return await resolveProperties(tx);\n    }\n\n\n    ///////////////////\n    // Sub-classes SHOULD leave these alone\n\n    _checkProvider(operation?: string): void {\n        if (!this.provider) { logger.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: (operation || \"_checkProvider\") });\n        }\n    }\n\n    static isSigner(value: any): value is Signer {\n        return !!(value && value._isSigner);\n    }\n}\n\nexport class VoidSigner extends Signer implements TypedDataSigner {\n    readonly address: string;\n\n    constructor(address: string, provider?: Provider) {\n        super();\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n\n    getAddress(): Promise<string> {\n        return Promise.resolve(this.address);\n    }\n\n    _fail(message: string, operation: string): Promise<any> {\n        return Promise.resolve().then(() => {\n            logger.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, { operation: operation });\n        });\n    }\n\n    signMessage(message: Bytes | string): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n    }\n\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign typed data\", \"signTypedData\");\n    }\n\n    connect(provider: Provider): VoidSigner {\n        return new VoidSigner(this.address, provider);\n    }\n}\n\n","export const version = \"abstract-signer/5.7.0\";\n","\"use strict\";\n\nimport sha3 from \"js-sha3\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function keccak256(data: BytesLike): string {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n","export const version = \"rlp/5.7.0\";\n","\"use strict\";\n\n//See: https://github.com/ethereum/wiki/wiki/RLP\n\nimport { arrayify, BytesLike, hexlify, isBytesLike } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction arrayifyInteger(value: number): Array<number> {\n    const result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\n\nfunction unarrayifyInteger(data: Uint8Array, offset: number, length: number): number {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\n\nfunction _encode(object: Array<any> | string): Array<number> {\n    if (Array.isArray(object)) {\n        let payload: Array<number> = [];\n        object.forEach(function(child) {\n            payload = payload.concat(_encode(child));\n        });\n\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length)\n            return payload;\n        }\n\n        const length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n\n        return length.concat(payload);\n\n    }\n\n    if (!isBytesLike(object)) {\n        logger.throwArgumentError(\"RLP object must be BytesLike\", \"object\", object);\n    }\n\n    const data: Array<number> = Array.prototype.slice.call(arrayify(object));\n\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n\n    } else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n\n    const length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n\n    return length.concat(data);\n}\n\nexport function encode(object: any): string {\n    return hexlify(_encode(object));\n}\n\ntype Decoded = {\n    result: any;\n    consumed: number;\n};\n\nfunction _decodeChildren(data: Uint8Array, offset: number, childOffset: number, length: number): Decoded {\n    const result = [];\n\n    while (childOffset < offset + 1 + length) {\n        const decoded = _decode(data, childOffset);\n\n        result.push(decoded.result);\n\n        childOffset += decoded.consumed;\n        if (childOffset > offset + 1 + length) {\n            logger.throwError(\"child data too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n    }\n\n    return {consumed: (1 + length), result: result};\n}\n\n// returns { consumed: number, result: Object }\nfunction _decode(data: Uint8Array, offset: number): { consumed: number, result: any } {\n    if (data.length === 0) {\n        logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, { });\n    }\n\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        const lengthLength = data[offset] - 0xf7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data short segment too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data long segment too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n\n    } else if (data[offset] >= 0xc0) {\n        const length = data[offset] - 0xc0;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        return _decodeChildren(data, offset, offset + 1, length);\n\n    } else if (data[offset] >= 0xb8) {\n        const lengthLength = data[offset] - 0xb7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result }\n\n    } else if (data[offset] >= 0x80) {\n        const length = data[offset] - 0x80;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result }\n    }\n    return { consumed: 1, result: hexlify(data[offset]) };\n}\n\nexport function decode(data: BytesLike): any {\n    const bytes = arrayify(data);\n    const decoded = _decode(bytes, 0);\n    if (decoded.consumed !== bytes.length) {\n        logger.throwArgumentError(\"invalid rlp data\", \"data\", data);\n    }\n    return decoded.result;\n}\n\n","export const version = \"address/5.7.0\";\n","\"use strict\";\n\nimport { arrayify, BytesLike, concat, hexDataLength, hexDataSlice, isHexString, stripZeros } from \"@ethersproject/bytes\";\nimport { BigNumber, BigNumberish, _base16To36, _base36To16 } from \"@ethersproject/bignumber\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { encode } from \"@ethersproject/rlp\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction getChecksumAddress(address: string): string {\n    if (!isHexString(address, 20)) {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    address = address.toLowerCase();\n\n    const chars = address.substring(2).split(\"\");\n\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n\n    const hashed = arrayify(keccak256(expanded));\n\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n\n    return \"0x\" + chars.join(\"\");\n}\n\n// Shims for environments that are missing some required constants and functions\nconst MAX_SAFE_INTEGER: number = 0x1fffffffffffff;\n\nfunction log10(x: number): number {\n    if (Math.log10) { return Math.log10(x); }\n    return Math.log(x) / Math.LN10;\n}\n\n\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n\n// Create lookup table\nconst ibanLookup: { [character: string]: string } = { };\nfor (let i = 0; i < 10; i++) { ibanLookup[String(i)] = String(i); }\nfor (let i = 0; i < 26; i++) { ibanLookup[String.fromCharCode(65 + i)] = String(10 + i); }\n\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\n\nfunction ibanChecksum(address: string): string {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits){\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) { checksum = \"0\" + checksum; }\n\n    return checksum;\n};\n\nexport function getAddress(address: string): string {\n    let result = null;\n\n    if (typeof(address) !== \"string\") {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== \"0x\") { address = \"0x\" + address; }\n\n        result = getChecksumAddress(address);\n\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            logger.throwArgumentError(\"bad address checksum\", \"address\", address);\n        }\n\n    // Maybe ICAP? (we only support direct mode)\n    } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            logger.throwArgumentError(\"bad icap checksum\", \"address\", address);\n        }\n\n        result = _base36To16(address.substring(4));\n        while (result.length < 40) { result = \"0\" + result; }\n        result = getChecksumAddress(\"0x\" + result);\n\n    } else {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    return result;\n}\n\nexport function isAddress(address: string): boolean {\n    try {\n        getAddress(address);\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nexport function getIcapAddress(address: string): string {\n    let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    while (base36.length < 30) { base36 = \"0\" + base36; }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nexport function getContractAddress(transaction: { from: string, nonce: BigNumberish }) {\n    let from: string = null;\n    try {\n        from = getAddress(transaction.from);\n    } catch (error) {\n        logger.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n    }\n\n    const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));\n\n    return getAddress(hexDataSlice(keccak256(encode([ from, nonce ])), 12));\n}\n\nexport function getCreate2Address(from: string, salt: BytesLike, initCodeHash: BytesLike): string {\n    if (hexDataLength(salt) !== 32) {\n        logger.throwArgumentError(\"salt must be 32 bytes\", \"salt\", salt);\n    }\n    if (hexDataLength(initCodeHash) !== 32) {\n        logger.throwArgumentError(\"initCodeHash must be 32 bytes\", \"initCodeHash\", initCodeHash);\n    }\n    return getAddress(hexDataSlice(keccak256(concat([ \"0xff\", getAddress(from), salt, initCodeHash ])), 12))\n}\n","export const version = \"hash/5.7.0\";\n","import { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nexport function id(text: string): string {\n    return keccak256(toUtf8Bytes(text));\n}\n","import { TypedDataDomain, TypedDataField } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, hexConcat, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { id } from \"./id\";\n\nconst padding = new Uint8Array(32);\npadding.fill(0);\n\nconst NegativeOne: BigNumber = BigNumber.from(-1);\nconst Zero: BigNumber = BigNumber.from(0);\nconst One: BigNumber = BigNumber.from(1);\nconst MaxUint256: BigNumber = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\nfunction hexPadRight(value: BytesLike) {\n    const bytes = arrayify(value);\n    const padOffset = bytes.length % 32\n    if (padOffset) {\n        return hexConcat([ bytes, padding.slice(padOffset) ]);\n    }\n    return hexlify(bytes);\n}\n\nconst hexTrue = hexZeroPad(One.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero.toHexString(), 32);\n\nconst domainFieldTypes: Record<string, string> = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\n\nconst domainFieldNames: Array<string> = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\n\nfunction checkString(key: string): (value: any) => string {\n    return function (value: any){\n        if (typeof(value) !== \"string\") {\n            logger.throwArgumentError(`invalid domain value for ${ JSON.stringify(key) }`, `domain.${ key }`, value);\n        }\n        return value;\n    }\n}\n\nconst domainChecks: Record<string, (value: any) => any> = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function(value: any) {\n        try {\n            return BigNumber.from(value).toString()\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n    },\n    verifyingContract: function(value: any) {\n        try {\n            return getAddress(value).toLowerCase();\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function(value: any) {\n        try {\n            const bytes = arrayify(value);\n            if (bytes.length !== 32) { throw new Error(\"bad length\"); }\n            return hexlify(bytes);\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n    }\n}\n\nfunction getBaseEncoder(type: string): (value: any) => string {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n\n            const width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n\n            const boundsUpper = MaxUint256.mask(signed ? (width - 1): width);\n            const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne): Zero;\n\n            return function(value: BigNumberish) {\n                const v = BigNumber.from(value);\n\n                if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n                    logger.throwArgumentError(`value out-of-bounds for ${ type }`, \"value\", value);\n                }\n\n                return hexZeroPad(v.toTwos(256).toHexString(), 32);\n            };\n        }\n    }\n\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            if (width === 0 || width > 32 || match[1] !== String(width)) {\n                logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n\n            return function(value: BytesLike) {\n                const bytes = arrayify(value);\n                if (bytes.length !== width) {\n                    logger.throwArgumentError(`invalid length for ${ type }`, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n\n    switch (type) {\n        case \"address\": return function(value: string) {\n            return hexZeroPad(getAddress(value), 32);\n        };\n        case \"bool\": return function(value: boolean) {\n            return ((!value) ? hexFalse: hexTrue);\n        };\n        case \"bytes\": return function(value: BytesLike) {\n            return keccak256(value);\n        };\n        case \"string\": return function(value: string) {\n            return id(value);\n        };\n    }\n\n    return null;\n}\n\nfunction encodeType(name: string, fields: Array<TypedDataField>): string {\n    return `${ name }(${ fields.map(({ name, type }) => (type + \" \" + name)).join(\",\") })`;\n}\n\nexport class TypedDataEncoder {\n    readonly primaryType: string;\n    readonly types: Record<string, Array<TypedDataField>>;\n\n    readonly _encoderCache: Record<string, (value: any) => string>;\n    readonly _types: Record<string, string>;\n\n    constructor(types: Record<string, Array<TypedDataField>>) {\n        defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n\n        defineReadOnly(this, \"_encoderCache\", { });\n        defineReadOnly(this, \"_types\", { });\n\n        // Link struct types to their direct child structs\n        const links: Record<string, Record<string, boolean>> = { };\n\n        // Link structs to structs which contain them as a child\n        const parents: Record<string, Array<string>> = { };\n\n        // Link all subtypes within a given struct\n        const subtypes: Record<string, Record<string, boolean>> = { };\n\n        Object.keys(types).forEach((type) => {\n            links[type] = { };\n            parents[type] = [ ];\n            subtypes[type] = { }\n        });\n\n        for (const name in types) {\n\n            const uniqueNames: Record<string, boolean> = { };\n\n            types[name].forEach((field) => {\n\n                // Check each field has a unique name\n                if (uniqueNames[field.name]) {\n                    logger.throwArgumentError(`duplicate variable name ${ JSON.stringify(field.name) } in ${ JSON.stringify(name) }`, \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n\n                // Get the base type (drop any array specifiers)\n                const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name) {\n                    logger.throwArgumentError(`circular type reference to ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) { return ;}\n\n                if (!parents[baseType]) {\n                    logger.throwArgumentError(`unknown type ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Add linkage\n                parents[baseType].push(name);\n                links[name][baseType] = true;\n            });\n        }\n\n        // Deduce the primary type\n        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));\n\n        if (primaryTypes.length === 0) {\n            logger.throwArgumentError(\"missing primary type\", \"types\", types);\n        } else if (primaryTypes.length > 1) {\n            logger.throwArgumentError(`ambiguous primary types or unused types: ${ primaryTypes.map((t) => (JSON.stringify(t))).join(\", \") }`, \"types\", types);\n        }\n\n        defineReadOnly(this, \"primaryType\", primaryTypes[0]);\n\n        // Check for circular type references\n        function checkCircular(type: string, found: Record<string, boolean>) {\n            if (found[type]) {\n                logger.throwArgumentError(`circular type reference to ${ JSON.stringify(type) }`, \"types\", types);\n            }\n\n            found[type] = true;\n\n            Object.keys(links[type]).forEach((child) => {\n                if (!parents[child]) { return; }\n\n                // Recursively check children\n                checkCircular(child, found);\n\n                // Mark all ancestors as having this decendant\n                Object.keys(found).forEach((subtype) => {\n                    subtypes[subtype][child] = true;\n                });\n            });\n\n            delete found[type];\n        }\n        checkCircular(this.primaryType, { });\n\n        // Compute each fully describe type\n        for (const name in subtypes) {\n            const st = Object.keys(subtypes[name]);\n            st.sort();\n            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\");\n        }\n    }\n\n    getEncoder(type: string): (value: any) => string {\n        let encoder = this._encoderCache[type];\n        if (!encoder) {\n            encoder = this._encoderCache[type] = this._getEncoder(type);\n        }\n        return encoder;\n    }\n\n    _getEncoder(type: string): (value: any) => string {\n\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return encoder; }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            const length = parseInt(match[3]);\n            return (value: Array<any>) => {\n                if (length >= 0 && value.length !== length) {\n                    logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n\n                let result = value.map(subEncoder);\n                if (this._types[subtype]) {\n                    result = result.map(keccak256);\n                }\n\n                return keccak256(hexConcat(result));\n            };\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this._types[type]);\n            return (value: Record<string, any>) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this._types[type]) { return keccak256(result); }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return hexConcat(values);\n            }\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    encodeType(name: string): string {\n        const result = this._types[name];\n        if (!result) {\n            logger.throwArgumentError(`unknown type: ${ JSON.stringify(name) }`, \"name\", name);\n        }\n        return result;\n    }\n\n    encodeData(type: string, value: any): string {\n        return this.getEncoder(type)(value);\n    }\n\n    hashStruct(name: string, value: Record<string, any>): string {\n        return keccak256(this.encodeData(name, value));\n    }\n\n    encode(value: Record<string, any>): string {\n        return this.encodeData(this.primaryType, value);\n    }\n\n    hash(value: Record<string, any>): string {\n        return this.hashStruct(this.primaryType, value);\n    }\n\n    _visit(type: string, value: any, callback: (type: string, data: any) => any): any {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return callback(type, value); }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const length = parseInt(match[3]);\n            if (length >= 0 && value.length !== length) {\n                logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map((v: any) => this._visit(subtype, v, callback));\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, <Record<string, any>>{});\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    visit(value: Record<string, any>, callback: (type: string, data: any) => any): any {\n        return this._visit(this.primaryType, value, callback);\n    }\n\n    static from(types: Record<string, Array<TypedDataField>>): TypedDataEncoder {\n        return new TypedDataEncoder(types);\n    }\n\n    static getPrimaryType(types: Record<string, Array<TypedDataField>>): string {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n\n    static hashStruct(name: string, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n\n    static hashDomain(domain: TypedDataDomain): string {\n        const domainFields: Array<TypedDataField> = [ ];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            if (!type) {\n                logger.throwArgumentError(`invalid typed-data domain key: ${ JSON.stringify(name) }`, \"domain\", domain);\n            }\n            domainFields.push({ name, type });\n        }\n\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n\n    static encode(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return hexConcat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n\n    static hash(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n\n    // Replaces all address types with ENS names with their looked up address\n    static async resolveNames(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, resolveName: (name: string) => Promise<string>): Promise<{ domain: TypedDataDomain, value: any }> {\n        // Make a copy to isolate it from the object passed in\n        domain = shallowCopy(domain);\n\n        // Look up all ENS names\n        const ensCache: Record<string, string> = { };\n\n        // Do we need to look up the domain's verifyingContract?\n        if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n            ensCache[domain.verifyingContract] = \"0x\";\n        }\n\n        // We are going to use the encoder to visit all the base values\n        const encoder = TypedDataEncoder.from(types);\n\n        // Get a list of all the addresses\n        encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && !isHexString(value, 20)) {\n                ensCache[value] = \"0x\";\n            }\n            return value;\n        });\n\n        // Lookup each name\n        for (const name in ensCache) {\n            ensCache[name] = await resolveName(name);\n        }\n\n        // Replace the domain verifyingContract if needed\n        if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n            domain.verifyingContract = ensCache[domain.verifyingContract];\n        }\n\n        // Replace all ENS names with their address\n        value = encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && ensCache[value]) { return ensCache[value]; }\n            return value;\n        });\n\n        return { domain, value };\n    }\n\n    static getPayload(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): any {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n\n        // Derive the EIP712Domain Struct reference type\n        const domainValues: Record<string, any> = { };\n        const domainTypes: Array<{ name: string, type:string }> = [ ];\n\n        domainFieldNames.forEach((name) => {\n            const value = (<any>domain)[name];\n            if (value == null) { return; }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n\n        const encoder = TypedDataEncoder.from(types);\n\n        const typesWithDomain = shallowCopy(types);\n        if (typesWithDomain.EIP712Domain) {\n            logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        } else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n\n        // Validate the data structures and types\n        encoder.encode(value);\n\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type: string, value: any) => {\n\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(arrayify(value));\n                }\n\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return BigNumber.from(value).toString();\n                }\n\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof(value) !== \"string\") {\n                            logger.throwArgumentError(`invalid string`, \"value\", value);\n                        }\n                        return value;\n                }\n\n                return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n\n","import { BigNumber } from \"@ethersproject/bignumber\";\n\nconst NegativeOne: BigNumber = (/*#__PURE__*/BigNumber.from(-1));\nconst Zero: BigNumber = (/*#__PURE__*/BigNumber.from(0));\nconst One: BigNumber = (/*#__PURE__*/BigNumber.from(1));\nconst Two: BigNumber = (/*#__PURE__*/BigNumber.from(2));\nconst WeiPerEther: BigNumber = (/*#__PURE__*/BigNumber.from(\"1000000000000000000\"));\nconst MaxUint256: BigNumber = (/*#__PURE__*/BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\n\nconst MinInt256: BigNumber = (/*#__PURE__*/BigNumber.from(\"-0x8000000000000000000000000000000000000000000000000000000000000000\"));\nconst MaxInt256: BigNumber = (/*#__PURE__*/BigNumber.from(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\n\nexport {\n    NegativeOne,\n    Zero,\n    One,\n    Two,\n    WeiPerEther,\n    MaxUint256,\n    MinInt256,\n    MaxInt256,\n};\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","import _ec from \"elliptic\";\nvar EC = _ec.ec;\nexport { EC };\n//# sourceMappingURL=elliptic.js.map","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","export const version = \"signing-key/5.7.0\";\n","\"use strict\";\n\nimport { EC } from \"./elliptic\";\n\nimport { arrayify, BytesLike, hexDataLength, hexlify, hexZeroPad, Signature, SignatureLike, splitSignature } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nlet _curve: EC = null\nfunction getCurve() {\n    if (!_curve) {\n        _curve = new EC(\"secp256k1\");\n    }\n    return _curve;\n}\n\nexport class SigningKey {\n\n    readonly curve: string;\n\n    readonly privateKey: string;\n    readonly publicKey: string;\n    readonly compressedPublicKey: string;\n\n    //readonly address: string;\n\n    readonly _isSigningKey: boolean;\n\n    constructor(privateKey: BytesLike) {\n        defineReadOnly(this, \"curve\", \"secp256k1\");\n\n        defineReadOnly(this, \"privateKey\", hexlify(privateKey));\n        if (hexDataLength(this.privateKey) !== 32) {\n            logger.throwArgumentError(\"invalid private key\", \"privateKey\", \"[[ REDACTED ]]\");\n        }\n\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n\n        defineReadOnly(this, \"publicKey\", \"0x\" + keyPair.getPublic(false, \"hex\"));\n        defineReadOnly(this, \"compressedPublicKey\", \"0x\" + keyPair.getPublic(true, \"hex\"));\n\n        defineReadOnly(this, \"_isSigningKey\", true);\n    }\n\n    _addPoint(other: BytesLike): string {\n        const p0 =  getCurve().keyFromPublic(arrayify(this.publicKey));\n        const p1 =  getCurve().keyFromPublic(arrayify(other));\n        return \"0x\" + p0.pub.add(p1.pub).encodeCompressed(\"hex\");\n    }\n\n    signDigest(digest: BytesLike): Signature {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const digestBytes = arrayify(digest);\n        if (digestBytes.length !== 32) {\n            logger.throwArgumentError(\"bad digest length\", \"digest\", digest);\n        }\n        const signature = keyPair.sign(digestBytes, { canonical: true });\n        return splitSignature({\n            recoveryParam: signature.recoveryParam,\n            r: hexZeroPad(\"0x\" + signature.r.toString(16), 32),\n            s: hexZeroPad(\"0x\" + signature.s.toString(16), 32),\n        })\n    }\n\n    computeSharedSecret(otherKey: BytesLike): string {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));\n        return hexZeroPad(\"0x\" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);\n    }\n\n    static isSigningKey(value: any): value is SigningKey {\n        return !!(value && value._isSigningKey);\n    }\n}\n\nexport function recoverPublicKey(digest: BytesLike, signature: SignatureLike): string {\n    const sig = splitSignature(signature);\n    const rs = { r: arrayify(sig.r), s: arrayify(sig.s) };\n    return \"0x\" + getCurve().recoverPubKey(arrayify(digest), rs, sig.recoveryParam).encode(\"hex\", false);\n}\n\nexport function computePublicKey(key: BytesLike, compressed?: boolean): string {\n    const bytes = arrayify(key);\n\n    if (bytes.length === 32) {\n        const signingKey = new SigningKey(bytes);\n        if (compressed) {\n            return \"0x\" + getCurve().keyFromPrivate(bytes).getPublic(true, \"hex\");\n        }\n        return signingKey.publicKey;\n\n    } else if (bytes.length === 33) {\n        if (compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(false, \"hex\");\n\n    } else if (bytes.length === 65) {\n        if (!compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(true, \"hex\");\n    }\n\n    return logger.throwArgumentError(\"invalid public or private key\", \"key\", \"[REDACTED]\");\n}\n\n","export const version = \"transactions/5.7.0\";\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, DataOptions, hexConcat, hexDataLength, hexDataSlice, hexlify, hexZeroPad, isBytesLike, SignatureLike, splitSignature, stripZeros, } from \"@ethersproject/bytes\";\nimport { Zero } from \"@ethersproject/constants\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { checkProperties } from \"@ethersproject/properties\";\nimport * as RLP from \"@ethersproject/rlp\";\nimport { computePublicKey, recoverPublicKey } from \"@ethersproject/signing-key\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type AccessList = Array<{ address: string, storageKeys: Array<string> }>;\n\n// Input allows flexibility in describing an access list\nexport type AccessListish = AccessList |\n                            Array<[ string, Array<string> ]> |\n                            Record<string, Array<string>>;\n\nexport enum TransactionTypes {\n    legacy = 0,\n    eip2930 = 1,\n    eip1559 = 2,\n};\n\nexport type UnsignedTransaction = {\n    to?: string;\n    nonce?: number;\n\n    gasLimit?: BigNumberish;\n    gasPrice?: BigNumberish;\n\n    data?: BytesLike;\n    value?: BigNumberish;\n    chainId?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessListish;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n}\n\nexport interface Transaction {\n    hash?: string;\n\n    to?: string;\n    from?: string;\n    nonce: number;\n\n    gasLimit: BigNumber;\n    gasPrice?: BigNumber;\n\n    data: string;\n    value: BigNumber;\n    chainId: number;\n\n    r?: string;\n    s?: string;\n    v?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessList;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumber;\n    maxFeePerGas?: BigNumber;\n}\n\n///////////////////////////////\n\nfunction handleAddress(value: string): string {\n    if (value === \"0x\") { return null; }\n    return getAddress(value);\n}\n\nfunction handleNumber(value: string): BigNumber {\n    if (value === \"0x\") { return Zero; }\n    return BigNumber.from(value);\n}\n\n// Legacy Transaction Fields\nconst transactionFields = [\n    { name: \"nonce\",    maxLength: 32, numeric: true },\n    { name: \"gasPrice\", maxLength: 32, numeric: true },\n    { name: \"gasLimit\", maxLength: 32, numeric: true },\n    { name: \"to\",          length: 20 },\n    { name: \"value\",    maxLength: 32, numeric: true },\n    { name: \"data\" },\n];\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, type: true, value: true\n}\n\nexport function computeAddress(key: BytesLike | string): string {\n    const publicKey = computePublicKey(key);\n    return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));\n}\n\nexport function recoverAddress(digest: BytesLike, signature: SignatureLike): string {\n    return computeAddress(recoverPublicKey(arrayify(digest), signature));\n}\n\nfunction formatNumber(value: BigNumberish, name: string): Uint8Array {\n    const result = stripZeros(BigNumber.from(value).toHexString());\n    if (result.length > 32) {\n        logger.throwArgumentError(\"invalid length for \" + name, (\"transaction:\" + name), value);\n    }\n    return result;\n}\n\nfunction accessSetify(addr: string, storageKeys: Array<string>): { address: string,storageKeys: Array<string> } {\n    return {\n        address: getAddress(addr),\n        storageKeys: (storageKeys || []).map((storageKey, index) => {\n            if (hexDataLength(storageKey) !== 32) {\n                logger.throwArgumentError(\"invalid access list storageKey\", `accessList[${ addr }:${ index }]`, storageKey)\n            }\n            return storageKey.toLowerCase();\n        })\n    };\n}\n\nexport function accessListify(value: AccessListish): AccessList {\n    if (Array.isArray(value)) {\n        return (<Array<[ string, Array<string>] | { address: string, storageKeys: Array<string>}>>value).map((set, index) => {\n            if (Array.isArray(set)) {\n                if (set.length > 2) {\n                    logger.throwArgumentError(\"access list expected to be [ address, storageKeys[] ]\", `value[${ index }]`, set);\n                }\n                return accessSetify(set[0], set[1])\n            }\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n\n    const result: Array<{ address: string, storageKeys: Array<string> }> = Object.keys(value).map((addr) => {\n        const storageKeys: Record<string, true> = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, <Record<string, true>>{ });\n        return accessSetify(addr, Object.keys(storageKeys).sort())\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\n\nfunction formatAccessList(value: AccessListish): Array<[ string, Array<string> ]> {\n    return accessListify(value).map((set) => [ set.address, set.storageKeys ]);\n}\n\nfunction _serializeEip1559(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // If there is an explicit gasPrice, make sure it matches the\n    // EIP-1559 fees; otherwise they may not understand what they\n    // think they are setting in terms of fee.\n    if (transaction.gasPrice != null) {\n        const gasPrice = BigNumber.from(transaction.gasPrice);\n        const maxFeePerGas = BigNumber.from(transaction.maxFeePerGas || 0);\n        if (!gasPrice.eq(maxFeePerGas)) {\n            logger.throwArgumentError(\"mismatch EIP-1559 gasPrice != maxFeePerGas\", \"tx\", {\n                gasPrice, maxFeePerGas\n            });\n        }\n    }\n\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(transaction.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x02\", RLP.encode(fields)]);\n}\n\nfunction _serializeEip2930(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.gasPrice || 0, \"gasPrice\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x01\", RLP.encode(fields)]);\n}\n\n// Legacy Transactions and EIP-155\nfunction _serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    checkProperties(transaction, allowedTransactionKeys);\n\n    const raw: Array<string | Uint8Array> = [];\n\n    transactionFields.forEach(function(fieldInfo) {\n        let value = (<any>transaction)[fieldInfo.name] || ([]);\n        const options: DataOptions = { };\n        if (fieldInfo.numeric) { options.hexPad = \"left\"; }\n        value = arrayify(hexlify(value, options));\n\n        // Fixed-width field\n        if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\n            logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value);\n        }\n\n        // Variable-width (with a maximum)\n        if (fieldInfo.maxLength) {\n            value = stripZeros(value);\n            if (value.length > fieldInfo.maxLength) {\n                logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value );\n            }\n        }\n\n        raw.push(hexlify(value));\n    });\n\n    let chainId = 0;\n    if (transaction.chainId != null) {\n        // A chainId was provided; if non-zero we'll use EIP-155\n        chainId = transaction.chainId;\n\n        if (typeof(chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid transaction.chainId\", \"transaction\", transaction);\n        }\n\n    } else if (signature && !isBytesLike(signature) && signature.v > 28) {\n        // No chainId provided, but the signature is signing with EIP-155; derive chainId\n        chainId = Math.floor((signature.v - 35) / 2);\n    }\n\n    // We have an EIP-155 transaction (chainId was specified and non-zero)\n    if (chainId !== 0) {\n        raw.push(hexlify(chainId)); // @TODO: hexValue?\n        raw.push(\"0x\");\n        raw.push(\"0x\");\n    }\n\n    // Requesting an unsigned transaction\n    if (!signature) {\n        return RLP.encode(raw);\n    }\n\n    // The splitSignature will ensure the transaction has a recoveryParam in the\n    // case that the signTransaction function only adds a v.\n    const sig = splitSignature(signature);\n\n    // We pushed a chainId and null r, s on for hashing only; remove those\n    let v = 27 + sig.recoveryParam\n    if (chainId !== 0) {\n        raw.pop();\n        raw.pop();\n        raw.pop();\n        v += chainId * 2 + 8;\n\n        // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!\n        if (sig.v > 28 && sig.v !== v) {\n             logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n        }\n    } else if (sig.v !== v) {\n         logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n    }\n\n    raw.push(hexlify(v));\n    raw.push(stripZeros(arrayify(sig.r)));\n    raw.push(stripZeros(arrayify(sig.s)));\n\n    return RLP.encode(raw);\n}\n\nexport function serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // Legacy and EIP-155 Transactions\n    if (transaction.type == null || transaction.type === 0) {\n        if (transaction.accessList != null) {\n            logger.throwArgumentError(\"untyped transactions do not support accessList; include type: 1\", \"transaction\", transaction);\n        }\n        return _serialize(transaction, signature);\n    }\n\n    // Typed Transactions (EIP-2718)\n    switch (transaction.type) {\n        case 1:\n            return _serializeEip2930(transaction, signature);\n        case 2:\n            return _serializeEip1559(transaction, signature);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ transaction.type }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"serializeTransaction\",\n        transactionType: transaction.type\n    });\n}\n\nfunction _parseEipSignature(tx: Transaction, fields: Array<string>, serialize: (tx: UnsignedTransaction) => string): void {\n    try {\n        const recid = handleNumber(fields[0]).toNumber();\n        if (recid !== 0 && recid !== 1) { throw new Error(\"bad recid\"); }\n        tx.v = recid;\n    } catch (error) {\n        logger.throwArgumentError(\"invalid v for transaction type: 1\", \"v\", fields[0]);\n    }\n\n    tx.r = hexZeroPad(fields[1], 32);\n    tx.s = hexZeroPad(fields[2], 32);\n\n    try {\n        const digest = keccak256(serialize(tx));\n        tx.from = recoverAddress(digest, { r: tx.r, s: tx.s, recoveryParam: tx.v });\n    } catch (error) { }\n}\n\nfunction _parseEip1559(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 9 && transaction.length !== 12) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 2\", \"payload\", hexlify(payload));\n    }\n\n    const maxPriorityFeePerGas = handleNumber(transaction[2]);\n    const maxFeePerGas = handleNumber(transaction[3]);\n    const tx: Transaction = {\n        type:                  2,\n        chainId:               handleNumber(transaction[0]).toNumber(),\n        nonce:                 handleNumber(transaction[1]).toNumber(),\n        maxPriorityFeePerGas:  maxPriorityFeePerGas,\n        maxFeePerGas:          maxFeePerGas,\n        gasPrice:              null,\n        gasLimit:              handleNumber(transaction[4]),\n        to:                    handleAddress(transaction[5]),\n        value:                 handleNumber(transaction[6]),\n        data:                  transaction[7],\n        accessList:            accessListify(transaction[8]),\n    };\n\n    // Unsigned EIP-1559 Transaction\n    if (transaction.length === 9) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);\n\n    return tx;\n}\n\nfunction _parseEip2930(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 8 && transaction.length !== 11) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 1\", \"payload\", hexlify(payload));\n    }\n\n    const tx: Transaction = {\n        type:       1,\n        chainId:    handleNumber(transaction[0]).toNumber(),\n        nonce:      handleNumber(transaction[1]).toNumber(),\n        gasPrice:   handleNumber(transaction[2]),\n        gasLimit:   handleNumber(transaction[3]),\n        to:         handleAddress(transaction[4]),\n        value:      handleNumber(transaction[5]),\n        data:       transaction[6],\n        accessList: accessListify(transaction[7])\n    };\n\n    // Unsigned EIP-2930 Transaction\n    if (transaction.length === 8) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);\n\n    return tx;\n}\n\n// Legacy Transactions and EIP-155\nfunction _parse(rawTransaction: Uint8Array): Transaction {\n    const transaction = RLP.decode(rawTransaction);\n\n    if (transaction.length !== 9 && transaction.length !== 6) {\n        logger.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n    }\n\n    const tx: Transaction = {\n        nonce:    handleNumber(transaction[0]).toNumber(),\n        gasPrice: handleNumber(transaction[1]),\n        gasLimit: handleNumber(transaction[2]),\n        to:       handleAddress(transaction[3]),\n        value:    handleNumber(transaction[4]),\n        data:     transaction[5],\n        chainId:  0\n    };\n\n    // Legacy unsigned transaction\n    if (transaction.length === 6) { return tx; }\n\n    try {\n        tx.v = BigNumber.from(transaction[6]).toNumber();\n\n    } catch (error) {\n        // @TODO: What makes snese to do? The v is too big\n        return tx;\n    }\n\n    tx.r = hexZeroPad(transaction[7], 32);\n    tx.s = hexZeroPad(transaction[8], 32);\n\n    if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\n        // EIP-155 unsigned transaction\n        tx.chainId = tx.v;\n        tx.v = 0;\n\n    } else {\n        // Signed Transaction\n\n        tx.chainId = Math.floor((tx.v - 35) / 2);\n        if (tx.chainId < 0) { tx.chainId = 0; }\n\n        let recoveryParam = tx.v - 27;\n\n        const raw = transaction.slice(0, 6);\n\n        if (tx.chainId !== 0) {\n            raw.push(hexlify(tx.chainId));\n            raw.push(\"0x\");\n            raw.push(\"0x\");\n            recoveryParam -= tx.chainId * 2 + 8;\n        }\n\n        const digest = keccak256(RLP.encode(raw));\n        try {\n            tx.from = recoverAddress(digest, { r: hexlify(tx.r), s: hexlify(tx.s), recoveryParam: recoveryParam });\n        } catch (error) { }\n\n        tx.hash = keccak256(rawTransaction);\n    }\n\n    tx.type = null;\n\n    return tx;\n}\n\n\nexport function parse(rawTransaction: BytesLike): Transaction {\n    const payload = arrayify(rawTransaction);\n\n    // Legacy and EIP-155 Transactions\n    if (payload[0] > 0x7f) { return _parse(payload); }\n\n    // Typed Transaction (EIP-2718)\n    switch (payload[0]) {\n        case 1:\n            return _parseEip2930(payload);\n        case 2:\n            return _parseEip1559(payload);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ payload[0] }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"parseTransaction\",\n        transactionType: payload[0]\n    });\n}\n\n","\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { BytesLike, isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { Deferrable, Description, defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { AccessListish, Transaction } from \"@ethersproject/transactions\";\nimport { OnceBlockable } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\n\nexport type TransactionRequest = {\n    to?: string,\n    from?: string,\n    nonce?: BigNumberish,\n\n    gasLimit?: BigNumberish,\n    gasPrice?: BigNumberish,\n\n    data?: BytesLike,\n    value?: BigNumberish,\n    chainId?: number\n\n    type?: number;\n    accessList?: AccessListish;\n\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n}\n\nexport interface TransactionResponse extends Transaction {\n    hash: string;\n\n    // Only if a transaction has been mined\n    blockNumber?: number,\n    blockHash?: string,\n    timestamp?: number,\n\n    confirmations: number,\n\n    // Not optional (as it is in Transaction)\n    from: string;\n\n    // The raw transaction\n    raw?: string,\n\n    // This function waits until the transaction has been mined\n    wait: (confirmations?: number) => Promise<TransactionReceipt>\n};\n\nexport type BlockTag = string | number;\n\nexport interface _Block {\n    hash: string;\n    parentHash: string;\n    number: number;\n\n    timestamp: number;\n    nonce: string;\n    difficulty: number;\n    _difficulty: BigNumber;\n\n    gasLimit: BigNumber;\n    gasUsed: BigNumber;\n\n    miner: string;\n    extraData: string;\n\n    baseFeePerGas?: null | BigNumber;\n}\n\nexport interface Block extends _Block {\n    transactions: Array<string>;\n}\n\nexport interface BlockWithTransactions extends _Block {\n    transactions: Array<TransactionResponse>;\n}\n\n\nexport interface Log {\n    blockNumber: number;\n    blockHash: string;\n    transactionIndex: number;\n\n    removed: boolean;\n\n    address: string;\n    data: string;\n\n    topics: Array<string>;\n\n    transactionHash: string;\n    logIndex: number;\n}\n\nexport interface TransactionReceipt {\n    to: string;\n    from: string;\n    contractAddress: string,\n    transactionIndex: number,\n    root?: string,\n    gasUsed: BigNumber,\n    logsBloom: string,\n    blockHash: string,\n    transactionHash: string,\n    logs: Array<Log>,\n    blockNumber: number,\n    confirmations: number,\n    cumulativeGasUsed: BigNumber,\n    effectiveGasPrice: BigNumber,\n    byzantium: boolean,\n    type: number;\n    status?: number\n};\n\nexport interface FeeData {\n    lastBaseFeePerGas: null | BigNumber;\n    maxFeePerGas: null | BigNumber;\n    maxPriorityFeePerGas: null | BigNumber;\n    gasPrice: null | BigNumber;\n}\n\nexport interface EventFilter {\n    address?: string;\n    topics?: Array<string | Array<string> | null>;\n}\n\nexport interface Filter extends EventFilter {\n    fromBlock?: BlockTag,\n    toBlock?: BlockTag,\n}\n\nexport interface FilterByBlockHash extends EventFilter {\n    blockHash?: string;\n}\n\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\n\nexport abstract class ForkEvent extends Description {\n    readonly expiry: number;\n\n    readonly _isForkEvent?: boolean;\n\n    static isForkEvent(value: any): value is ForkEvent {\n        return !!(value && value._isForkEvent);\n    }\n}\n\nexport class BlockForkEvent extends ForkEvent {\n    readonly blockHash: string;\n\n    readonly _isBlockForkEvent?: boolean;\n\n    constructor(blockHash: string, expiry?: number) {\n        if (!isHexString(blockHash, 32)) {\n            logger.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isBlockForkEvent: true,\n            expiry: (expiry || 0),\n            blockHash: blockHash\n        });\n    }\n}\n\nexport class TransactionForkEvent extends ForkEvent {\n    readonly hash: string;\n\n    readonly _isTransactionOrderForkEvent?: boolean;\n\n    constructor(hash: string, expiry?: number) {\n        if (!isHexString(hash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"hash\", hash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionForkEvent: true,\n            expiry: (expiry || 0),\n            hash: hash\n        });\n    }\n}\n\nexport class TransactionOrderForkEvent extends ForkEvent {\n    readonly beforeHash: string;\n    readonly afterHash: string;\n\n    constructor(beforeHash: string, afterHash: string, expiry?: number) {\n        if (!isHexString(beforeHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n        }\n        if (!isHexString(afterHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionOrderForkEvent: true,\n            expiry: (expiry || 0),\n            beforeHash: beforeHash,\n            afterHash: afterHash\n        });\n    }\n}\n\nexport type EventType = string | Array<string | Array<string>> | EventFilter | ForkEvent;\n\nexport type Listener = (...args: Array<any>) => void;\n\n///////////////////////////////\n// Exported Abstracts\nexport abstract class Provider implements OnceBlockable {\n\n    // Network\n    abstract getNetwork(): Promise<Network>;\n\n    // Latest State\n    abstract getBlockNumber(): Promise<number>;\n    abstract getGasPrice(): Promise<BigNumber>;\n    async getFeeData(): Promise<FeeData> {\n        const { block, gasPrice } = await resolveProperties({\n            block: this.getBlock(\"latest\"),\n            gasPrice: this.getGasPrice().catch((error) => {\n                // @TODO: Why is this now failing on Calaveras?\n                //console.log(error);\n                return null;\n            })\n        });\n\n        let lastBaseFeePerGas = null, maxFeePerGas = null, maxPriorityFeePerGas = null;\n\n        if (block && block.baseFeePerGas) {\n            // We may want to compute this more accurately in the future,\n            // using the formula \"check if the base fee is correct\".\n            // See: https://eips.ethereum.org/EIPS/eip-1559\n            lastBaseFeePerGas = block.baseFeePerGas;\n            maxPriorityFeePerGas = BigNumber.from(\"1500000000\");\n            maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n        }\n\n        return { lastBaseFeePerGas, maxFeePerGas, maxPriorityFeePerGas, gasPrice };\n    }\n\n    // Account\n    abstract getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber>;\n    abstract getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number>;\n    abstract getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> ;\n    abstract getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n\n    // Execution\n    abstract sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse>;\n    abstract call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n    abstract estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber>;\n\n    // Queries\n    abstract getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block>;\n    abstract getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions>;\n    abstract getTransaction(transactionHash: string): Promise<TransactionResponse>;\n    abstract getTransactionReceipt(transactionHash: string): Promise<TransactionReceipt>;\n\n    // Bloom-filter Queries\n    abstract getLogs(filter: Filter): Promise<Array<Log>>;\n\n    // ENS\n    abstract resolveName(name: string | Promise<string>): Promise<null | string>;\n    abstract lookupAddress(address: string | Promise<string>): Promise<null | string>;\n\n    // Event Emitter (ish)\n    abstract on(eventName: EventType, listener: Listener): Provider;\n    abstract once(eventName: EventType, listener: Listener): Provider;\n    abstract emit(eventName: EventType, ...args: Array<any>): boolean\n    abstract listenerCount(eventName?: EventType): number;\n    abstract listeners(eventName?: EventType): Array<Listener>;\n    abstract off(eventName: EventType, listener?: Listener): Provider;\n    abstract removeAllListeners(eventName?: EventType): Provider;\n\n    // Alias for \"on\"\n    addListener(eventName: EventType, listener: Listener): Provider {\n        return this.on(eventName, listener);\n    }\n\n    // Alias for \"off\"\n    removeListener(eventName: EventType, listener: Listener): Provider {\n        return this.off(eventName, listener);\n    }\n\n    // @TODO: This *could* be implemented here, but would pull in events...\n    abstract waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt>;\n\n    readonly _isProvider: boolean;\n\n    constructor() {\n        logger.checkAbstract(new.target, Provider);\n        defineReadOnly(this, \"_isProvider\", true);\n    }\n\n    static isProvider(value: any): value is Provider {\n        return !!(value && value._isProvider);\n    }\n\n/*\n    static getResolver(network: Network, callable: CallTransactionable, namehash: string): string {\n        // No ENS...\n        if (!network.ensAddress) {\n            errors.throwError(\n                \"network does support ENS\",\n                errors.UNSUPPORTED_OPERATION,\n                { operation: \"ENS\", network: network.name }\n            );\n        }\n\n        // Not a namehash\n        if (!isHexString(namehash, 32)) {\n            errors.throwArgumentError(\"invalid name hash\", \"namehash\", namehash);\n        }\n\n        // keccak256(\"resolver(bytes32)\")\n        let data = \"0x0178b8bf\" + namehash.substring(2);\n        let transaction = { to: network.ensAddress, data: data };\n\n        return provider.call(transaction).then((data) => {\n            return provider.formatter.callAddress(data);\n        });\n    }\n\n    static resolveNamehash(network: Network, callable: CallTransactionable, namehash: string): string {\n        return this.getResolver(network, callable, namehash).then((resolverAddress) => {\n            if (!resolverAddress) { return null; }\n\n            // keccak256(\"addr(bytes32)\")\n            let data = \"0x3b3b57de\" + namehash(name).substring(2);\n            let transaction = { to: resolverAddress, data: data };\n            return callable.call(transaction).then((data) => {\n                return this.formatter.callAddress(data);\n            });\n\n        })\n    }\n*/\n}\n","export const version = \"abstract-provider/5.7.0\";\n","/**\n * var basex = require(\"base-x\");\n *\n * This implementation is heavily based on base-x. The main reason to\n * deviate was to prevent the dependency of Buffer.\n *\n * Contributors:\n *\n * base-x encoding\n * Forked from https://github.com/cryptocoinjs/bs58\n * Originally written by Mike Hearn for BitcoinJ\n * Copyright (c) 2011 Google Inc\n * Ported to JavaScript by Stefan Thomas\n * Merged Buffer refactorings from base58-native by Stephen Pair\n * Copyright (c) 2013 BitPay Inc\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n */\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nexport class BaseX {\n    readonly alphabet: string;\n    readonly base: number;\n\n    _alphabetMap: { [ character: string ]: number };\n    _leader: string;\n\n    constructor(alphabet: string) {\n        defineReadOnly(this, \"alphabet\", alphabet);\n        defineReadOnly(this, \"base\", alphabet.length);\n\n        defineReadOnly(this, \"_alphabetMap\", { });\n        defineReadOnly(this, \"_leader\", alphabet.charAt(0));\n\n        // pre-compute lookup table\n        for (let i = 0; i < alphabet.length; i++) {\n            this._alphabetMap[alphabet.charAt(i)] = i;\n        }\n    }\n\n    encode(value: BytesLike): string {\n        let source = arrayify(value);\n\n        if (source.length === 0) { return \"\"; }\n\n        let digits = [ 0 ]\n        for (let i = 0; i < source.length; ++i) {\n            let carry = source[i];\n            for (let j = 0; j < digits.length; ++j) {\n                carry += digits[j] << 8;\n                digits[j] = carry % this.base;\n                carry = (carry / this.base) | 0;\n            }\n\n            while (carry > 0) {\n                digits.push(carry % this.base);\n                carry = (carry / this.base) | 0;\n            }\n        }\n\n        let string = \"\"\n\n        // deal with leading zeros\n        for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n            string += this._leader;\n        }\n\n        // convert digits to a string\n        for (let q = digits.length - 1; q >= 0; --q) {\n            string += this.alphabet[digits[q]];\n        }\n\n        return string;\n    }\n\n    decode(value: string): Uint8Array {\n        if (typeof(value) !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n\n        let bytes: Array<number> = [];\n        if (value.length === 0) { return new Uint8Array(bytes); }\n\n        bytes.push(0);\n        for (let i = 0; i < value.length; i++) {\n            let byte = this._alphabetMap[value[i]];\n\n            if (byte === undefined) {\n                throw new Error(\"Non-base\" + this.base + \" character\");\n            }\n\n            let carry = byte;\n            for (let j = 0; j < bytes.length; ++j) {\n                carry += bytes[j] * this.base;\n                bytes[j] = carry & 0xff;\n                carry >>= 8;\n            }\n\n            while (carry > 0) {\n                bytes.push(carry & 0xff);\n                carry >>= 8;\n            }\n        }\n\n        // deal with leading zeros\n        for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n            bytes.push(0)\n        }\n\n        return arrayify(new Uint8Array(bytes.reverse()))\n    }\n}\n\nconst Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nconst Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\n\nexport { Base32, Base58 };\n\n//console.log(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\"))\n//console.log(Base58.encode(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\")))\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nexport type Numbers = Uint8Array | Array<number>;\nexport type NextFunc = (...args: Array<any>) => number;\n\n// https://github.com/behnammodi/polyfill/blob/master/array.polyfill.js\nfunction flat(array: Array<any>, depth?: number): Array<any> {\n    if (depth == null) { depth = 1; }\n    const result: Array<any> = [];\n\n    const forEach = result.forEach;\n\n    const flatDeep = function (arr: Array<any>, depth: number) {\n        forEach.call(arr, function (val: any) {\n            if (depth > 0 && Array.isArray(val)) {\n                flatDeep(val, depth - 1);\n            } else {\n               result.push(val);\n            }\n        });\n    };\n\n    flatDeep(array, depth);\n    return result;\n}\n\nfunction fromEntries<T extends string | number | symbol = string | number | symbol, U = any>(array: Array<[T, U]>): Record<T, U> {\n    const result: Record<T, U> = <Record<T, U>>{ };\n    for (let i = 0; i < array.length; i++) {\n        const value = array[i];\n        result[value[0]] = value[1];\n    }\n    return result;\n}\n\nexport function decode_arithmetic(bytes: Numbers): Array<number> {\n\tlet pos = 0;\n\tfunction u16() { return (bytes[pos++] << 8) | bytes[pos++]; }\n\t\n\t// decode the frequency table\n\tlet symbol_count = u16();\n\tlet total = 1;\n\tlet acc = [0, 1]; // first symbol has frequency 1\n\tfor (let i = 1; i < symbol_count; i++) {\n\t\tacc.push(total += u16());\n\t}\n\n\t// skip the sized-payload that the last 3 symbols index into\n\tlet skip = u16();\n\tlet pos_payload = pos;\n\tpos += skip;\n\n\tlet read_width = 0;\n\tlet read_buffer = 0; \n\tfunction read_bit() {\n\t\tif (read_width == 0) {\n\t\t\t// this will read beyond end of buffer\n\t\t\t// but (undefined|0) => zero pad\n\t\t\tread_buffer = (read_buffer << 8) | bytes[pos++];\n\t\t\tread_width = 8;\n\t\t}\n\t\treturn (read_buffer >> --read_width) & 1;\n\t}\n\n\tconst N = 31;\n\tconst FULL = 2**N;\n\tconst HALF = FULL >>> 1;\n\tconst QRTR = HALF >> 1;\n\tconst MASK = FULL - 1;\n\n\t// fill register\n\tlet register = 0;\n\tfor (let i = 0; i < N; i++) register = (register << 1) | read_bit();\n\n\tlet symbols = [];\n\tlet low = 0;\n\tlet range = FULL; // treat like a float\n\twhile (true) {\n\t\tlet value = Math.floor((((register - low + 1) * total) - 1) / range);\n\t\tlet start = 0;\n\t\tlet end = symbol_count;\n\t\twhile (end - start > 1) { // binary search\n\t\t\tlet mid = (start + end) >>> 1;\n\t\t\tif (value < acc[mid]) {\n\t\t\t\tend = mid;\n\t\t\t} else {\n\t\t\t\tstart = mid;\n\t\t\t}\n\t\t}\n\t\tif (start == 0) break; // first symbol is end mark\n\t\tsymbols.push(start);\n\t\tlet a = low + Math.floor(range * acc[start]   / total);\n\t\tlet b = low + Math.floor(range * acc[start+1] / total) - 1\n\t\twhile (((a ^ b) & HALF) == 0) {\n\t\t\tregister = (register << 1) & MASK | read_bit();\n\t\t\ta = (a << 1) & MASK;\n\t\t\tb = (b << 1) & MASK | 1;\n\t\t}\n\t\twhile (a & ~b & QRTR) {\n\t\t\tregister = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();\n\t\t\ta = (a << 1) ^ HALF;\n\t\t\tb = ((b ^ HALF) << 1) | HALF | 1;\n\t\t}\n\t\tlow = a;\n\t\trange = 1 + b - a;\n\t}\n\tlet offset = symbol_count - 4;\n\treturn symbols.map(x => { // index into payload\n\t\tswitch (x - offset) {\n\t\t\tcase 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n\t\t\tcase 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n\t\t\tcase 1: return offset + bytes[pos_payload++];\n\t\t\tdefault: return x - 1;\n\t\t}\n\t});\n}\t\n\n\n// returns an iterator which returns the next symbol\nexport function read_payload(v: Numbers): NextFunc {\n\tlet pos = 0;\n\treturn () => v[pos++];\n}\nexport function read_compressed_payload(bytes: Numbers): NextFunc {\n\treturn read_payload(decode_arithmetic(bytes));\n}\n\n// eg. [0,1,2,3...] => [0,-1,1,-2,...]\nexport function signed(i: number): number { \n\treturn (i & 1) ? (~i >> 1) : (i >> 1);\n}\n\nfunction read_counts(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0; i < n; i++) v[i] = 1 + next();\n\treturn v;\n}\n\nfunction read_ascending(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0, x = -1; i < n; i++) v[i] = x += 1 + next();\n\treturn v;\n}\n\nfunction read_deltas(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0, x = 0; i < n; i++) v[i] = x += signed(next());\n\treturn v;\n}\n\nexport function read_member_array(next: NextFunc, lookup?: Record<number, number>) {\n    let v = read_ascending(next(), next);\n    let n = next();\n    let vX = read_ascending(n, next);\n    let vN = read_counts(n, next);\n    for (let i = 0; i < n; i++) {\n        for (let j = 0; j < vN[i]; j++) {\n            v.push(vX[i] + j);\n        }\n    }\n    return lookup ? v.map(x => lookup[x]) : v;\n}\n\n// returns array of \n// [x, ys] => single replacement rule\n// [x, ys, n, dx, dx] => linear map\nexport function read_mapped_map(next: NextFunc): Record<number, Array<number>> {\n\tlet ret = [];\n\twhile (true) {\n\t\tlet w = next();\n\t\tif (w == 0) break;\n\t\tret.push(read_linear_table(w, next));\n\t}\n\twhile (true) {\n\t\tlet w = next() - 1;\n\t\tif (w < 0) break;\n\t\tret.push(read_replacement_table(w, next));\n\t}\n\treturn fromEntries<number, Array<number>>(flat(ret));\n}\n\nexport function read_zero_terminated_array(next: NextFunc): Array<number> {\n\tlet v = [];\n\twhile (true) {\n\t\tlet i = next();\n\t\tif (i == 0) break;\n\t\tv.push(i);\n\t}\n\treturn v;\n}\n\nfunction read_transposed(n: number, w: number, next: NextFunc): Array<Array<number>> {\n    let m = Array(n).fill(undefined).map(() => []);\n    for (let i = 0; i < w; i++) {\n        read_deltas(n, next).forEach((x, j) => m[j].push(x));\n    }\n    return m;\n}\n\n\nfunction read_linear_table(w: number, next: NextFunc): Array<Array<number | Array<number>>> {\n\tlet dx = 1 + next();\n\tlet dy = next();\n\tlet vN = read_zero_terminated_array(next);\n\tlet m = read_transposed(vN.length, 1+w, next);\n\treturn flat(m.map((v, i) => {\n\t  const x = v[0], ys = v.slice(1);\n\t\t//let [x, ...ys] = v;\n\t\t//return Array(vN[i]).fill().map((_, j) => {\n\t\treturn Array(vN[i]).fill(undefined).map((_, j) => {\n\t\t\tlet j_dy = j * dy;\n\t\t\treturn [x + j * dx, ys.map(y => y + j_dy)];\n\t\t});\n\t}));\n}\n\nfunction read_replacement_table(w: number, next: NextFunc): Array<[ number, Array<number> ]> {\n\tlet n = 1 + next();\n\tlet m = read_transposed(n, 1+w, next);\n\treturn m.map(v => [v[0], v.slice(1)]);\n}\n\nexport type Branch = {\n    set: Set<number>;\n    node: Node;\n};\n\nexport type Node = {\n    branches: Array<Branch>;\n    valid: number;\n    fe0f: boolean;\n    save: boolean;\n    check: boolean;\n};\n\nexport function read_emoji_trie(next: NextFunc): Node {\n\tlet sorted = read_member_array(next).sort((a, b) => a - b);\n\treturn read();\n\tfunction read(): Node {\n\t\tlet branches = [];\n\t\twhile (true) {\n\t\t\tlet keys = read_member_array(next, sorted);\n\t\t\tif (keys.length == 0) break;\n\t\t\tbranches.push({set: new Set(keys), node: read()});\n\t\t}\n    branches.sort((a, b) => b.set.size - a.set.size); // sort by likelihood\n \t\tlet temp = next();\n \t\tlet valid = temp % 3;\n \t\ttemp = (temp / 3)|0;\n \t\tlet fe0f = !!(temp & 1);\n \t\ttemp >>= 1;\n \t\tlet save = temp == 1;\n \t\tlet check = temp == 2;\n \t\treturn {branches, valid, fe0f, save, check};\n\t}\n}\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nimport { toUtf8CodePoints } from \"@ethersproject/strings\";\n\nimport { getData } from './include.js';\nconst r = getData();\n\nimport {read_member_array, read_mapped_map, read_emoji_trie} from './decoder.js';\n\n// @TODO: This should be lazily loaded\n\nconst VALID = new Set(read_member_array(r));\nconst IGNORED = new Set(read_member_array(r));\nconst MAPPED = read_mapped_map(r);\nconst EMOJI_ROOT = read_emoji_trie(r);\n//const NFC_CHECK = new Set(read_member_array(r, Array.from(VALID.values()).sort((a, b) => a - b)));\n\n//const STOP = 0x2E;\nconst HYPHEN = 0x2D;\nconst UNDERSCORE = 0x5F;\n\nfunction explode_cp(name: string): Array<number> {\n    return toUtf8CodePoints(name);\n}\n\nfunction filter_fe0f(cps: Array<number>): Array<number> {\n    return cps.filter(cp => cp != 0xFE0F);\n}\n\nexport function ens_normalize_post_check(name: string): string {\n\tfor (let label of name.split('.')) {\n\t\tlet cps = explode_cp(label);\n\t\ttry {\n\t\t\tfor (let i = cps.lastIndexOf(UNDERSCORE) - 1; i >= 0; i--) {\n\t\t\t\tif (cps[i] !== UNDERSCORE) {\n\t\t\t\t\tthrow new Error(`underscore only allowed at start`);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (cps.length >= 4 && cps.every(cp => cp < 0x80) && cps[2] === HYPHEN && cps[3] === HYPHEN) {\n\t\t\t\tthrow new Error(`invalid label extension`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthrow new Error(`Invalid label \"${label}\": ${err.message}`);\n\t\t}\n\t}\n\treturn name;\n}\n\nexport function ens_normalize(name: string): string {\n\treturn ens_normalize_post_check(normalize(name, filter_fe0f));\n}\n\nfunction normalize(name: string, emoji_filter: (a: Array<number>) => Array<number>): string {\n\tlet input = explode_cp(name).reverse(); // flip for pop\n\tlet output = [];\n\twhile (input.length) {\t\t\n\t\tlet emoji = consume_emoji_reversed(input);\n\t\tif (emoji) {\n\t\t\toutput.push(...emoji_filter(emoji));\n\t\t\tcontinue;\n\t\t}\n\t\tlet cp = input.pop();\n\t\tif (VALID.has(cp)) {\n\t\t\toutput.push(cp);\n\t\t\tcontinue;\n\t\t} \n\t\tif (IGNORED.has(cp)) {\n\t\t\tcontinue;\n\t\t}\n\t\tlet cps = MAPPED[cp];\n\t\tif (cps) {\n\t\t\toutput.push(...cps);\n\t\t\tcontinue;\n\t\t}\n\t\tthrow new Error(`Disallowed codepoint: 0x${cp.toString(16).toUpperCase()}`);\n\t}\n\treturn ens_normalize_post_check(nfc(String.fromCodePoint(...output)));\n}\n\nfunction nfc(s: string): string {\n    return s.normalize('NFC');\n}\n\nfunction consume_emoji_reversed(cps: Array<number>, eaten?: Array<number>) {\n\tlet node = EMOJI_ROOT;\n\tlet emoji;\n\tlet saved;\n\tlet stack = [];\n\tlet pos = cps.length;\n\tif (eaten) eaten.length = 0; // clear input buffer (if needed)\n\twhile (pos) {\n\t\tlet cp = cps[--pos];\n\t\tnode = node.branches.find(x => x.set.has(cp))?.node;\n\t\tif (!node) break;\n\t\tif (node.save) { // remember\n\t\t\tsaved = cp;\n\t\t} else if (node.check) { // check exclusion\n\t\t\tif (cp === saved) break;\n\t\t}\n\t\tstack.push(cp);\n\t\tif (node.fe0f) {\n\t\t\tstack.push(0xFE0F);\n\t\t\tif (pos > 0 && cps[pos - 1] == 0xFE0F) pos--; // consume optional FE0F\n\t\t}\n\t\tif (node.valid) { // this is a valid emoji (so far)\n\t\t\temoji = stack.slice(); // copy stack\n\t\t\tif (node.valid == 2) emoji.splice(1, 1); // delete FE0F at position 1 (RGI ZWJ don't follow spec!)\n\t\t\tif (eaten) eaten.push(...cps.slice(pos).reverse()); // copy input (if needed)\n\t\t\tcps.length = pos; // truncate\n\t\t}\n\t}\n\treturn emoji;\n}\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nimport { decode } from \"@ethersproject/base64\";\n\nimport {read_compressed_payload} from './decoder.js';\n\nexport function getData(): () => number {\n    return read_compressed_payload(decode(''));\n}\n\n","import { concat, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { ens_normalize } from \"./ens-normalize/lib\";\n\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\n\nfunction checkComponent(comp: Uint8Array): Uint8Array {\n    if (comp.length === 0) { throw new Error(\"invalid ENS name; empty component\"); }\n    return comp;\n}\n\nfunction ensNameSplit(name: string): Array<Uint8Array> {\n    const bytes = toUtf8Bytes(ens_normalize(name));\n    const comps: Array<Uint8Array> = [ ];\n\n    if (name.length === 0) { return comps; }\n\n    let last = 0;\n    for (let i = 0; i < bytes.length; i++) {\n        const d = bytes[i];\n\n        // A separator (i.e. \".\"); copy this component\n        if (d === 0x2e) {\n            comps.push(checkComponent(bytes.slice(last, i)));\n            last = i + 1;\n        }\n    }\n\n    // There was a stray separator at the end of the name\n    if (last >= bytes.length) { throw new Error(\"invalid ENS name; empty component\"); }\n\n    comps.push(checkComponent(bytes.slice(last)));\n    return comps;\n}\n\nexport function ensNormalize(name: string): string {\n    return ensNameSplit(name).map((comp) => toUtf8String(comp)).join(\".\");\n}\n\nexport function isValidName(name: string): boolean {\n    try {\n        return (ensNameSplit(name).length !== 0);\n    } catch (error) { }\n    return false;\n}\n\nexport function namehash(name: string): string {\n    /* istanbul ignore if */\n    if (typeof(name) !== \"string\") {\n        logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n\n    let result: string | Uint8Array = Zeros;\n\n    const comps = ensNameSplit(name);\n    while (comps.length) {\n        result = keccak256(concat([result, keccak256(comps.pop())]));\n    }\n\n    return hexlify(result);\n}\n\nexport function dnsEncode(name: string): string {\n    return hexlify(concat(ensNameSplit(name).map((comp) => {\n        // DNS does not allow components over 63 bytes in length\n        if (comp.length > 63) {\n            throw new Error(\"invalid DNS encoded entry; length exceeds 63 bytes\");\n        }\n\n        const bytes = new Uint8Array(comp.length + 1);\n        bytes.set(comp, 1);\n        bytes[0] = bytes.length - 1;\n        return bytes;\n\n    }))) + \"00\";\n}\n","\"use strict\";\n\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { SupportedAlgorithm } from \"./types\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport function ripemd160(data: BytesLike): string {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha256(data: BytesLike): string {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha512(data: BytesLike): string {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function computeHmac(algorithm: SupportedAlgorithm, key: BytesLike, data: BytesLike): string {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n\n    return \"0x\" + hash.hmac((<any>hash)[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n\n","export const version = \"sha2/5.7.0\";\n","export const AddressZero = \"0x0000000000000000000000000000000000000000\";\n\n","\"use strict\";\n\nimport { Block, TransactionReceipt, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexDataLength, hexDataSlice, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { AccessList, accessListify, parse as parseTransaction } from \"@ethersproject/transactions\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport type FormatFunc = (value: any) => any;\n\nexport type FormatFuncs = { [ key: string ]: FormatFunc };\n\nexport type Formats = {\n    transaction: FormatFuncs,\n    transactionRequest: FormatFuncs,\n    receipt: FormatFuncs,\n    receiptLog: FormatFuncs,\n    block: FormatFuncs,\n    blockWithTransactions: FormatFuncs,\n    filter: FormatFuncs,\n    filterLog: FormatFuncs,\n};\n\nexport class Formatter {\n    readonly formats: Formats;\n\n    constructor() {\n        this.formats = this.getDefaultFormats();\n    }\n\n    getDefaultFormats(): Formats {\n        const formats: Formats = <Formats>({ });\n\n        const address = this.address.bind(this);\n        const bigNumber = this.bigNumber.bind(this);\n        const blockTag = this.blockTag.bind(this);\n        const data = this.data.bind(this);\n        const hash = this.hash.bind(this);\n        const hex = this.hex.bind(this);\n        const number = this.number.bind(this);\n        const type = this.type.bind(this);\n\n        const strictData = (v: any) => { return this.data(v, true); };\n\n        formats.transaction = {\n            hash: hash,\n\n            type: type,\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n\n            blockHash: Formatter.allowNull(hash, null),\n            blockNumber: Formatter.allowNull(number, null),\n            transactionIndex: Formatter.allowNull(number, null),\n\n            confirmations: Formatter.allowNull(number, null),\n\n            from: address,\n\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n            // must be set\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n\n            gasLimit: bigNumber,\n            to: Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n\n            r: Formatter.allowNull(this.uint256),\n            s: Formatter.allowNull(this.uint256),\n            v: Formatter.allowNull(number),\n\n            creates: Formatter.allowNull(address, null),\n\n            raw: Formatter.allowNull(data),\n        };\n\n        formats.transactionRequest = {\n            from: Formatter.allowNull(address),\n            nonce: Formatter.allowNull(number),\n            gasLimit: Formatter.allowNull(bigNumber),\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            to: Formatter.allowNull(address),\n            value: Formatter.allowNull(bigNumber),\n            data: Formatter.allowNull(strictData),\n            type: Formatter.allowNull(number),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n        };\n\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n\n        formats.receipt = {\n            to: Formatter.allowNull(this.address, null),\n            from: Formatter.allowNull(this.address, null),\n            contractAddress: Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: Formatter.allowNull(data),// @TODO: should this be data?\n            blockHash: hash,\n            transactionHash: hash,\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\n            status: Formatter.allowNull(number),\n            type: type\n        };\n\n        formats.block = {\n            hash: Formatter.allowNull(hash),\n            parentHash: hash,\n            number: number,\n\n            timestamp: number,\n            nonce: Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n\n            miner: Formatter.allowNull(address),\n            extraData: data,\n\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n\n            baseFeePerGas: Formatter.allowNull(bigNumber)\n        };\n\n        formats.blockWithTransactions = shallowCopy(formats.block);\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n\n        formats.filter = {\n            fromBlock: Formatter.allowNull(blockTag, undefined),\n            toBlock: Formatter.allowNull(blockTag, undefined),\n            blockHash: Formatter.allowNull(hash, undefined),\n            address: Formatter.allowNull(address, undefined),\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n\n        formats.filterLog = {\n            blockNumber: Formatter.allowNull(number),\n            blockHash: Formatter.allowNull(hash),\n            transactionIndex: number,\n\n            removed: Formatter.allowNull(this.boolean.bind(this)),\n\n            address: address,\n            data: Formatter.allowFalsish(data, \"0x\"),\n\n            topics: Formatter.arrayOf(hash),\n\n            transactionHash: hash,\n            logIndex: number,\n        };\n\n        return formats;\n    }\n\n    accessList(accessList: Array<any>): AccessList {\n        return accessListify(accessList || []);\n    }\n\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    number(number: any): number {\n        if (number === \"0x\") { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    type(number: any): number {\n        if (number === \"0x\" || number == null) { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    // Strict! Used on input.\n    bigNumber(value: any): BigNumber {\n        return BigNumber.from(value);\n    }\n\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    boolean(value: any): boolean {\n        if (typeof(value) === \"boolean\") { return value; }\n        if (typeof(value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") { return true; }\n            if (value === \"false\") { return false; }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    }\n\n    hex(value: any, strict?: boolean): string {\n        if (typeof(value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n            if (isHexString(value)) {\n               return value.toLowerCase();\n            }\n        }\n        return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n\n    data(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    }\n\n    // Requires an address\n    // Strict! Used on input.\n    address(value: any): string {\n        return getAddress(value);\n    }\n\n    callAddress(value: any): string {\n        if (!isHexString(value, 32)) { return null; }\n        const address = getAddress(hexDataSlice(value, 12));\n        return (address === AddressZero) ? null: address;\n    }\n\n    contractAddress(value: any): string {\n        return getContractAddress(value);\n    }\n\n    // Strict! Used on input.\n    blockTag(blockTag: any): string {\n        if (blockTag == null) { return \"latest\"; }\n\n        if (blockTag === \"earliest\") { return \"0x0\"; }\n\n        switch (blockTag) {\n            case \"earliest\": return \"0x0\";\n            case \"latest\": case \"pending\": case \"safe\": case \"finalized\":\n                return blockTag;\n        }\n\n        if (typeof(blockTag) === \"number\" || isHexString(blockTag)) {\n            return hexValue(<number | string>blockTag);\n        }\n\n        throw new Error(\"invalid blockTag\");\n    }\n\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    hash(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if (hexDataLength(result) !== 32) {\n            return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    }\n\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    difficulty(value: any): number {\n        if (value == null) { return null; }\n\n        const v = BigNumber.from(value);\n\n        try {\n            return v.toNumber();\n        } catch (error) { }\n\n       return null;\n    }\n\n    uint256(value: any): string {\n        if (!isHexString(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return hexZeroPad(value, 32);\n    }\n\n    _block(value: any, format: any): Block {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        // The difficulty may need to come from _difficulty in recursed blocks\n        const difficulty = (value._difficulty != null) ? value._difficulty: value.difficulty;\n        const result = Formatter.check(format, value);\n        result._difficulty = ((difficulty == null) ? null: BigNumber.from(difficulty));\n        return result;\n    }\n\n    block(value: any): Block {\n        return this._block(value, this.formats.block);\n    }\n\n    blockWithTransactions(value: any): Block {\n        return this._block(value, this.formats.blockWithTransactions);\n    }\n\n    // Strict! Used on input.\n    transactionRequest(value: any): any {\n        return Formatter.check(this.formats.transactionRequest, value);\n    }\n\n    transactionResponse(transaction: any): TransactionResponse {\n\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && BigNumber.from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n\n        if ((transaction.type === 1 || transaction.type === 2)&& transaction.accessList == null) {\n            transaction.accessList = [ ];\n        }\n\n        const result: TransactionResponse = Formatter.check(this.formats.transaction, transaction);\n\n        if (transaction.chainId != null) {\n            let chainId = transaction.chainId;\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            result.chainId = chainId;\n\n        } else {\n            let chainId = transaction.networkId;\n\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            if (typeof(chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) { chainId = 0; }\n                chainId = parseInt(chainId);\n            }\n\n            if (typeof(chainId) !== \"number\") { chainId = 0; }\n\n            result.chainId = chainId;\n        }\n\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n\n        return result;\n    }\n\n    transaction(value: any): any {\n        return parseTransaction(value);\n    }\n\n    receiptLog(value: any): any {\n        return Formatter.check(this.formats.receiptLog, value);\n    }\n\n    receipt(value: any): TransactionReceipt {\n        const result: TransactionReceipt = Formatter.check(this.formats.receipt, value);\n\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                const value = BigNumber.from(result.root).toNumber();\n                if (value === 0 || value === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value)) {\n                        logger.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value;\n                    delete result.root;\n                } else {\n                    logger.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            } else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                logger.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n\n        return result;\n    }\n\n    topics(value: any): any {\n        if (Array.isArray(value)) {\n            return value.map((v) => this.topics(v));\n\n        } else if (value != null) {\n            return this.hash(value, true);\n        }\n\n        return null;\n    }\n\n    filter(value: any): any {\n        return Formatter.check(this.formats.filter, value);\n    }\n\n    filterLog(value: any): any {\n        return Formatter.check(this.formats.filterLog, value);\n    }\n\n    static check(format: { [ name: string ]: FormatFunc }, object: any): any {\n        const result: any = {};\n        for (const key in format) {\n            try {\n                const value = format[key](object[key]);\n                if (value !== undefined) { result[key] = value; }\n            } catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    }\n\n    // if value is null-ish, nullValue is returned\n    static allowNull(format: FormatFunc, nullValue?: any): FormatFunc {\n        return (function(value: any) {\n            if (value == null) { return nullValue; }\n            return format(value);\n        });\n    }\n\n    // If value is false-ish, replaceValue is returned\n    static allowFalsish(format: FormatFunc, replaceValue: any): FormatFunc {\n        return (function(value: any) {\n            if (!value) { return replaceValue; }\n            return format(value);\n        });\n    }\n\n    // Requires an Array satisfying check\n    static arrayOf(format: FormatFunc): FormatFunc {\n        return (function(array: any): Array<any> {\n            if (!Array.isArray(array)) { throw new Error(\"not an array\"); }\n\n            const result: any = [];\n\n            array.forEach(function(value) {\n                result.push(format(value));\n            });\n\n            return result;\n        });\n    }\n}\n\nexport interface CommunityResourcable {\n    isCommunityResource(): boolean;\n}\n\nexport function isCommunityResourcable(value: any): value is CommunityResourcable {\n    return (value && typeof(value.isCommunityResource) === \"function\");\n}\n\nexport function isCommunityResource(value: any): boolean {\n    return (isCommunityResourcable(value) && value.isCommunityResource());\n}\n\n// Show the throttle message only once\nlet throttleMessage = false;\nexport function showThrottleMessage() {\n    if (throttleMessage) { return; }\n    throttleMessage = true;\n\n    console.log(\"========= NOTICE =========\")\n    console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\n\n","\"use strict\";\n\nimport {\n    Block, BlockTag, BlockWithTransactions, EventType, Filter, FilterByBlockHash, ForkEvent,\n    Listener, Log, Provider, TransactionReceipt, TransactionRequest, TransactionResponse\n} from \"@ethersproject/abstract-provider\";\nimport { encode as base64Encode } from \"@ethersproject/base64\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexConcat, hexDataLength, hexDataSlice, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { dnsEncode, namehash } from \"@ethersproject/hash\";\nimport { getNetwork, Network, Networkish } from \"@ethersproject/networks\";\nimport { Deferrable, defineReadOnly, getStatic, resolveProperties } from \"@ethersproject/properties\";\nimport { Transaction } from \"@ethersproject/transactions\";\nimport { sha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\n\nimport bech32 from \"bech32\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Formatter } from \"./formatter\";\n\nconst MAX_CCIP_REDIRECTS = 10;\n\n//////////////////////////////\n// Event Serializeing\n\nfunction checkTopic(topic: string): string {\n     if (topic == null) { return \"null\"; }\n     if (hexDataLength(topic) !== 32) {\n         logger.throwArgumentError(\"invalid topic\", \"topic\", topic);\n     }\n     return topic.toLowerCase();\n}\n\nfunction serializeTopics(topics: Array<string | Array<string>>): string {\n    // Remove trailing null AND-topics; they are redundant\n    topics = topics.slice();\n    while (topics.length > 0 && topics[topics.length - 1] == null) { topics.pop(); }\n\n    return topics.map((topic) => {\n        if (Array.isArray(topic)) {\n\n            // Only track unique OR-topics\n            const unique: { [ topic: string ]: boolean } = { }\n            topic.forEach((topic) => {\n                unique[checkTopic(topic)] = true;\n            });\n\n            // The order of OR-topics does not matter\n            const sorted = Object.keys(unique);\n            sorted.sort();\n\n            return sorted.join(\"|\");\n\n        } else {\n            return checkTopic(topic);\n        }\n    }).join(\"&\");\n}\n\nfunction deserializeTopics(data: string): Array<string | Array<string>> {\n    if (data === \"\") { return [ ]; }\n\n    return data.split(/&/g).map((topic) => {\n        if (topic === \"\") { return [ ]; }\n\n        const comps = topic.split(\"|\").map((topic) => {\n            return ((topic === \"null\") ? null: topic);\n        });\n\n        return ((comps.length === 1) ? comps[0]: comps);\n    });\n}\n\nfunction getEventTag(eventName: EventType): string {\n    if (typeof(eventName) === \"string\") {\n        eventName = eventName.toLowerCase();\n\n        if (hexDataLength(eventName) === 32) {\n            return \"tx:\" + eventName;\n        }\n\n        if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n        }\n\n    } else if (Array.isArray(eventName)) {\n        return \"filter:*:\" + serializeTopics(eventName);\n\n    } else if (ForkEvent.isForkEvent(eventName)) {\n        logger.warn(\"not implemented\");\n        throw new Error(\"not implemented\");\n\n    } else if (eventName && typeof(eventName) === \"object\") {\n        return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n    }\n\n    throw new Error(\"invalid event - \" + eventName);\n}\n\n//////////////////////////////\n// Helper Object\n\nfunction getTime() {\n    return (new Date()).getTime();\n}\n\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\n//////////////////////////////\n// Provider Object\n\n\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\n\nconst PollableEvents = [ \"block\", \"network\", \"pending\", \"poll\" ];\n\nexport class Event {\n    readonly listener: Listener;\n    readonly once: boolean;\n    readonly tag: string;\n\n    _lastBlockNumber: number\n    _inflight: boolean;\n\n    constructor(tag: string, listener: Listener, once: boolean) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"listener\", listener);\n        defineReadOnly(this, \"once\", once);\n\n        this._lastBlockNumber = -2;\n        this._inflight = false;\n    }\n\n    get event(): EventType {\n        switch (this.type) {\n            case \"tx\":\n               return this.hash;\n            case \"filter\":\n               return this.filter;\n        }\n        return this.tag;\n    }\n\n    get type(): string {\n        return this.tag.split(\":\")[0]\n    }\n\n    get hash(): string {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"tx\") { return null; }\n        return comps[1];\n    }\n\n    get filter(): Filter {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"filter\") { return null; }\n        const address = comps[1];\n\n        const topics = deserializeTopics(comps[2]);\n        const filter: Filter = { };\n\n        if (topics.length > 0) { filter.topics = topics; }\n        if (address && address !== \"*\") { filter.address = address; }\n\n        return filter;\n    }\n\n    pollable(): boolean {\n        return (this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\n    }\n}\n\nexport interface EnsResolver {\n\n    // Name this Resolver is associated with\n    readonly name: string;\n\n    // The address of the resolver\n    readonly address: string;\n\n    // Multichain address resolution (also normal address resolution)\n    // See: https://eips.ethereum.org/EIPS/eip-2304\n    getAddress(coinType?: 60): Promise<null | string>\n\n    // Contenthash field\n    // See: https://eips.ethereum.org/EIPS/eip-1577\n    getContentHash(): Promise<null | string>;\n\n    // Storage of text records\n    // See: https://eips.ethereum.org/EIPS/eip-634\n    getText(key: string): Promise<null | string>;\n};\n\nexport interface EnsProvider {\n    resolveName(name: string): Promise<null | string>;\n    lookupAddress(address: string): Promise<null | string>;\n    getResolver(name: string): Promise<null | EnsResolver>;\n}\n\ntype CoinInfo = {\n    symbol: string,\n    ilk?: string,     // General family\n    prefix?: string,  // Bech32 prefix\n    p2pkh?: number,   // Pay-to-Public-Key-Hash Version\n    p2sh?: number,    // Pay-to-Script-Hash Version\n};\n\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nconst coinInfos: { [ coinType: string ]: CoinInfo } = {\n    \"0\":   { symbol: \"btc\",  p2pkh: 0x00, p2sh: 0x05, prefix: \"bc\" },\n    \"2\":   { symbol: \"ltc\",  p2pkh: 0x30, p2sh: 0x32, prefix: \"ltc\" },\n    \"3\":   { symbol: \"doge\", p2pkh: 0x1e, p2sh: 0x16 },\n    \"60\":  { symbol: \"eth\",  ilk: \"eth\" },\n    \"61\":  { symbol: \"etc\",  ilk: \"eth\" },\n    \"700\": { symbol: \"xdai\", ilk: \"eth\" },\n};\n\nfunction bytes32ify(value: number): string {\n    return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n}\n\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data: Uint8Array): string {\n    return Base58.encode(concat([ data, hexDataSlice(sha256(sha256(data)), 0, 4) ]));\n}\n\nexport interface Avatar {\n    url: string;\n    linkage: Array<{ type: string, content: string }>;\n}\n\nconst matcherIpfs = new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\");\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    matcherIpfs,\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\n\nfunction _parseString(result: string, start: number): null | string {\n    try {\n        return toUtf8String(_parseBytes(result, start));\n    } catch(error) { }\n    return null;\n}\n\nfunction _parseBytes(result: string, start: number): null | string {\n    if (result === \"0x\") { return null; }\n\n    const offset = BigNumber.from(hexDataSlice(result, start, start + 32)).toNumber();\n    const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n\n    return hexDataSlice(result, offset + 32, offset + 32 + length);\n}\n\n// Trim off the ipfs:// prefix and return the default gateway URL\nfunction getIpfsLink(link: string): string {\n    if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n        link = link.substring(12);\n    } else if (link.match(/^ipfs:\\/\\//i)) {\n        link = link.substring(7);\n    } else {\n        logger.throwArgumentError(\"unsupported IPFS format\", \"link\", link);\n    }\n\n    return `https:/\\/gateway.ipfs.io/ipfs/${ link }`;\n}\n\nfunction numPad(value: number): Uint8Array {\n    const result = arrayify(value);\n    if (result.length > 32) { throw new Error(\"internal; should not happen\"); }\n\n    const padded = new Uint8Array(32);\n    padded.set(result, 32 - result.length);\n    return padded;\n}\n\nfunction bytesPad(value: Uint8Array): Uint8Array {\n    if ((value.length % 32) === 0) { return value; }\n\n    const result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n    result.set(value);\n    return result;\n}\n\n// ABI Encodes a series of (bytes, bytes, ...)\nfunction encodeBytes(datas: Array<BytesLike>) {\n    const result: Array<Uint8Array> = [ ];\n\n    let byteCount = 0;\n\n    // Add place-holders for pointers as we add items\n    for (let i = 0; i < datas.length; i++) {\n        result.push(null);\n        byteCount += 32;\n    }\n\n    for (let i = 0; i < datas.length; i++) {\n        const data = arrayify(datas[i]);\n\n        // Update the bytes offset\n        result[i] = numPad(byteCount);\n\n        // The length and padded value of data\n        result.push(numPad(data.length));\n        result.push(bytesPad(data));\n        byteCount += 32 + Math.ceil(data.length / 32) * 32;\n    }\n\n    return hexConcat(result);\n}\n\nexport class Resolver implements EnsResolver {\n    readonly provider: BaseProvider;\n\n    readonly name: string;\n    readonly address: string;\n\n    readonly _resolvedAddress: null | string;\n\n    // For EIP-2544 names, the ancestor that provided the resolver\n    _supportsEip2544: null | Promise<boolean>;\n\n    // The resolvedAddress is only for creating a ReverseLookup resolver\n    constructor(provider: BaseProvider, address: string, name: string, resolvedAddress?: string) {\n        defineReadOnly(this, \"provider\", provider);\n        defineReadOnly(this, \"name\", name);\n        defineReadOnly(this, \"address\", provider.formatter.address(address));\n        defineReadOnly(this, \"_resolvedAddress\", resolvedAddress);\n    }\n\n    supportsWildcard(): Promise<boolean> {\n        if (!this._supportsEip2544) {\n            // supportsInterface(bytes4 = selector(\"resolve(bytes,bytes)\"))\n            this._supportsEip2544 = this.provider.call({\n                to: this.address,\n                data: \"0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000\"\n            }).then((result) => {\n                return BigNumber.from(result).eq(1);\n            }).catch((error) => {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return false; }\n                // Rethrow the error: link is down, etc. Let future attempts retry.\n                this._supportsEip2544 = null;\n                throw error;\n            });\n        }\n\n        return this._supportsEip2544;\n    }\n\n    async _fetch(selector: string, parameters?: string): Promise<null | string> {\n\n        // e.g. keccak256(\"addr(bytes32,uint256)\")\n        const tx = {\n            to: this.address,\n            ccipReadEnabled: true,\n            data: hexConcat([ selector, namehash(this.name), (parameters || \"0x\") ])\n        };\n\n        // Wildcard support; use EIP-2544 to resolve the request\n        let parseBytes = false;\n        if (await this.supportsWildcard()) {\n            parseBytes = true;\n\n            // selector(\"resolve(bytes,bytes)\")\n            tx.data = hexConcat([ \"0x9061b923\", encodeBytes([ dnsEncode(this.name), tx.data ]) ]);\n        }\n\n        try {\n            let result = await this.provider.call(tx);\n            if ((arrayify(result).length % 32) === 4) {\n                logger.throwError(\"resolver threw error\", Logger.errors.CALL_EXCEPTION, {\n                    transaction: tx, data: result\n                });\n            }\n            if (parseBytes) { result = _parseBytes(result, 0); }\n            return result;\n        } catch (error) {\n            if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n            throw error;\n        }\n    }\n\n    async _fetchBytes(selector: string, parameters?: string): Promise<null | string> {\n        const result = await this._fetch(selector, parameters);\n        if (result != null) { return _parseBytes(result, 0); }\n        return null;\n    }\n\n    _getAddress(coinType: number, hexBytes: string): string {\n        const coinInfo = coinInfos[String(coinType)];\n\n        if (coinInfo == null) {\n            logger.throwError(`unsupported coin type: ${ coinType }`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`\n            });\n        }\n\n        if (coinInfo.ilk === \"eth\") {\n            return this.provider.formatter.address(hexBytes);\n        }\n\n        const bytes = arrayify(hexBytes);\n\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (coinInfo.p2pkh != null) {\n            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n            if (p2pkh) {\n                const length = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2pkh ], (\"0x\" + p2pkh[2]) ]));\n                }\n            }\n        }\n\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (coinInfo.p2sh != null) {\n            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n            if (p2sh) {\n                const length = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2sh ], (\"0x\" + p2sh[2]) ]));\n                }\n            }\n        }\n\n        // Bech32\n        if (coinInfo.prefix != null) {\n            const length = bytes[1];\n\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n            let version = bytes[0];\n            if (version === 0x00) {\n                if (length !== 20 && length !== 32) {\n                    version = -1;\n                }\n            } else {\n                version = -1;\n            }\n\n            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n                const words = bech32.toWords(bytes.slice(2));\n                words.unshift(version);\n                return bech32.encode(coinInfo.prefix, words);\n            }\n        }\n\n        return null;\n    }\n\n\n    async getAddress(coinType?: number): Promise<string> {\n        if (coinType == null) { coinType = 60; }\n\n        // If Ethereum, use the standard `addr(bytes32)`\n        if (coinType === 60) {\n            try {\n                // keccak256(\"addr(bytes32)\")\n                const result = await this._fetch(\"0x3b3b57de\");\n\n                // No address\n                if (result === \"0x\" || result === HashZero) { return null; }\n\n                return this.provider.formatter.callAddress(result);\n            } catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n                throw error;\n            }\n        }\n\n        // keccak256(\"addr(bytes32,uint256\")\n        const hexBytes = await this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType));\n\n        // No address\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // Compute the address\n        const address = this._getAddress(coinType, hexBytes);\n\n        if (address == null) {\n            logger.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`,\n                coinType: coinType,\n                data: hexBytes\n            });\n        }\n\n        return address;\n    }\n\n    async getAvatar(): Promise<null | Avatar> {\n        const linkage: Array<{ type: string, content: string }> = [ { type: \"name\", content: this.name } ];\n        try {\n            // test data for ricmoo.eth\n            //const avatar = \"eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233\";\n            const avatar = await this.getText(\"avatar\");\n            if (avatar == null) { return null; }\n\n            for (let i = 0; i < matchers.length; i++) {\n                const match = avatar.match(matchers[i]);\n                if (match == null) { continue; }\n\n                const scheme = match[1].toLowerCase();\n\n                switch (scheme) {\n                    case \"https\":\n                        linkage.push({ type: \"url\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"data\":\n                        linkage.push({ type: \"data\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"ipfs\":\n                        linkage.push({ type: \"ipfs\", content: avatar });\n                        return { linkage, url: getIpfsLink(avatar) };\n\n                    case \"erc721\":\n                    case \"erc1155\": {\n                        // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                        const selector = (scheme === \"erc721\") ? \"0xc87b56dd\": \"0x0e89341c\";\n                        linkage.push({ type: scheme, content: avatar });\n\n                        // The owner of this name\n                        const owner = (this._resolvedAddress || await this.getAddress());\n\n                        const comps = (match[2] || \"\").split(\"/\");\n                        if (comps.length !== 2) { return null; }\n\n                        const addr = await this.provider.formatter.address(comps[0]);\n                        const tokenId = hexZeroPad(BigNumber.from(comps[1]).toHexString(), 32);\n\n                        // Check that this account owns the token\n                        if (scheme === \"erc721\") {\n                            // ownerOf(uint256 tokenId)\n                            const tokenOwner = this.provider.formatter.callAddress(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x6352211e\", tokenId ])\n                            }));\n                            if (owner !== tokenOwner) { return null; }\n                            linkage.push({ type: \"owner\", content: tokenOwner });\n\n                        } else if (scheme === \"erc1155\") {\n                            // balanceOf(address owner, uint256 tokenId)\n                            const balance = BigNumber.from(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x00fdd58e\", hexZeroPad(owner, 32), tokenId ])\n                            }));\n                            if (balance.isZero()) { return null; }\n                            linkage.push({ type: \"balance\", content: balance.toString() });\n                        }\n\n                        // Call the token contract for the metadata URL\n                        const tx = {\n                            to: this.provider.formatter.address(comps[0]),\n                            data: hexConcat([ selector, tokenId ])\n                        };\n\n                        let metadataUrl = _parseString(await this.provider.call(tx), 0);\n                        if (metadataUrl == null) { return null; }\n                        linkage.push({ type: \"metadata-url-base\", content: metadataUrl });\n\n                        // ERC-1155 allows a generic {id} in the URL\n                        if (scheme === \"erc1155\") {\n                            metadataUrl = metadataUrl.replace(\"{id}\", tokenId.substring(2));\n                            linkage.push({ type: \"metadata-url-expanded\", content: metadataUrl });\n                        }\n\n                        // Transform IPFS metadata links\n                        if (metadataUrl.match(/^ipfs:/i)) {\n                            metadataUrl = getIpfsLink(metadataUrl);\n                        }\n\n                        linkage.push({ type: \"metadata-url\", content: metadataUrl });\n\n                        // Get the token metadata\n                        const metadata = await fetchJson(metadataUrl);\n                        if (!metadata) { return null; }\n                        linkage.push({ type: \"metadata\", content: JSON.stringify(metadata) });\n\n                        // Pull the image URL out\n                        let imageUrl = metadata.image;\n                        if (typeof(imageUrl) !== \"string\") { return null; }\n\n                        if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                            // Allow\n                        } else {\n                            // Transform IPFS link to gateway\n                            const ipfs = imageUrl.match(matcherIpfs);\n                            if (ipfs == null) { return null; }\n\n                            linkage.push({ type: \"url-ipfs\", content: imageUrl });\n                            imageUrl = getIpfsLink(imageUrl);\n                        }\n\n                        linkage.push({ type: \"url\", content: imageUrl });\n\n                        return { linkage, url: imageUrl };\n                    }\n                }\n            }\n        } catch (error) { }\n\n        return null;\n    }\n\n    async getContentHash(): Promise<string> {\n\n        // keccak256(\"contenthash()\")\n        const hexBytes = await this._fetchBytes(\"0xbc1c58d1\");\n\n        // No contenthash\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // IPFS (CID: 1, Type: DAG-PB)\n        const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipfs) {\n            const length = parseInt(ipfs[3], 16);\n            if (ipfs[4].length === length * 2) {\n                return \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]);\n            }\n        }\n\n        // IPNS (CID: 1, Type: libp2p-key)\n        const ipns = hexBytes.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipns) {\n            const length = parseInt(ipns[3], 16);\n            if (ipns[4].length === length * 2) {\n                return \"ipns:/\\/\" + Base58.encode(\"0x\" + ipns[1]);\n            }\n        }\n\n        // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n        const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/)\n        if (swarm) {\n            if (swarm[1].length === (32 * 2)) {\n                return \"bzz:/\\/\" + swarm[1]\n            }\n        }\n\n        const skynet = hexBytes.match(/^0x90b2c605([0-9a-f]*)$/);\n        if (skynet) {\n            if (skynet[1].length === (34 * 2)) {\n                // URL Safe base64; https://datatracker.ietf.org/doc/html/rfc4648#section-5\n                const urlSafe: Record<string, string> = { \"=\": \"\", \"+\": \"-\", \"/\": \"_\" };\n                const hash = base64Encode(\"0x\" + skynet[1]).replace(/[=+\\/]/g, (a) => (urlSafe[a]));\n                return \"sia:/\\/\" + hash;\n            }\n        }\n\n        return logger.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"getContentHash()\",\n            data: hexBytes\n        });\n    }\n\n    async getText(key: string): Promise<string> {\n\n        // The key encoded as parameter to fetchBytes\n        let keyBytes = toUtf8Bytes(key);\n\n        // The nodehash consumes the first slot, so the string pointer targets\n        // offset 64, with the length at offset 64 and data starting at offset 96\n        keyBytes = concat([ bytes32ify(64), bytes32ify(keyBytes.length), keyBytes ]);\n\n        // Pad to word-size (32 bytes)\n        if ((keyBytes.length % 32) !== 0) {\n            keyBytes = concat([ keyBytes, hexZeroPad(\"0x\", 32 - (key.length % 32)) ])\n        }\n\n        const hexBytes = await this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        return toUtf8String(hexBytes);\n    }\n}\n\nlet defaultFormatter: Formatter = null;\n\nlet nextPollId = 1;\n\nexport class BaseProvider extends Provider implements EnsProvider {\n    _networkPromise: Promise<Network>;\n    _network: Network;\n\n    _events: Array<Event>;\n\n    formatter: Formatter;\n\n    // To help mitigate the eventually consistent nature of the blockchain\n    // we keep a mapping of events we emit. If we emit an event X, we expect\n    // that a user should be able to query for that event in the callback,\n    // if the node returns null, we stall the response until we get back a\n    // meaningful value, since we may be hitting a re-org, or a node that\n    // has not indexed the event yet.\n    // Events:\n    //   - t:{hash}    - Transaction hash\n    //   - b:{hash}    - BlockHash\n    //   - block       - The most recent emitted block\n    _emitted: { [ eventName: string ]: number | \"pending\" };\n\n    _pollingInterval: number;\n    _poller: NodeJS.Timer;\n    _bootstrapPoll: NodeJS.Timer;\n\n    _lastBlockNumber: number;\n    _maxFilterBlockRange: number;\n\n    _fastBlockNumber: number;\n    _fastBlockNumberPromise: Promise<number>;\n    _fastQueryDate: number;\n\n    _maxInternalBlockNumber: number;\n    _internalBlockNumber: Promise<{ blockNumber: number, reqTime: number, respTime: number }>;\n\n    readonly anyNetwork: boolean;\n\n    disableCcipRead: boolean;\n\n\n    /**\n     *  ready\n     *\n     *  A Promise<Network> that resolves only once the provider is ready.\n     *\n     *  Sub-classes that call the super with a network without a chainId\n     *  MUST set this. Standard named networks have a known chainId.\n     *\n     */\n\n    constructor(network: Networkish | Promise<Network>) {\n        super();\n\n        // Events being listened to\n        this._events = [];\n\n        this._emitted = { block: -2 };\n\n        this.disableCcipRead = false;\n\n        this.formatter = new.target.getFormatter();\n\n        // If network is any, this Provider allows the underlying\n        // network to change dynamically, and we auto-detect the\n        // current network\n        defineReadOnly(this, \"anyNetwork\", (network === \"any\"));\n        if (this.anyNetwork) { network = this.detectNetwork(); }\n\n        if (network instanceof Promise) {\n            this._networkPromise = network;\n\n            // Squash any \"unhandled promise\" errors; that do not need to be handled\n            network.catch((error) => { });\n\n            // Trigger initial network setting (async)\n            this._ready().catch((error) => { });\n\n        } else {\n            const knownNetwork = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n            if (knownNetwork) {\n                defineReadOnly(this, \"_network\", knownNetwork);\n                this.emit(\"network\", knownNetwork, null);\n\n            } else {\n                logger.throwArgumentError(\"invalid network\", \"network\", network);\n            }\n        }\n\n        this._maxInternalBlockNumber = -1024;\n\n        this._lastBlockNumber = -2;\n        this._maxFilterBlockRange = 10;\n\n        this._pollingInterval = 4000;\n\n        this._fastQueryDate = 0;\n    }\n\n    async _ready(): Promise<Network> {\n        if (this._network == null) {\n            let network: Network = null;\n            if (this._networkPromise) {\n                try {\n                    network = await this._networkPromise;\n                } catch (error) { }\n            }\n\n            // Try the Provider's network detection (this MUST throw if it cannot)\n            if (network == null) {\n                network = await this.detectNetwork();\n            }\n\n            // This should never happen; every Provider sub-class should have\n            // suggested a network by here (or have thrown).\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // Possible this call stacked so do not call defineReadOnly again\n            if (this._network == null) {\n                if (this.anyNetwork) {\n                    this._network = network;\n                } else {\n                    defineReadOnly(this, \"_network\", network);\n                }\n                this.emit(\"network\", network, null);\n            }\n        }\n\n        return this._network;\n    }\n\n    // This will always return the most recently established network.\n    // For \"any\", this can change (a \"network\" event is emitted before\n    // any change is reflected); otherwise this cannot change\n    get ready(): Promise<Network> {\n        return poll(() => {\n            return this._ready().then((network) => {\n                return network;\n            }, (error) => {\n                // If the network isn't running yet, we will wait\n                if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                    return undefined;\n                }\n                throw error;\n            });\n        });\n    }\n\n    // @TODO: Remove this and just create a singleton formatter\n    static getFormatter(): Formatter {\n        if (defaultFormatter == null) {\n            defaultFormatter = new Formatter();\n        }\n        return defaultFormatter;\n    }\n\n    // @TODO: Remove this and just use getNetwork\n    static getNetwork(network: Networkish): Network {\n        return getNetwork((network == null) ? \"homestead\": network);\n    }\n\n    async ccipReadFetch(tx: Transaction, calldata: string, urls: Array<string>): Promise<null | string> {\n        if (this.disableCcipRead || urls.length === 0) { return null; }\n\n        const sender = tx.to.toLowerCase();\n        const data = calldata.toLowerCase();\n\n        const errorMessages: Array<string> = [ ];\n\n        for (let i = 0; i < urls.length; i++) {\n            const url = urls[i];\n\n            // URL expansion\n            const href = url.replace(\"{sender}\", sender).replace(\"{data}\", data);\n\n            // If no {data} is present, use POST; otherwise GET\n            const json: string | null = (url.indexOf(\"{data}\") >= 0) ? null: JSON.stringify({ data, sender });\n\n            const result = await fetchJson({ url: href, errorPassThrough: true }, json, (value, response) => {\n                value.status = response.statusCode;\n                return value;\n            });\n\n            if (result.data) { return result.data; }\n\n            const errorMessage = (result.message || \"unknown error\");\n\n            // 4xx indicates the result is not present; stop\n            if (result.status >= 400 && result.status < 500) {\n                return logger.throwError(`response not found during CCIP fetch: ${ errorMessage }`, Logger.errors.SERVER_ERROR, { url, errorMessage });\n            }\n\n            // 5xx indicates server issue; try the next url\n            errorMessages.push(errorMessage);\n        }\n\n        return logger.throwError(`error encountered during CCIP fetch: ${ errorMessages.map((m) => JSON.stringify(m)).join(\", \") }`, Logger.errors.SERVER_ERROR, {\n            urls, errorMessages\n        });\n    }\n\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n    async _getInternalBlockNumber(maxAge: number): Promise<number> {\n        await this._ready();\n\n        // Allowing stale data up to maxAge old\n        if (maxAge > 0) {\n\n            // While there are pending internal block requests...\n            while (this._internalBlockNumber) {\n\n                // ...\"remember\" which fetch we started with\n                const internalBlockNumber = this._internalBlockNumber;\n\n                try {\n                    // Check the result is not too stale\n                    const result = await internalBlockNumber;\n                    if ((getTime() - result.respTime) <= maxAge) {\n                        return result.blockNumber;\n                    }\n\n                    // Too old; fetch a new value\n                    break;\n\n                } catch(error) {\n\n                    // The fetch rejected; if we are the first to get the\n                    // rejection, drop through so we replace it with a new\n                    // fetch; all others blocked will then get that fetch\n                    // which won't match the one they \"remembered\" and loop\n                    if (this._internalBlockNumber === internalBlockNumber) {\n                        break;\n                    }\n                }\n            }\n        }\n\n        const reqTime = getTime();\n\n        const checkInternalBlockNumber = resolveProperties({\n            blockNumber: this.perform(\"getBlockNumber\", { }),\n            networkError: this.getNetwork().then((network) => (null), (error) => (error))\n        }).then(({ blockNumber, networkError }) => {\n            if (networkError) {\n                // Unremember this bad internal block number\n                if (this._internalBlockNumber === checkInternalBlockNumber) {\n                    this._internalBlockNumber = null;\n                }\n                throw networkError;\n            }\n\n            const respTime = getTime();\n\n            blockNumber = BigNumber.from(blockNumber).toNumber();\n            if (blockNumber < this._maxInternalBlockNumber) { blockNumber = this._maxInternalBlockNumber; }\n\n            this._maxInternalBlockNumber = blockNumber;\n            this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n            return { blockNumber, reqTime, respTime };\n        });\n\n        this._internalBlockNumber = checkInternalBlockNumber;\n\n        // Swallow unhandled exceptions; if needed they are handled else where\n        checkInternalBlockNumber.catch((error) => {\n            // Don't null the dead (rejected) fetch, if it has already been updated\n            if (this._internalBlockNumber === checkInternalBlockNumber) {\n                this._internalBlockNumber = null;\n            }\n        });\n\n        return (await checkInternalBlockNumber).blockNumber;\n    }\n\n    async poll(): Promise<void> {\n        const pollId = nextPollId++;\n\n        // Track all running promises, so we can trigger a post-poll once they are complete\n        const runners: Array<Promise<void>> = [];\n\n        let blockNumber: number = null;\n        try {\n            blockNumber = await this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n        } catch (error) {\n            this.emit(\"error\", error);\n            return;\n        }\n        this._setFastBlockNumber(blockNumber);\n\n        // Emit a poll event after we have the latest (fast) block number\n        this.emit(\"poll\", pollId, blockNumber);\n\n        // If the block has not changed, meh.\n        if (blockNumber === this._lastBlockNumber) {\n            this.emit(\"didPoll\", pollId);\n            return;\n        }\n\n        // First polling cycle, trigger a \"block\" events\n        if (this._emitted.block === -2) {\n            this._emitted.block = blockNumber - 1;\n        }\n\n        if (Math.abs((<number>(this._emitted.block)) - blockNumber) > 1000) {\n            logger.warn(`network block skew detected; skipping block events (emitted=${ this._emitted.block } blockNumber${ blockNumber })`);\n            this.emit(\"error\", logger.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n                blockNumber: blockNumber,\n                event: \"blockSkew\",\n                previousBlockNumber: this._emitted.block\n            }));\n            this.emit(\"block\", blockNumber);\n\n        } else {\n            // Notify all listener for each block that has passed\n            for (let i = (<number>this._emitted.block) + 1; i <= blockNumber; i++) {\n                this.emit(\"block\", i);\n            }\n        }\n\n        // The emitted block was updated, check for obsolete events\n        if ((<number>this._emitted.block) !== blockNumber) {\n            this._emitted.block = blockNumber;\n\n            Object.keys(this._emitted).forEach((key) => {\n                // The block event does not expire\n                if (key === \"block\") { return; }\n\n                // The block we were at when we emitted this event\n                const eventBlockNumber = this._emitted[key];\n\n                // We cannot garbage collect pending transactions or blocks here\n                // They should be garbage collected by the Provider when setting\n                // \"pending\" events\n                if (eventBlockNumber === \"pending\") { return; }\n\n                // Evict any transaction hashes or block hashes over 12 blocks\n                // old, since they should not return null anyways\n                if (blockNumber - eventBlockNumber > 12) {\n                    delete this._emitted[key];\n                }\n            });\n        }\n\n        // First polling cycle\n        if (this._lastBlockNumber === -2) {\n            this._lastBlockNumber = blockNumber - 1;\n        }\n        // Find all transaction hashes we are waiting on\n        this._events.forEach((event) => {\n            switch (event.type) {\n                case \"tx\": {\n                    const hash = event.hash;\n                    let runner = this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt || receipt.blockNumber == null) { return null; }\n                        this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                        this.emit(hash, receipt);\n                        return null;\n                    }).catch((error: Error) => { this.emit(\"error\", error); });\n\n                    runners.push(runner);\n\n                    break;\n                }\n\n                case \"filter\": {\n                    // We only allow a single getLogs to be in-flight at a time\n                    if (!event._inflight) {\n                        event._inflight = true;\n\n                        // This is the first filter for this event, so we want to\n                        // restrict events to events that happened no earlier than now\n                        if (event._lastBlockNumber === -2) {\n                            event._lastBlockNumber = blockNumber - 1;\n                        }\n\n                        // Filter from the last *known* event; due to load-balancing\n                        // and some nodes returning updated block numbers before\n                        // indexing events, a logs result with 0 entries cannot be\n                        // trusted and we must retry a range which includes it again\n                        const filter = event.filter;\n                        filter.fromBlock = event._lastBlockNumber + 1;\n                        filter.toBlock = blockNumber;\n\n                        // Prevent fitler ranges from growing too wild, since it is quite\n                        // likely there just haven't been any events to move the lastBlockNumber.\n                        const minFromBlock = filter.toBlock - this._maxFilterBlockRange;\n                        if (minFromBlock > filter.fromBlock) { filter.fromBlock = minFromBlock; }\n\n                        if (filter.fromBlock < 0) { filter.fromBlock = 0; }\n\n                        const runner = this.getLogs(filter).then((logs) => {\n                            // Allow the next getLogs\n                            event._inflight = false;\n\n                            if (logs.length === 0) { return; }\n\n                            logs.forEach((log: Log) => {\n                                // Only when we get an event for a given block number\n                                // can we trust the events are indexed\n                                if (log.blockNumber > event._lastBlockNumber) {\n                                    event._lastBlockNumber = log.blockNumber;\n                                }\n\n                                // Make sure we stall requests to fetch blocks and txs\n                                this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                                this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n\n                                this.emit(filter, log);\n                            });\n                        }).catch((error: Error) => {\n                            this.emit(\"error\", error);\n\n                            // Allow another getLogs (the range was not updated)\n                            event._inflight = false;\n                        });\n                        runners.push(runner);\n                    }\n\n                    break;\n                }\n            }\n        });\n\n        this._lastBlockNumber = blockNumber;\n\n        // Once all events for this loop have been processed, emit \"didPoll\"\n        Promise.all(runners).then(() => {\n            this.emit(\"didPoll\", pollId);\n        }).catch((error) => { this.emit(\"error\", error); });\n\n        return;\n    }\n\n    // Deprecated; do not use this\n    resetEventsBlock(blockNumber: number): void {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) { this.poll(); }\n    }\n\n    get network(): Network {\n        return this._network;\n    }\n\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n    async detectNetwork(): Promise<Network> {\n        return logger.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"provider.detectNetwork\"\n        });\n    }\n\n    async getNetwork(): Promise<Network> {\n        const network = await this._ready();\n\n        // Make sure we are still connected to the same network; this is\n        // only an external call for backends which can have the underlying\n        // network change spontaneously\n        const currentNetwork = await this.detectNetwork();\n        if (network.chainId !== currentNetwork.chainId) {\n\n            // We are allowing network changes, things can get complex fast;\n            // make sure you know what you are doing if you use \"any\"\n            if (this.anyNetwork) {\n                this._network = currentNetwork;\n\n                // Reset all internal block number guards and caches\n                this._lastBlockNumber = -2;\n                this._fastBlockNumber = null;\n                this._fastBlockNumberPromise = null;\n                this._fastQueryDate = 0;\n                this._emitted.block = -2;\n                this._maxInternalBlockNumber = -1024;\n                this._internalBlockNumber = null;\n\n                // The \"network\" event MUST happen before this method resolves\n                // so any events have a chance to unregister, so we stall an\n                // additional event loop before returning from /this/ call\n                this.emit(\"network\", currentNetwork, network);\n                await stall(0);\n\n                return this._network;\n            }\n\n            const error = logger.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n                event: \"changed\",\n                network: network,\n                detectedNetwork: currentNetwork\n            });\n\n            this.emit(\"error\", error);\n            throw error;\n        }\n\n        return network;\n    }\n\n    get blockNumber(): number {\n        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {\n            this._setFastBlockNumber(blockNumber);\n        }, (error) => { });\n\n        return (this._fastBlockNumber != null) ? this._fastBlockNumber: -1;\n    }\n\n    get polling(): boolean {\n        return (this._poller != null);\n    }\n\n    set polling(value: boolean) {\n        if (value && !this._poller) {\n            this._poller = setInterval(() => { this.poll(); }, this.pollingInterval);\n\n            if (!this._bootstrapPoll) {\n                this._bootstrapPoll = setTimeout(() => {\n                    this.poll();\n\n                    // We block additional polls until the polling interval\n                    // is done, to prevent overwhelming the poll function\n                    this._bootstrapPoll = setTimeout(() => {\n                        // If polling was disabled, something may require a poke\n                        // since starting the bootstrap poll and it was disabled\n                        if (!this._poller) { this.poll(); }\n\n                        // Clear out the bootstrap so we can do another\n                        this._bootstrapPoll = null;\n                    }, this.pollingInterval);\n                }, 0);\n            }\n\n        } else if (!value && this._poller) {\n            clearInterval(this._poller);\n            this._poller = null;\n        }\n    }\n\n    get pollingInterval(): number {\n        return this._pollingInterval;\n    }\n\n    set pollingInterval(value: number) {\n        if (typeof(value) !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n            throw new Error(\"invalid polling interval\");\n        }\n\n        this._pollingInterval = value;\n\n        if (this._poller) {\n            clearInterval(this._poller);\n            this._poller = setInterval(() => { this.poll(); }, this._pollingInterval);\n        }\n    }\n\n    _getFastBlockNumber(): Promise<number> {\n        const now = getTime();\n\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {\n                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n                    this._fastBlockNumber = blockNumber;\n                }\n                return this._fastBlockNumber;\n            });\n        }\n\n        return this._fastBlockNumberPromise;\n    }\n\n    _setFastBlockNumber(blockNumber: number): void {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) { return; }\n\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    }\n\n    async waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt> {\n        return this._waitForTransaction(transactionHash, (confirmations == null) ? 1: confirmations, timeout || 0, null);\n    }\n\n    async _waitForTransaction(transactionHash: string, confirmations: number, timeout: number, replaceable: { data: string, from: string, nonce: number, to: string, value: BigNumber, startBlock: number }): Promise<TransactionReceipt> {\n        const receipt = await this.getTransactionReceipt(transactionHash);\n\n        // Receipt is already good\n        if ((receipt ? receipt.confirmations: 0) >= confirmations) { return receipt; }\n\n        // Poll until the receipt is good...\n        return new Promise((resolve, reject) => {\n            const cancelFuncs: Array<() => void> = [];\n\n            let done = false;\n            const alreadyDone = function() {\n                if (done) { return true; }\n                done = true;\n                cancelFuncs.forEach((func) => { func(); });\n                return false;\n            };\n\n            const minedHandler = (receipt: TransactionReceipt) => {\n                if (receipt.confirmations < confirmations) { return; }\n                if (alreadyDone()) { return; }\n                resolve(receipt);\n            }\n            this.on(transactionHash, minedHandler);\n            cancelFuncs.push(() => { this.removeListener(transactionHash, minedHandler); });\n\n            if (replaceable) {\n                let lastBlockNumber = replaceable.startBlock;\n                let scannedBlock: number = null;\n                const replaceHandler = async (blockNumber: number) => {\n                    if (done) { return; }\n\n                    // Wait 1 second; this is only used in the case of a fault, so\n                    // we will trade off a little bit of latency for more consistent\n                    // results and fewer JSON-RPC calls\n                    await stall(1000);\n\n                    this.getTransactionCount(replaceable.from).then(async (nonce) => {\n                        if (done) { return; }\n\n                        if (nonce <= replaceable.nonce) {\n                            lastBlockNumber = blockNumber;\n\n                        } else {\n                            // First check if the transaction was mined\n                            {\n                                const mined = await this.getTransaction(transactionHash);\n                                if (mined && mined.blockNumber != null) { return; }\n                            }\n\n                            // First time scanning. We start a little earlier for some\n                            // wiggle room here to handle the eventually consistent nature\n                            // of blockchain (e.g. the getTransactionCount was for a\n                            // different block)\n                            if (scannedBlock == null) {\n                                scannedBlock = lastBlockNumber - 3;\n                                if (scannedBlock < replaceable.startBlock) {\n                                    scannedBlock = replaceable.startBlock;\n                                }\n                            }\n\n                            while (scannedBlock <= blockNumber) {\n                                if (done) { return; }\n\n                                const block = await this.getBlockWithTransactions(scannedBlock);\n                                for (let ti = 0; ti < block.transactions.length; ti++) {\n                                    const tx = block.transactions[ti];\n\n                                    // Successfully mined!\n                                    if (tx.hash === transactionHash) { return; }\n\n                                    // Matches our transaction from and nonce; its a replacement\n                                    if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {\n                                        if (done) { return; }\n\n                                        // Get the receipt of the replacement\n                                        const receipt = await this.waitForTransaction(tx.hash, confirmations);\n\n                                        // Already resolved or rejected (prolly a timeout)\n                                        if (alreadyDone()) { return; }\n\n                                        // The reason we were replaced\n                                        let reason = \"replaced\";\n                                        if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                                            reason = \"repriced\";\n                                        } else  if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                                            reason = \"cancelled\"\n                                        }\n\n                                        // Explain why we were replaced\n                                        reject(logger.makeError(\"transaction was replaced\", Logger.errors.TRANSACTION_REPLACED, {\n                                            cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                                            reason,\n                                            replacement: this._wrapTransaction(tx),\n                                            hash: transactionHash,\n                                            receipt\n                                        }));\n\n                                        return;\n                                    }\n                                }\n                                scannedBlock++;\n                            }\n                        }\n\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n\n                    }, (error) => {\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n                    });\n                };\n\n                if (done) { return; }\n                this.once(\"block\", replaceHandler);\n\n                cancelFuncs.push(() => {\n                    this.removeListener(\"block\", replaceHandler);\n                });\n            }\n\n            if (typeof(timeout) === \"number\" && timeout > 0) {\n                const timer = setTimeout(() => {\n                    if (alreadyDone()) { return; }\n                    reject(logger.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, { timeout: timeout }));\n                }, timeout);\n                if (timer.unref) { timer.unref(); }\n\n                cancelFuncs.push(() => { clearTimeout(timer); });\n            }\n        });\n    }\n\n    async getBlockNumber(): Promise<number> {\n        return this._getInternalBlockNumber(0);\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        await this.getNetwork();\n\n        const result = await this.perform(\"getGasPrice\", { });\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getGasPrice\",\n                result, error\n            });\n        }\n    }\n\n    async getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getBalance\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getBalance\",\n                params, result, error\n            });\n        }\n    }\n\n    async getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getTransactionCount\", params);\n        try {\n            return BigNumber.from(result).toNumber();\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getTransactionCount\",\n                params, result, error\n            });\n        }\n    }\n\n    async getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getCode\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getCode\",\n                params, result, error\n            });\n        }\n    }\n\n    async getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag),\n            position: Promise.resolve(position).then((p) => hexValue(p))\n        });\n        const result = await this.perform(\"getStorageAt\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getStorageAt\",\n                params, result, error\n            });\n        }\n    }\n\n    // This should be called by any subclass wrapping a TransactionResponse\n    _wrapTransaction(tx: Transaction, hash?: string, startBlock?: number): TransactionResponse {\n        if (hash != null && hexDataLength(hash) !== 32) { throw new Error(\"invalid response - sendTransaction\"); }\n\n        const result = <TransactionResponse>tx;\n\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            logger.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n\n        result.wait = async (confirms?: number, timeout?: number) => {\n            if (confirms == null) { confirms = 1; }\n            if (timeout == null) { timeout = 0; }\n\n            // Get the details to detect replacement\n            let replacement = undefined;\n            if (confirms !== 0 && startBlock != null) {\n                replacement = {\n                    data: tx.data,\n                    from: tx.from,\n                    nonce: tx.nonce,\n                    to: tx.to,\n                    value: tx.value,\n                    startBlock\n                };\n            }\n\n            const receipt = await this._waitForTransaction(tx.hash, confirms, timeout, replacement);\n            if (receipt == null && confirms === 0) { return null; }\n\n            // No longer pending, allow the polling loop to garbage collect this\n            this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n\n            if (receipt.status === 0) {\n                logger.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n                    transactionHash: tx.hash,\n                    transaction: tx,\n                    receipt: receipt\n                });\n            }\n            return receipt;\n        };\n\n        return result;\n    }\n\n    async sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        const hexTx = await Promise.resolve(signedTransaction).then(t => hexlify(t));\n        const tx = this.formatter.transaction(signedTransaction);\n        if (tx.confirmations == null) { tx.confirmations = 0; }\n        const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n        try {\n            const hash = await this.perform(\"sendTransaction\", { signedTransaction: hexTx });\n            return this._wrapTransaction(tx, hash, blockNumber);\n        } catch (error) {\n            (<any>error).transaction = tx;\n            (<any>error).transactionHash = tx.hash;\n            throw error;\n        }\n    }\n\n    async _getTransactionRequest(transaction: Deferrable<TransactionRequest>): Promise<Transaction> {\n        const values: any = await transaction;\n\n        const tx: any = { };\n\n        [\"from\", \"to\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v): null))\n        });\n\n        [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? BigNumber.from(v): null));\n        });\n\n        [\"type\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => ((v != null) ? v: null));\n        });\n\n        if (values.accessList) {\n            tx.accessList = this.formatter.accessList(values.accessList);\n        }\n\n        [\"data\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? hexlify(v): null));\n        });\n\n        return this.formatter.transactionRequest(await resolveProperties(tx));\n    }\n\n    async _getFilter(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Filter | FilterByBlockHash> {\n        filter = await filter;\n\n        const result: any = { };\n\n        if (filter.address != null) {\n            result.address = this._getAddress(filter.address);\n        }\n\n        [\"blockHash\", \"topics\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = (<any>filter)[key];\n        });\n\n        [\"fromBlock\", \"toBlock\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = this._getBlockTag((<any>filter)[key]);\n        });\n\n        return this.formatter.filter(await resolveProperties(result));\n    }\n\n    async _call(transaction: TransactionRequest, blockTag: BlockTag, attempt: number): Promise<string> {\n        if (attempt >= MAX_CCIP_REDIRECTS) {\n            logger.throwError(\"CCIP read exceeded maximum redirections\", Logger.errors.SERVER_ERROR, {\n                redirects: attempt, transaction\n            });\n        }\n\n        const txSender = transaction.to;\n\n        const result = await this.perform(\"call\", { transaction, blockTag });\n\n        // CCIP Read request via OffchainLookup(address,string[],bytes,bytes4,bytes)\n        if (attempt >= 0 && blockTag === \"latest\" && txSender != null && result.substring(0, 10) === \"0x556f1830\" && (hexDataLength(result) % 32 === 4)) {\n            try {\n                const data = hexDataSlice(result, 4);\n\n                // Check the sender of the OffchainLookup matches the transaction\n                const sender = hexDataSlice(data, 0, 32);\n                if (!BigNumber.from(sender).eq(txSender)) {\n                    logger.throwError(\"CCIP Read sender did not match\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n\n                // Read the URLs from the response\n                const urls: Array<string> = [];\n                const urlsOffset = BigNumber.from(hexDataSlice(data, 32, 64)).toNumber();\n                const urlsLength = BigNumber.from(hexDataSlice(data, urlsOffset, urlsOffset + 32)).toNumber();\n                const urlsData = hexDataSlice(data, urlsOffset + 32);\n                for (let u = 0; u < urlsLength; u++) {\n                    const url = _parseString(urlsData, u * 32);\n                    if (url == null) {\n                        logger.throwError(\"CCIP Read contained corrupt URL string\", Logger.errors.CALL_EXCEPTION, {\n                            name: \"OffchainLookup\",\n                            signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                            transaction, data: result\n                        });\n                    }\n                    urls.push(url);\n                }\n\n                // Get the CCIP calldata to forward\n                const calldata = _parseBytes(data, 64);\n\n                // Get the callbackSelector (bytes4)\n                if (!BigNumber.from(hexDataSlice(data, 100, 128)).isZero()) {\n                    logger.throwError(\"CCIP Read callback selector included junk\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n                const callbackSelector = hexDataSlice(data, 96, 100);\n\n                // Get the extra data to send back to the contract as context\n                const extraData = _parseBytes(data, 128);\n\n                const ccipResult = await this.ccipReadFetch(<Transaction>transaction, calldata, urls);\n                if (ccipResult == null) {\n                    logger.throwError(\"CCIP Read disabled or provided no URLs\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n\n                const tx = {\n                    to: txSender,\n                    data: hexConcat([ callbackSelector, encodeBytes([ ccipResult, extraData ]) ])\n                };\n\n                return this._call(tx, blockTag, attempt + 1);\n\n            } catch (error) {\n                if (error.code === Logger.errors.SERVER_ERROR) { throw error; }\n            }\n        }\n\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"call\",\n                params: { transaction, blockTag }, result, error\n            });\n        }\n\n    }\n\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const resolved = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction),\n            blockTag: this._getBlockTag(blockTag),\n            ccipReadEnabled: Promise.resolve(transaction.ccipReadEnabled)\n        });\n        return this._call(resolved.transaction, resolved.blockTag, resolved.ccipReadEnabled ? 0: -1);\n    }\n\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction)\n        });\n\n        const result = await this.perform(\"estimateGas\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"estimateGas\",\n                params, result, error\n            });\n        }\n    }\n\n    async _getAddress(addressOrName: string | Promise<string>): Promise<string> {\n        addressOrName = await addressOrName;\n        if (typeof(addressOrName) !== \"string\") {\n            logger.throwArgumentError(\"invalid address or ENS name\", \"name\", addressOrName);\n        }\n\n        const address = await this.resolveName(addressOrName);\n        if (address == null) {\n            logger.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `resolveName(${ JSON.stringify(addressOrName) })`\n            });\n        }\n        return address;\n    }\n\n    async _getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>, includeTransactions?: boolean): Promise<Block | BlockWithTransactions> {\n        await this.getNetwork();\n\n        blockHashOrBlockTag = await blockHashOrBlockTag;\n\n        // If blockTag is a number (not \"latest\", etc), this is the block number\n        let blockNumber = -128;\n\n        const params: { [key: string]: any } = {\n            includeTransactions: !!includeTransactions\n        };\n\n        if (isHexString(blockHashOrBlockTag, 32)) {\n            params.blockHash = blockHashOrBlockTag;\n        } else {\n            try {\n                params.blockTag = await this._getBlockTag(blockHashOrBlockTag);\n                if (isHexString(params.blockTag)) {\n                    blockNumber = parseInt(params.blockTag.substring(2), 16);\n                }\n            } catch (error) {\n                logger.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n            }\n        }\n\n        return poll(async () => {\n            const block = await this.perform(\"getBlock\", params);\n\n            // Block was not found\n            if (block == null) {\n\n                // For blockhashes, if we didn't say it existed, that blockhash may\n                // not exist. If we did see it though, perhaps from a log, we know\n                // it exists, and this node is just not caught up yet.\n                if (params.blockHash != null) {\n                    if (this._emitted[\"b:\" + params.blockHash] == null) { return null; }\n                }\n\n                // For block tags, if we are asking for a future block, we return null\n                if (params.blockTag != null) {\n                    if (blockNumber > this._emitted.block) { return null; }\n                }\n\n                // Retry on the next block\n                return undefined;\n            }\n\n            // Add transactions\n            if (includeTransactions) {\n                let blockNumber: number = null;\n                for (let i = 0; i < block.transactions.length; i++) {\n                    const tx = block.transactions[i];\n                    if (tx.blockNumber == null) {\n                        tx.confirmations = 0;\n\n                    } else if (tx.confirmations == null) {\n                        if (blockNumber == null) {\n                            blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                        }\n\n                        // Add the confirmations using the fast block number (pessimistic)\n                        let confirmations = (blockNumber - tx.blockNumber) + 1;\n                        if (confirmations <= 0) { confirmations = 1; }\n                        tx.confirmations = confirmations;\n                    }\n                }\n\n                const blockWithTxs: any = this.formatter.blockWithTransactions(block);\n                blockWithTxs.transactions = blockWithTxs.transactions.map((tx: TransactionResponse) => this._wrapTransaction(tx));\n                return blockWithTxs;\n            }\n\n            return this.formatter.block(block);\n\n        }, { oncePoll: this });\n    }\n\n    getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block> {\n        return <Promise<Block>>(this._getBlock(blockHashOrBlockTag, false));\n    }\n\n    getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions> {\n        return <Promise<BlockWithTransactions>>(this._getBlock(blockHashOrBlockTag, true));\n    }\n\n    async getTransaction(transactionHash: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransaction\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            const tx = this.formatter.transactionResponse(result);\n\n            if (tx.blockNumber == null) {\n                tx.confirmations = 0;\n\n            } else if (tx.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - tx.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                tx.confirmations = confirmations;\n            }\n\n            return this._wrapTransaction(tx);\n        }, { oncePoll: this });\n    }\n\n    async getTransactionReceipt(transactionHash: string | Promise<string>): Promise<TransactionReceipt> {\n        await this.getNetwork();\n\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransactionReceipt\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            // \"geth-etc\" returns receipts before they are ready\n            if (result.blockHash == null) { return undefined; }\n\n            const receipt = this.formatter.receipt(result);\n\n            if (receipt.blockNumber == null) {\n                receipt.confirmations = 0;\n\n            } else if (receipt.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - receipt.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                receipt.confirmations = confirmations;\n            }\n\n            return receipt;\n        }, { oncePoll: this });\n    }\n\n    async getLogs(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Array<Log>> {\n        await this.getNetwork();\n        const params = await resolveProperties({ filter: this._getFilter(filter) });\n        const logs: Array<Log> = await this.perform(\"getLogs\", params);\n        logs.forEach((log) => {\n            if (log.removed == null) { log.removed = false; }\n        });\n        return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n    }\n\n    async getEtherPrice(): Promise<number> {\n        await this.getNetwork();\n        return this.perform(\"getEtherPrice\", { });\n    }\n\n    async _getBlockTag(blockTag: BlockTag | Promise<BlockTag>): Promise<BlockTag> {\n        blockTag = await blockTag;\n\n        if (typeof(blockTag) === \"number\" && blockTag < 0) {\n            if (blockTag % 1) {\n                logger.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n            }\n\n            let blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n            blockNumber += blockTag;\n            if (blockNumber < 0) { blockNumber = 0; }\n            return this.formatter.blockTag(blockNumber)\n        }\n\n        return this.formatter.blockTag(blockTag);\n    }\n\n\n    async getResolver(name: string): Promise<null | Resolver> {\n        let currentName = name;\n        while (true) {\n            if (currentName === \"\" || currentName === \".\") { return null; }\n\n            // Optimization since the eth node cannot change and does\n            // not have a wildcard resolver\n            if (name !== \"eth\" && currentName === \"eth\") { return null; }\n\n            // Check the current node for a resolver\n            const addr = await this._getResolver(currentName, \"getResolver\");\n\n            // Found a resolver!\n            if (addr != null) {\n                const resolver = new Resolver(this, addr, name);\n\n                // Legacy resolver found, using EIP-2544 so it isn't safe to use\n                if (currentName !== name && !(await resolver.supportsWildcard())) { return null; }\n\n                return resolver;\n            }\n\n            // Get the parent node\n            currentName = currentName.split(\".\").slice(1).join(\".\");\n        }\n\n    }\n\n    async _getResolver(name: string, operation?: string): Promise<string> {\n        if (operation == null) { operation = \"ENS\"; }\n\n        const network = await this.getNetwork();\n\n        // No ENS...\n        if (!network.ensAddress) {\n            logger.throwError(\n                \"network does not support ENS\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { operation, network: network.name }\n            );\n        }\n\n        try {\n            // keccak256(\"resolver(bytes32)\")\n            const addrData = await this.call({\n                to: network.ensAddress,\n                data: (\"0x0178b8bf\" + namehash(name).substring(2))\n            });\n            return this.formatter.callAddress(addrData);\n        } catch (error) {\n            // ENS registry cannot throw errors on resolver(bytes32)\n        }\n\n        return null;\n    }\n\n    async resolveName(name: string | Promise<string>): Promise<null | string> {\n        name = await name;\n\n        // If it is already an address, nothing to resolve\n        try {\n            return Promise.resolve(this.formatter.address(name));\n        } catch (error) {\n            // If is is a hexstring, the address is bad (See #694)\n            if (isHexString(name)) { throw error; }\n        }\n\n        if (typeof(name) !== \"string\") {\n            logger.throwArgumentError(\"invalid ENS name\", \"name\", name);\n        }\n\n        // Get the addr from the resolver\n        const resolver = await this.getResolver(name);\n        if (!resolver) { return null; }\n\n        return await resolver.getAddress();\n    }\n\n    async lookupAddress(address: string | Promise<string>): Promise<null | string> {\n        address = await address;\n        address = this.formatter.address(address);\n\n        const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n        const resolverAddr = await this._getResolver(node, \"lookupAddress\");\n        if (resolverAddr == null) { return null; }\n\n        // keccak(\"name(bytes32)\")\n        const name = _parseString(await this.call({\n            to: resolverAddr,\n            data: (\"0x691f3431\" + namehash(node).substring(2))\n        }), 0);\n\n        const addr = await this.resolveName(name);\n        if (addr != address) { return null; }\n\n        return name;\n    }\n\n    async getAvatar(nameOrAddress: string): Promise<null | string> {\n        let resolver: Resolver = null;\n        if (isHexString(nameOrAddress)) {\n            // Address; reverse lookup\n            const address = this.formatter.address(nameOrAddress);\n\n            const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n            const resolverAddress = await this._getResolver(node, \"getAvatar\");\n            if (!resolverAddress) { return null; }\n\n            // Try resolving the avatar against the addr.reverse resolver\n            resolver = new Resolver(this, resolverAddress, node);\n            try {\n                const avatar = await resolver.getAvatar();\n                if (avatar) { return avatar.url; }\n            } catch (error) {\n                if (error.code !== Logger.errors.CALL_EXCEPTION) { throw error; }\n            }\n\n            // Try getting the name and performing forward lookup; allowing wildcards\n            try {\n                // keccak(\"name(bytes32)\")\n                const name = _parseString(await this.call({\n                    to: resolverAddress,\n                    data: (\"0x691f3431\" + namehash(node).substring(2))\n                }), 0);\n                resolver = await this.getResolver(name);\n            } catch (error) {\n                if (error.code !== Logger.errors.CALL_EXCEPTION) { throw error; }\n                return null;\n            }\n\n        } else {\n            // ENS name; forward lookup with wildcard\n            resolver = await this.getResolver(nameOrAddress);\n            if (!resolver) { return null; }\n        }\n\n        const avatar = await resolver.getAvatar();\n        if (avatar == null) { return null; }\n\n        return avatar.url;\n    }\n\n    perform(method: string, params: any): Promise<any> {\n        return logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n    }\n\n    _startEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _stopEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _addEventListener(eventName: EventType, listener: Listener, once: boolean): this {\n        const event = new Event(getEventTag(eventName), listener, once)\n        this._events.push(event);\n        this._startEvent(event);\n\n        return this;\n    }\n\n    on(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, false);\n    }\n\n    once(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, true);\n    }\n\n\n    emit(eventName: EventType, ...args: Array<any>): boolean {\n        let result = false;\n\n        let stopped: Array<Event> = [ ];\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag) { return true; }\n\n            setTimeout(() => {\n                event.listener.apply(this, args);\n            }, 0);\n\n            result = true;\n\n            if (event.once) {\n                stopped.push(event);\n                return false;\n            }\n\n            return true;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return result;\n    }\n\n    listenerCount(eventName?: EventType): number {\n        if (!eventName) { return this._events.length; }\n\n        let eventTag = getEventTag(eventName);\n        return this._events.filter((event) => {\n            return (event.tag === eventTag);\n        }).length;\n    }\n\n    listeners(eventName?: EventType): Array<Listener> {\n        if (eventName == null) {\n            return this._events.map((event) => event.listener);\n        }\n\n        let eventTag = getEventTag(eventName);\n        return this._events\n            .filter((event) => (event.tag === eventTag))\n            .map((event) => event.listener);\n    }\n\n    off(eventName: EventType, listener?: Listener): this {\n        if (listener == null) {\n            return this.removeAllListeners(eventName);\n        }\n\n        const stopped: Array<Event> = [ ];\n\n        let found = false;\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag || event.listener != listener) { return true; }\n            if (found) { return true; }\n            found = true;\n            stopped.push(event);\n            return false;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n\n    removeAllListeners(eventName?: EventType): this {\n        let stopped: Array<Event> = [ ];\n        if (eventName == null) {\n            stopped = this._events;\n\n            this._events = [ ];\n        } else {\n            const eventTag = getEventTag(eventName);\n            this._events = this._events.filter((event) => {\n                if (event.tag !== eventTag) { return true; }\n                stopped.push(event);\n                return false;\n            });\n        }\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n}\n","export const HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n\n","\"use strict\";\n\n// See: https://github.com/ethereum/wiki/wiki/JSON-RPC\n\nimport { Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { Signer, TypedDataDomain, TypedDataField, TypedDataSigner } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Bytes, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { checkProperties, deepCopy, Deferrable, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { AccessList, accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson, poll } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider, Event } from \"./base-provider\";\n\n\nconst errorGas = [ \"call\", \"estimateGas\" ];\n\nfunction spelunk(value: any, requireData: boolean): null | { message: string, data: null | string } {\n    if (value == null) { return null; }\n\n    // These *are* the droids we're looking for.\n    if (typeof(value.message) === \"string\" && value.message.match(\"reverted\")) {\n        const data = isHexString(value.data) ? value.data: null;\n        if (!requireData || data) {\n            return { message: value.message, data };\n        }\n    }\n\n    // Spelunk further...\n    if (typeof(value) === \"object\") {\n        for (const key in value) {\n            const result = spelunk(value[key], requireData);\n            if (result) { return result; }\n        }\n        return null;\n    }\n\n    // Might be a JSON string we can further descend...\n    if (typeof(value) === \"string\") {\n        try {\n            return spelunk(JSON.parse(value), requireData);\n        } catch (error) { }\n    }\n\n    return null;\n}\n\nfunction checkError(method: string, error: any, params: any): any {\n\n    const transaction = params.transaction || params.signedTransaction;\n\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\") {\n        const result = spelunk(error, true);\n        if (result) { return result.data; }\n\n        // Nothing descriptive..\n        logger.throwError(\"missing revert data in call exception; Transaction reverted without a reason string\", Logger.errors.CALL_EXCEPTION, {\n            data: \"0x\", transaction, error\n        });\n    }\n\n    if (method === \"estimateGas\") {\n        // Try to find something, with a preference on SERVER_ERROR body\n        let result = spelunk(error.body, false);\n        if (result == null) { result = spelunk(error, false); }\n\n        // Found \"reverted\", this is a CALL_EXCEPTION\n        if (result) {\n            logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                reason: result.message, method, transaction, error\n            });\n        }\n    }\n\n    // @TODO: Should we spelunk for message too?\n\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof(error.error.message) === \"string\") {\n        message = error.error.message;\n    } else if (typeof(error.body) === \"string\") {\n        message = error.body;\n    } else if (typeof(error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds|base fee exceeds gas limit|InsufficientFunds/i)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n\n    // \"nonce too low\"\n    if (message.match(/nonce (is )?too low/i)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced|transaction gas price.*too low/i)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/only replay-protected/i)) {\n        logger.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            error, method, transaction\n        });\n    }\n\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted|revert/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nfunction timer(timeout: number): Promise<any> {\n    return new Promise(function(resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\n\nfunction getResult(payload: { error?: { code?: number, data?: any, message?: string }, result?: any }): any {\n    if (payload.error) {\n        // @TODO: not any\n        const error: any = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n\n    return payload.result;\n}\n\nfunction getLowerCase(value: string): string {\n    if (value) { return value.toLowerCase(); }\n    return value;\n}\n\nconst _constructorGuard = {};\n\nexport class JsonRpcSigner extends Signer implements TypedDataSigner {\n    readonly provider: JsonRpcProvider;\n    _index: number;\n    _address: string;\n\n    constructor(constructorGuard: any, provider: JsonRpcProvider, addressOrIndex?: string | number) {\n        super();\n\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n\n        defineReadOnly(this, \"provider\", provider);\n\n        if (addressOrIndex == null) { addressOrIndex = 0; }\n\n        if (typeof(addressOrIndex) === \"string\") {\n            defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n            defineReadOnly(this, \"_index\", null);\n\n        } else if (typeof(addressOrIndex) === \"number\") {\n            defineReadOnly(this, \"_index\", addressOrIndex);\n            defineReadOnly(this, \"_address\", null);\n\n        } else {\n            logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n    }\n\n    connect(provider: Provider): JsonRpcSigner {\n        return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    }\n\n    connectUnchecked(): JsonRpcSigner {\n        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n    }\n\n    getAddress(): Promise<string> {\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n\n        return this.provider.send(\"eth_accounts\", []).then((accounts) => {\n            if (accounts.length <= this._index) {\n                logger.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return this.provider.formatter.address(accounts[this._index])\n        });\n    }\n\n    sendUncheckedTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        transaction = shallowCopy(transaction);\n\n        const fromAddress = this.getAddress().then((address) => {\n            if (address) { address = address.toLowerCase(); }\n            return address;\n        });\n\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            const estimate = shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n\n        if (transaction.to != null) {\n            transaction.to = Promise.resolve(transaction.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.provider.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n        }\n\n        return resolveProperties({\n            tx: resolveProperties(transaction),\n            sender: fromAddress\n        }).then(({ tx, sender }) => {\n\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            } else {\n                tx.from = sender;\n            }\n\n            const hexTx = (<any>this.provider.constructor).hexlifyTransaction(tx, { from: true });\n\n            return this.provider.send(\"eth_sendTransaction\", [ hexTx ]).then((hash) => {\n                return hash;\n            }, (error) => {\n                if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                    logger.throwError(\"user rejected transaction\", Logger.errors.ACTION_REJECTED, {\n                        action: \"sendTransaction\",\n                        transaction: tx\n                    });\n                }\n\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    }\n\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        // This cannot be mined any earlier than any recent block\n        const blockNumber = await this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);\n\n        // Send the transaction\n        const hash = await this.sendUncheckedTransaction(transaction);\n\n        try {\n            // Unfortunately, JSON-RPC only provides and opaque transaction hash\n            // for a response, and we need the actual transaction, so we poll\n            // for it; it should show up very quickly\n            return await poll(async () => {\n                const tx = await this.provider.getTransaction(hash);\n                if (tx === null) { return undefined; }\n                return this.provider._wrapTransaction(tx, hash, blockNumber);\n            }, { oncePoll: this.provider });\n        } catch (error) {\n            (<any>error).transactionHash = hash;\n            throw error;\n        }\n    }\n\n    async signMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n        try {\n            return await this.provider.send(\"personal_sign\", [ hexlify(data), address.toLowerCase() ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"signMessage\",\n                    from: address,\n                    messageData: message\n                });\n            }\n            throw error;\n        }\n    }\n\n    async _legacySignMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n\n        try {\n            // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n            return await this.provider.send(\"eth_sign\", [ address.toLowerCase(), hexlify(data) ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"_legacySignMessage\",\n                    from: address,\n                    messageData: message\n                });\n            }\n            throw error;\n        }\n    }\n\n    async _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        // Populate any ENS names (in-place)\n        const populated = await _TypedDataEncoder.resolveNames(domain, types, value, (name: string) => {\n            return this.provider.resolveName(name);\n        });\n\n        const address = await this.getAddress();\n\n        try {\n            return await this.provider.send(\"eth_signTypedData_v4\", [\n                address.toLowerCase(),\n                JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n            ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"_signTypedData\",\n                    from: address,\n                    messageData: { domain: populated.domain, types, value: populated.value }\n                });\n            }\n            throw error;\n        }\n    }\n\n    async unlock(password: string): Promise<boolean> {\n        const provider = this.provider;\n\n        const address = await this.getAddress();\n\n        return provider.send(\"personal_unlockAccount\", [ address.toLowerCase(), password, null ]);\n    }\n}\n\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n    sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return <TransactionResponse>{\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: (confirmations?: number) => { return this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    }\n}\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true\n}\n\nexport class JsonRpcProvider extends BaseProvider {\n    readonly connection: ConnectionInfo;\n\n    _pendingFilter: Promise<number>;\n    _nextId: number;\n\n    // During any given event loop, the results for a given call will\n    // all be the same, so we can dedup the calls to save requests and\n    // bandwidth. @TODO: Try out generalizing this against send?\n    _eventLoopCache: Record<string, Promise<any>>;\n    get _cache(): Record<string, Promise<any>> {\n        if (this._eventLoopCache == null) {\n            this._eventLoopCache = { };\n        }\n        return this._eventLoopCache;\n    }\n\n    constructor(url?: ConnectionInfo | string, network?: Networkish) {\n        let networkOrReady: Networkish | Promise<Network> = network;\n\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then((network) => {\n                        resolve(network);\n                    }, (error) => {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Default URL\n        if (!url) { url = getStatic<() => string>(this.constructor, \"defaultUrl\")(); }\n\n        if (typeof(url) === \"string\") {\n            defineReadOnly(this, \"connection\",Object.freeze({\n                url: url\n            }));\n        } else {\n            defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n        }\n\n        this._nextId = 42;\n    }\n\n    static defaultUrl(): string {\n        return \"http:/\\/localhost:8545\";\n    }\n\n    detectNetwork(): Promise<Network> {\n        if (!this._cache[\"detectNetwork\"]) {\n            this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n\n            // Clear this cache at the beginning of the next event loop\n            setTimeout(() => {\n                this._cache[\"detectNetwork\"] = null;\n            }, 0);\n        }\n        return this._cache[\"detectNetwork\"];\n    }\n\n    async _uncachedDetectNetwork(): Promise<Network> {\n        await timer(0);\n\n        let chainId = null;\n        try {\n            chainId = await this.send(\"eth_chainId\", [ ]);\n        } catch (error) {\n            try {\n                chainId = await this.send(\"net_version\", [ ]);\n            } catch (error) { }\n        }\n\n        if (chainId != null) {\n            const getNetwork = getStatic<(network: Networkish) => Network>(this.constructor, \"getNetwork\");\n            try {\n                return getNetwork(BigNumber.from(chainId).toNumber());\n            } catch (error) {\n                return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                    chainId: chainId,\n                    event: \"invalidNetwork\",\n                    serverError: error\n                });\n            }\n        }\n\n        return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n            event: \"noNetwork\"\n        });\n    }\n\n    getSigner(addressOrIndex?: string | number): JsonRpcSigner {\n        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    }\n\n    getUncheckedSigner(addressOrIndex?: string | number): UncheckedJsonRpcSigner {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return this.send(\"eth_accounts\", []).then((accounts: Array<string>) => {\n            return accounts.map((a) => this.formatter.address(a));\n        });\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        // We can expand this in the future to any call, but for now these\n        // are the biggest wins and do not require any serializing parameters.\n        const cache = ([ \"eth_chainId\", \"eth_blockNumber\" ].indexOf(method) >= 0);\n        if (cache && this._cache[method]) {\n            return this._cache[method];\n        }\n\n        const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: this\n            });\n\n            return result;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: this\n            });\n\n            throw error;\n        });\n\n        // Cache the fetch, but clear it on the next event loop\n        if (cache) {\n            this._cache[method] = result;\n            setTimeout(() => {\n                this._cache[method] = null;\n            }, 0);\n        }\n\n        return result;\n    }\n\n    prepareRequest(method: string, params: any): [ string, Array<any> ] {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [ \"eth_blockNumber\", [] ];\n\n            case \"getGasPrice\":\n                return [ \"eth_gasPrice\", [] ];\n\n            case \"getBalance\":\n                return [ \"eth_getBalance\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getTransactionCount\":\n                return [ \"eth_getTransactionCount\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getCode\":\n                return [ \"eth_getCode\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getStorageAt\":\n                return [ \"eth_getStorageAt\", [ getLowerCase(params.address), hexZeroPad(params.position, 32), params.blockTag ] ];\n\n            case \"sendTransaction\":\n                return [ \"eth_sendRawTransaction\", [ params.signedTransaction ] ]\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [ \"eth_getBlockByNumber\", [ params.blockTag, !!params.includeTransactions ] ];\n                } else if (params.blockHash) {\n                    return [ \"eth_getBlockByHash\", [ params.blockHash, !!params.includeTransactions ] ];\n                }\n                return null;\n\n            case \"getTransaction\":\n                return [ \"eth_getTransactionByHash\", [ params.transactionHash ] ];\n\n            case \"getTransactionReceipt\":\n                return [ \"eth_getTransactionReceipt\", [ params.transactionHash ] ];\n\n            case \"call\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_call\", [ hexlifyTransaction(params.transaction, { from: true }), params.blockTag ] ];\n            }\n\n            case \"estimateGas\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_estimateGas\", [ hexlifyTransaction(params.transaction, { from: true }) ] ];\n            }\n\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [ \"eth_getLogs\", [ params.filter ] ];\n\n            default:\n                break;\n        }\n\n        return null;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // Legacy networks do not like the type field being passed along (which\n        // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n        if (method === \"call\" || method === \"estimateGas\") {\n            const tx = params.transaction;\n            if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n                // If there are no EIP-1559 properties, it might be non-EIP-1559\n                if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                    const feeData = await this.getFeeData();\n                    if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                        // Network doesn't know about EIP-1559 (and hence type)\n                        params = shallowCopy(params);\n                        params.transaction = shallowCopy(tx);\n                        delete params.transaction.type;\n                    }\n                }\n            }\n        }\n\n        const args = this.prepareRequest(method,  params);\n\n        if (args == null) {\n            logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n        }\n        try {\n            return await this.send(args[0], args[1])\n        } catch (error) {\n            return checkError(method, error, params);\n        }\n    }\n\n    _startEvent(event: Event): void {\n        if (event.tag === \"pending\") { this._startPending(); }\n        super._startEvent(event);\n    }\n\n    _startPending(): void {\n        if (this._pendingFilter != null) { return; }\n        const self = this;\n\n        const pendingFilter: Promise<number> = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n\n        pendingFilter.then(function(filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [ filterId ]).then(function(hashes: Array<string>) {\n                    if (self._pendingFilter != pendingFilter) { return null; }\n\n                    let seq = Promise.resolve();\n                    hashes.forEach(function(hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function() {\n                            return self.getTransaction(hash).then(function(tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n\n                    return seq.then(function() {\n                        return timer(1000);\n                    });\n                }).then(function() {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [ filterId ]);\n                        return;\n                    }\n                    setTimeout(function() { poll(); }, 0);\n\n                    return null;\n                }).catch((error: Error) => { });\n            }\n            poll();\n\n            return filterId;\n        }).catch((error: Error) => { });\n    }\n\n    _stopEvent(event: Event): void {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        super._stopEvent(event);\n    }\n\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    static hexlifyTransaction(transaction: TransactionRequest, allowExtra?: { [key: string]: boolean }): { [key: string]: string | AccessList } {\n        // Check only allowed properties are given\n        const allowed = shallowCopy(allowedTransactionKeys);\n        if (allowExtra) {\n            for (const key in allowExtra) {\n                if (allowExtra[key]) { allowed[key] = true; }\n            }\n        }\n\n        checkProperties(transaction, allowed);\n\n        const result: { [key: string]: string | AccessList } = {};\n\n        // JSON-RPC now requires numeric values to be \"quantity\" values\n        [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            const value = hexValue(BigNumber.from((<any>transaction)[key]));\n            if (key === \"gasLimit\") { key = \"gas\"; }\n            result[key] = value;\n        });\n\n        [\"from\", \"to\", \"data\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            result[key] = hexlify((<any>transaction)[key]);\n        });\n\n        if ((<any>transaction).accessList) {\n            result[\"accessList\"] = accessListify((<any>transaction).accessList);\n        }\n\n        return result;\n    }\n}\n","export const version = \"strings/5.7.0\";\n","\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n\nexport enum UnicodeNormalizationForm {\n    current  = \"\",\n    NFC      = \"NFC\",\n    NFD      = \"NFD\",\n    NFKC     = \"NFKC\",\n    NFKD     = \"NFKD\"\n};\n\nexport enum Utf8ErrorReason {\n    // A continuation byte was present where there was nothing to continue\n    // - offset = the index the codepoint began in\n    UNEXPECTED_CONTINUE   = \"unexpected continuation byte\",\n\n    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n    // - offset = the index the codepoint began in\n    BAD_PREFIX            = \"bad codepoint prefix\",\n\n    // The string is too short to process the expected codepoint\n    // - offset = the index the codepoint began in\n    OVERRUN               = \"string overrun\",\n\n    // A missing continuation byte was expected but not found\n    // - offset = the index the continuation byte was expected at\n    MISSING_CONTINUE      = \"missing continuation byte\",\n\n    // The computed code point is outside the range for UTF-8\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; outside the UTF-8 range\n    OUT_OF_RANGE          = \"out of UTF-8 range\",\n\n    // UTF-8 strings may not contain UTF-16 surrogate pairs\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n    UTF16_SURROGATE       = \"UTF-16 surrogate\",\n\n    // The string is an overlong representation\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; already bounds checked\n    OVERLONG              = \"overlong representation\",\n};\n\n\nexport type Utf8ErrorFunc = (reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number) => number;\n\nfunction errorFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n    return logger.throwArgumentError(`invalid codepoint at offset ${ offset }; ${ reason }`, \"bytes\", bytes);\n}\n\nfunction ignoreFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) { break; }\n            i++;\n        }\n        return i;\n    }\n\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === Utf8ErrorReason.OVERRUN) {\n        return bytes.length - offset - 1;\n    }\n\n    // Nothing to skip\n    return 0;\n}\n\nfunction replaceFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === Utf8ErrorReason.OVERLONG) {\n        output.push(badCodepoint);\n        return 0;\n    }\n\n    // Put the replacement character into the output\n    output.push(0xfffd);\n\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n\n// Common error handing strategies\nexport const Utf8ErrorFuncs: { [ name: string ]: Utf8ErrorFunc } = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes: BytesLike, onError?: Utf8ErrorFunc): Array<number> {\n    if (onError == null) { onError = Utf8ErrorFuncs.error; }\n\n    bytes = arrayify(bytes);\n\n    const result: Array<number> = [];\n    let i = 0;\n\n    // Invalid bytes are ignored\n    while(i < bytes.length) {\n\n        const c = bytes[i++];\n\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n\n        // 1110 xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n\n        // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n\n        } else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n            } else {\n                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n            }\n            continue;\n        }\n\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n            continue;\n        }\n\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n                res = null;\n                break;\n            };\n\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n\n        // See above loop for invalid continuation byte\n        if (res === null) { continue; }\n\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        result.push(res);\n    }\n\n    return result;\n}\n\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nexport function toUtf8Bytes(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Uint8Array {\n\n    if (form != UnicodeNormalizationForm.current) {\n        logger.checkNormalize();\n        str = str.normalize(form);\n    }\n\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n\n        if (c < 0x80) {\n            result.push(c);\n\n        } else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n\n        } else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n\n        } else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n\n    return arrayify(result);\n};\n\nfunction escapeChar(value: number) {\n    const hex = (\"0000\" + value.toString(16));\n    return \"\\\\u\" + hex.substring(hex.length - 4);\n}\n\nexport function _toEscapedUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return '\"' + getUtf8CodePoints(bytes, onError).map((codePoint) => {\n        if (codePoint < 256) {\n            switch (codePoint) {\n                case 8:  return \"\\\\b\";\n                case 9:  return \"\\\\t\";\n                case 10: return \"\\\\n\"\n                case 13: return \"\\\\r\";\n                case 34: return \"\\\\\\\"\";\n                case 92: return \"\\\\\\\\\";\n            }\n\n            if (codePoint >= 32 && codePoint < 127) {\n                return String.fromCharCode(codePoint);\n            }\n        }\n\n        if (codePoint <= 0xffff) {\n            return escapeChar(codePoint);\n        }\n\n        codePoint -= 0x10000;\n        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n    }).join(\"\") + '\"';\n}\n\nexport function _toUtf8String(codePoints: Array<number>): string {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode(\n            (((codePoint >> 10) & 0x3ff) + 0xd800),\n            ((codePoint & 0x3ff) + 0xdc00)\n        );\n    }).join(\"\");\n}\n\nexport function toUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n\nexport function toUtf8CodePoints(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Array<number> {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n","\"use strict\";\n\nimport { arrayify } from \"@ethersproject/bytes\";\n\nimport type { GetUrlResponse, Options } from \"./types\";\n\nexport { GetUrlResponse, Options };\n\nexport async function getUrl(href: string, options?: Options): Promise<GetUrlResponse> {\n    if (options == null) { options = { }; }\n\n    const request: RequestInit = {\n        method: (options.method || \"GET\"),\n        headers: (options.headers || { }),\n        body: (options.body || undefined),\n    };\n\n    if (options.skipFetchSetup !== true) {\n        request.mode = <RequestMode>\"cors\";              // no-cors, cors, *same-origin\n        request.cache = <RequestCache>\"no-cache\";        // *default, no-cache, reload, force-cache, only-if-cached\n        request.credentials = <RequestCredentials>\"same-origin\";  // include, *same-origin, omit\n        request.redirect = <RequestRedirect>\"follow\";    // manual, *follow, error\n        request.referrer = \"client\";                     // no-referrer, *client\n    };\n\n    if (options.fetchOptions != null) {\n        const opts = options.fetchOptions;\n        if (opts.mode) { request.mode = <RequestMode>(opts.mode); }\n        if (opts.cache) { request.cache = <RequestCache>(opts.cache); }\n        if (opts.credentials) { request.credentials = <RequestCredentials>(opts.credentials); }\n        if (opts.redirect) { request.redirect = <RequestRedirect>(opts.redirect); }\n        if (opts.referrer) { request.referrer = opts.referrer; }\n    }\n\n    const response = await fetch(href, request);\n    const body = await response.arrayBuffer();\n\n    const headers: { [ name: string ]: string } = { };\n    if (response.headers.forEach) {\n        response.headers.forEach((value, key) => {\n            headers[key.toLowerCase()] = value;\n        });\n    } else {\n        (<() => Array<string>>((<any>(response.headers)).keys))().forEach((key) => {\n            headers[key.toLowerCase()] = response.headers.get(key);\n        });\n    }\n\n    return {\n        headers: headers,\n        statusCode: response.status,\n        statusMessage: response.statusText,\n        body: arrayify(new Uint8Array(body)),\n    }\n}\n","\"use strict\";\n\nimport { decode as base64Decode, encode as base64Encode } from \"@ethersproject/base64\";\nimport { hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { getUrl, GetUrlResponse, Options } from \"./geturl\";\n\nfunction staller(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\nfunction bodyify(value: any, type: string): string {\n    if (value == null) { return null; }\n\n    if (typeof(value) === \"string\") { return value; }\n\n    if (isBytesLike(value)) {\n        if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n            try {\n                return toUtf8String(value);\n            } catch (error) { };\n        }\n        return hexlify(value);\n    }\n\n    return value;\n}\n\n// Exported Types\nexport type ConnectionInfo = {\n    url: string,\n    headers?: { [key: string]: string | number }\n\n    user?: string,\n    password?: string,\n\n    allowInsecureAuthentication?: boolean,\n    allowGzip?: boolean,\n\n    throttleLimit?: number,\n    throttleSlotInterval?: number;\n    throttleCallback?: (attempt: number, url: string) => Promise<boolean>,\n\n    skipFetchSetup?: boolean;\n    fetchOptions?: Record<string, string>;\n    errorPassThrough?: boolean;\n\n    timeout?: number,\n};\n\nexport interface OnceBlockable {\n    once(eventName: \"block\", handler: () => void): void;\n}\n\nexport interface OncePollable {\n    once(eventName: \"poll\", handler: () => void): void;\n}\n\nexport type PollOptions = {\n    timeout?: number,\n    floor?: number,\n    ceiling?: number,\n    interval?: number,\n    retryLimit?: number,\n    onceBlock?: OnceBlockable\n    oncePoll?: OncePollable\n};\n\nexport type FetchJsonResponse = {\n    statusCode: number;\n    headers: { [ header: string ]: string };\n};\n\n\ntype Header = { key: string, value: string };\n\nfunction unpercent(value: string): Uint8Array {\n    return toUtf8Bytes(value.replace(/%([0-9a-f][0-9a-f])/gi, (all, code) => {\n        return String.fromCharCode(parseInt(code, 16));\n    }));\n}\n\n// This API is still a work in progress; the future changes will likely be:\n// - ConnectionInfo => FetchDataRequest<T = any>\n// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }\n//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)\n// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T\n// For this reason, it should be considered internal until the API is finalized\nexport function _fetchData<T = Uint8Array>(connection: string | ConnectionInfo, body?: Uint8Array, processFunc?: (value: Uint8Array, response: FetchJsonResponse) => T): Promise<T> {\n\n    // How many times to retry in the event of a throttle\n    const attemptLimit = (typeof(connection) === \"object\" && connection.throttleLimit != null) ? connection.throttleLimit: 12;\n    logger.assertArgument((attemptLimit > 0 && (attemptLimit % 1) === 0),\n        \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n\n    const throttleCallback = ((typeof(connection) === \"object\") ? connection.throttleCallback: null);\n    const throttleSlotInterval = ((typeof(connection) === \"object\" && typeof(connection.throttleSlotInterval) === \"number\") ? connection.throttleSlotInterval: 100);\n    logger.assertArgument((throttleSlotInterval > 0 && (throttleSlotInterval % 1) === 0),\n        \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n\n    const errorPassThrough = ((typeof(connection) === \"object\") ? !!(connection.errorPassThrough): false);\n\n    const headers: { [key: string]: Header } = { };\n\n    let url: string = null;\n\n    // @TODO: Allow ConnectionInfo to override some of these values\n    const options: Options = {\n        method: \"GET\",\n    };\n\n    let allow304 = false;\n\n    let timeout = 2 * 60 * 1000;\n\n    if (typeof(connection) === \"string\") {\n        url = connection;\n\n    } else if (typeof(connection) === \"object\") {\n        if (connection == null || connection.url == null) {\n            logger.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n        }\n\n        url = connection.url;\n\n        if (typeof(connection.timeout) === \"number\" && connection.timeout > 0) {\n            timeout = connection.timeout;\n        }\n\n        if (connection.headers) {\n            for (const key in connection.headers) {\n                headers[key.toLowerCase()] = { key: key, value: String(connection.headers[key]) };\n                if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n                    allow304 = true;\n                }\n            }\n        }\n\n        options.allowGzip = !!connection.allowGzip;\n\n        if (connection.user != null && connection.password != null) {\n            if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n                logger.throwError(\n                    \"basic authentication requires a secure https url\",\n                    Logger.errors.INVALID_ARGUMENT,\n                    { argument: \"url\", url: url, user: connection.user, password: \"[REDACTED]\" }\n                );\n            }\n\n            const authorization = connection.user + \":\" + connection.password;\n            headers[\"authorization\"] = {\n                key: \"Authorization\",\n                value: \"Basic \" + base64Encode(toUtf8Bytes(authorization))\n            };\n        }\n\n        if (connection.skipFetchSetup != null) {\n            options.skipFetchSetup = !!connection.skipFetchSetup;\n        }\n\n        if (connection.fetchOptions != null) {\n            options.fetchOptions = shallowCopy(connection.fetchOptions);\n        }\n    }\n\n    const reData = new RegExp(\"^data:([^;:]*)?(;base64)?,(.*)$\", \"i\");\n    const dataMatch = ((url) ? url.match(reData): null);\n    if (dataMatch) {\n        try {\n            const response = {\n                statusCode: 200,\n                statusMessage: \"OK\",\n                headers: { \"content-type\": (dataMatch[1] || \"text/plain\")},\n                body: (dataMatch[2] ? base64Decode(dataMatch[3]): unpercent(dataMatch[3]))\n            };\n\n            let result: T = <T><unknown>response.body;\n            if (processFunc) {\n                result = processFunc(response.body, response);\n            }\n            return Promise.resolve(<T><unknown>result);\n\n        } catch (error) {\n            logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                body: bodyify(dataMatch[1], dataMatch[2]),\n                error: error,\n                requestBody: null,\n                requestMethod: \"GET\",\n                url: url\n            });\n        }\n    }\n\n    if (body) {\n        options.method = \"POST\";\n        options.body = body;\n        if (headers[\"content-type\"] == null) {\n            headers[\"content-type\"] = { key: \"Content-Type\", value: \"application/octet-stream\" };\n        }\n        if (headers[\"content-length\"] == null) {\n            headers[\"content-length\"] = { key: \"Content-Length\", value: String(body.length) };\n        }\n    }\n\n    const flatHeaders: { [ key: string ]: string } = { };\n    Object.keys(headers).forEach((key) => {\n        const header = headers[key];\n        flatHeaders[header.key] = header.value;\n    });\n    options.headers = flatHeaders;\n\n    const runningTimeout = (function() {\n        let timer: NodeJS.Timer = null;\n        const promise: Promise<never> = new Promise(function(resolve, reject) {\n            if (timeout) {\n                timer = setTimeout(() => {\n                    if (timer == null) { return; }\n                    timer = null;\n\n                    reject(logger.makeError(\"timeout\", Logger.errors.TIMEOUT, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        timeout: timeout,\n                        url: url\n                    }));\n                }, timeout);\n            }\n        });\n\n        const cancel = function() {\n            if (timer == null) { return; }\n            clearTimeout(timer);\n            timer = null;\n        }\n\n        return { promise, cancel };\n    })();\n\n    const runningFetch = (async function() {\n\n        for (let attempt = 0; attempt < attemptLimit; attempt++) {\n            let response: GetUrlResponse = null;\n\n            try {\n                response = await getUrl(url, options);\n\n                if (attempt < attemptLimit) {\n                    if (response.statusCode === 301 || response.statusCode === 302) {\n                        // Redirection; for now we only support absolute locataions\n                        const location = response.headers.location || \"\";\n                        if (options.method === \"GET\" && location.match(/^https:/)) {\n                            url = response.headers.location;\n                            continue;\n                        }\n\n                    } else if (response.statusCode === 429) {\n                        // Exponential back-off throttling\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = await throttleCallback(attempt, url);\n                        }\n\n                        if (tryAgain) {\n                            let stall = 0;\n\n                            const retryAfter = response.headers[\"retry-after\"];\n                            if (typeof(retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                                stall = parseInt(retryAfter) * 1000;\n                            } else {\n                                stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            }\n\n                            //console.log(\"Stalling 429\");\n                            await staller(stall);\n                            continue;\n                        }\n                    }\n                }\n\n            } catch (error) {\n                response = (<any>error).response;\n                if (response == null) {\n                    runningTimeout.cancel();\n                    logger.throwError(\"missing response\", Logger.errors.SERVER_ERROR, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        serverError: error,\n                        url: url\n                    });\n                }\n            }\n\n\n            let body = response.body;\n\n            if (allow304 && response.statusCode === 304) {\n                body = null;\n            } else if (!errorPassThrough && (response.statusCode < 200 || response.statusCode >= 300)) {\n                runningTimeout.cancel();\n                logger.throwError(\"bad response\", Logger.errors.SERVER_ERROR, {\n                    status: response.statusCode,\n                    headers: response.headers,\n                    body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"]: null)),\n                    requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                    requestMethod: options.method,\n                    url: url\n                });\n            }\n\n            if (processFunc) {\n                try {\n                    const result = await processFunc(body, response);\n                    runningTimeout.cancel();\n                    return result;\n\n                } catch (error) {\n                    // Allow the processFunc to trigger a throttle\n                    if (error.throttleRetry && attempt < attemptLimit) {\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = await throttleCallback(attempt, url);\n                        }\n\n                        if (tryAgain) {\n                            const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            //console.log(\"Stalling callback\");\n                            await staller(timeout);\n                            continue;\n                        }\n                    }\n\n                    runningTimeout.cancel();\n                    logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                        body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"]: null)),\n                        error: error,\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        url: url\n                    });\n                }\n            }\n\n            runningTimeout.cancel();\n\n            // If we had a processFunc, it either returned a T or threw above.\n            // The \"body\" is now a Uint8Array.\n            return <T>(<unknown>body);\n        }\n\n        return logger.throwError(\"failed response\", Logger.errors.SERVER_ERROR, {\n            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n            requestMethod: options.method,\n            url: url\n        });\n    })();\n\n    return Promise.race([ runningTimeout.promise, runningFetch ]);\n}\n\nexport function fetchJson(connection: string | ConnectionInfo, json?: string, processFunc?: (value: any, response: FetchJsonResponse) => any): Promise<any> {\n    let processJsonFunc = (value: Uint8Array, response: FetchJsonResponse) => {\n        let result: any = null;\n        if (value != null) {\n            try {\n                result = JSON.parse(toUtf8String(value));\n            } catch (error) {\n                logger.throwError(\"invalid JSON\", Logger.errors.SERVER_ERROR, {\n                    body: value,\n                    error: error\n                });\n            }\n        }\n\n        if (processFunc) {\n            result = processFunc(result, response);\n        }\n\n        return result;\n    }\n\n    // If we have json to send, we must\n    // - add content-type of application/json (unless already overridden)\n    // - convert the json to bytes\n    let body: Uint8Array = null;\n    if (json != null) {\n        body = toUtf8Bytes(json);\n\n        // Create a connection with the content-type set for JSON\n        const updated: ConnectionInfo = (typeof(connection) === \"string\") ? ({ url: connection }): shallowCopy(connection);\n        if (updated.headers) {\n            const hasContentType = (Object.keys(updated.headers).filter((k) => (k.toLowerCase() === \"content-type\")).length) !== 0;\n            if (!hasContentType) {\n                updated.headers = shallowCopy(updated.headers);\n                updated.headers[\"content-type\"] = \"application/json\";\n            }\n        } else {\n            updated.headers = { \"content-type\": \"application/json\" };\n        }\n        connection = updated;\n    }\n\n    return _fetchData<any>(connection, body, processJsonFunc);\n}\n\nexport function poll<T>(func: () => Promise<T>, options?: PollOptions): Promise<T> {\n    if (!options) { options = {}; }\n    options = shallowCopy(options);\n    if (options.floor == null) { options.floor = 0; }\n    if (options.ceiling == null) { options.ceiling = 10000; }\n    if (options.interval == null) { options.interval = 250; }\n\n    return new Promise(function(resolve, reject) {\n\n        let timer: NodeJS.Timer = null;\n        let done: boolean = false;\n\n        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n        const cancel = (): boolean => {\n            if (done) { return false; }\n            done = true;\n            if (timer) { clearTimeout(timer); }\n            return true;\n        };\n\n        if (options.timeout) {\n            timer = setTimeout(() => {\n                if (cancel()) { reject(new Error(\"timeout\")); }\n            }, options.timeout)\n        }\n\n        const retryLimit = options.retryLimit;\n\n        let attempt = 0;\n        function check() {\n            return func().then(function(result) {\n\n                // If we have a result, or are allowed null then we're done\n                if (result !== undefined) {\n                    if (cancel()) { resolve(result); }\n\n                } else if (options.oncePoll) {\n                    options.oncePoll.once(\"poll\", check);\n\n                } else if (options.onceBlock) {\n                    options.onceBlock.once(\"block\", check);\n\n                // Otherwise, exponential back-off (up to 10s) our next request\n                } else if (!done) {\n                    attempt++;\n                    if (attempt > retryLimit) {\n                        if (cancel()) { reject(new Error(\"retry limit reached\")); }\n                        return;\n                    }\n\n                    let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                    if (timeout < options.floor) { timeout = options.floor; }\n                    if (timeout > options.ceiling) { timeout = options.ceiling; }\n\n                    setTimeout(check, timeout);\n                }\n\n                return null;\n            }, function(error) {\n                if (cancel()) { reject(error); }\n            });\n        }\n        check();\n    });\n}\n\n","export const version = \"web/5.7.1\";\n","import { JsonRpcRequest, JsonRpcResponse } from './internal-types';\n\n/** Maximum size of a batch on the rpc provider. */\nconst DEFAULT_MAX_REQUEST_BATCH_SIZE = 100;\n\n/** Timeout interval before the pending batch is sent. */\nconst DEFAULT_REQUEST_BATCH_DELAY_MS = 10;\n\n/**\n * Internal class to enqueue requests and automatically send/process batches.\n *\n * The underlying batching mechanism is loosely based on ethers.js's\n * `JsonRpcBatchProvider`.\n *\n * @internal\n */\nexport class RequestBatcher {\n  /** Timeout timer that periodically sends the pending batch. */\n  private pendingBatchTimer: NodeJS.Timer | undefined;\n\n  /**\n   * Array of enqueued requests along with the constructed promise handlers for\n   * each request.\n   */\n  private pendingBatch: Array<BatchRequest> = [];\n\n  constructor(\n    private readonly sendBatchFn: SendBatchFn,\n    private readonly maxBatchSize = DEFAULT_MAX_REQUEST_BATCH_SIZE\n  ) {}\n\n  /**\n   * Enqueues the provided request. The batch is immediately sent if the maximum\n   * batch size is reached. Otherwise, the request is enqueued onto a batch that\n   * is sent after 10ms.\n   *\n   * Returns a promise that resolves with the result of the request.\n   */\n  async enqueueRequest(request: JsonRpcRequest): Promise<any> {\n    const inflightRequest: BatchRequest = {\n      request,\n      resolve: undefined,\n      reject: undefined\n    };\n\n    const promise = new Promise((resolve, reject) => {\n      inflightRequest.resolve = resolve;\n      inflightRequest.reject = reject;\n    });\n\n    this.pendingBatch.push(inflightRequest);\n\n    if (this.pendingBatch.length === this.maxBatchSize) {\n      // Send batch immediately if we are at the maximum batch size.\n      void this.sendBatchRequest();\n    } else if (!this.pendingBatchTimer) {\n      // Schedule batch for next event loop + short duration\n      this.pendingBatchTimer = setTimeout(\n        () => this.sendBatchRequest(),\n        DEFAULT_REQUEST_BATCH_DELAY_MS\n      );\n    }\n\n    return promise;\n  }\n\n  /**\n   * Sends the currently queued batches and resets the batch and timer. Processes\n   * the batched response results back to the original promises.\n   */\n  private async sendBatchRequest(): Promise<void> {\n    // Get the current batch and clear it, so new requests\n    // go into the next batch\n    const batch = this.pendingBatch;\n    this.pendingBatch = [];\n    if (this.pendingBatchTimer) {\n      clearTimeout(this.pendingBatchTimer);\n      this.pendingBatchTimer = undefined;\n    }\n\n    // Get the request as an array of requests\n    const request = batch.map(inflight => inflight.request);\n\n    return this.sendBatchFn(request).then(\n      result => {\n        // For each result, feed it to the correct Promise, depending\n        // on whether it was a success or error\n        batch.forEach((inflightRequest, index) => {\n          const payload = result[index];\n          if (payload.error) {\n            const error = new Error(payload.error.message);\n            (error as any).code = payload.error.code;\n            (error as any).data = payload.error.data;\n            inflightRequest.reject!(error);\n          } else {\n            inflightRequest.resolve!(payload.result);\n          }\n        });\n      },\n      error => {\n        batch.forEach(inflightRequest => {\n          inflightRequest.reject!(error);\n        });\n      }\n    );\n  }\n}\n\n/** Function type to match the `fetchJson` function in ethers. */\ntype SendBatchFn = (reqs: JsonRpcRequest[]) => Promise<JsonRpcResponse[]>;\n\n/**\n * Internal interface to represent a request on a batch along with the promises to resolve it.\n */\ninterface BatchRequest {\n  request: JsonRpcRequest;\n  resolve?: (result: any) => void;\n  reject?: (error: Error) => void;\n}\n","import {\n  Network as NetworkFromEthers,\n  Networkish,\n  getNetwork as getNetworkFromEthers\n} from '@ethersproject/networks';\nimport { deepCopy } from '@ethersproject/properties';\nimport {\n  CommunityResourcable,\n  JsonRpcProvider\n} from '@ethersproject/providers';\nimport { ConnectionInfo, fetchJson } from '@ethersproject/web';\n\nimport { JsonRpcRequest, JsonRpcResponse } from '../internal/internal-types';\nimport { RequestBatcher } from '../internal/request-batcher';\nimport { Network } from '../types/types';\nimport {\n  CustomNetworks,\n  DEFAULT_ALCHEMY_API_KEY,\n  DEFAULT_NETWORK,\n  EthersNetwork,\n  getAlchemyHttpUrl,\n  getAlchemyWsUrl\n} from '../util/const';\nimport { logWarn } from '../util/logger';\nimport { IS_BROWSER } from '../util/util';\nimport { VERSION } from '../version';\nimport { AlchemyConfig } from './alchemy-config';\n\n/**\n * SDK's custom implementation of ethers.js's 'AlchemyProvider'.\n *\n * Do not call this constructor directly. Instead, instantiate an instance of\n * {@link Alchemy} and call {@link Alchemy.config.getProvider()}.\n *\n * @public\n */\nexport class AlchemyProvider\n  extends JsonRpcProvider\n  implements CommunityResourcable\n{\n  readonly apiKey: string;\n  readonly maxRetries: number;\n  readonly batchRequests: boolean;\n\n  /**\n   * VISIBLE ONLY FOR TESTING\n   *@internal\n   */\n  readonly batcher: RequestBatcher;\n\n  /** @internal */\n  constructor(config: AlchemyConfig) {\n    // Normalize the API Key to a string.\n    const apiKey = AlchemyProvider.getApiKey(config.apiKey);\n\n    // Generate our own connection info with the correct endpoint URLs.\n    const alchemyNetwork = AlchemyProvider.getAlchemyNetwork(config.network);\n    const connection = AlchemyProvider.getAlchemyConnectionInfo(\n      alchemyNetwork,\n      apiKey,\n      'http'\n    );\n\n    // If a hardcoded url was specified in the config, use that instead of the\n    // provided apiKey or network.\n    if (config.url !== undefined) {\n      connection.url = config.url;\n    }\n\n    connection.throttleLimit = config.maxRetries;\n\n    // Normalize the Alchemy named network input to the network names used by\n    // ethers. This allows the parent super constructor in JsonRpcProvider to\n    // correctly set the network.\n    const ethersNetwork = EthersNetwork[alchemyNetwork];\n    super(connection, ethersNetwork);\n\n    this.apiKey = config.apiKey;\n    this.maxRetries = config.maxRetries;\n    this.batchRequests = config.batchRequests;\n\n    // TODO: support individual headers when calling batch\n    const batcherConnection = {\n      ...this.connection,\n      headers: {\n        ...this.connection.headers,\n        'Alchemy-Ethers-Sdk-Method': 'batchSend'\n      }\n    };\n    const sendBatchFn = (\n      requests: JsonRpcRequest[]\n    ): Promise<JsonRpcResponse[]> => {\n      return fetchJson(batcherConnection, JSON.stringify(requests));\n    };\n    this.batcher = new RequestBatcher(sendBatchFn);\n\n    this.modifyFormatter();\n  }\n\n  /**\n   * Overrides the `UrlJsonRpcProvider.getApiKey` method as implemented by\n   * ethers.js. Returns the API key for an Alchemy provider.\n   *\n   * @internal\n   * @override\n   */\n  static getApiKey(apiKey: any): string {\n    if (apiKey == null) {\n      return DEFAULT_ALCHEMY_API_KEY;\n    }\n    if (apiKey && typeof apiKey !== 'string') {\n      throw new Error(\n        `Invalid apiKey '${apiKey}' provided. apiKey must be a string.`\n      );\n    }\n    return apiKey;\n  }\n\n  /**\n   * Overrides the `BaseProvider.getNetwork` method as implemented by ethers.js.\n   *\n   * This override allows the SDK to set the provider's network to values not\n   * yet supported by ethers.js.\n   *\n   * @internal\n   * @override\n   */\n  static getNetwork(network: Networkish): NetworkFromEthers {\n    if (typeof network === 'string' && network in CustomNetworks) {\n      return CustomNetworks[network];\n    }\n\n    // Call the standard ethers.js getNetwork method for other networks.\n    return getNetworkFromEthers(network);\n  }\n\n  /**\n   * Converts the `Networkish` input to the network enum used by Alchemy.\n   *\n   * @internal\n   */\n  static getAlchemyNetwork(network?: Networkish): Network {\n    if (network === undefined) {\n      return DEFAULT_NETWORK;\n    }\n\n    if (typeof network === 'number') {\n      throw new Error(\n        `Invalid network '${network}' provided. Network must be a string.`\n      );\n    }\n\n    // Guaranteed that `typeof network === 'string`.\n    const isValidNetwork = Object.values(Network).includes(network as Network);\n    if (!isValidNetwork) {\n      throw new Error(\n        `Invalid network '${network}' provided. Network must be one of: ` +\n          `${Object.values(Network).join(', ')}.`\n      );\n    }\n    return network as Network;\n  }\n\n  /**\n   * Returns a {@link ConnectionInfo} object compatible with ethers that contains\n   * the correct URLs for Alchemy.\n   *\n   * @internal\n   */\n  static getAlchemyConnectionInfo(\n    network: Network,\n    apiKey: string,\n    type: 'wss' | 'http'\n  ): ConnectionInfo {\n    const url =\n      type === 'http'\n        ? getAlchemyHttpUrl(network, apiKey)\n        : getAlchemyWsUrl(network, apiKey);\n    return {\n      headers: IS_BROWSER\n        ? {\n            'Alchemy-Ethers-Sdk-Version': VERSION\n          }\n        : {\n            'Alchemy-Ethers-Sdk-Version': VERSION,\n            'Accept-Encoding': 'gzip'\n          },\n      allowGzip: true,\n      url\n    };\n  }\n\n  /**\n   * Overrides the method in ethers.js's `StaticJsonRpcProvider` class. This\n   * method is called when calling methods on the parent class `BaseProvider`.\n   *\n   * @override\n   */\n  async detectNetwork(): Promise<NetworkFromEthers> {\n    let network = this.network;\n    if (network == null) {\n      network = await super.detectNetwork();\n\n      if (!network) {\n        throw new Error('No network detected');\n      }\n    }\n    return network;\n  }\n\n  _startPending(): void {\n    logWarn('WARNING: Alchemy Provider does not support pending filters');\n  }\n\n  /**\n   * Overrides the ether's `isCommunityResource()` method. Returns true if the\n   * current api key is the default key.\n   *\n   * @override\n   */\n  isCommunityResource(): boolean {\n    return this.apiKey === DEFAULT_ALCHEMY_API_KEY;\n  }\n\n  /**\n   * Overrides the base {@link JsonRpcProvider.send} method to implement custom\n   * logic for sending requests to Alchemy.\n   *\n   * @param method The method name to use for the request.\n   * @param params The parameters to use for the request.\n   * @override\n   * @public\n   */\n  // TODO: Add headers for `perform()` override.\n  send(method: string, params: Array<any>): Promise<any> {\n    return this._send(method, params, 'send');\n  }\n\n  /**\n   * DO NOT MODIFY.\n   *\n   * Original code copied over from ether.js's `JsonRpcProvider.send()`.\n   *\n   * This method is copied over directly in order to implement custom headers\n   *\n   * @internal\n   */\n  _send(\n    method: string,\n    params: Array<any>,\n    methodName: string,\n    forceBatch = false\n  ): Promise<any> {\n    const request = {\n      method,\n      params,\n      id: this._nextId++,\n      jsonrpc: '2.0'\n    };\n\n    // START MODIFIED CODE\n    const connection = { ...this.connection };\n    connection.headers!['Alchemy-Ethers-Sdk-Method'] = methodName;\n\n    if (this.batchRequests || forceBatch) {\n      return this.batcher.enqueueRequest(request as JsonRpcRequest);\n    }\n    // END MODIFIED CODE\n\n    this.emit('debug', {\n      action: 'request',\n      request: deepCopy(request),\n      provider: this\n    });\n\n    // We can expand this in the future to any call, but for now these\n    // are the biggest wins and do not require any serializing parameters.\n    const cache = ['eth_chainId', 'eth_blockNumber'].indexOf(method) >= 0;\n    if (cache && this._cache[method]) {\n      return this._cache[method];\n    }\n\n    const result = fetchJson(\n      this.connection,\n      JSON.stringify(request),\n      getResult\n    ).then(\n      result => {\n        this.emit('debug', {\n          action: 'response',\n          request,\n          response: result,\n          provider: this\n        });\n\n        return result;\n      },\n      error => {\n        this.emit('debug', {\n          action: 'response',\n          error,\n          request,\n          provider: this\n        });\n\n        throw error;\n      }\n    );\n\n    // Cache the fetch, but clear it on the next event loop\n    if (cache) {\n      this._cache[method] = result;\n      setTimeout(() => {\n        // @ts-ignore - This is done by ethers.\n        this._cache[method] = null;\n      }, 0);\n    }\n\n    return result;\n  }\n\n  /**\n   * Overrides the base `Formatter` class inherited from ethers to support\n   * returning custom fields in Ethers response types.\n   *\n   * For context, ethers has a `Formatter` class that is used to format the\n   * response from a JSON-RPC request. Any fields that are not defined in the\n   * `Formatter` class are removed from the returned response. By modifying the\n   * `Formatter` class in this method, we can add support for fields that are\n   * not defined in ethers.\n   */\n  private modifyFormatter(): void {\n    this.formatter.formats['receiptLog']['removed'] = val => {\n      if (typeof val === 'boolean') {\n        return val;\n      }\n      return undefined;\n    };\n  }\n}\n\n/**\n * DO NOT MODIFY.\n *\n * Original code copied over from ether.js's\n * `@ethersproject/web/src.ts/index.ts`. Used to support\n * {@link AlchemyProvider._send}, which is also copied over.\n */\nfunction getResult(payload: {\n  error?: { code?: number; data?: any; message?: string };\n  result?: any;\n}): any {\n  if (payload.error) {\n    const error: any = new Error(payload.error.message);\n    error.code = payload.error.code;\n    error.data = payload.error.data;\n    throw error;\n  }\n\n  return payload.result;\n}\n","'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') return chk\n\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n}\n\nfunction decode (str) {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nmodule.exports = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode,\n  encode: encode,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n}\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n  };\n\n  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n  };\n\n  var createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n  };\n\n  var createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n\n  var createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n      if (!n && !s) {\n        return methods['shake' + bits].create(outputBits);\n      } else {\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n      }\n    };\n    method.update = function (message, outputBits, n, s) {\n      return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n\n  var createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n      return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n\n  var algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n  ];\n\n  var methods = {}, methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      if (algorithm.name !== 'sha3') {\n        var newMethodName = algorithm.name + bits[j];\n        methodNames.push(newMethodName);\n        methods[newMethodName] = methods[methodName];\n      }\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n    return this;\n  };\n\n  Keccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n      bytes.unshift(o);\n      x = x >> 8;\n      o = x & 255;\n      ++n;\n    }\n    if (right) {\n      bytes.push(n);\n    } else {\n      bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n  };\n\n  Keccak.prototype.encodeString = function (str) {\n    var notString, type = typeof str;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (str === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n          str = new Uint8Array(str);\n        } else if (!Array.isArray(str)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var bytes = 0, length = str.length;\n    if (notString) {\n      bytes = length;\n    } else {\n      for (var i = 0; i < str.length; ++i) {\n        var code = str.charCodeAt(i);\n        if (code < 0x80) {\n          bytes += 1;\n        } else if (code < 0x800) {\n          bytes += 2;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes += 3;\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n          bytes += 4;\n        }\n      }\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n  };\n\n  Keccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n      bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n        i = 0;\n      }\n    }\n    if (extraBytes) {\n      block = s[i];\n      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n      }\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n      }\n    }\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = (block >> 8) & 0xFF;\n        array[offset + 2] = (block >> 16) & 0xFF;\n        array[offset + 3] = (block >> 24) & 0xFF;\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n      if (extraBytes > 1) {\n        array[offset + 1] = (block >> 8) & 0xFF;\n      }\n      if (extraBytes > 2) {\n        array[offset + 2] = (block >> 16) & 0xFF;\n      }\n    }\n    return array;\n  };\n\n  function Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n  }\n\n  Kmac.prototype = new Keccak();\n\n  Kmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n\n      b0 = s[0];\n      b1 = s[1];\n      b32 = (s[11] << 4) | (s[10] >>> 28);\n      b33 = (s[10] << 4) | (s[11] >>> 28);\n      b14 = (s[20] << 3) | (s[21] >>> 29);\n      b15 = (s[21] << 3) | (s[20] >>> 29);\n      b46 = (s[31] << 9) | (s[30] >>> 23);\n      b47 = (s[30] << 9) | (s[31] >>> 23);\n      b28 = (s[40] << 18) | (s[41] >>> 14);\n      b29 = (s[41] << 18) | (s[40] >>> 14);\n      b20 = (s[2] << 1) | (s[3] >>> 31);\n      b21 = (s[3] << 1) | (s[2] >>> 31);\n      b2 = (s[13] << 12) | (s[12] >>> 20);\n      b3 = (s[12] << 12) | (s[13] >>> 20);\n      b34 = (s[22] << 10) | (s[23] >>> 22);\n      b35 = (s[23] << 10) | (s[22] >>> 22);\n      b16 = (s[33] << 13) | (s[32] >>> 19);\n      b17 = (s[32] << 13) | (s[33] >>> 19);\n      b48 = (s[42] << 2) | (s[43] >>> 30);\n      b49 = (s[43] << 2) | (s[42] >>> 30);\n      b40 = (s[5] << 30) | (s[4] >>> 2);\n      b41 = (s[4] << 30) | (s[5] >>> 2);\n      b22 = (s[14] << 6) | (s[15] >>> 26);\n      b23 = (s[15] << 6) | (s[14] >>> 26);\n      b4 = (s[25] << 11) | (s[24] >>> 21);\n      b5 = (s[24] << 11) | (s[25] >>> 21);\n      b36 = (s[34] << 15) | (s[35] >>> 17);\n      b37 = (s[35] << 15) | (s[34] >>> 17);\n      b18 = (s[45] << 29) | (s[44] >>> 3);\n      b19 = (s[44] << 29) | (s[45] >>> 3);\n      b10 = (s[6] << 28) | (s[7] >>> 4);\n      b11 = (s[7] << 28) | (s[6] >>> 4);\n      b42 = (s[17] << 23) | (s[16] >>> 9);\n      b43 = (s[16] << 23) | (s[17] >>> 9);\n      b24 = (s[26] << 25) | (s[27] >>> 7);\n      b25 = (s[27] << 25) | (s[26] >>> 7);\n      b6 = (s[36] << 21) | (s[37] >>> 11);\n      b7 = (s[37] << 21) | (s[36] >>> 11);\n      b38 = (s[47] << 24) | (s[46] >>> 8);\n      b39 = (s[46] << 24) | (s[47] >>> 8);\n      b30 = (s[8] << 27) | (s[9] >>> 5);\n      b31 = (s[9] << 27) | (s[8] >>> 5);\n      b12 = (s[18] << 20) | (s[19] >>> 12);\n      b13 = (s[19] << 20) | (s[18] >>> 12);\n      b44 = (s[29] << 7) | (s[28] >>> 25);\n      b45 = (s[28] << 7) | (s[29] >>> 25);\n      b26 = (s[38] << 8) | (s[39] >>> 24);\n      b27 = (s[39] << 8) | (s[38] >>> 24);\n      b8 = (s[48] << 14) | (s[49] >>> 18);\n      b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n    if (AMD) {\n      define(function () {\n        return methods;\n      });\n    }\n  }\n})();\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n"],"names":["decode","textData","atob","data","i","length","push","charCodeAt","arrayify","encode","String","fromCharCode","btoa","logger","Logger","ethDefaultProvider","network","func","providers","options","providerList","InfuraProvider","infura","error","EtherscanProvider","etherscan","AlchemyProvider","alchemy","PocketProvider","pocket","skip","provider","indexOf","name","CloudflareProvider","cloudflare","AnkrProvider","ankr","FallbackProvider","quorum","renetwork","etcDefaultProvider","url","JsonRpcProvider","homestead","chainId","ensAddress","_defaultProvider","ropsten","classicMordor","networks","unspecified","mainnet","morden","testnet","rinkeby","kovan","goerli","kintsugi","sepolia","classic","classicMorden","classicTestnet","classicKotti","xdai","matic","maticmum","optimism","arbitrum","bnb","bnbt","getNetwork","standard","throwArgumentError","defaultProvider","value","defineReadOnly","object","Object","defineProperty","enumerable","writable","getStatic","ctor","key","prototype","getPrototypeOf","constructor","resolveProperties","promises","keys","map","Promise","resolve","then","v","all","reduce","accum","result","checkProperties","properties","forEach","shallowCopy","opaque","bigint","boolean","number","string","_isFrozen","undefined","Array","isArray","isFrozen","concat","_deepCopy","freeze","item","deepCopy","Description","info","this","version","allowedTransactionKeys","forwardErrors","errors","INSUFFICIENT_FUNDS","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","Signer","checkAbstract","getBalance","blockTag","_checkProvider","getAddress","getTransactionCount","estimateGas","transaction","tx","checkTransaction","call","sendTransaction","populateTransaction","signedTx","signTransaction","getChainId","getGasPrice","getFeeData","resolveName","from","toLowerCase","to","__awaiter","address","catch","hasEip1559","maxFeePerGas","maxPriorityFeePerGas","gasPrice","type","feeData","throwError","UNSUPPORTED_OPERATION","operation","nonce","gasLimit","code","UNPREDICTABLE_GAS_LIMIT","results","isSigner","_isSigner","keccak256","sha3","arrayifyInteger","unshift","unarrayifyInteger","offset","_encode","payload","child","isBytesLike","slice","hexlify","_decodeChildren","childOffset","decoded","_decode","consumed","BUFFER_OVERRUN","lengthLength","bytes","getChecksumAddress","isHexString","chars","substring","split","expanded","Uint8Array","hashed","toUpperCase","join","ibanLookup","safeDigits","Math","floor","x","log10","log","LN10","ibanChecksum","c","block","parseInt","checksum","match","_base36To16","id","text","toUtf8Bytes","padding","fill","NegativeOne","BigNumber","Zero","One","MaxUint256","hexTrue","hexZeroPad","toHexString","hexFalse","domainFieldTypes","verifyingContract","salt","domainFieldNames","checkString","JSON","stringify","domainChecks","toString","Error","getBaseEncoder","signed","width","boundsUpper","mask","boundsLower","add","mul","lt","gt","toTwos","padOffset","hexConcat","hexPadRight","encodeType","fields","_ref","TypedDataEncoder","types","links","parents","subtypes","uniqueNames","field","baseType","primaryTypes","filter","n","t","checkCircular","found","subtype","primaryType","st","sort","_types","getEncoder","encoder","_encoderCache","_getEncoder","subEncoder","encodedType","values","_ref2","encodeData","hashStruct","hash","_visit","callback","_ref3","visit","getPrimaryType","hashDomain","domain","domainFields","a","b","EIP712Domain","resolveNames","ensCache","getPayload","domainValues","domainTypes","typesWithDomain","message","minimalisticAssert","assert","val","msg","equal","l","r","utils","exports","zero2","word","toHex","res","toArray","enc","replace","hi","lo","arr","utils_1","getNAF","num","w","bits","naf","max","bitLength","ws","k","clone","z","mod","andln","isOdd","isubn","iushrn","getJSF","k1","k2","jsf","m8","d1","d2","cmpn","u1","u2","m14","m24","cachedProperty","obj","computer","parseBytes","intFromLE","BN","utils_1$1","assert$1","BaseCurve","conf","p","red","prime","zero","toRed","one","two","g","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","_bitLength","adjustCount","div","redN","_maxwellTrick","base","BasePoint","curve","precomputed","point","validate","_fixedNafMul","doubles","_getDoubles","I","step","j","nafW","repr","jpoint","mixedAdd","points","neg","toP","_wnafMul","nafPoints","_getNAFPoints","wnd","acc","dblp","_wnafMulAdd","defW","coeffs","len","jacobianResult","wndWidth","comb","y","cmp","toJ","redNeg","index","ja","jb","tmp","eq","decodePoint","byteLength","pointFromX","encodeCompressed","compact","getX","getY","isEven","precompute","power","beta","_getBeta","_hasDoubles","ceil","dbl","create","module","superCtor","super_","configurable","TempCtor","assert$2","ShortCurve","tinv","redInvm","zeroA","fromRed","threeA","sub","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","inherits_browser","short_1","Point","isRed","inf","forceRed","JPoint","zOne","modn","lambda","betas","_getEndoRoots","lambdas","redMul","basis","vec","_getEndoBasis","ntinv","s","redSqrt","redAdd","redSub","a0","b0","a1","b1","a2","b2","prevR","aprxSqrt","ushrn","u","x1","y1","x2","y2","q","len1","sqr","negative","_endoSplit","v1","v2","c1","divRound","c2","p1","p2","q1","q2","odd","redSqr","redIAdd","ax","rhs","redISub","_endoWnafMulAdd","npoints","ncoeffs","ineg","fromJSON","pre","endoMul","toJSON","parse","obj2point","inspect","isInfinity","nx","ny","ys1","dyinv","mulAdd","jmulAdd","_precompute","negate","zinv","zinv2","ay","pz2","z2","s1","s2","h","h2","h3","nz","pow","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","t1","t2","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","m","yyyy8","d","e","f","c8","delta","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","z3","pz3","eqXToP","zs","rx","xc","iadd","short","mont","edwards","curves","PresetCurve","curve_1","defineCurve","get","crash","HmacDRBG","predResist","outLen","outSize","minEntropy","hmacStrength","_reseed","reseedInterval","K","V","entropy","entropyEnc","nonceEnc","pers","persEnc","_init","hmacDrbg","seed","_update","_hmac","kmac","update","digest","reseed","addEnc","generate","temp","assert$3","KeyPair","ec","priv","pub","_importPrivate","privEnc","_importPublic","pubEnc","fromPublic","fromPrivate","getPublic","reason","getPrivate","umod","derive","sign","verify","signature","assert$4","Signature","_importDER","recoveryParam","Position","place","getLength","buf","initial","octetLen","off","rmPadding","constructLength","octets","LN2","rlen","slen","toDER","backHalf","rand","assert$5","EC","hasOwnProperty","curves_1","nh","keyPair","keyFromPrivate","keyFromPublic","genKeyPair","drbg","ns2","iaddn","_truncateToN","truncOnly","bkey","ns1","iter","kp","kpX","invm","canonical","signature$1","sinv","recoverPubKey","isYOdd","isSecondKey","rInv","getKeyRecoveryParam","Q","Qprime","EC$1","elliptic","eddsa","_curve","getCurve","SigningKey","privateKey","hexDataLength","_addPoint","other","p0","publicKey","signDigest","digestBytes","splitSignature","computeSharedSecret","otherKey","otherKeyPair","computePublicKey","isSigningKey","_isSigningKey","compressed","signingKey","TransactionTypes","handleAddress","handleNumber","recoverAddress","hexDataSlice","computeAddress","sig","rs","recoverPublicKey","formatNumber","stripZeros","accessSetify","addr","storageKeys","storageKey","accessListify","set","localeCompare","formatAccessList","_serializeEip1559","accessList","RLP","_serializeEip2930","_parseEipSignature","serialize","recid","toNumber","rawTransaction","isZero","raw","_parse","_parseEip2930","_parseEip1559","transactionType","ForkEvent","isForkEvent","_isForkEvent","Provider","getBlock","lastBaseFeePerGas","baseFeePerGas","addListener","eventName","listener","on","removeListener","isProvider","_isProvider","BaseX","alphabet","charAt","_alphabetMap","source","digits","carry","_leader","TypeError","byte","reverse","Base58","flat","array","depth","flatDeep","read_compressed_payload","pos","read_payload","u16","symbol_count","total","pos_payload","read_width","read_buffer","read_bit","FULL","HALF","QRTR","MASK","register","symbols","low","range","start","end","mid","decode_arithmetic","read_ascending","next","read_deltas","read_member_array","lookup","vX","vN","read_counts","read_transposed","read_linear_table","dx","dy","read_zero_terminated_array","ys","_","j_dy","read_replacement_table","VALID","Set","IGNORED","MAPPED","ret","fromEntries","read_mapped_map","EMOJI_ROOT","sorted","read","branches","node","size","valid","fe0f","save","check","read_emoji_trie","HYPHEN","UNDERSCORE","explode_cp","toUtf8CodePoints","filter_fe0f","cps","cp","ens_normalize_post_check","label","lastIndexOf","every","err","ens_normalize","emoji_filter","input","output","emoji","consume_emoji_reversed","pop","has","fromCodePoint","normalize","eaten","saved","stack","_a","find","splice","Zeros","checkComponent","comp","ensNameSplit","comps","last","namehash","sha256","Formatter","formats","getDefaultFormats","bind","bigNumber","hex","allowNull","blockHash","blockNumber","transactionIndex","confirmations","uint256","creates","transactionRequest","receiptLog","transactionHash","topics","arrayOf","logIndex","receipt","contractAddress","root","gasUsed","logsBloom","logs","cumulativeGasUsed","effectiveGasPrice","status","parentHash","timestamp","difficulty","miner","extraData","transactions","blockWithTransactions","transactionResponse","fromBlock","toBlock","filterLog","removed","allowFalsish","strict","callAddress","getContractAddress","hexValue","_block","format","author","_difficulty","gas","networkId","parseTransaction","byzantium","checkKey","checkValue","nullValue","replaceValue","checkTopic","topic","serializeTopics","unique","getEventTag","warn","getTime","Date","stall","duration","setTimeout","PollableEvents","Event","tag","once","_lastBlockNumber","_inflight","event","pollable","coinInfos","symbol","p2pkh","p2sh","prefix","ilk","bytes32ify","base58Encode","matcherIpfs","RegExp","matchers","_parseString","toUtf8String","_parseBytes","getIpfsLink","link","numPad","padded","bytesPad","encodeBytes","datas","byteCount","Resolver","resolvedAddress","formatter","supportsWildcard","_supportsEip2544","CALL_EXCEPTION","_fetch","selector","parameters","ccipReadEnabled","_fetchBytes","_getAddress","coinType","hexBytes","coinInfo","words","bech32","getAvatar","linkage","content","avatar","getText","scheme","owner","_resolvedAddress","tokenId","tokenOwner","balance","metadataUrl","metadata","fetchJson","imageUrl","image","getContentHash","ipfs","ipns","swarm","skynet","urlSafe","base64Encode","keyBytes","defaultFormatter","nextPollId","BaseProvider","super","_events","_emitted","disableCcipRead","getFormatter","anyNetwork","detectNetwork","_networkPromise","_ready","knownNetwork","emit","_maxInternalBlockNumber","_maxFilterBlockRange","_pollingInterval","_fastQueryDate","_network","UNKNOWN_ERROR","ready","poll","NETWORK_ERROR","ccipReadFetch","calldata","urls","sender","errorMessages","href","json","errorPassThrough","response","statusCode","errorMessage","SERVER_ERROR","_getInternalBlockNumber","maxAge","_internalBlockNumber","internalBlockNumber","respTime","reqTime","checkInternalBlockNumber","perform","networkError","_setFastBlockNumber","pollId","runners","pollingInterval","abs","makeError","previousBlockNumber","eventBlockNumber","runner","getTransactionReceipt","minFromBlock","getLogs","resetEventsBlock","polling","currentNetwork","_fastBlockNumber","_fastBlockNumberPromise","detectedNetwork","_poller","setInterval","_bootstrapPoll","clearInterval","_getFastBlockNumber","now","getBlockNumber","waitForTransaction","timeout","_waitForTransaction","replaceable","reject","cancelFuncs","done","alreadyDone","minedHandler","lastBlockNumber","startBlock","scannedBlock","replaceHandler","mined","getTransaction","getBlockWithTransactions","ti","TRANSACTION_REPLACED","cancelled","replacement","_wrapTransaction","timer","TIMEOUT","unref","clearTimeout","method","addressOrName","params","_getBlockTag","getCode","getStorageAt","position","expectedHash","returnedHash","wait","confirms","signedTransaction","hexTx","_getTransactionRequest","_getFilter","_call","attempt","redirects","txSender","urlsOffset","urlsLength","urlsData","callbackSelector","ccipResult","resolved","_getBlock","blockHashOrBlockTag","includeTransactions","blockWithTxs","oncePoll","getEtherPrice","getResolver","currentName","_getResolver","resolver","addrData","lookupAddress","resolverAddr","nameOrAddress","resolverAddress","NOT_IMPLEMENTED","_startEvent","_stopEvent","_addEventListener","_len","arguments","args","_key","stopped","eventTag","apply","listenerCount","listeners","removeAllListeners","errorGas","spelunk","requireData","checkError","body","responseText","getResult","getLowerCase","_constructorGuard","JsonRpcSigner","constructorGuard","addressOrIndex","connect","connectUnchecked","UncheckedJsonRpcSigner","_address","_index","send","accounts","sendUncheckedTransaction","fromAddress","estimate","hexlifyTransaction","ACTION_REJECTED","action","signMessage","messageData","_legacySignMessage","_signTypedData","populated","_TypedDataEncoder","unlock","password","networkOrReady","_nextId","_cache","_eventLoopCache","defaultUrl","_uncachedDetectNetwork","serverError","getSigner","getUncheckedSigner","listAccounts","request","jsonrpc","cache","connection","prepareRequest","_startPending","_pendingFilter","self","pendingFilter","filterId","hashes","seq","allowExtra","allowed","UnicodeNormalizationForm","Utf8ErrorReason","ignoreFunc","badCodepoint","BAD_PREFIX","UNEXPECTED_CONTINUE","o","OVERRUN","Utf8ErrorFuncs","ignore","OVERLONG","getUtf8CodePoints","onError","extraLength","overlongMask","nextChar","MISSING_CONTINUE","OUT_OF_RANGE","UTF16_SURROGATE","str","form","current","checkNormalize","pair","codePoint","getUrl","headers","skipFetchSetup","mode","credentials","redirect","referrer","fetchOptions","opts","fetch","arrayBuffer","statusMessage","statusText","staller","bodyify","trim","processFunc","updated","attemptLimit","throttleLimit","assertArgument","throttleCallback","throttleSlotInterval","allow304","allowGzip","user","allowInsecureAuthentication","INVALID_ARGUMENT","argument","authorization","reData","dataMatch","base64Decode","requestBody","requestMethod","flatHeaders","header","runningTimeout","promise","cancel","runningFetch","location","tryAgain","retryAfter","random","throttleRetry","race","_fetchData","processJsonFunc","ceiling","interval","retryLimit","onceBlock","RequestBatcher","sendBatchFn","maxBatchSize","pendingBatch","enqueueRequest","inflightRequest","sendBatchRequest","pendingBatchTimer","batch","inflight","config","apiKey","getApiKey","alchemyNetwork","getAlchemyNetwork","getAlchemyConnectionInfo","maxRetries","EthersNetwork","batchRequests","batcherConnection","assign","batcher","requests","modifyFormatter","DEFAULT_ALCHEMY_API_KEY","CustomNetworks","DEFAULT_NETWORK","Network","includes","getAlchemyHttpUrl","getAlchemyWsUrl","IS_BROWSER","VERSION","_super","logWarn","isCommunityResource","_send","methodName","forceBatch","ALPHABET","ALPHABET_MAP","polymodStep","prefixChk","chk","__decode","LIMIT","lowered","uppered","wordChars","convert","inBits","outBits","pad","maxV","decodeUnsafe","toWordsUnsafe","toWords","fromWordsUnsafe","fromWords","require","common","sha","ripemd","hmac","sha1","sha224","sha384","sha512","ripemd160","BlockHash","pending","pendingTotal","blockSize","padLength","endian","_delta8","_delta32","join32","_pad","_digest","Hmac","Hash","inner","outer","rotl32","sum32","sum32_3","sum32_4","RIPEMD160","Kh","inherits","A","B","C","D","E","Ah","Bh","Ch","Dh","Eh","T","rh","sh","toHex32","split32","shaCommon","sum32_5","ft_1","sha1_K","SHA1","W","SHA256","SHA224","ch32","maj32","s0_256","s1_256","g0_256","g1_256","sha256_K","T1","T2","SHA512","SHA384","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","sha512_K","ch64_hi","xh","xl","yh","yl","zh","ch64_lo","zl","maj64_hi","maj64_lo","s0_512_hi","s0_512_lo","s1_512_hi","s1_512_lo","g0_512_hi","g0_512_lo","g1_512_hi","g1_512_lo","_prepareBlock","c0_hi","c0_lo","c1_hi","c1_lo","c2_hi","c2_lo","c3_hi","c3_lo","ah","al","bh","bl","ch","cl","dh","dl","eh","el","fh","fl","gh","gl","hh","hl","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","rotr32","p32","isSurrogatePair","htonl","zero8","INPUT_ERROR","WINDOW","window","JS_SHA3_NO_WINDOW","WEB_WORKER","JS_SHA3_NO_NODE_JS","process","versions","global","COMMON_JS","JS_SHA3_NO_COMMON_JS","AMD","define","ARRAY_BUFFER","JS_SHA3_NO_ARRAY_BUFFER","ArrayBuffer","HEX_CHARS","CSHAKE_PADDING","SHIFT","RC","BITS","SHAKE_BITS","OUTPUT_TYPES","CSHAKE_BYTEPAD","JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW","isView","buffer","createOutputMethod","outputType","Keccak","createShakeOutputMethod","outputBits","createCshakeOutputMethod","methods","createKmacOutputMethod","createOutputMethods","createMethod","algorithms","bytepad","Kmac","methodNames","algorithm","newMethodName","blocks","reset","finalized","blockCount","outputBlocks","extraBytes","notString","lastByteIndex","right","encodeString","strs","paddingBytes","zeros","finalize","Uint32Array","c0","c3","c4","c5","c6","c7","c9","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","b16","b17","b18","b19","b20","b21","b22","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","b44","b45","b46","b47","b48","b49"],"sourceRoot":""}