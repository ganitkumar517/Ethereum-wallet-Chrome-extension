{"version":3,"file":"static/js/main.14a0bbab.js","mappings":"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IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,KAGtLl7E,GAAI,CAAC,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,EAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,EAAM,IAAM,GAAM,IAAM,GAAM,IAAM,EAAM,IAAM,EAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,EAAM,IAAM,GAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,EAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,IAAM,GAAM,IAAM,EAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,EAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,EAAM,IAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,EAAM,IAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAC//C5D,GAAI,CAAC,GAAM,EAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,EAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,EAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,EAAM,IAAM,IAAM,GAAM,EAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,GAAM,EAAM,IAAM,IAAM,IAAM,EAAM,EAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,EAAM,IAAM,GAAM,IAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,GAAM,EAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,GAAM,KAG//C8/C,GAAK,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,EAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAC1/F6I,GAAK,CAAC,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,EAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAA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","sources":["../node_modules/@ethersproject/bignumber/src.ts/_version.ts","../node_modules/@ethersproject/bignumber/src.ts/bignumber.ts","../node_modules/@ethersproject/bytes/src.ts/_version.ts","../node_modules/@ethersproject/bytes/src.ts/index.ts","../node_modules/@ethersproject/logger/src.ts/index.ts","../node_modules/@ethersproject/logger/src.ts/_version.ts","../node_modules/@ethersproject/bignumber/src.ts/fixednumber.ts","../node_modules/@ethersproject/units/src.ts/index.ts","../node_modules/@ethersproject/units/src.ts/_version.ts","../node_modules/alchemy-sdk/src/types/types.ts","../node_modules/alchemy-sdk/src/types/nft-types.ts","../node_modules/alchemy-sdk/src/util/const.ts","../node_modules/alchemy-sdk/src/api/alchemy-config.ts","../node_modules/alchemy-sdk/node_modules/@ethersproject/logger/lib.esm/index.js","../node_modules/alchemy-sdk/node_modules/@ethersproject/logger/lib.esm/_version.js","../node_modules/alchemy-sdk/node_modules/@ethersproject/properties/lib.esm/index.js","../node_modules/alchemy-sdk/node_modules/@ethersproject/properties/lib.esm/_version.js","../node_modules/alchemy-sdk/src/api/util.ts","../node_modules/alchemy-sdk/src/util/util.ts","../node_modules/alchemy-sdk/src/internal/core-api.ts","../node_modules/alchemy-sdk/src/api/core-namespace.ts","../node_modules/alchemy-sdk/src/api/debug-namespace.ts","../node_modules/alchemy-sdk/src/util/inputSanitization.ts","../node_modules/alchemy-sdk/src/util/logger.ts","../node_modules/alchemy-sdk/src/version.ts","../node_modules/alchemy-sdk/src/util/sendRest.ts","../node_modules/alchemy-sdk/src/internal/backoff.ts","../node_modules/alchemy-sdk/src/internal/dispatch.ts","../node_modules/alchemy-sdk/src/internal/nft-api.ts","../node_modules/alchemy-sdk/src/api/nft-namespace.ts","../node_modules/alchemy-sdk/src/api/notify-namespace.ts","../node_modules/alchemy-sdk/src/api/transact-namespace.ts","../node_modules/alchemy-sdk/src/internal/internal-types.ts","../node_modules/alchemy-sdk/src/internal/ethers-event.ts","../node_modules/alchemy-sdk/src/api/websocket-namespace.ts","../node_modules/alchemy-sdk/src/api/alchemy.ts","../node_modules/alchemy-sdk/node_modules/axios/index.js","../node_modules/alchemy-sdk/node_modules/axios/lib/adapters/xhr.js","../node_modules/alchemy-sdk/node_modules/axios/lib/axios.js","../node_modules/alchemy-sdk/node_modules/axios/lib/cancel/Cancel.js","../node_modules/alchemy-sdk/node_modules/axios/lib/cancel/CancelToken.js","../node_modules/alchemy-sdk/node_modules/axios/lib/cancel/isCancel.js","../node_modules/alchemy-sdk/node_modules/axios/lib/core/Axios.js","../node_modules/alchemy-sdk/node_modules/axios/lib/core/InterceptorManager.js","../node_modules/alchemy-sdk/node_modules/axios/lib/core/buildFullPath.js","../node_modules/alchemy-sdk/node_modules/axios/lib/core/createError.js","../node_modules/alchemy-sdk/node_modules/axios/lib/core/dispatchRequest.js","../node_modules/alchemy-sdk/node_modules/axios/lib/core/enhanceError.js","../node_modules/alchemy-sdk/node_modules/axios/lib/core/mergeConfig.js","../node_modules/alchemy-sdk/node_modules/axios/lib/core/settle.js","../node_modules/alchemy-sdk/node_modules/axios/lib/core/transformData.js","../node_modules/alchemy-sdk/node_modules/axios/lib/defaults/index.js","../node_modules/alchemy-sdk/node_modules/axios/lib/defaults/transitional.js","../node_modules/alchemy-sdk/node_modules/axios/lib/env/data.js","../node_modules/alchemy-sdk/node_modules/axios/lib/helpers/bind.js","../node_modules/alchemy-sdk/node_modules/axios/lib/helpers/buildURL.js","../node_modules/alchemy-sdk/node_modules/axios/lib/helpers/combineURLs.js","../node_modules/alchemy-sdk/node_modules/axios/lib/helpers/cookies.js","../node_modules/alchemy-sdk/node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/alchemy-sdk/node_modules/axios/lib/helpers/isAxiosError.js","../node_modules/alchemy-sdk/node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/alchemy-sdk/node_modules/axios/lib/helpers/normalizeHeaderName.js","../node_modules/alchemy-sdk/node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/alchemy-sdk/node_modules/axios/lib/helpers/spread.js","../node_modules/alchemy-sdk/node_modules/axios/lib/helpers/validator.js","../node_modules/alchemy-sdk/node_modules/axios/lib/utils.js","../node_modules/bn.js/lib/bn.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/client.js","../node_modules/react-dom/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../webpack/bootstrap","../webpack/runtime/amd options","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/node module decorator","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/utils.js","../node_modules/axios/lib/core/AxiosError.js","../node_modules/axios/lib/helpers/toFormData.js","../node_modules/axios/lib/helpers/AxiosURLSearchParams.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/defaults/transitional.js","../node_modules/axios/lib/platform/browser/index.js","../node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","../node_modules/axios/lib/platform/browser/classes/FormData.js","../node_modules/axios/lib/platform/browser/classes/Blob.js","../node_modules/axios/lib/platform/common/utils.js","../node_modules/axios/lib/platform/index.js","../node_modules/axios/lib/helpers/formDataToJSON.js","../node_modules/axios/lib/defaults/index.js","../node_modules/axios/lib/helpers/toURLEncodedForm.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/core/AxiosHeaders.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/cancel/CanceledError.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/core/buildFullPath.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/helpers/speedometer.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/adapters/adapters.js","../node_modules/axios/lib/helpers/null.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/helpers/parseProtocol.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/env/data.js","../node_modules/axios/lib/helpers/validator.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/helpers/HttpStatusCode.js","../node_modules/axios/lib/axios.js","../node_modules/axios/lib/helpers/spread.js","../node_modules/axios/lib/helpers/isAxiosError.js","../node_modules/@babel/runtime/helpers/esm/checkPrivateRedeclaration.js","../node_modules/@babel/runtime/helpers/esm/classPrivateMethodInitSpec.js","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js","../node_modules/@babel/runtime/helpers/esm/classPrivateMethodGet.js","../node_modules/@babel/runtime/helpers/esm/classExtractFieldDescriptor.js","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet.js","../node_modules/@babel/runtime/helpers/esm/classApplyDescriptorSet.js","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet.js","../node_modules/@babel/runtime/helpers/esm/classApplyDescriptorGet.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/ethers/src.ts/_version.ts","../node_modules/ethers/src.ts/utils/properties.ts","../node_modules/ethers/src.ts/utils/errors.ts","../node_modules/ethers/src.ts/utils/data.ts","../node_modules/ethers/src.ts/utils/maths.ts","../node_modules/ethers/src.ts/abi/coders/abstract-coder.ts","../node_modules/@noble/hashes/src/_assert.ts","../node_modules/@noble/hashes/src/_u64.ts","../node_modules/@noble/hashes/src/crypto.ts","../node_modules/@noble/hashes/src/utils.ts","../node_modules/@noble/hashes/src/sha3.ts","../node_modules/ethers/src.ts/crypto/keccak.ts","../node_modules/ethers/src.ts/address/address.ts","../node_modules/ethers/src.ts/abi/typed.ts","../node_modules/ethers/src.ts/abi/coders/address.ts","../node_modules/ethers/src.ts/abi/coders/anonymous.ts","../node_modules/ethers/src.ts/abi/coders/array.ts","../node_modules/ethers/src.ts/abi/coders/boolean.ts","../node_modules/ethers/src.ts/abi/coders/bytes.ts","../node_modules/ethers/src.ts/abi/coders/fixed-bytes.ts","../node_modules/ethers/src.ts/abi/coders/null.ts","../node_modules/ethers/src.ts/abi/coders/number.ts","../node_modules/ethers/src.ts/utils/utf8.ts","../node_modules/ethers/src.ts/abi/coders/string.ts","../node_modules/ethers/src.ts/abi/coders/tuple.ts","../node_modules/ethers/src.ts/hash/id.ts","../node_modules/ethers/src.ts/abi/fragments.ts","../node_modules/ethers/src.ts/abi/abi-coder.ts","../node_modules/ethers/src.ts/address/checks.ts","../node_modules/ethers/src.ts/hash/typed-data.ts","../node_modules/ethers/src.ts/transaction/accesslist.ts","../node_modules/ethers/src.ts/utils/geturl-browser.ts","../node_modules/ethers/src.ts/utils/fetch.ts","../node_modules/ethers/src.ts/utils/base64-browser.ts","../node_modules/ethers/src.ts/constants/addresses.ts","../node_modules/ethers/src.ts/abi/interface.ts","../node_modules/ethers/src.ts/providers/provider.ts","../node_modules/ethers/src.ts/utils/events.ts","../node_modules/ethers/src.ts/contract/wrappers.ts","../node_modules/ethers/src.ts/contract/contract.ts","../node_modules/@adraffy/ens-normalize/dist/index.mjs","../node_modules/ethers/src.ts/hash/namehash.ts","../node_modules/ethers/src.ts/constants/hashes.ts","../node_modules/ethers/src.ts/crypto/signature.ts","../node_modules/@noble/hashes/src/_sha2.ts","../node_modules/@noble/hashes/src/sha256.ts","../node_modules/@noble/curves/src/abstract/utils.ts","../node_modules/@noble/curves/src/abstract/modular.ts","../node_modules/@noble/hashes/src/hmac.ts","../node_modules/@noble/curves/src/abstract/curve.ts","../node_modules/@noble/curves/src/abstract/weierstrass.ts","../node_modules/@noble/curves/src/_shortw_utils.ts","../node_modules/@noble/curves/src/secp256k1.ts","../node_modules/ethers/src.ts/crypto/signing-key.ts","../node_modules/ethers/src.ts/utils/rlp-decode.ts","../node_modules/ethers/src.ts/utils/rlp-encode.ts","../node_modules/ethers/src.ts/transaction/address.ts","../node_modules/ethers/src.ts/transaction/transaction.ts","../node_modules/@babel/runtime/helpers/esm/classStaticPrivateMethodGet.js","../node_modules/@babel/runtime/helpers/esm/classCheckPrivateStaticAccess.js","../node_modules/ethers/src.ts/utils/base58.ts","../node_modules/ethers/src.ts/providers/ens-resolver.ts","../node_modules/ethers/src.ts/providers/format.ts","../node_modules/ethers/src.ts/address/contract-address.ts","../node_modules/ethers/src.ts/providers/plugins-network.ts","../node_modules/ethers/src.ts/providers/network.ts","../node_modules/ethers/src.ts/providers/subscriber-polling.ts","../node_modules/ethers/src.ts/providers/abstract-provider.ts","../node_modules/ethers/src.ts/providers/abstract-signer.ts","../node_modules/ethers/src.ts/providers/subscriber-filterid.ts","../node_modules/ethers/src.ts/providers/provider-jsonrpc.ts","../node_modules/ethers/src.ts/utils/fixednumber.ts","../node_modules/ethers/src.ts/utils/units.ts","popup/AccountInfo.jsx","../node_modules/ethers/src.ts/constants/strings.ts","../node_modules/ethers/src.ts/hash/message.ts","../node_modules/ethers/src.ts/wallet/base-wallet.ts","../node_modules/@noble/hashes/src/pbkdf2.ts","../node_modules/@noble/hashes/src/sha512.ts","../node_modules/ethers/src.ts/crypto/crypto-browser.ts","../node_modules/ethers/src.ts/crypto/sha2.ts","../node_modules/ethers/src.ts/crypto/hmac.ts","../node_modules/@noble/hashes/src/ripemd160.ts","../node_modules/ethers/src.ts/crypto/ripemd160.ts","../node_modules/ethers/src.ts/crypto/random.ts","../node_modules/ethers/src.ts/wordlists/decode-owl.ts","../node_modules/ethers/src.ts/wordlists/wordlist.ts","../node_modules/ethers/src.ts/wordlists/wordlist-owl.ts","../node_modules/ethers/src.ts/wordlists/lang-en.ts","../node_modules/ethers/src.ts/crypto/pbkdf2.ts","../node_modules/ethers/src.ts/wallet/mnemonic.ts","../node_modules/aes-js/src.ts/aes.ts","../node_modules/aes-js/src.ts/mode.ts","../node_modules/aes-js/src.ts/mode-cbc.ts","../node_modules/aes-js/src.ts/mode-ctr.ts","../node_modules/@noble/hashes/src/scrypt.ts","../node_modules/ethers/src.ts/crypto/scrypt.ts","../node_modules/ethers/src.ts/utils/uuid.ts","../node_modules/ethers/src.ts/wallet/utils.ts","../node_modules/ethers/src.ts/wallet/json-keystore.ts","../node_modules/ethers/src.ts/wallet/hdwallet.ts","../node_modules/ethers/src.ts/wallet/json-crowdsale.ts","../node_modules/aes-js/src.ts/padding.ts","../node_modules/ethers/src.ts/wallet/wallet.ts","popup/TransactionHistory.jsx","popup/TransactionForm.jsx","popup/Popup.jsx","App.jsx","reportWebVitals.js","index.js"],"sourcesContent":["export const version = \"bignumber/5.7.0\";\n","\"use strict\";\n\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\n\nimport _BN from \"bn.js\";\nimport BN = _BN.BN;\n\nimport { Bytes, Hexable, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst _constructorGuard = { };\n\nconst MAX_SAFE = 0x1fffffffffffff;\n\n\nexport type BigNumberish = BigNumber | Bytes | bigint | string | number;\n\nexport function isBigNumberish(value: any): value is BigNumberish {\n    return (value != null) && (\n        BigNumber.isBigNumber(value) ||\n        (typeof(value) === \"number\" && (value % 1) === 0) ||\n        (typeof(value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof(value) === \"bigint\") ||\n        isBytes(value)\n    );\n}\n\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\n\nexport class BigNumber implements Hexable {\n    readonly _hex: string;\n    readonly _isBigNumber: boolean;\n\n    constructor(constructorGuard: any, hex: string) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n\n        this._hex = hex;\n        this._isBigNumber = true;\n\n        Object.freeze(this);\n    }\n\n    fromTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n\n    toTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n\n    abs(): BigNumber {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n\n    add(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n\n    sub(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n\n    div(other: BigNumberish): BigNumber {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division-by-zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n\n    mul(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n\n    mod(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"division-by-zero\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n\n    pow(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"negative-power\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n\n    and(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n\n    or(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n\n    xor(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n\n    mask(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n\n    shl(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n\n    shr(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n\n    eq(other: BigNumberish): boolean {\n        return toBN(this).eq(toBN(other));\n    }\n\n    lt(other: BigNumberish): boolean {\n        return toBN(this).lt(toBN(other));\n    }\n\n    lte(other: BigNumberish): boolean {\n        return toBN(this).lte(toBN(other));\n    }\n\n    gt(other: BigNumberish): boolean {\n        return toBN(this).gt(toBN(other));\n   }\n\n    gte(other: BigNumberish): boolean {\n        return toBN(this).gte(toBN(other));\n    }\n\n    isNegative(): boolean {\n        return (this._hex[0] === \"-\");\n    }\n\n    isZero(): boolean {\n        return toBN(this).isZero();\n    }\n\n    toNumber(): number {\n        try {\n            return toBN(this).toNumber();\n        } catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n\n    toBigInt(): bigint {\n        try {\n            return BigInt(this.toString());\n        } catch (e) { }\n\n        return logger.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n\n    toString(): string {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            } else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            } else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            }\n        }\n        return toBN(this).toString(10);\n    }\n\n    toHexString(): string {\n        return this._hex;\n    }\n\n    toJSON(key?: string): any {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n\n    static from(value: any): BigNumber {\n        if (value instanceof BigNumber) { return value; }\n\n        if (typeof(value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n\n        if (typeof(value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n\n            return BigNumber.from(String(value));\n        }\n\n        const anyValue = <any>value;\n\n        if (typeof(anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n\n        if (anyValue) {\n\n            // Hexable interface (takes priority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof(hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n\n            } else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n\n                if (typeof(hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n\n    static isBigNumber(value: any): value is BigNumber {\n        return !!(value && value._isBigNumber);\n    }\n}\n\n// Normalize the hex string\nfunction toHex(value: string | BN): string {\n\n    // For BN, call on the hex string\n    if (typeof(value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n\n        // Cannot have multiple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") { logger.throwArgumentError(\"invalid hex\", \"value\", value); }\n\n        // Call toHex on the positive component\n        value = toHex(value);\n\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") { return value; }\n\n        // Negate the value\n        return \"-\" + value;\n    }\n\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n\n    // Normalize zero\n    if (value === \"0x\") { return \"0x00\"; }\n\n    // Make the string even length\n    if (value.length % 2) { value = \"0x0\" + value.substring(2); }\n\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n\n    return value;\n}\n\nfunction toBigNumber(value: BN): BigNumber {\n    return BigNumber.from(toHex(value));\n}\n\nfunction toBN(value: BigNumberish): BN {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\n\nfunction throwFault(fault: string, operation: string, value?: any): never {\n    const params: any = { fault: fault, operation: operation };\n    if (value != null) { params.value = value; }\n\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n\n// value should have no prefix\nexport function _base36To16(value: string): string {\n    return (new BN(value, 36)).toString(16);\n}\n\n// value should have no prefix\nexport function _base16To36(value: string): string {\n    return (new BN(value, 16)).toString(36);\n}\n","export const version = \"bytes/5.7.0\";\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type Bytes = ArrayLike<number>;\n\nexport type BytesLike = Bytes | string;\n\nexport type DataOptions = {\n    allowMissingPrefix?: boolean;\n    hexPad?: \"left\" | \"right\" | null;\n};\n\nexport interface Hexable {\n    toHexString(): string;\n}\n\n\n/*\nexport interface HexString {\n    length: number;\n    substring: (start: number, end?: number) => string;\n\n    [index: number]: string;\n}\n*/\n\nexport type SignatureLike  = {\n    r: string;\n    s?: string;\n    _vs?: string,\n    recoveryParam?: number;\n    v?: number;\n} | BytesLike;\n\nexport interface Signature {\n    r: string;\n\n    s: string;\n    _vs: string,\n\n    recoveryParam: number;\n    v: number;\n\n    yParityAndS: string\n    compact: string;\n}\n\n///////////////////////////////\n\n\nfunction isHexable(value: any): value is Hexable {\n    return !!(value.toHexString);\n}\n\nfunction addSlice(array: Uint8Array): Uint8Array {\n    if (array.slice) { return array; }\n\n    array.slice = function() {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    }\n\n    return array;\n}\n\nexport function isBytesLike(value: any): value is BytesLike {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\n\nfunction isInteger(value: number) {\n    return (typeof(value) === \"number\" && value == value && (value % 1) === 0);\n}\n\nexport function isBytes(value: any): value is Bytes {\n    if (value == null) { return false; }\n\n    if (value.constructor === Uint8Array) { return true; }\n    if (typeof(value) === \"string\") { return false; }\n    if (!isInteger(value.length) || value.length < 0) { return false; }\n\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) { return false; }\n    }\n    return true;\n}\n\n\nexport function arrayify(value: BytesLike | Hexable | number, options?: DataOptions): Uint8Array {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) { result.push(0); }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { value = value.toHexString(); }\n\n    if (isHexString(value)) {\n        let hex = (<string>value).substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0\" + hex;\n            } else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\n\nexport function concat(items: ReadonlyArray<BytesLike>): Uint8Array {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n\n    const result = new Uint8Array(length);\n\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n\n    return addSlice(result);\n}\n\nexport function stripZeros(value: BytesLike): Uint8Array {\n    let result: Uint8Array = arrayify(value);\n\n    if (result.length === 0) { return result; }\n\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) { start++ }\n\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n\n    return result;\n}\n\nexport function zeroPad(value: BytesLike, length: number): Uint8Array {\n    value = arrayify(value);\n\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\n\n\nexport function isHexString(value: any, length?: number): boolean {\n    if (typeof(value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false\n    }\n    if (length && value.length !== 2 + 2 * length) { return false; }\n    return true;\n}\n\nconst HexCharacters: string = \"0123456789abcdef\";\n\nexport function hexlify(value: BytesLike | Hexable | number | bigint, options?: DataOptions): string {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n\n        if (hex.length) {\n            if (hex.length % 2) { hex = \"0\" + hex; }\n            return \"0x\" + hex;\n        }\n\n        return \"0x00\";\n    }\n\n    if (typeof(value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) { return (\"0x0\" + value); }\n        return \"0x\" + value;\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { return value.toHexString(); }\n\n    if (isHexString(value)) {\n        if ((<string>value).length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + (<string>value).substring(2);\n            } else if (options.hexPad === \"right\") {\n                value += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return (<string>value).toLowerCase();\n    }\n\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n             let v = value[i];\n             result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data: BytesLike) {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n\n    return (data.length - 2) / 2;\n}\n\nexport function hexDataSlice(data: BytesLike, offset: number, endOffset?: number): string {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data );\n    }\n\n    offset = 2 + 2 * offset;\n\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n\n    return \"0x\" + data.substring(offset);\n}\n\nexport function hexConcat(items: ReadonlyArray<BytesLike>): string {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\n\nexport function hexValue(value: BytesLike | Hexable | number | bigint): string {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") { return \"0x0\"; }\n    return trimmed;\n}\n\nexport function hexStripZeros(value: BytesLike): string {\n    if (typeof(value) !== \"string\") { value = hexlify(value); }\n\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") { offset++; }\n    return \"0x\" + value.substring(offset);\n}\n\nexport function hexZeroPad(value: BytesLike, length: number): string {\n    if (typeof(value) !== \"string\") {\n        value = hexlify(value);\n    } else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n\n    return value;\n}\n\nexport function splitSignature(signature: SignatureLike): Signature {\n\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n\n    if (isBytesLike(signature)) {\n        let bytes: Uint8Array = arrayify(signature);\n\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n\n        } else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        } else {\n\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n\n\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            } else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) { bytes[32] |= 0x80; }\n        result._vs = hexlify(bytes.slice(32, 64))\n\n    } else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1: 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            } else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            } else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            } else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            } else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        } else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            } else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v :(1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        } else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        } else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) { vs[0] |= 0x80; }\n        const _vs = hexlify(vs);\n\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        } else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n\n    return result;\n}\n\nexport function joinSignature(signature: SignatureLike): string {\n    signature = splitSignature(signature);\n\n    return hexlify(concat([\n         signature.r,\n         signature.s,\n         (signature.recoveryParam ? \"0x1c\": \"0x1b\")\n    ]));\n}\n\n","\"use strict\";\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\n\nconst LogLevels: { [ name: string ]: number } = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\n\nimport { version } from \"./_version\";\n\nlet _globalLogger: Logger = null;\n\nfunction _checkNormalize(): string {\n    try {\n        const missing: Array<string> = [ ];\n\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                };\n            } catch(error) {\n                missing.push(form);\n            }\n        });\n\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\")\n        }\n    } catch (error) {\n        return error.message;\n    }\n\n    return null;\n}\n\nconst _normalizeError = _checkNormalize();\n\nexport enum LogLevel {\n    DEBUG    = \"DEBUG\",\n    INFO     = \"INFO\",\n    WARNING  = \"WARNING\",\n    ERROR    = \"ERROR\",\n    OFF      = \"OFF\"\n}\n\n\nexport enum ErrorCode {\n\n    ///////////////////\n    // Generic Errors\n\n    // Unknown Error\n    UNKNOWN_ERROR = \"UNKNOWN_ERROR\",\n\n    // Not Implemented\n    NOT_IMPLEMENTED = \"NOT_IMPLEMENTED\",\n\n    // Unsupported Operation\n    //   - operation\n    UNSUPPORTED_OPERATION = \"UNSUPPORTED_OPERATION\",\n\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    NETWORK_ERROR = \"NETWORK_ERROR\",\n\n    // Some sort of bad response from the server\n    SERVER_ERROR = \"SERVER_ERROR\",\n\n    // Timeout\n    TIMEOUT = \"TIMEOUT\",\n\n    ///////////////////\n    // Operational  Errors\n\n    // Buffer Overrun\n    BUFFER_OVERRUN = \"BUFFER_OVERRUN\",\n\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    NUMERIC_FAULT = \"NUMERIC_FAULT\",\n\n\n    ///////////////////\n    // Argument Errors\n\n    // Missing new operator to an object\n    //  - name: The name of the class\n    MISSING_NEW = \"MISSING_NEW\",\n\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    INVALID_ARGUMENT = \"INVALID_ARGUMENT\",\n\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    MISSING_ARGUMENT = \"MISSING_ARGUMENT\",\n\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    UNEXPECTED_ARGUMENT = \"UNEXPECTED_ARGUMENT\",\n\n\n    ///////////////////\n    // Blockchain Errors\n\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    CALL_EXCEPTION = \"CALL_EXCEPTION\",\n\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    INSUFFICIENT_FUNDS = \"INSUFFICIENT_FUNDS\",\n\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    NONCE_EXPIRED = \"NONCE_EXPIRED\",\n\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    REPLACEMENT_UNDERPRICED = \"REPLACEMENT_UNDERPRICED\",\n\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    UNPREDICTABLE_GAS_LIMIT = \"UNPREDICTABLE_GAS_LIMIT\",\n\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    TRANSACTION_REPLACED = \"TRANSACTION_REPLACED\",\n\n\n    ///////////////////\n    // Interaction Errors\n\n    // The user rejected the action, such as signing a message or sending\n    // a transaction\n    ACTION_REJECTED = \"ACTION_REJECTED\",\n};\n\nconst HEX = \"0123456789abcdef\";\n\nexport class Logger {\n    readonly version: string;\n\n    static errors = ErrorCode;\n\n    static levels = LogLevel;\n\n    constructor(version: string) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n\n    _log(logLevel: LogLevel, args: Array<any>): void {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) { return; }\n        console.log.apply(console, args);\n    }\n\n    debug(...args: Array<any>): void {\n        this._log(Logger.levels.DEBUG, args);\n    }\n\n    info(...args: Array<any>): void {\n        this._log(Logger.levels.INFO, args);\n    }\n\n    warn(...args: Array<any>): void {\n        this._log(Logger.levels.WARNING, args);\n    }\n\n    makeError(message: string, code?: ErrorCode, params?: any): Error {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, { });\n        }\n\n        if (!code) { code = Logger.errors.UNKNOWN_ERROR; }\n        if (!params) { params = {}; }\n\n        const messageDetails: Array<string> = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                      hex += HEX[value[i] >> 4];\n                      hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                } else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            } catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${ code }`);\n        messageDetails.push(`version=${ this.version }`);\n\n        const reason = message;\n\n        let url = \"\";\n\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n\n                switch (fault) {\n                    case \"overflow\": case \"underflow\": case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\": case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n\n        // @TODO: Any??\n        const error: any = new Error(message);\n        error.reason = reason;\n        error.code = code\n\n        Object.keys(params).forEach(function(key) {\n            error[key] = params[key];\n        });\n\n        return error;\n    }\n\n    throwError(message: string, code?: ErrorCode, params?: any): never {\n        throw this.makeError(message, code, params);\n    }\n\n    throwArgumentError(message: string, name: string, value: any): never {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n\n    assert(condition: any, message: string, code?: ErrorCode, params?: any): void {\n        if (!!condition) { return; }\n        this.throwError(message, code, params);\n    }\n\n    assertArgument(condition: any, message: string, name: string, value: any): void {\n        if (!!condition) { return; }\n        this.throwArgumentError(message, name, value);\n    }\n\n    checkNormalize(message?: string): void {\n        if (message == null) { message = \"platform missing String.prototype.normalize\"; }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n\n    checkSafeUint53(value: number, message?: string): void {\n        if (typeof(value) !== \"number\") { return; }\n\n        if (message == null) { message = \"value not safe\"; }\n\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n\n    checkArgumentCount(count: number, expectedCount: number, message?: string): void {\n        if (message) {\n            message = \": \" + message;\n        } else {\n            message = \"\";\n        }\n\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n\n    checkNew(target: any, kind: any): void {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    checkAbstract(target: any, kind: any): void {\n        if (target === kind) {\n            this.throwError(\n                \"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { name: target.name, operation: \"new\" }\n            );\n        } else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    static globalLogger(): Logger {\n        if (!_globalLogger) { _globalLogger = new Logger(version); }\n        return _globalLogger;\n    }\n\n    static setCensorship(censorship: boolean, permanent?: boolean): void {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        if (_permanentCensorErrors) {\n            if (!censorship) { return; }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n\n    static setLogLevel(logLevel: LogLevel): void {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n\n    static from(version: string): Logger {\n        return new Logger(version);\n    }\n}\n","export const version = \"logger/5.7.0\";\n","\"use strict\";\n\nimport { arrayify, BytesLike, hexZeroPad, isBytes } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BigNumber, BigNumberish, isBigNumberish } from \"./bignumber\";\n\nconst _constructorGuard = { };\n\nconst Zero = BigNumber.from(0);\nconst NegativeOne = BigNumber.from(-1);\n\nfunction throwFault(message: string, fault: string, operation: string, value?: any): never {\n    const params: any = { fault: fault, operation: operation };\n    if (value !== undefined) { params.value = value; }\n    return logger.throwError(message, Logger.errors.NUMERIC_FAULT, params);\n}\n\n// Constant to pull zeros from for multipliers\nlet zeros = \"0\";\nwhile (zeros.length < 256) { zeros += zeros; }\n\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getMultiplier(decimals: BigNumberish): string {\n\n    if (typeof(decimals) !== \"number\") {\n        try {\n            decimals = BigNumber.from(decimals).toNumber();\n        } catch (e) { }\n    }\n\n    if (typeof(decimals) === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n        return (\"1\" + zeros.substring(0, decimals));\n    }\n\n    return logger.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\n\nexport function formatFixed(value: BigNumberish, decimals?: string | BigNumberish): string {\n    if (decimals == null) { decimals = 0; }\n    const multiplier = getMultiplier(decimals);\n\n    // Make sure wei is a big number (convert as necessary)\n    value = BigNumber.from(value);\n\n    const negative = value.lt(Zero);\n    if (negative) { value = value.mul(NegativeOne); }\n\n    let fraction = value.mod(multiplier).toString();\n    while (fraction.length < multiplier.length - 1) { fraction = \"0\" + fraction; }\n\n    // Strip training 0\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n\n    const whole = value.div(multiplier).toString();\n    if (multiplier.length === 1) {\n        value = whole;\n    } else {\n        value = whole + \".\" + fraction;\n    }\n\n    if (negative) { value = \"-\" + value; }\n\n    return value;\n}\n\nexport function parseFixed(value: string, decimals?: BigNumberish): BigNumber {\n\n    if (decimals == null) { decimals = 0; }\n    const multiplier = getMultiplier(decimals);\n\n    if (typeof(value) !== \"string\" || !value.match(/^-?[0-9.]+$/)) {\n        logger.throwArgumentError(\"invalid decimal value\", \"value\", value);\n    }\n\n    // Is it negative?\n    const negative = (value.substring(0, 1) === \"-\");\n    if (negative) { value = value.substring(1); }\n\n    if (value === \".\") {\n        logger.throwArgumentError(\"missing value\", \"value\", value);\n    }\n\n    // Split it into a whole and fractional part\n    const comps = value.split(\".\");\n    if (comps.length > 2) {\n        logger.throwArgumentError(\"too many decimal points\", \"value\", value);\n    }\n\n    let whole = comps[0], fraction = comps[1];\n    if (!whole) { whole = \"0\"; }\n    if (!fraction) { fraction = \"0\"; }\n\n    // Trim trailing zeros\n    while (fraction[fraction.length - 1] === \"0\") {\n        fraction = fraction.substring(0, fraction.length - 1);\n    }\n\n    // Check the fraction doesn't exceed our decimals size\n    if (fraction.length > multiplier.length - 1) {\n        throwFault(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n    }\n\n    // If decimals is 0, we have an empty string for fraction\n    if (fraction === \"\") { fraction = \"0\"; }\n\n    // Fully pad the string with zeros to get to wei\n    while (fraction.length < multiplier.length - 1) { fraction += \"0\"; }\n\n    const wholeValue = BigNumber.from(whole);\n    const fractionValue = BigNumber.from(fraction);\n\n    let wei = (wholeValue.mul(multiplier)).add(fractionValue);\n\n    if (negative) { wei = wei.mul(NegativeOne); }\n\n    return wei;\n}\n\n\nexport class FixedFormat {\n    readonly signed: boolean;\n    readonly width: number;\n    readonly decimals: number;\n    readonly name: string;\n    readonly _multiplier: string;\n\n    constructor(constructorGuard: any, signed: boolean, width: number, decimals: number) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n\n        this.signed = signed;\n        this.width = width;\n        this.decimals = decimals;\n\n        this.name = (signed ? \"\": \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n\n        this._multiplier = getMultiplier(decimals);\n\n        Object.freeze(this);\n    }\n\n    static from(value: any): FixedFormat {\n        if (value instanceof FixedFormat) { return value; }\n\n        if (typeof(value) === \"number\") {\n            value = `fixed128x${value}`\n        }\n\n        let signed = true;\n        let width = 128;\n        let decimals = 18;\n\n        if (typeof(value) === \"string\") {\n            if (value === \"fixed\") {\n                // defaults...\n            } else if (value === \"ufixed\") {\n                signed = false;\n            } else {\n                const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                if (!match) { logger.throwArgumentError(\"invalid fixed format\", \"format\", value); }\n                signed = (match[1] !== \"u\");\n                width = parseInt(match[2]);\n                decimals = parseInt(match[3]);\n            }\n        } else if (value) {\n            const check = (key: string, type: string, defaultValue: any): any => {\n                if (value[key] == null) { return defaultValue; }\n                if (typeof(value[key]) !== type) {\n                    logger.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type +\")\", \"format.\" + key, value[key]);\n                }\n                return value[key];\n            }\n            signed = check(\"signed\", \"boolean\", signed);\n            width = check(\"width\", \"number\", width);\n            decimals = check(\"decimals\", \"number\", decimals);\n        }\n\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n        }\n\n        if (decimals > 80) {\n            logger.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n        }\n\n        return new FixedFormat(_constructorGuard, signed, width, decimals);\n    }\n}\n\nexport class FixedNumber {\n    readonly format: FixedFormat;\n    readonly _hex: string;\n    readonly _value: string;\n\n    readonly _isFixedNumber: boolean;\n\n    constructor(constructorGuard: any, hex: string, value: string, format?: FixedFormat) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n\n        this.format = format;\n        this._hex = hex;\n        this._value = value;\n\n        this._isFixedNumber = true;\n\n        Object.freeze(this);\n    }\n\n    _checkFormat(other: FixedNumber): void {\n        if (this.format.name !== other.format.name) {\n            logger.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n        }\n    }\n\n    addUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n    }\n\n    subUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n    }\n\n    mulUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n    }\n\n    divUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n    }\n\n    floor(): FixedNumber {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) { comps.push(\"0\"); }\n\n        let result = FixedNumber.from(comps[0], this.format);\n\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (this.isNegative() && hasFraction) {\n            result = result.subUnsafe(ONE.toFormat(result.format));\n        }\n\n        return result;\n    }\n\n    ceiling(): FixedNumber {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) { comps.push(\"0\"); }\n\n        let result = FixedNumber.from(comps[0], this.format);\n\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (!this.isNegative() && hasFraction) {\n            result = result.addUnsafe(ONE.toFormat(result.format));\n        }\n\n        return result;\n    }\n\n    // @TODO: Support other rounding algorithms\n    round(decimals?: number): FixedNumber {\n        if (decimals == null) { decimals = 0; }\n\n        // If we are already in range, we're done\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) { comps.push(\"0\"); }\n\n        if (decimals < 0 || decimals > 80 || (decimals % 1)) {\n            logger.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n        }\n\n        if (comps[1].length <= decimals) { return this; }\n\n        const factor = FixedNumber.from(\"1\" + zeros.substring(0, decimals), this.format);\n        const bump = BUMP.toFormat(this.format);\n\n        return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);\n    }\n\n    isZero(): boolean {\n        return (this._value === \"0.0\" || this._value === \"0\");\n    }\n\n    isNegative(): boolean {\n        return (this._value[0] === \"-\");\n    }\n\n    toString(): string { return this._value; }\n\n    toHexString(width?: number): string {\n        if (width == null) { return this._hex; }\n        if (width % 8) { logger.throwArgumentError(\"invalid byte width\", \"width\", width); }\n        const hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n        return hexZeroPad(hex, width / 8);\n    }\n\n    toUnsafeFloat(): number { return parseFloat(this.toString()); }\n\n    toFormat(format: FixedFormat | string): FixedNumber {\n        return FixedNumber.fromString(this._value, format);\n    }\n\n\n    static fromValue(value: BigNumber, decimals?: BigNumberish, format?: FixedFormat | string | number): FixedNumber {\n        // If decimals looks more like a format, and there is no format, shift the parameters\n        if (format == null && decimals != null && !isBigNumberish(decimals)) {\n            format = decimals;\n            decimals = null;\n        }\n\n        if (decimals == null) { decimals = 0; }\n        if (format == null) { format = \"fixed\"; }\n\n        return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n    }\n\n\n    static fromString(value: string, format?: FixedFormat | string | number): FixedNumber {\n        if (format == null) { format = \"fixed\"; }\n\n        const fixedFormat = FixedFormat.from(format);\n\n        const numeric = parseFixed(value, fixedFormat.decimals);\n\n        if (!fixedFormat.signed && numeric.lt(Zero)) {\n            throwFault(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n        }\n\n        let hex: string = null;\n        if (fixedFormat.signed) {\n            hex = numeric.toTwos(fixedFormat.width).toHexString();\n        } else {\n            hex = numeric.toHexString();\n            hex = hexZeroPad(hex, fixedFormat.width / 8);\n        }\n\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n\n    static fromBytes(value: BytesLike, format?: FixedFormat | string | number): FixedNumber {\n        if (format == null) { format = \"fixed\"; }\n\n        const fixedFormat = FixedFormat.from(format);\n\n        if (arrayify(value).length > fixedFormat.width / 8) {\n            throw new Error(\"overflow\");\n        }\n\n        let numeric = BigNumber.from(value);\n        if (fixedFormat.signed) { numeric = numeric.fromTwos(fixedFormat.width); }\n\n        const hex = numeric.toTwos((fixedFormat.signed ? 0: 1) + fixedFormat.width).toHexString();\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n\n    static from(value: any, format?: FixedFormat | string | number) {\n        if (typeof(value) === \"string\") {\n            return FixedNumber.fromString(value, format);\n        }\n\n        if (isBytes(value)) {\n            return FixedNumber.fromBytes(value, format);\n        }\n\n        try {\n            return FixedNumber.fromValue(value, 0, format);\n        } catch (error) {\n            // Allow NUMERIC_FAULT to bubble up\n            if (error.code !== Logger.errors.INVALID_ARGUMENT) {\n                throw error;\n            }\n        }\n\n        return logger.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n    }\n\n    static isFixedNumber(value: any): value is FixedNumber {\n        return !!(value && value._isFixedNumber);\n    }\n}\n\nconst ONE = FixedNumber.from(1);\nconst BUMP = FixedNumber.from(\"0.5\");\n","\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { formatFixed, parseFixed } from \"@ethersproject/bignumber\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst names = [\n    \"wei\",\n    \"kwei\",\n    \"mwei\",\n    \"gwei\",\n    \"szabo\",\n    \"finney\",\n    \"ether\",\n];\n\n\n// Some environments have issues with RegEx that contain back-tracking, so we cannot\n// use them.\nexport function commify(value: string | number): string {\n    const comps = String(value).split(\".\");\n\n    if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || (comps[1] && !comps[1].match(/^[0-9]*$/)) || value === \".\" || value === \"-.\") {\n        logger.throwArgumentError(\"invalid value\", \"value\", value);\n    }\n\n    // Make sure we have at least one whole digit (0 if none)\n    let whole = comps[0];\n\n    let negative = \"\";\n    if (whole.substring(0, 1) === \"-\") {\n        negative = \"-\";\n        whole = whole.substring(1);\n    }\n\n    // Make sure we have at least 1 whole digit with no leading zeros\n    while (whole.substring(0, 1) === \"0\") { whole = whole.substring(1); }\n    if (whole === \"\") { whole = \"0\"; }\n\n    let suffix = \"\";\n    if (comps.length === 2) { suffix = \".\" + (comps[1] || \"0\"); }\n    while (suffix.length > 2 && suffix[suffix.length - 1] === \"0\") {\n        suffix = suffix.substring(0, suffix.length - 1);\n    }\n\n    const formatted = [];\n    while (whole.length) {\n        if (whole.length <= 3) {\n            formatted.unshift(whole);\n            break;\n        } else {\n            const index = whole.length - 3;\n            formatted.unshift(whole.substring(index));\n            whole = whole.substring(0, index);\n        }\n    }\n\n    return negative + formatted.join(\",\") + suffix;\n}\n\nexport function formatUnits(value: BigNumberish, unitName?: string | BigNumberish): string {\n    if (typeof(unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) { unitName = 3 * index; }\n    }\n    return formatFixed(value, (unitName != null) ? unitName: 18);\n}\n\nexport function parseUnits(value: string, unitName?: BigNumberish): BigNumber {\n    if (typeof(value) !== \"string\") {\n        logger.throwArgumentError(\"value must be a string\", \"value\", value);\n    }\n    if (typeof(unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) { unitName = 3 * index; }\n    }\n    return parseFixed(value, (unitName != null) ? unitName: 18);\n}\n\nexport function formatEther(wei: BigNumberish): string {\n    return formatUnits(wei, 18);\n}\n\nexport function parseEther(ether: string): BigNumber {\n    return parseUnits(ether, 18);\n}\n\n","export const version = \"units/5.7.0\";\n","import {\n  BlockTag,\n  EventType,\n  TransactionReceipt\n} from '@ethersproject/abstract-provider';\nimport { BigNumberish } from '@ethersproject/bignumber';\n\nimport {\n  ERC1155Metadata,\n  NftRefreshState,\n  NftTokenType,\n  RawContract\n} from './nft-types';\n\nexport * from './ethers-types';\n\n// TODO: separate this file into other files.\n\n/**\n * Options object used to configure the Alchemy SDK.\n *\n * @public\n */\nexport interface AlchemySettings {\n  /**\n   * The Alchemy API key that can be found in the Alchemy dashboard.\n   *\n   * Defaults to: \"demo\" (a rate-limited public API key)\n   */\n  apiKey?: string;\n\n  /**\n   * The name of the network. Once configured, the network cannot be changed. To\n   * use a different network, instantiate a new `Alchemy` instance.\n   *\n   * Defaults to: Network.ETH_MAINNET\n   */\n  network?: Network;\n\n  /** The maximum number of retries to attempt if a request fails. Defaults to 5. */\n  maxRetries?: number;\n\n  /**\n   * Optional URL endpoint to use for all requests. Setting this field will\n   * override the URL generated by the {@link network} and {@link apiKey} fields.\n   *\n   * This field is useful for testing or for using a custom node endpoint. Note\n   * that not all methods will work with custom URLs.\n   */\n  url?: string;\n\n  /**\n   * Alchemy auth token required to use the Notify API. This token can be found\n   * in the Alchemy Dashboard on the Notify tab.\n   */\n  authToken?: string;\n\n  /**\n   * Optional Request timeout provided in `ms` while using NFT and NOTIFY API.\n   * Default to 0 (No timeout).\n   */\n  requestTimeout?: number;\n\n  /**\n   * Optional setting that automatically batches and sends json-rpc requests for\n   * higher throughput and reduced network IO. Defaults to false.\n   *\n   * This implementation is based on the `JsonRpcBatchProvider` in ethers.\n   */\n  batchRequests?: boolean;\n}\n\n/**\n * The supported networks by Alchemy. Note that some functions are not available\n * on all networks. Please refer to the Alchemy documentation for which APIs are\n * available on which networks\n * {@link https://docs.alchemy.com/alchemy/apis/feature-support-by-chain}\n *\n * @public\n */\nexport enum Network {\n  ETH_MAINNET = 'eth-mainnet',\n  ETH_GOERLI = 'eth-goerli',\n  ETH_SEPOLIA = 'eth-sepolia',\n  OPT_MAINNET = 'opt-mainnet',\n  OPT_GOERLI = 'opt-goerli',\n  OPT_SEPOLIA = 'opt-sepolia',\n  ARB_MAINNET = 'arb-mainnet',\n  ARB_GOERLI = 'arb-goerli',\n  ARB_SEPOLIA = 'arb-sepolia',\n  MATIC_MAINNET = 'polygon-mainnet',\n  MATIC_MUMBAI = 'polygon-mumbai',\n  ASTAR_MAINNET = 'astar-mainnet',\n  POLYGONZKEVM_MAINNET = 'polygonzkevm-mainnet',\n  POLYGONZKEVM_TESTNET = 'polygonzkevm-testnet',\n  BASE_MAINNET = 'base-mainnet',\n  BASE_GOERLI = 'base-goerli',\n  BASE_SEPOLIA = 'base-sepolia'\n}\n\n/** Token Types for the `getTokenBalances()` endpoint. */\nexport enum TokenBalanceType {\n  /**\n   * Option to fetch the top 100 tokens by 24-hour volume. This option is only\n   * available on Mainnet in Ethereum, Polygon, and Arbitrum.\n   */\n  DEFAULT_TOKENS = 'DEFAULT_TOKENS',\n\n  /**\n   * Option to fetch the set of ERC-20 tokens that the address as ever held. his\n   * list is produced by an address's historical transfer activity and includes\n   * all tokens that the address has ever received.\n   */\n  ERC20 = 'erc20'\n}\n\n/**\n * Optional params to pass into `getTokenBalances()` to fetch all ERC-20 tokens\n * instead of passing in an array of contract addresses to fetch balances for.\n */\nexport interface TokenBalancesOptionsErc20 {\n  /** The ERC-20 token type. */\n  type: TokenBalanceType.ERC20;\n\n  /** Optional page key for pagination (only applicable to TokenBalanceType.ERC20) */\n  pageKey?: string;\n}\n\n/**\n * Optional params to pass into `getTokenBalances()` to fetch the top 100 tokens\n * instead of passing in an array of contract addresses to fetch balances for.\n */\nexport interface TokenBalancesOptionsDefaultTokens {\n  /** The top 100 token type. */\n  type: TokenBalanceType.DEFAULT_TOKENS;\n}\n\n/**\n * Response object for when the {@link TokenBalancesOptionsErc20} options are\n * used. A page key may be returned if the provided address has many transfers.\n */\nexport interface TokenBalancesResponseErc20 extends TokenBalancesResponse {\n  /**\n   * An optional page key to passed into the next request to fetch the next page\n   * of token balances.\n   */\n  pageKey?: string;\n}\n\n/** @public */\nexport interface TokenBalancesResponse {\n  address: string;\n  tokenBalances: TokenBalance[];\n}\n\n/** @public */\nexport type TokenBalance = TokenBalanceSuccess | TokenBalanceFailure;\n\n/** @public */\nexport interface TokenBalanceSuccess {\n  contractAddress: string;\n  tokenBalance: string;\n  error: null;\n}\n\n/** @public */\nexport interface TokenBalanceFailure {\n  contractAddress: string;\n  tokenBalance: null;\n  error: string;\n}\n\n/**\n * Optional params to pass into {@link CoreNamespace.getTokensForOwner}.\n */\nexport interface GetTokensForOwnerOptions {\n  /**\n   * List of contract addresses to filter by. If omitted, defaults to\n   * {@link TokenBalanceType.ERC20}.\n   */\n  contractAddresses?: string[] | TokenBalanceType;\n  /**\n   * Optional page key from an existing {@link GetTokensForOwnerResponse} to use for\n   * pagination.\n   */\n  pageKey?: string;\n}\n\n/**\n * Response object for {@link CoreNamespace.getTokensForOwner}.\n */\nexport interface GetTokensForOwnerResponse {\n  /** Owned tokens for the provided addresses along with relevant metadata. */\n  tokens: OwnedToken[];\n  /** Page key for the next page of results, if one exists. */\n  pageKey?: string;\n}\n\n/**\n * Represents an owned token on a {@link GetTokensForOwnerResponse}.\n */\nexport interface OwnedToken {\n  /** The contract address of the token. */\n  contractAddress: string;\n  /**\n   * The raw value of the balance field as a hex string. This value is undefined\n   * if the {@link error} field is present.\n   */\n  rawBalance?: string;\n  /**\n   * The formatted value of the balance field as a hex string. This value is\n   * undefined if the {@link error} field is present, or if the `decimals` field=\n   * is undefined.\n   */\n  balance?: string;\n  /** */\n  /**\n   * The token's name. Is undefined if the name is not defined in the contract and\n   * not available from other sources.\n   */\n  name?: string;\n  /**\n   * The token's symbol. Is undefined if the symbol is not defined in the contract\n   * and not available from other sources.\n   */\n  symbol?: string;\n  /**\n   * The number of decimals of the token. Is undefined if not defined in the\n   * contract and not available from other sources.\n   */\n  decimals?: number;\n  /** URL link to the token's logo. Is undefined if the logo is not available. */\n  logo?: string;\n  /**\n   * Error from fetching the token balances. If this field is defined, none of\n   * the other fields will be defined.\n   */\n  error?: string;\n}\n\n/**\n * Response object for the {@link CoreNamespace.getTokenMetadata} method.\n *\n * @public\n */\nexport interface TokenMetadataResponse {\n  /**\n   * The token's name. Is `null` if the name is not defined in the contract and\n   * not available from other sources.\n   */\n  name: string | null;\n\n  /**\n   * The token's symbol. Is `null` if the symbol is not defined in the contract\n   * and not available from other sources.\n   */\n  symbol: string | null;\n\n  /**\n   * The number of decimals of the token. Returns `null` if not defined in the\n   * contract and not available from other sources.\n   */\n  decimals: number | null;\n\n  /** URL link to the token's logo. Is `null` if the logo is not available. */\n  logo: string | null;\n}\n\n/**\n * Parameters for the {@link CoreNamespace.getAssetTransfers} method.\n *\n * @public\n */\nexport interface AssetTransfersParams {\n  /**\n   * The starting block to check for transfers. This value is inclusive and\n   * defaults to `0x0` if omitted.\n   */\n  fromBlock?: string;\n\n  /**\n   * The ending block to check for transfers. This value is inclusive and\n   * defaults to the latest block if omitted.\n   */\n  toBlock?: string;\n\n  /**\n   * Whether to return results in ascending or descending order by block number.\n   * Defaults to ascending if omitted.\n   */\n  order?: SortingOrder;\n\n  /**\n   * The from address to filter transfers by. This value defaults to a wildcard\n   * for all addresses if omitted.\n   */\n  fromAddress?: string;\n\n  /**\n   * The to address to filter transfers by. This value defaults to a wildcard\n   * for all address if omitted.\n   */\n  toAddress?: string;\n\n  /**\n   * List of contract addresses to filter for - only applies to \"erc20\",\n   * \"erc721\", \"erc1155\" transfers. Defaults to all address if omitted.\n   */\n  contractAddresses?: string[];\n\n  /**\n   * Whether to exclude transfers with zero value. Note that zero value is\n   * different than null value. Defaults to `true` if omitted.\n   */\n  excludeZeroValue?: boolean;\n\n  /** REQUIRED field. An array of categories to get transfers for. */\n  category: AssetTransfersCategory[];\n\n  /** The maximum number of results to return per page. Defaults to 1000 if omitted. */\n  maxCount?: number;\n\n  /**\n   * Optional page key from an existing {@link OwnedBaseNftsResponse}\n   * {@link AssetTransfersResult}to use for pagination.\n   */\n  pageKey?: string;\n\n  /**\n   * Whether to include additional metadata about each transfer event. Defaults\n   * to `false` if omitted.\n   */\n  withMetadata?: boolean;\n}\n\n/**\n * Parameters for the {@link CoreNamespace.getAssetTransfers} method that\n * includes metadata.\n *\n * @public\n */\nexport interface AssetTransfersWithMetadataParams extends AssetTransfersParams {\n  withMetadata: true;\n}\n\n/**\n * Categories of transfers to use with the {@link AssetTransfersParams} request\n * object when using {@link CoreNamespace.getAssetTransfers}.\n *\n * @public\n */\nexport enum AssetTransfersCategory {\n  /**\n   * Top level ETH transactions that occur where the `fromAddress` is an\n   * external user-created address. External addresses have private keys and are\n   * accessed by users.\n   */\n  EXTERNAL = 'external',\n\n  /**\n   * Top level ETH transactions that occur where the `fromAddress` is an\n   * internal, smart contract address. For example, a smart contract calling\n   * another smart contract or sending\n   */\n  INTERNAL = 'internal',\n\n  /** ERC20 transfers. */\n  ERC20 = 'erc20',\n\n  /** ERC721 transfers. */\n  ERC721 = 'erc721',\n\n  /** ERC1155 transfers. */\n  ERC1155 = 'erc1155',\n\n  /** Special contracts that don't follow ERC 721/1155, (ex: CryptoKitties). */\n  SPECIALNFT = 'specialnft'\n}\n\n/**\n * Response object for the {@link CoreNamespace.getAssetTransfers} method.\n *\n * @public\n */\nexport interface AssetTransfersResponse {\n  transfers: AssetTransfersResult[];\n  /** Page key for the next page of results, if one exists. */\n  pageKey?: string;\n}\n\n/**\n * Response object for the {@link CoreNamespace.getAssetTransfers} method when\n * the {@link AssetTransfersWithMetadataParams} are used.\n *\n * @public\n */\nexport interface AssetTransfersWithMetadataResponse {\n  transfers: AssetTransfersWithMetadataResult[];\n  pageKey?: string;\n}\n\n/**\n * Represents a transfer event that is returned in a {@link AssetTransfersResponse}.\n *\n * @public\n */\nexport interface AssetTransfersResult {\n  /** The unique ID of the transfer. */\n  uniqueId: string;\n\n  /** The category of the transfer. */\n  category: AssetTransfersCategory;\n\n  /** The block number where the transfer occurred. */\n  blockNum: string;\n\n  /** The from address of the transfer. */\n  from: string;\n\n  /** The to address of the transfer. */\n  to: string | null;\n\n  /**\n   * Converted asset transfer value as a number (raw value divided by contract\n   * decimal). `null` if ERC721 transfer or contract decimal not available.\n   */\n  value: number | null;\n\n  /**\n   * The raw ERC721 token id of the transfer as a hex string. `null` if not an\n   * ERC721 transfer.\n   */\n  erc721TokenId: string | null;\n\n  /**\n   * A list of ERC1155 metadata objects if the asset transferred is an ERC1155\n   * token. `null` if not an ERC1155 transfer.\n   */\n  erc1155Metadata: ERC1155Metadata[] | null;\n\n  /** The token id of the token transferred. */\n  tokenId: string | null;\n\n  /**\n   * Returns the token's symbol or ETH for other transfers. `null` if the\n   * information was not available.\n   */\n  asset: string | null;\n\n  /** The transaction hash of the transfer transaction. */\n  hash: string;\n\n  /** Information about the raw contract of the asset transferred. */\n  rawContract: RawContract;\n}\n\n/**\n * Represents a transfer event that is returned in a\n * {@link AssetTransfersResponse} when {@link AssetTransfersWithMetadataParams} are used.\n *\n * @public\n */\nexport interface AssetTransfersWithMetadataResult extends AssetTransfersResult {\n  /** Additional metadata about the transfer event. */\n  metadata: AssetTransfersMetadata;\n}\n\n/**\n * The metadata object for a {@link AssetTransfersResult} when the\n * {@link AssetTransfersParams.withMetadata} field is set to true.\n *\n * @public\n */\nexport interface AssetTransfersMetadata {\n  /** Timestamp of the block from which the transaction event originated. */\n  blockTimestamp: string;\n}\n\n/**\n * The type of transfer for the request. Note that using `TO` will also include\n * NFTs that were minted by the owner.\n */\nexport enum GetTransfersForOwnerTransferType {\n  'TO' = 'TO',\n  'FROM' = 'FROM'\n}\n\n/**\n * Optional parameters object for the {@link NftNamespace.getTransfersForOwner} method.\n */\nexport interface GetTransfersForOwnerOptions {\n  /**\n   * List of NFT contract addresses to filter mints by. If omitted, defaults to\n   * all contract addresses.\n   */\n  contractAddresses?: string[];\n\n  /**\n   * Filter mints by ERC721 vs ERC1155 contracts. If omitted, defaults to all\n   * NFTs.\n   */\n  tokenType?: NftTokenType.ERC1155 | NftTokenType.ERC721;\n\n  /**\n   * Optional page key from an existing {@link TransfersNftResponse} to use for\n   * pagination.\n   */\n  pageKey?: string;\n}\n\n/**\n * Enum for representing the supported sorting orders of the API.\n *\n * @public\n */\nexport enum SortingOrder {\n  ASCENDING = 'asc',\n  DESCENDING = 'desc'\n}\n\n/** The refresh result response object returned by {@link refreshContract}. */\nexport interface RefreshContractResult {\n  /** The NFT contract address that was passed in to be refreshed. */\n  contractAddress: string;\n\n  /** The current state of the refresh request. */\n  refreshState: NftRefreshState;\n\n  /**\n   * Percentage of tokens currently refreshed, represented as an integer string.\n   * Field can be null if the refresh has not occurred.\n   */\n  progress: string | null;\n}\n\n/**\n * The parameter field of {@link TransactionReceiptsParams}.\n *\n * @public\n */\nexport interface TransactionReceiptsBlockNumber {\n  /** The block number to get transaction receipts for. */\n  blockNumber: string;\n}\n\n/**\n * The parameter field of {@link TransactionReceiptsParams}.\n *\n * @public\n */\nexport interface TransactionReceiptsBlockHash {\n  /** The block hash to get transaction receipts for. */\n  blockHash: string;\n}\n\n/**\n * The parameters to use with the {@link CoreNamespace.getTransactionReceipts} method.\n *\n * @public\n */\nexport type TransactionReceiptsParams =\n  | TransactionReceiptsBlockNumber\n  | TransactionReceiptsBlockHash;\n\n/**\n * Response object for a {@link CoreNamespace.getTransactionReceipts} call.\n *\n * @public\n */\nexport interface TransactionReceiptsResponse {\n  /** A list of transaction receipts for the queried block. */\n  receipts: TransactionReceipt[] | null;\n}\n\n/** An OpenSea collection's approval status. */\nexport enum OpenSeaSafelistRequestStatus {\n  /** Verified collection. */\n  VERIFIED = 'verified',\n  /** Collections that are approved on open sea and can be found in search results. */\n  APPROVED = 'approved',\n  /** Collections that requested safelisting on OpenSea. */\n  REQUESTED = 'requested',\n  /** Brand new collections. */\n  NOT_REQUESTED = 'not_requested'\n}\n\n/**\n * The response object for the {@link findContractDeployer} function.\n *\n * @public\n */\nexport interface DeployResult {\n  /** The address of the contract deployer, if it is available. */\n  deployerAddress?: string;\n\n  /** The block number the contract was deployed in. */\n  blockNumber: number;\n}\n\n/**\n * Method names for Alchemy's custom Subscription API endpoints.\n *\n * This value is provided in the `method` field when creating an event filter on\n * the Websocket Namespace.\n */\nexport enum AlchemySubscription {\n  PENDING_TRANSACTIONS = 'alchemy_pendingTransactions',\n  MINED_TRANSACTIONS = 'alchemy_minedTransactions'\n}\n\n/**\n * Event filter for the {@link AlchemyWebSocketProvider.on} and\n * {@link AlchemyWebSocketProvider.once} methods to use Alchemy's custom\n * `alchemy_pendingTransactions` endpoint.\n *\n * Returns the transaction information for all pending transactions that match a\n * given filter. For full documentation, see:\n * {@link https://docs.alchemy.com/reference/alchemy-pendingtransactions}\n *\n * Note that excluding all optional parameters will return transaction\n * information for ALL pending transactions that are added to the mempool.\n *\n * @public\n */\nexport interface AlchemyPendingTransactionsEventFilter {\n  method: AlchemySubscription.PENDING_TRANSACTIONS;\n\n  /**\n   * Filter pending transactions sent FROM the provided address or array of\n   * addresses.\n   *\n   * If a {@link AlchemyPendingTransactionsEventFilter.toAddress} is also\n   * present, then this filter will return transactions sent from the\n   * `fromAddress` OR transactions received by the `toAddress`.\n   */\n  fromAddress?: string | string[];\n\n  /**\n   * Filter pending transactions sent TO the provided address or array of\n   * addresses.\n   *\n   * If a {@link AlchemyPendingTransactionsEventFilter.fromAddress} is also\n   * present, then this filter will return transactions sent from the\n   * `fromAddress` OR transactions received by the `toAddress`.\n   */\n  toAddress?: string | string[];\n\n  /**\n   * Whether to only include transaction hashes and exclude the rest of the\n   * transaction response for a smaller payload. Defaults to false (by default,\n   * the entire transaction response is included).\n   *\n   * Note that setting only {@link hashesOnly} to true will return the same\n   * response as subscribing to `newPendingTransactions`.\n   */\n  hashesOnly?: boolean;\n}\n\n/**\n * Event filter for the {@link AlchemyWebSocketProvider.on} and\n * {@link AlchemyWebSocketProvider.once} methods to use Alchemy's custom\n * `alchemy_minedTransactions` endpoint.\n *\n * Returns the transaction information for all mined transactions that match the\n * provided filter. For full documentation, see:\n * {@link https://docs.alchemy.com/reference/alchemy-minedtransactions}\n *\n * Note that excluding all optional parameters will return transaction\n * information for ALL mined transactions.\n *\n * @public\n */\nexport interface AlchemyMinedTransactionsEventFilter {\n  method: AlchemySubscription.MINED_TRANSACTIONS;\n\n  /**\n   * Address filters to subscribe to. Defaults to all transactions if omitted.\n   * Limit 100 address filters. Requires a non-empty array.\n   */\n  addresses?: NonEmptyArray<AlchemyMinedTransactionsAddress>;\n\n  /**\n   * Whether to include transactions that were removed from the mempool.\n   * Defaults to false.\n   */\n  includeRemoved?: boolean;\n\n  /**\n   * Whether to only include transaction hashes and exclude the rest of the\n   * transaction response for a smaller payload. Defaults to false (by default,\n   * the entire transaction response is included).\n   */\n  hashesOnly?: boolean;\n}\n\n/**\n * Address filters for {@link AlchemyMinedTransactionsEventFilter}. Requires at\n * least one of the fields to be set.\n */\nexport type AlchemyMinedTransactionsAddress = RequireAtLeastOne<{\n  to?: string;\n  from?: string;\n}>;\n\n/**\n * Alchemy's event type that extends the default {@link EventType} interface to\n * also include Alchemy's Subscription API.\n *\n * @public\n */\nexport type AlchemyEventType = EventType | AlchemyEventFilter;\n\n/**\n * This type represents the Alchemy's Subscription API endpoints as event\n * filters compatible with other ethers events.\n */\nexport type AlchemyEventFilter =\n  | AlchemyMinedTransactionsEventFilter\n  | AlchemyPendingTransactionsEventFilter;\n\n/** Options for the {@link TransactNamespace.sendPrivateTransaction} method. */\nexport interface SendPrivateTransactionOptions {\n  /**\n   * Whether to use fast-mode. Defaults to false. Please note that fast mode\n   * transactions cannot be cancelled using\n   * {@link TransactNamespace.cancelPrivateTransaction}. method.\n   *\n   * See {@link https://docs.flashbots.net/flashbots-protect/rpc/fast-mode} for\n   * more details.\n   */\n  fast: boolean;\n}\n\n/**\n * Asset type returned when calling {@link TransactNamespace.simulateAssetChanges}.\n * Allows you to determine if the assets approved or / and transferred are\n * native, tokens or NFTs.\n */\nexport enum SimulateAssetType {\n  /**\n   * Native transfers that involve the currency of the chain the simulation is\n   * run on (ex: ETH for Ethereum, MATIC for Polygon, ETH for Arbitrum).\n   */\n  NATIVE = 'NATIVE',\n  /** ERC20 approval or transfers. */\n  ERC20 = 'ERC20',\n  /** ERC721 approval or transfers. */\n  ERC721 = 'ERC721',\n  /** ERC1155 approval or transfers. */\n  ERC1155 = 'ERC1155',\n  /**\n   * Special contracts that don't follow ERC 721/1155.Currently limited to\n   * CryptoKitties and CryptoPunks.\n   */\n  SPECIAL_NFT = 'SPECIAL_NFT'\n}\n\n/**\n * Change type returned when calling {@link TransactNamespace.simulateAssetChanges}.\n */\nexport enum SimulateChangeType {\n  /**\n   * Represents a transaction that approved or disapproved permissions for a\n   * contract.\n   *\n   * APPROVE without token ID → approve all tokens\n   * APPROVE without amount → approve all amount\n   * APPROVE with zero amount → approval being cleared\n   */\n  APPROVE = 'APPROVE',\n\n  /**\n   * Represents a transaction that transferred tokens from one address to another.\n   */\n  TRANSFER = 'TRANSFER'\n}\n\n/**\n * The error field returned in a {@link SimulateAssetChangesResponse} if the\n * simulation failed.\n */\nexport interface SimulateAssetChangesError extends Record<string, any> {\n  /** The error message. */\n  message: string;\n}\n\n/**\n * Represents an asset change from a call to\n * {@link TransactNamespace.simulateAssetChanges}.\n */\nexport interface SimulateAssetChangesChange {\n  /** The type of asset from the transaction. */\n  assetType: SimulateAssetType;\n\n  /** The type of change from the transaction. */\n  changeType: SimulateChangeType;\n\n  /** The from address. */\n  from: string;\n\n  /** The to address. */\n  to: string;\n\n  /**\n   * The raw amount as an integer string. Only available on TRANSFER changes for\n   * NATIVE and ERC20 assets, or ERC721/ERC1155 disapprove changes (field set to\n   * '0').\n   */\n  rawAmount?: string;\n\n  /**\n   * The amount as an integer string. This value is calculated by applying the\n   * `decimals` field to the `rawAmount` field. Only available on TRANSFER\n   * changes for NATIVE and ERC20 assets, or ERC721/ERC1155 disapprove changes\n   * (field set to '0').\n   */\n  amount?: string;\n\n  /** The name of the asset transferred, if available. */\n  name?: string;\n\n  /** The symbol of the asset transferred if available. */\n  symbol?: string;\n\n  /**\n   * The number of decimals used by the ERC20 token. Set to 0 for APPROVE\n   * changes. Field is undefined if it's not defined in the contract and not\n   * available from other sources.\n   */\n  decimals?: number;\n\n  /**\n   * The contract address of the asset. Only applicable to ERC20, ERC721,\n   * ERC1155, NFT and SPECIAL_NFT transactions.\n   */\n  contractAddress?: string;\n\n  /**\n   * URL for the logo of the asset, if available. Only applicable to ERC20 transactions.\n   */\n  logo?: string;\n\n  /**\n   * The token id of the asset transferred. Only applicable to ERC721,\n   * ERC1155 and SPECIAL_NFT NFTs.\n   */\n  tokenId?: string;\n}\n\n/**\n * Response object for the {@link TransactNamespace.simulateAssetChanges} method.\n */\nexport interface SimulateAssetChangesResponse {\n  /** An array of asset changes that resulted from the transaction. */\n  changes: SimulateAssetChangesChange[];\n  /**\n   * The amount of gas used by the transaction represented as a hex string. The\n   * field is undefined if an error occurred.\n   */\n  gasUsed?: string;\n  /** Optional error field that is present if an error occurred. */\n  error?: SimulateAssetChangesError;\n}\n\n/**\n * Authority used to decode calls and logs when using the\n * {@link TransactNamespace.simulateExecution} method.\n */\nexport enum DecodingAuthority {\n  ETHERSCAN = 'ETHERSCAN'\n}\n\n/** The input or output parameters from a {@link DecodedDebugCallTrace}. */\nexport interface DecodedCallParam {\n  /** Value of the parameter. */\n  value: string;\n  /** The name of the parameter. */\n  name: string;\n  /** The type of the parameter.*/\n  type: string;\n}\n\n/** The input parameters from a {@link DecodedLog}. */\nexport interface DecodedLogInput extends DecodedCallParam {\n  /** Whether the log is marked as indexed in the smart contract. */\n  indexed: boolean;\n}\n\n/**\n * Decoded representation of the call trace that is part of a\n * {@link SimulationCallTrace}.\n */\nexport interface DecodedDebugCallTrace {\n  /** The smart contract method called. */\n  methodName: string;\n  /** Method inputs. */\n  inputs: DecodedCallParam[];\n  /** Method outputs. */\n  outputs: DecodedCallParam[];\n  /** The source used to provide the decoded call trace. */\n  authority: DecodingAuthority;\n}\n\n/** The type of call in a debug call trace. */\nexport enum DebugCallType {\n  CREATE = 'CREATE',\n  CALL = 'CALL',\n  STATICCALL = 'STATICCALL',\n  DELEGATECALL = 'DELEGATECALL'\n}\n\n/**\n * Debug call trace in a {@link SimulateExecutionResponse}.\n */\nexport interface SimulationCallTrace\n  extends Omit<DebugCallTrace, 'revertReason' | 'calls'> {\n  /** The type of call. */\n  type: DebugCallType;\n  /** A decoded version of the call. Provided on a best-effort basis. */\n  decoded?: DecodedDebugCallTrace;\n}\n\n/**\n * Decoded representation of the debug log that is part of a\n * {@link SimulationDebugLog}.\n */\n\nexport interface DecodedLog {\n  /** The decoded name of the log event. */\n  eventName: string;\n  /** The decoded inputs to the log. */\n  inputs: DecodedLogInput[];\n  /** The source used to provide the decoded log. */\n  authority: DecodingAuthority;\n}\n\n/**\n * Debug log in a {@link SimulateExecutionResponse}.\n */\nexport interface SimulationDebugLog {\n  /** An array of topics in the log. */\n  topics: string[];\n  /** The address of the contract that generated the log. */\n  address: string;\n  /** The data included the log. */\n  data: string;\n  /** A decoded version of the log. Provided on a best-effort basis. */\n  decoded?: DecodedLog;\n}\n\n/** Response object for the {@link TransactNamespace.simulateExecution} method. */\nexport interface SimulateExecutionResponse {\n  /**\n   * An array of traces generated during simulation that represent the execution\n   * of the transaction along with the decoded calls if available.\n   */\n  calls: SimulationCallTrace[];\n\n  /**\n   * An array of logs emitted during simulation along with the decoded logs if\n   * available.\n   */\n  logs: SimulationDebugLog[];\n}\n\n/**\n * Response object for the {@link TransactNamespace.sendGasOptimizedTransaction} method.\n *\n * @internal\n */\n// TODO(txjob): Remove internal tag once this feature is released.\nexport interface GasOptimizedTransactionResponse {\n  /**\n   * The tracking id. This can be used to check the status of the transaction\n   * via {@link TransactNamespace.getGasOptimizedTransactionStatus}.\n   */\n  trackingId: string;\n\n  /* An array of the transaction hashes from submitted transactions. */\n  transactionHashes: string[];\n}\n\n/**\n * Response object for the\n * {@link TransactNamespace.getGasOptimizedTransactionStatus} method.\n *\n * @internal\n */\n// TODO(txjob): Remove internal tag once this feature is released.\nexport interface GasOptimizedTransactionStatusResponse {\n  /** The status of the submitted transaction job. */\n  jobStatus: GasOptimizedTransactionStatus;\n\n  /** An array of the submitted transactions hashes that have been attempted. */\n  transactionHashesAttempted: string[];\n\n  /** The final mined transaction hash if the job was completed successfully. */\n  minedTransactionHash?: string;\n}\n\n/**\n * Potential transaction job statuses for a {@link GasOptimizedTransactionResponse}\n *\n * @internal\n */\n// TODO(txjob): Remove internal tag once this feature is released.\nexport enum GasOptimizedTransactionStatus {\n  UNSPECIFIED = 'TRANSACTION_JOB_STATUS_UNSPECIFIED',\n  IN_PROGRESS = 'IN_PROGRESS',\n  COMPLETE = 'COMPLETE',\n  ABANDONED = 'ABANDONED'\n}\n\n/** SDK representation of a Webhook in the Notify API. */\nexport interface Webhook {\n  /** The webhook's unique id. */\n  id: string;\n  /** The network the webhook is on. */\n  network: Network;\n  /** The type of webhook. */\n  type: WebhookType;\n  /** The url that the webhook sends its payload to. */\n  url: string;\n  /** Whether the webhook is currently active */\n  isActive: boolean;\n  /** The creation time of the webhook as an ISO string. */\n  timeCreated: string;\n  /** The signing key used to verify payloads for the webhook. */\n  signingKey: string;\n  /** The webhook version. All newly created webhooks default to V2. */\n  version: WebhookVersion;\n  /**\n   * The app id of the app used for the webhook. This field is only present on\n   * {@link MinedTransactionWebhook} and {@link DroppedTransactionWebhook}\n   */\n  appId?: string;\n}\n\n/** The version of the webhook. All newly created webhooks default to V2. */\nexport enum WebhookVersion {\n  V1 = 'V1',\n  V2 = 'V2'\n}\n\n/** The type of {@link Webhook}. */\nexport enum WebhookType {\n  MINED_TRANSACTION = 'MINED_TRANSACTION',\n  DROPPED_TRANSACTION = 'DROPPED_TRANSACTION',\n  ADDRESS_ACTIVITY = 'ADDRESS_ACTIVITY',\n  NFT_ACTIVITY = 'NFT_ACTIVITY',\n  NFT_METADATA_UPDATE = 'NFT_METADATA_UPDATE',\n  GRAPHQL = 'GRAPHQL'\n}\n\n/**\n * A Mined Transaction Webhook is used to notify your app whenever a transaction\n * sent through your API key gets successfully mined. This is useful if you want\n * to notify customers that their transaction went through.\n */\nexport interface MinedTransactionWebhook extends Webhook {\n  type: WebhookType.MINED_TRANSACTION;\n}\n\n/**\n * A Dropped Transaction webhook is used to notify your app whenever a\n * transaction sent through your API key gets dropped. This can be useful if you\n * want to notify customers that their transactions were dropped.\n */\nexport interface DroppedTransactionWebhook extends Webhook {\n  type: WebhookType.DROPPED_TRANSACTION;\n}\n\n/**\n * An Address Activity Webhook tracks ETH, ERC20, ERC721, and ERC1155 transfers\n * for the provided addresses. This can be used to notify your app with\n * real-time state changes when your tracked addresses send or receive tokens.\n */\nexport interface AddressActivityWebhook extends Webhook {\n  type: WebhookType.ADDRESS_ACTIVITY;\n}\n\n/**\n * The NFT Activity Webhook tracks all ERC721 and ERC1155 activity. This can be\n * used to notify your app with real time state changes when an NFT is\n * transferred between addresses.\n */\nexport interface NftActivityWebhook extends Webhook {\n  type: WebhookType.NFT_ACTIVITY;\n}\n\n/**\n * The NFT Metadata Update Webhook tracks all ERC721 and ERC1155 metadata updates.\n * This can be used to notify your app with real time state changes when an NFT's\n * metadata changes.\n */\nexport interface NftMetadataUpdateWebhook extends Webhook {\n  type: WebhookType.NFT_METADATA_UPDATE;\n}\n\n/**\n * The Custom Webhook can track any event on every block (think transfers, staking,\n * minting, burning, approvals, etc.)\n * This can be used to notify your app with real time changes whenever an\n * EOA or a smart contract performs any action on-chain.\n */\nexport interface CustomGraphqlWebhook extends Webhook {\n  type: WebhookType.GRAPHQL;\n}\n\n/** The response for a {@link NotifyNamespace.getAllWebhooks} method. */\nexport interface GetAllWebhooksResponse {\n  /** All webhooks attached to the provided auth token. */\n  webhooks: Webhook[];\n  /** The total number of webhooks. */\n  totalCount: number;\n}\n\n/** Options object for the {@link NotifyNamespace.getAddresses} method. */\nexport interface GetAddressesOptions {\n  /** Number of addresses to fetch. */\n  limit?: number;\n\n  /** Page */\n  pageKey?: string;\n}\n\n/** Response object for the {@link NotifyNamespace.getAddresses} method. */\nexport interface AddressActivityResponse {\n  /** The addresses for the webhook. */\n  addresses: string[];\n  /** The total number of addresses. */\n  totalCount: number;\n  /** Optional page key used to fetch the remaining addresses. */\n  pageKey?: string;\n}\n\n/** Response object for the {@link NotifyNamespace.getGraphqlQuery} method. */\nexport interface CustomGraphqlWebhookConfig {\n  /** The graphql query for the webhook. */\n  graphqlQuery: string;\n}\n\n/**\n * Params to pass in when calling {@link NotifyNamespace.createWebhook} in order\n * to create a {@link MinedTransactionWebhook} or {@link DroppedTransactionWebhook}.\n *\n * The webhook will be created on the app and network associated with the appId.\n * To find the app id of a project, go to the Alchemy Dashboard in the Apps tab.\n * After clicking on an app, the app id is the string in the URL following 'apps/'.\n *\n * This is a temporary workaround for now. We're planning on detecting the app\n * id from the provided api key directly. Stay tuned!\n */\nexport interface TransactionWebhookParams {\n  /** The app id of the project to create the webhook on. */\n  appId: string;\n}\n\n/**\n * Params to pass in when calling {@link NotifyNamespace.createWebhook} in order\n * to create a {@link NftActivityWebhook} or {@link NftMetadataUpdateWebhook}.\n */\nexport interface NftWebhookParams {\n  /** Array of NFT filters the webhook should track. */\n  filters: NftFilter[];\n  /**\n   * Optional network to create the webhook on. If omitted, the webhook will be\n   * created on network of the app provided in the api key config.\n   */\n  network?: Network;\n}\n\n/**\n * Params to pass in when calling {@link NotifyNamespace.createWebhook} in order\n * to create a {@link CustomGraphqlWebhook}\n */\nexport interface CustomGraphqlWebhookParams {\n  /** GraphQL query */\n  graphqlQuery: string;\n  /**\n   * Optional network to create the webhook on. If omitted, the webhook will be\n   * created on network of the app provided in the api key config.\n   */\n  network?: Network;\n}\n\n/**\n * Params to pass in when calling {@link NotifyNamespace.createWebhook} in order\n * to create a {@link AddressActivityWebhook}.\n */\nexport interface AddressWebhookParams {\n  /** Array of addresses the webhook should activity for. */\n  addresses: string[];\n  /**\n   * Optional network to create the webhook on. If omitted, the webhook will be\n   * created on network of the app provided in the api key config.\n   */\n  network?: Network;\n}\n\n/** NFT to track on a {@link NftActivityWebhook} or {@link NftMetadataUpdateWebhook}. */\nexport interface NftFilter {\n  /** The contract address of the NFT. */\n  contractAddress: string;\n  /**\n   * The token id of the NFT to track. If this field is omitted, defaults to\n   * tracking all NFTs for the provided contract address.\n   */\n  tokenId?: BigNumberish;\n}\n\n/** Response object for the {@link NotifyNamespace.getNftFilters} method. */\nexport interface NftFiltersResponse {\n  /** The NFT filters on the provided webhook. */\n  filters: NftFilter[];\n  /** The total number of NFT filters on the webhook. */\n  totalCount: number;\n  /** Optional page key used to fetch the remaining filters. */\n  pageKey?: string;\n}\n\n/**\n * Params object when calling {@link NotifyNamespace.updateWebhook} to mark a\n * webhook as active or inactive.\n */\nexport interface WebhookStatusUpdate {\n  /** Whether the webhook is active. */\n  isActive: boolean;\n}\n\n/**\n * Params object when calling {@link NotifyNamespace.updateWebhook} to add and\n * remove NFT filters for a {@link NftActivityWebhook}.\n */\nexport interface WebhookNftFilterUpdate {\n  /** The filters to additionally track. */\n  addFilters: NftFilter[];\n  /** Existing filters to remove. */\n  removeFilters: NftFilter[];\n}\n\n/**\n * Params object when calling {@link NotifyNamespace.updateWebhook} to add and\n * remove NFT filters for a {@link NftMetadataUpdateWebhook}.\n */\nexport interface WebhookNftMetadataFilterUpdate {\n  /** The filters to additionally track. */\n  addMetadataFilters: NftFilter[];\n  /** Existing filters to remove. */\n  removeMetadataFilters: NftFilter[];\n}\n\n/**\n * Params object when calling {@link NotifyNamespace.updateWebhook} to add and\n * remove addresses for a {@link AddressActivityWebhook}.\n */\nexport interface WebhookAddressUpdate {\n  /** The addresses to additionally track. */\n  addAddresses: string[];\n  /** Existing addresses to remove. */\n  removeAddresses: string[];\n}\n\n/**\n * Params object when calling {@link NotifyNamespace.updateWebhook} to replace\n * all existing addresses for a {@link AddressActivityWebhook}.\n */\nexport interface WebhookAddressOverride {\n  /** The new addresses to track. Existing addresses will be removed. */\n  newAddresses: string[];\n}\n\n/**\n * Params object when calling {@link NotifyNamespace.updateWebhook} to update a\n * {@link NftActivityWebhook}.\n */\nexport type NftWebhookUpdate =\n  | WebhookStatusUpdate\n  | RequireAtLeastOne<WebhookNftFilterUpdate>;\n\n/**\n * Params object when calling {@link NotifyNamespace.updateWebhook} to update a\n * {@link NftMetadataUpdateWebhook}.\n */\nexport type NftMetadataWebhookUpdate =\n  | WebhookStatusUpdate\n  | RequireAtLeastOne<WebhookNftMetadataFilterUpdate>;\n\n/**\n * Params object when calling {@link NotifyNamespace.updateWebhook} to update a\n * {@link CustomGraphqlWebhook}.\n */\nexport type CustomGraphqlWebhookUpdate = WebhookStatusUpdate;\n\n/**\n * Params object when calling {@link NotifyNamespace.updateWebhook} to update a\n * {@link AddressActivityWebhook}.\n */\nexport type AddressWebhookUpdate =\n  | WebhookStatusUpdate\n  | RequireAtLeastOne<WebhookAddressUpdate>\n  | WebhookAddressOverride;\n\n/**\n * Transaction object used in {@link DebugNamespace.traceCall}, {@link TransactNamespace.simulateAssetChanges} and {@link TransactNamespace.simulateExecution}.\n */\nexport interface DebugTransaction {\n  /** The address the transaction is directed to. */\n  to?: string;\n  /** The address the transaction is sent from. */\n  from?: string;\n  /** The gas provided for the transaction execution, as a hex string. */\n  gas?: string;\n  /** The gas price to use as a hex string. */\n  gasPrice?: string;\n  /** The value associated with the transaction as a hex string. */\n  value?: string;\n  /** The data associated with the transaction. */\n  data?: string;\n}\n\n/**\n * Commitment level of the target block with using methods in the\n * {@link DebugNamespace}\n */\nexport enum CommitmentLevel {\n  /**\n   * Sample next block inferred by Alchemy built on top of the latest block.\n   * This contains the set of transactions taken from the local mempool and\n   * is a proxy for blocks that have not been mined yet.\n   */\n  PENDING = 'pending',\n  /**\n   * The most recent block in the canonical chain observed by Alchemy. Note that\n   * this block may be re-orged out of the canonical chain.\n   */\n  LATEST = 'latest',\n  /**\n   * The most recent crypto-economically secure block that cannot be re-orged\n   * outside of manual intervention driven by community coordination. This is\n   * only available on {@link Network.ETH_GOERLI} and {@link Network.ETH_SEPOLIA}.\n   */\n  SAFE = 'safe',\n  /**\n   * The most recent secure block that has been accepted by >2/3 of validators.\n   * This block is very unlikely to be re-orged. This is only available on\n   * {@link Network.ETH_GOERLI} and {@link Network.ETH_SEPOLIA}.\n   */\n  FINALIZED = 'finalized',\n  /**\n   * The lowest numbered block available that is usually the first block created.\n   */\n  EARLIEST = 'earliest'\n}\n\n/**\n * The block identifier to specify which block to run a debug call in, used for\n * methods in the {@link DebugNamespace}.\n */\nexport type BlockIdentifier = string | CommitmentLevel;\n\n/**\n * The type of tracer to use when running debug methods in the\n * {@link DebugNamespace}.\n */\nexport enum DebugTracerType {\n  CALL_TRACER = 'callTracer',\n  PRESTATE_TRACER = 'prestateTracer'\n}\n\n/**\n * Tracer used with debug methods in the {@link DebugNamespace}.\n *\n * This tracer tracks all call frames executed during a transaction, including\n * depth 0. The returned result {@link DebugCallTrace} is a nested list of call\n * frames executed as part of the call.\n *\n * Here are some things to note when using the call tracer:\n * - Calls to precompiles are also included in the result.\n * - In case a frame reverts, the field output will contain the raw return data.\n * - In case the top level frame reverts, its `revertReason` field will contain\n *   the parsed reason of revert as returned by the Solidity contract\n */\nexport interface DebugCallTracer {\n  /** Specified type is `CALL_TRACER`. */\n  type: DebugTracerType.CALL_TRACER;\n  /**\n   * Whether to only trace the main (top-level) calls and ignore sub-calls.\n   * Defaults to `false`.\n   */\n  onlyTopCall?: boolean;\n}\n\n/**\n * Tracer used with debug methods in the {@link DebugNamespace}.\n *\n * This tracer replays the transaction and tracks every part of state that was\n * touched during the transaction.\n *\n * Returns a {@link DebugPrestateTrace}. This contains sufficient information to\n * create a local execution of the transaction from a custom assembled genesis\n * block.\n */\nexport interface DebugPrestateTracer {\n  /** Specified type is `PRESTATE_TRACER`. */\n  type: DebugTracerType.PRESTATE_TRACER;\n  /**\n   * Whether to only trace the main (top-level) calls and ignore sub-calls.\n   * Defaults to `false`.\n   */\n  onlyTopCall?: boolean;\n}\n\n/**\n * Debug result returned when using a {@link DebugCallTracer}.\n */\nexport interface DebugCallTrace {\n  /** The type of call: `CALL` or `CREATE` for the top-level call. */\n  type: string;\n  /** From address of the transaction. */\n  from: string;\n  /** To address of the transaction. */\n  to: string;\n  /** Amount of value transfer as a hex string. */\n  value: string;\n  /** Gas provided for call as a hex string. */\n  gas: string;\n  /** Gas used during the call as a hex string. */\n  gasUsed: string;\n  /** Call data. */\n  input: string;\n  /** Return data. */\n  output: string;\n  /** Optional error field. */\n  error?: string;\n  /** Solidity revert reason, if the call reverted. */\n  revertReason?: string;\n  /** Array of sub-calls executed as part of the original call. */\n  calls?: DebugCallTrace[];\n}\n\n/**\n * Filter object used to filter logs by a specific block hash when using\n * {@link CoreNamespace.getLogs}.\n */\nexport interface FilterByBlockHash extends EventFilter {\n  /** The specific block hash to search for logs matching the filter. */\n  blockHash?: string;\n}\n\n/**\n * Filter object used to filter logs by block number range when using\n * {@link CoreNamespace.getLogs}\n */\nexport interface Filter extends EventFilter {\n  /** The starting block (inclusive) to search for logs matching the filter. */\n  fromBlock?: BlockTag;\n  /** The end block (inclusive) to search for logs matching the filter.*/\n  toBlock?: BlockTag;\n}\n\n/**\n * Filter object used to filter logs by when using {@link CoreNamespace.getLogs}\n */\nexport interface EventFilter {\n  /** The address to filter by. If omitted, filters for all addresses. */\n  address?: string | string[];\n  /** The topics to filter by, or null to match any topics. */\n  topics?: Array<string | Array<string> | null>;\n}\n\n/**\n * Debug result returned by a {@link DebugPrestateTracer}.\n *\n * The keys are the addresses of the accounts, mapped to its corresponding state.\n */\nexport type DebugPrestateTrace = Record<string, DebugPrestate>;\n\n/** The */\nexport interface DebugPrestate {\n  /** Balance of the account in wei as a hex string. */\n  balance: string;\n  /** Nonce */\n  nonce: number;\n  /** Hex-encoded bytecode. */\n  code: string;\n  /** Storage slots of the contract. */\n  storage: Record<string, string>;\n}\n\n/**\n * Requires at least one of the properties to be set.\n *\n * Implementation copied over from\n * {@link https://learn.microsoft.com/en-us/javascript/api/@azure/keyvault-certificates/requireatleastone?view=azure-node-latest}\n */\nexport type RequireAtLeastOne<T> = {\n  [K in keyof T]-?: Required<Pick<T, K>> &\n    Partial<Pick<T, Exclude<keyof T, K>>>;\n}[keyof T];\n\n/** Requires an array with at least one value. */\nexport type NonEmptyArray<T> = [T, ...T[]];\n","import { BlockTag } from '@ethersproject/abstract-provider';\nimport { BigNumberish } from '@ethersproject/bignumber';\n\nimport { OpenSeaSafelistRequestStatus, SortingOrder } from './types';\n\n/**\n * An enum for specifying the token type on NFTs.\n *\n * @public\n */\nexport enum NftTokenType {\n  ERC721 = 'ERC721',\n  ERC1155 = 'ERC1155',\n  NO_SUPPORTED_NFT_STANDARD = 'NO_SUPPORTED_NFT_STANDARD',\n  NOT_A_CONTRACT = 'NOT_A_CONTRACT',\n  UNKNOWN = 'UNKNOWN'\n}\n\n/**\n * Represents NFT metadata that holds fields. Note that since there is no\n * standard metadata format, the fields are not guaranteed to be present.\n *\n * @public\n */\nexport interface NftMetadata extends Record<string, any> {\n  /** Name of the NFT asset. */\n  name?: string;\n\n  /** A human-readable description of the NFT asset. */\n  description?: string;\n\n  /** URL to the NFT asset image. */\n  image?: string;\n\n  /**\n   * The image URL that appears along the top of the NFT asset page. This tends\n   * to be the highest resolution image.\n   */\n  external_url?: string;\n\n  /** Background color of the NFT item. Usually defined as a 6 character hex string. */\n  background_color?: string;\n\n  /** The traits, attributes, and characteristics for the NFT asset. */\n  attributes?: Array<Record<string, any>>;\n}\n\n/** Media URLs and information for an NFT. */\nexport interface NftImage {\n  /** URL of the image stored in Alchemy's cache. */\n  cachedUrl?: string;\n  /** URL of a thumbnail sized image. */\n  thumbnailUrl?: string;\n  /** URL of the image in png format */\n  pngUrl?: string;\n  /** The type of the media image. */\n  contentType?: string;\n  /** The size of the media asset in bytes. */\n  size?: number;\n  /** The original URL of the image as stored on the contract. */\n  originalUrl?: string;\n}\n\n/** Potential reasons why an NFT contract was classified as spam. */\nexport enum NftSpamClassification {\n  Erc721TooManyOwners = 'Erc721TooManyOwners',\n  Erc721TooManyTokens = 'Erc721TooManyTokens',\n  Erc721DishonestTotalSupply = 'Erc721DishonestTotalSupply',\n  MostlyHoneyPotOwners = 'MostlyHoneyPotOwners',\n  OwnedByMostHoneyPots = 'OwnedByMostHoneyPots',\n  LowDistinctOwnersPercent = 'LowDistinctOwnersPercent',\n  HighHoneyPotOwnerPercent = 'HighHoneyPotOwnerPercent',\n  HighHoneyPotPercent = 'HighHoneyPotPercent',\n  HoneyPotsOwnMultipleTokens = 'HoneyPotsOwnMultipleTokens',\n  NoSalesActivity = 'NoSalesActivity',\n  HighAirdropPercent = 'HighAirdropPercent',\n  Unknown = 'Unknown'\n}\n\n/** Block time and number at which an NFT was acquired. */\nexport interface AcquiredAt {\n  /** Timestamp of the block at which an NFT was last acquired. */\n  blockTimestamp?: string;\n\n  /** Block number of the block at which an NFT was last acquired. */\n  blockNumber?: number;\n}\n\n/**\n * Optional parameters object for the {@link getNftsForOwner} and\n * {@link getNftsForOwnerIterator} functions.\n *\n * This interface is used to fetch NFTs with their associated metadata. To get\n * Nfts without their associated metadata, use {@link GetBaseNftsForOwnerOptions}.\n *\n * @public\n */\nexport interface GetNftsForOwnerOptions {\n  /**\n   * Optional page key from an existing {@link OwnedBaseNftsResponse} or\n   * {@link OwnedNftsResponse}to use for pagination.\n   */\n  pageKey?: string;\n\n  /** Optional list of contract addresses to filter the results by. Limit is 20. */\n  contractAddresses?: string[];\n\n  /**\n   * Optional list of filters applied to the query. NFTs that match one or more\n   * of these filters are excluded from the response.\n   */\n  excludeFilters?: NftFilters[];\n\n  /**\n   * Optional list of filters applied to the query. NFTs that match one or more\n   * of these filters are included in the response.\n   */\n  includeFilters?: NftFilters[];\n\n  /**\n   * Sets the total number of NFTs to return in the response. Defaults to 100.\n   * Maximum page size is 100.\n   */\n  pageSize?: number;\n\n  /** Optional boolean flag to omit NFT metadata. Defaults to `false`. */\n  omitMetadata?: boolean;\n\n  /**\n   * No set timeout by default - When metadata is requested, this parameter is\n   * the timeout (in milliseconds) for the website hosting the metadata to\n   * respond. If you want to only access the cache and not live fetch any\n   * metadata for cache misses then set this value to 0.\n   */\n  tokenUriTimeoutInMs?: number;\n\n  /**\n   * Order in which to return results. By default, results are ordered by\n   * contract address and token ID in lexicographic order.\n   */\n  orderBy?: NftOrdering;\n}\n\n/**\n * Optional parameters object for the {@link getNftsForOwner} and\n * {@link getNftsForOwnerIterator} functions.\n *\n * This interface is used to fetch NFTs without their associated metadata. To\n * get Nfts with their associated metadata, use {@link GetNftsForOwnerOptions}.\n *\n * @public\n */\nexport interface GetBaseNftsForOwnerOptions {\n  /**\n   * Optional page key from an existing {@link OwnedBaseNftsResponse} or\n   * {@link OwnedNftsResponse}to use for pagination.\n   */\n  pageKey?: string;\n\n  /** Optional list of contract addresses to filter the results by. Limit is 20. */\n  contractAddresses?: string[];\n\n  /**\n   * Optional list of filters applied to the query. NFTs that match one or more\n   * of these filters are excluded from the response.\n   */\n  excludeFilters?: NftFilters[];\n\n  /**\n   * Optional list of filters applied to the query. NFTs that match one or more\n   * of these filters are included in the response.\n   */\n  includeFilters?: NftFilters[];\n\n  /**\n   * Sets the total number of NFTs to return in the response. Defaults to 100.\n   * Maximum page size is 100.\n   */\n  pageSize?: number;\n\n  /** Optional boolean flag to include NFT metadata. Defaults to `false`. */\n  omitMetadata: true;\n\n  /**\n   * No set timeout by default - When metadata is requested, this parameter is\n   * the timeout (in milliseconds) for the website hosting the metadata to\n   * respond. If you want to only access the cache and not live fetch any\n   * metadata for cache misses then set this value to 0.\n   */\n  tokenUriTimeoutInMs?: number;\n\n  /**\n   * Order in which to return results. By default, results are ordered by\n   * contract address and token ID in lexicographic order.\n   */\n  orderBy?: NftOrdering;\n}\n\n/**\n * Enum of NFT filters that can be applied to a {@link getNftsForOwner} or a\n * {@link getContractsForOwner} request.\n *\n * @beta\n */\nexport enum NftFilters {\n  /** NFTs that have been classified as spam. */\n  SPAM = 'SPAM',\n\n  /** NFTs that have been airdropped to a user. */\n  AIRDROPS = 'AIRDROPS'\n}\n\n/**\n * Enum of ordering that can be applied to a {@link getNftsForOwner} or a\n * {@link getContractsForOwner} response.\n *\n * @beta\n */\nexport enum NftOrdering {\n  TRANSFERTIME = 'TRANSFERTIME'\n}\n\n/**\n * The response object for the {@link getNftsForOwner} and\n * {@link getNftsForOwnerIterator} functions. The object contains the NFTs with\n * metadata owned by the provided address, along with pagination information and\n * the total count.\n *\n * @public\n */\nexport interface OwnedNftsResponse {\n  /** The NFTs owned by the provided address. */\n  ownedNfts: OwnedNft[];\n\n  /**\n   * Pagination token that can be passed into another request to fetch the next\n   * NFTs. If there is no page key, then there are no more NFTs to fetch.\n   */\n  pageKey?: string;\n\n  /** The total count of NFTs owned by the provided address. */\n  totalCount: number;\n\n  /**\n   * Block Information of the block as of which the corresponding data is valid\n   */\n  validAt: OwnedNftsValidAt;\n}\n\n/**\n * The response object for the {@link getNftsForOwner} and\n * {@link getNftsForOwnerIterator} functions. The object contains the NFTs\n * without metadata owned by the provided address, along with pagination\n * information and the total count.\n *\n * @public\n */\nexport interface OwnedBaseNftsResponse {\n  /** The NFTs owned by the provided address. */\n  ownedNfts: OwnedBaseNft[];\n\n  /**\n   * Pagination token that can be passed into another request to fetch the next\n   * NFTs. If there is no page key, then there are no more NFTs to fetch.\n   */\n  pageKey?: string;\n\n  /** The total count of NFTs owned by the provided address. */\n  totalCount: number;\n\n  /**\n   * Block Information of the block as of which the corresponding data is valid\n   */\n  validAt: OwnedNftsValidAt;\n}\n\n/**\n * Represents an NFT with metadata owned by an address.\n *\n * @public\n */\nexport interface OwnedNft extends Nft {\n  /** The token balance of the NFT. */\n  balance: string;\n}\n\n/**\n * Represents an NFT without metadata owned by an address.\n *\n * @public\n */\nexport interface OwnedBaseNft extends BaseNft {\n  /** The token balance of the NFT. */\n  balance: string;\n}\n\n/** The block information at which the NFT sale information is valid at. */\nexport interface OwnedNftsValidAt {\n  /** The block number the sale information is valid at. */\n  blockNumber?: number;\n  /** The block hash. Used to detect reorgs. */\n  blockHash: string;\n  /** The timestamp for the block. */\n  blockTimestamp?: string;\n}\n\n/**\n * The response object for the {@link getOwnersForNft}.\n *\n * @public\n */\nexport interface GetOwnersForNftResponse {\n  /** An array of owner addresses for the provided token. */\n  owners: string[];\n\n  /** Optional The key for the next page of results, if applicable. */\n  pageKey?: string;\n}\n\n/**\n * The response object for the {@link getOwnersForContract}.\n *\n * @public\n */\nexport interface GetOwnersForContractResponse {\n  /** An array of owner addresses for the provided contract address */\n  owners: string[];\n  /**\n   * Total count of unique owners. Only present if\n   * {@link GetOwnersForContractOptions.includeCount} is true.\n   */\n  totalCount?: number;\n\n  /** Optional page key that is returned when a collection has more than 50,000 owners. */\n  pageKey?: string;\n}\n\n/**\n * The response object for the {@link getOwnersForContract}.\n *\n * @public\n */\nexport interface GetOwnersForContractWithTokenBalancesResponse {\n  /** An array of owner addresses for the provided contract address */\n  owners: NftContractOwner[];\n\n  /** Optional page key that is returned when a collection has more than 50,000 owners. */\n  pageKey?: string;\n}\n\nexport interface GetNftMetadataBatchResponse {\n  /** An array of NFT metadata objects. */\n  nfts: Nft[];\n}\n\nexport interface GetContractMetadataBatchResponse {\n  contracts: NftContract[];\n}\n\n/**\n * An object representing the owner of an NFT and its corresponding token\n * balances in a {@link GetOwnersForContractWithTokenBalancesResponse} object.\n */\nexport interface NftContractOwner {\n  /** The NFT's owner address. */\n  ownerAddress: string;\n\n  /** A list of objects containing token balances for the provided NFT contract. */\n  tokenBalances: NftContractTokenBalance[];\n}\n\n/**\n * An object representing the owned token and balance values in a\n * {@link GetOwnersForContractWithTokenBalancesResponse} object.\n */\nexport interface NftContractTokenBalance {\n  /** The token id owned in the NFT contract. */\n  tokenId: string;\n  /** The token id balance for the provided owner. */\n  balance: string;\n}\n\nexport interface IsSpamContractResponse {\n  isSpamContract: boolean;\n}\n\nexport interface IsAirdropNftResponse {\n  isAirdrop: boolean;\n}\n\nexport interface GetSpamContractsResponse {\n  contractAddresses: string[];\n}\n\n/**\n * Additional options for the {@link NftNamespace.getNftMetadata} method.\n */\nexport interface GetNftMetadataOptions {\n  /** Optional field to specify the type of token to speed up the query. */\n  tokenType?: NftTokenType;\n  /**\n   * No set timeout by default - When metadata is requested, this parameter is\n   * the timeout (in milliseconds) for the website hosting the metadata to\n   * respond. If you want to only access the cache and not live fetch any\n   * metadata for cache misses then set this value to 0.\n   */\n  tokenUriTimeoutInMs?: number;\n\n  /**\n   * Whether to refresh the metadata for the given NFT token before returning\n   * the response. Defaults to false for faster response times.\n   */\n  refreshCache?: boolean;\n}\n\n/**\n * Represents an NFT token to fetch metadata for in a\n * {@link NftNamespace.getNftMetadataBatch} method.\n */\nexport interface NftMetadataBatchToken {\n  /** The NFT contract address. Limited to ERC721 and ERC1155 tokens. */\n  contractAddress: string;\n\n  /** The id of the NFT. */\n  tokenId: BigNumberish;\n\n  /** Optional field to specify the type of token to speed up the query. */\n  tokenType?: NftTokenType.ERC1155 | NftTokenType.ERC721;\n}\n\n/** Additional options for the {@link NftNamespace.getNftMetadataBatch} method. */\nexport interface NftMetadataBatchOptions {\n  /**\n   * No set timeout by default - When metadata is requested, this parameter is\n   * the timeout (in milliseconds) for the website hosting the metadata to\n   * respond. If you want to only access the cache and not live fetch any\n   * metadata for cache misses then set this value to 0.\n   */\n  tokenUriTimeoutInMs?: number;\n\n  /**\n   * Whether to refresh the metadata for the given NFT token before returning\n   * the response. Defaults to false for faster response times.\n   */\n  refreshCache?: boolean;\n}\n\n/**\n * The successful object returned by the {@link getFloorPrice} call for each\n * marketplace (e.g. looksRare).\n *\n * @public\n */\nexport interface FloorPriceMarketplace {\n  /** The floor price of the collection on the given marketplace */\n  floorPrice: number;\n  /** The currency in which the floor price is denominated */\n  priceCurrency: string;\n  /** The link to the collection on the given marketplace */\n  collectionUrl: string;\n  /** UTC timestamp of when the floor price was retrieved from the marketplace */\n  retrievedAt: string;\n}\n\n/**\n * The failing object returned by the {@link getFloorPrice} call for each\n * marketplace (e.g. looksRare).\n *\n * @public\n */\nexport interface FloorPriceError {\n  /** Error fetching floor prices from the given marketplace */\n  error: string;\n}\n\n/**\n * The response object for the {@link getFloorPrice} method.\n *\n * @public\n */\nexport interface GetFloorPriceResponse {\n  /**\n   * Name of the NFT marketplace where the collection is listed. Current\n   * marketplaces supported: OpenSea, LooksRare\n   */\n  openSea: FloorPriceMarketplace | FloorPriceError;\n  looksRare: FloorPriceMarketplace | FloorPriceError;\n}\n\n/**\n * Optional parameters object for the {@link getContractsForOwner} method\n *\n * @public\n */\nexport interface GetContractsForOwnerOptions {\n  /** Key for pagination to use to fetch results from the next page if available. */\n  pageKey?: string;\n\n  /**\n   * Configure the number of NFTs to return in each response. Maximum pages size\n   * is 100. Defaults to 100.\n   */\n  pageSize?: number;\n\n  /**\n   * Optional list of filters applied to the query. NFTs that match one or more\n   * of these filters are included in the response. May not be used in\n   * conjunction with {@link excludeFilters}.\n   */\n  includeFilters?: NftFilters[];\n\n  /**\n   * Optional list of filters applied to the query. NFTs that match one or more\n   * of these filters are excluded from the response. May not be used in\n   * conjunction with {@link includeFilters}\n   */\n  excludeFilters?: NftFilters[];\n\n  /**\n   * Order in which to return results. By default, results are ordered by\n   * contract address and token ID in lexicographic order.\n   */\n  orderBy?: NftOrdering;\n}\n\n/**\n * The response for the {@link NftNamespace.getContractsForOwner} method.\n *\n * @public\n */\nexport interface GetContractsForOwnerResponse {\n  /** The list of contracts, that match the query, held by the given address. */\n  contracts: NftContractForOwner[];\n\n  /** Key for pagination to use to fetch results from the next page if available. */\n  pageKey?: string;\n\n  /** Total number of NFT contracts held by the given address. */\n  totalCount: number;\n}\n\n/** Represents a single NFT contract data in the {@link GetContractsForOwnerResponse}. */\nexport interface NftContractForOwner extends NftContract {\n  /**\n   * Sum of NFT balances across all token IDs held by the owner. For\n   * non-fungible tokens this will be equal to the numDistinctTokensOwned, but\n   * it may be higher if the user holds some fungible ERC1155 tokens.\n   */\n  totalBalance: string;\n\n  /**\n   * Number of distinct token IDs held by the owner. For non-fungible tokens\n   * this will be equal to the totalBalance, but it may be lower if the user\n   * holds some fungible ERC1155 tokens.\n   */\n  numDistinctTokensOwned: string;\n\n  /** Whether the NFT contract is considered spam. */\n  isSpam: boolean;\n\n  /**\n   * Object containing an NFT owned by the owner for this particular contract.\n   * Use this to display a sample NFT for the contract.\n   */\n  displayNft: DisplayNftForContract;\n\n  /** Object containing different URLs for the NFT media. */\n  image: NftImage;\n}\n\n/** Sample owned NFT on a {@link NftContract}, used to display placeholder info. */\nexport interface DisplayNftForContract {\n  /** A token id of an NFT owned by the owner on the contract. */\n  tokenId: string;\n  /** The name of the NFT, if available. */\n  name?: string;\n}\n\n/**\n * Optional parameters object for the {@link NftNamespace.getTransfersForOwner}\n * method.\n */\nexport interface GetTransfersForContractOptions {\n  /** Starting block (inclusive) to get transfers from. */\n  fromBlock?: BlockTag;\n  /** Ending block (inclusive) to get transfers from. */\n  toBlock?: BlockTag;\n  /**\n   * Whether to return results in ascending or descending order by block number.\n   * Defaults to ascending if omitted.\n   */\n  order?: SortingOrder;\n  /**\n   * Optional page key from an existing {@link TransfersNftResponse} to use for\n   * pagination.\n   */\n  pageKey?: string;\n}\n\n/**\n * Response object for NFT methods that fetch NFTs that were transferred or\n * minted (ex: {@link NftNamespace.getTransfersForOwner} or\n * {@link NftNamespace.getMintedNfts}).\n */\nexport interface TransfersNftResponse {\n  /** An array of NFTs.*/\n  nfts: TransferredNft[];\n  /** Optional page key to use to fetch the next group of NFTs. */\n  pageKey?: string;\n}\n\n/**\n * NFT with extra data for a single NFT that was transferred or minted.\n */\nexport interface TransferredNft extends Nft {\n  /**\n   * The address the NFT was from. For minted NFTs, this field is the set to\n   * `0x0000000000000000000000000000000000000000`.\n   **/\n  from: string;\n  /** The address the NFT was sent or minted to. */\n  to?: string;\n  /** The transaction hash where the transfer or mint occurred. */\n  transactionHash: string;\n  /** The block number as a hex string of when the transfer or mint occurred. */\n  blockNumber: string;\n}\n\n/**\n * Optional parameters object for the {@link NftNamespace.getMintedNfts} method.\n */\nexport interface GetMintedNftsOptions {\n  /**\n   * List of NFT contract addresses to filter mints by. If omitted, defaults to\n   * all contract addresses.\n   */\n  contractAddresses?: string[];\n\n  /**\n   * Filter mints by ERC721 vs ERC1155 contracts. If omitted, defaults to all\n   * NFTs.\n   */\n  tokenType?: NftTokenType.ERC1155 | NftTokenType.ERC721;\n\n  /**\n   * Optional page key from an existing {@link TransfersNftResponse} to use for\n   * pagination.\n   */\n  pageKey?: string;\n}\n\n/**\n * Optional parameters object for the {@link NftNamespace.getNftSales} method.\n *\n * This interface is used to filter the NFT sales data.\n *\n * @public\n */\nexport interface GetNftSalesOptions {\n  /** The block number to start fetching NFT sales data from. */\n  fromBlock?: number | 'latest';\n\n  /** The block number limit to fetch NFT sales data from. */\n  toBlock?: number | 'latest';\n\n  /** Whether to return the results in ascending or descending order by block number. */\n  order?: SortingOrder;\n\n  /** The NFT marketplace to filter sales by. */\n  marketplace?: NftSaleMarketplace;\n\n  /** The address of the NFT buyer to filter sales by. */\n  buyerAddress?: string;\n\n  /** The address of the NFT seller to filter sales by. */\n  sellerAddress?: string;\n\n  /**\n   * Filter by whether the buyer or seller was the taker in the NFT trade.\n   * Defaults to returning both buyer and seller taker trades.\n   */\n  taker?: NftSaleTakerType;\n\n  /** The maximum number of NFT sales to return. */\n  limit?: number;\n\n  /** Key for pagination to use to fetch results from the next page if available. */\n  pageKey?: string;\n}\n\n/**\n * Alternative optional parameters object for the {@link NftNamespace.getNftSales}\n * method that allows filtering results by contractAddress.\n *\n * This interface is used to filter the NFT sales data.\n *\n * @public\n */\nexport interface GetNftSalesOptionsByContractAddress\n  extends GetNftSalesOptions {\n  /** The contract address of a NFT collection to filter sales by. */\n  contractAddress: string;\n\n  /** The token ID of an NFT within the specified contractAddress to filter sales by. */\n  tokenId?: BigNumberish;\n}\n\n/**\n * The response for the {@link NftNamespace.getNftSales} method.\n *\n * @public\n */\nexport interface GetNftSalesResponse {\n  /** List of NFT sales that match the query */\n  nftSales: NftSale[];\n  /**\n   * Block Information of the block as of which the corresponding data is valid.\n   */\n  validAt: NftSaleValidAt;\n  /**\n   * The page key to use to fetch the next page if more results are available.\n   */\n  pageKey?: string;\n}\n\n/** Represents a single NFT sale data in the {@link GetNftSalesResponse}. */\nexport interface NftSale {\n  /** The marketplace the sale took place on. */\n  marketplace: NftSaleMarketplace;\n\n  /** The marketplace address the sale was on. */\n  marketplaceAddress: string;\n\n  /** The NFT contract address. */\n  contractAddress: string;\n\n  /** The decimal token ID of the NFT being sold. */\n  tokenId: string;\n\n  /** The number of tokens sold in the sale as a decimal integer string. */\n  quantity: string;\n\n  /** The address of the buyer in the NFT sale. */\n  buyerAddress: string;\n\n  /** The address of the seller in the NFT sale. */\n  sellerAddress: string;\n\n  /** Whether the price taker in the trade was the buyer or the seller. */\n  taker: NftSaleTakerType;\n\n  /** The payment from buyer to the seller. */\n  sellerFee: NftSaleFeeData;\n\n  /** The payment from buyer to the marketplace. */\n  protocolFee: NftSaleFeeData;\n\n  /** The payment from buyer to the royalty address of the NFT collection. */\n  royaltyFee: NftSaleFeeData;\n\n  /** The block number the NFT sale took place in. */\n  blockNumber: number;\n\n  /** The log number of the sale event emitted within the block. */\n  logIndex: number;\n\n  /** The index of the token within the bundle of NFTs sold in the sale. */\n  bundleIndex: number;\n\n  /** The transactionHash of the NFT sale. */\n  transactionHash: string;\n}\n\n/** The block information at which the NFT sale information is valid at. */\nexport interface NftSaleValidAt {\n  /** The block number the sale information is valid at. */\n  blockNumber: number;\n  /** The block hash. Used to detect reorgs. */\n  blockHash?: string;\n  /** The timestamp for the block. */\n  blockTimestamp?: string;\n}\n\n/**\n * Fee detail for an NFT sale.\n *\n * @public\n */\nexport interface NftSaleFeeData {\n  /** The fee payment amount as a decimal integer string. */\n  amount?: string;\n\n  tokenAddress?: string;\n\n  /** The symbol of the token used for the payment. */\n  symbol?: string;\n\n  /** The number of decimals of the token used for the payment. */\n  decimals?: number;\n}\n\n/**\n * Enum representing the supported NFT marketplaces by the\n * {@link NftNamespace.getNftSales} method.\n *\n * @public\n */\nexport enum NftSaleMarketplace {\n  SEAPORT = 'seaport',\n  LOOKSRARE = 'looksrare',\n  X2Y2 = 'x2y2',\n  WYVERN = 'wyvern',\n  CRYPTOPUNKS = 'cryptopunks',\n  BLUR = 'blur',\n  UNKNOWN = 'unknown'\n}\n\n/**\n * Mint information for the NFT.\n */\nexport interface NftMint {\n  /** The address that the NFT was minted to. */\n  mintAddress?: string;\n  /** The block number that the NFT was minted on. */\n  blockNumber?: number;\n  /** The timestamp the NFT was minted on. */\n  timestamp?: string;\n  /** The transaction hash of the transaction that minted the NFT. */\n  transactionHash?: string;\n}\n\n/**\n * Enum for specifying the taker type for the {@link NftNamespace.getNftSales}\n * method.\n *\n * @public\n */\nexport enum NftSaleTakerType {\n  BUYER = 'buyer',\n  SELLER = 'seller'\n}\n\nexport interface SearchContractMetadataResponse {\n  contracts: NftContract[];\n}\n\n/**\n * Response object for the {@link NftNamespace.computeRarity} method.\n */\nexport interface ComputeRarityResponse {\n  rarities: NftAttributeRarity[];\n}\n\n/**\n * Information about the rarity of an NFT's attribute in the specified collection.\n *\n * @public\n */\nexport interface NftAttributeRarity {\n  /** Name of the NFT's attribute. */\n  value: string;\n\n  /** The type of NFT attribute. */\n  traitType: string;\n\n  /**\n   * A number from 0 to 1 representing the prevalence of this value for this\n   * trait type in the current collection.\n   */\n  prevalence: number;\n}\n\n/**\n * Summary of the attribute prevalence for the specified NFT contract.\n *\n * @public\n */\nexport interface NftAttributesResponse {\n  /** The specified NFT contract's address. */\n  contractAddress: string;\n\n  /** The specified NFT contract's total supply. */\n  totalSupply: string;\n\n  /**\n   * The attribute prevalence of each trait grouped by the trait type for the\n   * provided NFT.\n   */\n  summary: Record<string, Record<string, number>>;\n}\n\n/** The current state of the NFT contract refresh process. */\nexport enum NftRefreshState {\n  /** The provided contract is not an NFT or does not contain metadata. */\n  DOES_NOT_EXIST = 'does_not_exist',\n\n  /** The contract has already been queued for refresh. */\n  ALREADY_QUEUED = 'already_queued',\n\n  /** The contract is currently being refreshed. */\n  IN_PROGRESS = 'in_progress',\n\n  /** The contract refresh is complete. */\n  FINISHED = 'finished',\n\n  /** The contract refresh has been queued and await execution. */\n  QUEUED = 'queued',\n\n  /** The contract was unable to be queued due to an internal error. */\n  QUEUE_FAILED = 'queue_failed'\n}\n\n/**\n * Metadata object returned in a {@link AssetTransfersResult} object if the asset\n * transferred is an ERC1155.\n *\n * @public\n */\nexport interface ERC1155Metadata {\n  tokenId: string;\n  value: string;\n}\n\n/**\n * Information about the underlying contract for the asset that was transferred\n * in a {@link AssetTransfersResult} object.\n *\n * @public\n */\nexport interface RawContract {\n  /**\n   * The raw transfer value as a hex string. `null` if the transfer was for an\n   * ERC721 or ERC1155 token.\n   */\n  value: string | null;\n\n  /** The contract address. `null` if it was an internal or external transfer. */\n  address: string | null;\n\n  /**\n   * The number of decimals in the contract as a hex string. `null` if the value\n   * is not in the contract and not available from other sources.\n   */\n  decimal: string | null;\n}\n\n/**\n * Optional parameters object for the {@link getNftsForContract} and\n * {@link getNftsForContractIterator} functions.\n *\n * This interface is used to fetch NFTs with their associated metadata. To get\n * Nfts without their associated metadata, use {@link GetBaseNftsForContractOptions}.\n *\n * @public\n */\nexport interface GetNftsForContractOptions {\n  /**\n   * Optional page key from an existing {@link NftContractBaseNftsResponse} or\n   * {@link NftContractNftsResponse}to use for pagination.\n   */\n  pageKey?: string;\n\n  /** Optional boolean flag to omit NFT metadata. Defaults to `false`. */\n  omitMetadata?: boolean;\n\n  /**\n   * Sets the total number of NFTs to return in the response. Defaults to 100.\n   * Maximum page size is 100.\n   */\n  pageSize?: number;\n\n  /**\n   * No set timeout by default - When metadata is requested, this parameter is\n   * the timeout (in milliseconds) for the website hosting the metadata to\n   * respond. If you want to only access the cache and not live fetch any\n   * metadata for cache misses then set this value to 0.\n   */\n  tokenUriTimeoutInMs?: number;\n}\n\n/**\n * Optional parameters object for the {@link getNftsForContract} and\n * {@link getNftsForContractIterator} functions.\n *\n * This interface is used to fetch NFTs without their associated metadata. To\n * get Nfts with their associated metadata, use {@link GetNftsForContractOptions}.\n *\n * @public\n */\nexport interface GetBaseNftsForContractOptions {\n  /**\n   * Optional page key from an existing {@link NftContractBaseNftsResponse} or\n   * {@link NftContractNftsResponse}to use for pagination.\n   */\n  pageKey?: string;\n\n  /** Optional boolean flag to omit NFT metadata. Defaults to `false`. */\n  omitMetadata: false;\n\n  /**\n   * Sets the total number of NFTs to return in the response. Defaults to 100.\n   * Maximum page size is 100.\n   */\n  pageSize?: number;\n\n  /**\n   * No set timeout by default - When metadata is requested, this parameter is\n   * the timeout (in milliseconds) for the website hosting the metadata to\n   * respond. If you want to only access the cache and not live fetch any\n   * metadata for cache misses then set this value to 0.\n   */\n  tokenUriTimeoutInMs?: number;\n}\n\n/**\n * Optional parameters object for the {@link getNftsForContract} method.\n *\n * This interface configures options when fetching the owner addresses of the\n * provided contract.\n *\n * @public\n */\nexport interface GetOwnersForContractOptions {\n  /**\n   * Whether to include the token balances per token id for each owner. Defaults\n   * to false when omitted.\n   */\n  withTokenBalances?: boolean;\n\n  /** The block number in hex or decimal to fetch owners for. */\n  block?: string;\n\n  /** Optional page key to paginate the next page for large requests. */\n  pageKey?: string;\n\n  /**\n   * If true, include total count of owners in the response. Only applicable\n   * when `withTokenBalances` is not set to `true`.\n   */\n  includeCount?: boolean;\n}\n\n/**\n * Optional parameters object for the {@link getNftsForContract} method.\n *\n * This interface configures options when fetching the owner addresses of the\n * provided contract.\n *\n * @public\n */\nexport interface GetOwnersForContractWithTokenBalancesOptions {\n  /**\n   * Whether to include the token balances per token id for each owner. Defaults\n   * to false when omitted.\n   */\n  withTokenBalances: true;\n\n  /** The block number in hex or decimal to fetch owners for. */\n  block?: string;\n\n  /** Optional page key to paginate the next page for large requests. */\n  pageKey?: string;\n}\n\n/**\n * Optional parameters object for the {@link getOwnersForNft} method.\n *\n * This interface configures options when fetching the owner addresses of the\n * provided NFT contract.\n *\n * @public\n */\nexport interface GetOwnersForNftOptions {\n  /** Optional page key to paginate the next page for large requests. */\n  pageKey?: string;\n\n  /**\n   * Sets the total number of owners to return in the response.\n   */\n  pageSize?: number;\n}\n\n/**\n * The response object for the {@link getNftsForContract} function. The object\n * contains the NFTs without metadata inside the NFT contract.\n *\n * @public\n */\nexport interface NftContractBaseNftsResponse {\n  /** An array of NFTs without metadata. */\n  nfts: BaseNft[];\n\n  /**\n   * Pagination token that can be passed into another request to fetch the next\n   * NFTs. If there is no page key, then there are no more NFTs to fetch.\n   */\n  pageKey?: string;\n}\n\n/**\n * The response object for the {@link getNftsForContract} function. The object\n * contains the NFTs with metadata inside the NFT contract.\n *\n * @public\n */\nexport interface NftContractNftsResponse {\n  /** An array of NFTs with metadata. */\n  nfts: Nft[];\n\n  /**\n   * Pagination token that can be passed into another request to fetch the next\n   * NFTs. If there is no page key, then there are no more NFTs to fetch.\n   */\n  pageKey?: string;\n}\n\n/** OpenSea's metadata for an NFT collection. */\nexport interface OpenSeaCollectionMetadata {\n  /** The floor price of the collection. */\n  floorPrice?: number;\n  /** The name of the collection on OpenSea. */\n  collectionName?: string;\n  /** The slug of the collection on OpenSea. */\n  collectionSlug?: string;\n  /** The approval status of the collection on OpenSea. */\n  safelistRequestStatus?: OpenSeaSafelistRequestStatus;\n  /** The image URL determined by OpenSea. */\n  imageUrl?: string;\n  /**\n   * The banner image URL determined by OpenSea.\n   * @deprecated Use {@link bannerImageUrl} instead.\n   */\n  imageBannerUrl?: string;\n  /** The banner image URL determined by OpenSea. */\n  bannerImageUrl?: string;\n  /** The description of the collection on OpenSea. */\n  description?: string;\n  /** The homepage of the collection as determined by OpenSea. */\n  externalUrl?: string;\n  /** The Twitter handle of the collection. */\n  twitterUsername?: string;\n  /** The Discord URL of the collection. */\n  discordUrl?: string;\n  /** Timestamp of when the OpenSea metadata was last ingested by Alchemy. */\n  lastIngestedAt: string;\n}\n\n/**\n * Alchemy representation of an NFT contract.\n *\n * The BaseNftContract does not hold any metadata information and only contains\n * the address. The NftContract additionally contains the tokenType, name,\n * symbol, and more.\n *\n * @public\n */\nexport interface NftContract {\n  /** The address of the NFT contract. */\n  address: string;\n  /** The type of the token in the contract. */\n  tokenType: NftTokenType;\n  /** The name of the contract. */\n  name?: string;\n  /** The symbol of the contract. */\n  symbol?: string;\n  /**\n   * The number of NFTs in the contract as an integer string. This field is only\n   * available on ERC-721 contracts.\n   */\n  totalSupply?: string;\n  /** OpenSea's metadata for the contract. */\n  openSeaMetadata: OpenSeaCollectionMetadata;\n  /** The address that deployed the NFT contract. */\n  contractDeployer?: string;\n  /** The block number the NFT contract deployed in. */\n  deployedBlockNumber?: number;\n}\n\n/** NFT contract metadata with spam information. */\nexport interface NftContractForNft extends NftContract {\n  /** Whether the NFT contract is marked as spam. */\n  isSpam?: boolean;\n  /** Potential reasons why an NFT Contract was classified as spam. */\n  spamClassifications: NftSpamClassification[];\n}\n\n/**\n * Alchemy representation of an NFT collection\n *\n * @public\n */\nexport interface NftCollection {\n  /** The name of the collection. */\n  name: string;\n  /** The OpenSea human-readable slug of the collection. */\n  slug?: string;\n  /** The floor price of the collection*/\n  floorPrice?: NftCollectionFloorPrice;\n  /** The description of the collection. */\n  description?: string;\n  /** The homepage of the collection as determined by OpenSea. */\n  externalUrl?: string;\n  /** The Twitter handle of the collection. */\n  twitterUsername?: string;\n  /** The Discord URL of the collection. */\n  discordUrl?: string;\n}\n\n/**\n * Floor price object for an NFT collection.\n */\nexport interface NftCollectionFloorPrice {\n  /** The marketplace where the floor price was determined. */\n  marketplace?: NftCollectionMarketplace;\n  /** The floor price of the collection. */\n  floorPrice?: number;\n  /** The currency of the floor price. */\n  priceCurrency?: string;\n}\n\n/**\n * Enum representing the supported NFT marketplaces on a\n * {@link NftCollectionFloorPrice} object.\n */\nexport enum NftCollectionMarketplace {\n  OPENSEA = 'OpenSea'\n}\n\n/**\n * Alchemy representation of an NFT that doesn't contain metadata.\n *\n * The BaseNft object does not hold any metadata information and only contains\n * the NFT contract and token ID. The Nft object additionally contains the NFT\n * metadata, token URI information, and media.\n *\n * @public\n */\nexport interface BaseNft {\n  /** The contract address of the NFT. */\n  contractAddress: string;\n  /** The NFT token ID as an integer string. */\n  tokenId: string;\n}\n\n/**\n * Alchemy representation of an NFT.\n *\n * The BaseNft object does not hold any metadata information and only contains\n * the NFT contract and token ID. The Nft object additionally contains the NFT\n * metadata, token URI information, and media.\n *\n * @public\n */\nexport interface Nft {\n  /** The NFT's underlying contract and relevant contract metadata. */\n  contract: NftContractForNft;\n  /** The NFT token ID as an integer string. */\n  tokenId: string;\n  /** The type of NFT.*/\n  tokenType: NftTokenType;\n  /** The NFT name. */\n  name?: string;\n  /** The NFT description. */\n  description?: string;\n  /** Media URLs and information for the NFT */\n  image: NftImage;\n  /** The raw metadata for the NFT based on the metadata URI on the NFT contract. */\n  raw: NftRawMetadata;\n  /** URIs for accessing the NFT's metadata blob. */\n  tokenUri?: string;\n  /** When the NFT was last updated in the blockchain. Represented in ISO-8601 format. */\n  timeLastUpdated: string;\n  /**\n   * Time at which the NFT was most recently acquired by the user. Only\n   * available when specifying `orderBy: NftOrdering.TRANSFERTIME` in the\n   * request.\n   */\n  acquiredAt?: AcquiredAt;\n  /** Collection metadata for the NFT, if available. */\n  collection?: BaseNftCollection;\n  /** Mint information for the NFT. */\n  mint?: NftMint;\n}\n\n/**\n * A base collection object as part of an {@link Nft}.\n */\nexport interface BaseNftCollection {\n  /** The name of the collection. */\n  name: string;\n  /** The OpenSea human-readable slug of the collection. */\n  slug?: string;\n  /** The external URL for the collection. */\n  externalUrl?: string;\n  /** The banner image URL for the collection. */\n  bannerImageUrl?: string;\n}\n\n/**\n * The raw metadata for the NFT based on the metadata URI on the NFT contract.\n */\nexport interface NftRawMetadata {\n  /** The raw token URI on the NFT contract. */\n  tokenUri?: string;\n  /** The raw metadata parsed from the raw token URI. */\n  metadata: Record<string, any>;\n  /** Error message if the raw metadata could not be fetched. */\n  error?: string;\n}\n","import { Network as NetworkFromEthers } from '@ethersproject/networks';\n\nimport { Network } from '../types/types';\n\nexport const DEFAULT_ALCHEMY_API_KEY = 'demo';\nexport const DEFAULT_NETWORK = Network.ETH_MAINNET;\nexport const DEFAULT_MAX_RETRIES = 5;\nexport const DEFAULT_REQUEST_TIMEOUT = 0; // 0 = no timeout\n\n/**\n * Returns the base URL for making Alchemy API requests. The `alchemy.com`\n * endpoints only work with non eth json-rpc requests.\n *\n * @internal\n */\nexport function getAlchemyHttpUrl(network: Network, apiKey: string): string {\n  return `https://${network}.g.alchemy.com/v2/${apiKey}`;\n}\n\nexport function getAlchemyNftHttpUrl(network: Network, apiKey: string): string {\n  return `https://${network}.g.alchemy.com/nft/v3/${apiKey}`;\n}\n\nexport function getAlchemyWsUrl(network: Network, apiKey: string): string {\n  return `wss://${network}.g.alchemy.com/v2/${apiKey}`;\n}\n\nexport function getAlchemyWebhookHttpUrl(): string {\n  return 'https://dashboard.alchemy.com/api';\n}\n\nexport enum AlchemyApiType {\n  BASE,\n  NFT,\n  WEBHOOK\n}\n\n/**\n * Mapping of network names to their corresponding Network strings used to\n * create an Ethers.js Provider instance.\n */\nexport const EthersNetwork = {\n  [Network.ETH_MAINNET]: 'mainnet',\n  [Network.ETH_GOERLI]: 'goerli',\n  [Network.ETH_SEPOLIA]: 'sepolia',\n  [Network.OPT_MAINNET]: 'optimism',\n  [Network.OPT_GOERLI]: 'optimism-goerli',\n  [Network.OPT_SEPOLIA]: 'optimism-sepolia',\n  [Network.ARB_MAINNET]: 'arbitrum',\n  [Network.ARB_GOERLI]: 'arbitrum-goerli',\n  [Network.ARB_SEPOLIA]: 'arbitrum-sepolia',\n  [Network.MATIC_MAINNET]: 'matic',\n  [Network.MATIC_MUMBAI]: 'maticmum',\n  [Network.ASTAR_MAINNET]: 'astar-mainnet',\n  [Network.POLYGONZKEVM_MAINNET]: 'polygonzkevm-mainnet',\n  [Network.POLYGONZKEVM_TESTNET]: 'polygonzkevm-testnet',\n  [Network.BASE_MAINNET]: 'base-mainnet',\n  [Network.BASE_GOERLI]: 'base-goerli',\n  [Network.BASE_SEPOLIA]: 'base-sepolia'\n};\n\n/**\n * Mapping of network names to their corresponding Ethers Network objects. These\n * networks are not yet supported by Ethers and are listed here to be overriden\n * in the provider.\n */\nexport const CustomNetworks: { [key: string]: NetworkFromEthers } = {\n  'arbitrum-goerli': {\n    chainId: 421613,\n    name: 'arbitrum-goerli'\n  },\n  'arbitrum-sepolia': {\n    chainId: 421614,\n    name: 'arbitrum-sepolia'\n  },\n  'astar-mainnet': {\n    chainId: 592,\n    name: 'astar-mainnet'\n  },\n  sepolia: {\n    chainId: 11155111,\n    name: 'sepolia'\n  },\n  'optimism-sepolia': {\n    chainId: 11155420,\n    name: 'optimism-sepolia'\n  },\n  'polygonzkevm-mainnet': {\n    chainId: 1101,\n    name: 'polygonzkevm-mainnet'\n  },\n  'polygonzkevm-testnet': {\n    chainId: 1442,\n    name: 'polygonzkevm-testnet'\n  },\n  'base-mainnet': {\n    chainId: 8453,\n    name: 'base-mainnet'\n  },\n  'base-goerli': {\n    chainId: 84531,\n    name: 'base-goerli'\n  },\n  'base-sepolia': {\n    chainId: 84532,\n    name: 'base-sepolia'\n  }\n};\n\nexport function noop(): void {\n  // It's a no-op\n}\n\nexport const ETH_NULL_VALUE = '0x';\n\nexport const ETH_NULL_ADDRESS = '0x0000000000000000000000000000000000000000';\n","import { AlchemySettings, Network } from '../types/types';\nimport {\n  AlchemyApiType,\n  DEFAULT_ALCHEMY_API_KEY,\n  DEFAULT_MAX_RETRIES,\n  DEFAULT_NETWORK,\n  DEFAULT_REQUEST_TIMEOUT,\n  getAlchemyHttpUrl,\n  getAlchemyNftHttpUrl,\n  getAlchemyWebhookHttpUrl\n} from '../util/const';\nimport type { AlchemyProvider } from './alchemy-provider';\nimport type { AlchemyWebSocketProvider } from './alchemy-websocket-provider';\n\n/**\n * This class holds the config information for the SDK client instance and\n * exposes the underlying providers for more advanced use cases.\n *\n * @public\n */\nexport class AlchemyConfig {\n  /** The Alchemy API key. */\n  readonly apiKey: string;\n\n  /** The Network that this SDK is associated with. */\n  readonly network: Network;\n\n  /** The maximum number of retries to perform. */\n  readonly maxRetries: number;\n\n  /** Setting to enable automatic batching on json-rpc requests. Defaults to false.*/\n  readonly batchRequests: boolean;\n\n  /**\n   * The optional hardcoded URL to send requests to instead of using the network\n   * and apiKey.\n   */\n  readonly url?: string;\n\n  /** The optional Alchemy auth token to use when sending requests with the Notify API. */\n  readonly authToken?: string;\n\n  /**\n   * The optional Request timeout provided in `ms` for NFT and NOTIFY API. Defaults to 0.\n   */\n  readonly requestTimeout?: number;\n\n  /**\n   * Dynamically imported provider instance.\n   *\n   * @internal\n   */\n  private _baseAlchemyProvider: Promise<AlchemyProvider> | undefined;\n\n  /**\n   * Dynamically imported provider instance.\n   *\n   * @internal\n   */\n  private _baseAlchemyWssProvider:\n    | Promise<AlchemyWebSocketProvider>\n    | undefined;\n\n  constructor(config?: AlchemySettings) {\n    this.apiKey = config?.apiKey || DEFAULT_ALCHEMY_API_KEY;\n    this.network = config?.network || DEFAULT_NETWORK;\n    this.maxRetries = config?.maxRetries || DEFAULT_MAX_RETRIES;\n    this.url = config?.url;\n    this.authToken = config?.authToken;\n    this.batchRequests = config?.batchRequests || false;\n    this.requestTimeout = config?.requestTimeout || DEFAULT_REQUEST_TIMEOUT;\n  }\n\n  /**\n   * Returns the URL endpoint to send the HTTP request to. If a custom URL was\n   * provided in the config, that URL is returned. Otherwise, the default URL is\n   * from the network and API key.\n   *\n   * @param apiType - The type of API to get the URL for.\n   * @internal\n   */\n  _getRequestUrl(apiType: AlchemyApiType): string {\n    if (this.url !== undefined) {\n      return this.url;\n    } else if (apiType === AlchemyApiType.NFT) {\n      return getAlchemyNftHttpUrl(this.network, this.apiKey);\n    } else if (apiType === AlchemyApiType.WEBHOOK) {\n      return getAlchemyWebhookHttpUrl();\n    } else {\n      return getAlchemyHttpUrl(this.network, this.apiKey);\n    }\n  }\n\n  /**\n   * Returns an AlchemyProvider instance. Only one provider is created per\n   * Alchemy instance.\n   *\n   * The AlchemyProvider is a wrapper around ether's `AlchemyProvider` class and\n   * has been expanded to support Alchemy's Enhanced APIs.\n   *\n   * Most common methods on the provider are available as top-level methods on\n   * the {@link Alchemy} instance, but the provider is exposed here to access\n   * other less-common methods.\n   *\n   * @public\n   */\n  getProvider(): Promise<AlchemyProvider> {\n    if (!this._baseAlchemyProvider) {\n      this._baseAlchemyProvider = (async () => {\n        const { AlchemyProvider } = await import('./alchemy-provider');\n        return new AlchemyProvider(this);\n      })();\n    }\n    return this._baseAlchemyProvider;\n  }\n\n  /**\n   * Returns an AlchemyWebsocketProvider instance. Only one provider is created\n   * per Alchemy instance.\n   *\n   * The AlchemyWebSocketProvider is a wrapper around ether's\n   * `AlchemyWebSocketProvider` class and has been expanded to support Alchemy's\n   * Subscription APIs, automatic backfilling, and other performance improvements.\n   *\n   * Most common methods on the provider are available as top-level methods on\n   * the {@link Alchemy} instance, but the provider is exposed here to access\n   * other less-common methods.\n   */\n  getWebSocketProvider(): Promise<AlchemyWebSocketProvider> {\n    if (!this._baseAlchemyWssProvider) {\n      this._baseAlchemyWssProvider = (async () => {\n        const { AlchemyWebSocketProvider } = await import(\n          './alchemy-websocket-provider'\n        );\n        return new AlchemyWebSocketProvider(this);\n      })();\n    }\n    return this._baseAlchemyWssProvider;\n  }\n}\n","\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n    ///////////////////\n    // Interaction Errors\n    // The user rejected the action, such as signing a message or sending\n    // a transaction\n    ErrorCode[\"ACTION_REJECTED\"] = \"ACTION_REJECTED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        let url = \"\";\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n                switch (fault) {\n                    case \"overflow\":\n                    case \"underflow\":\n                    case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\":\n                    case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map","export const version = \"logger/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function defineReadOnly(object, name, value) {\n    Object.defineProperty(object, name, {\n        enumerable: true,\n        value: value,\n        writable: false,\n    });\n}\n// Crawl up the constructor chain to find a static method\nexport function getStatic(ctor, key) {\n    for (let i = 0; i < 32; i++) {\n        if (ctor[key]) {\n            return ctor[key];\n        }\n        if (!ctor.prototype || typeof (ctor.prototype) !== \"object\") {\n            break;\n        }\n        ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n    }\n    return null;\n}\nexport function resolveProperties(object) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const promises = Object.keys(object).map((key) => {\n            const value = object[key];\n            return Promise.resolve(value).then((v) => ({ key: key, value: v }));\n        });\n        const results = yield Promise.all(promises);\n        return results.reduce((accum, result) => {\n            accum[(result.key)] = result.value;\n            return accum;\n        }, {});\n    });\n}\nexport function checkProperties(object, properties) {\n    if (!object || typeof (object) !== \"object\") {\n        logger.throwArgumentError(\"invalid object\", \"object\", object);\n    }\n    Object.keys(object).forEach((key) => {\n        if (!properties[key]) {\n            logger.throwArgumentError(\"invalid object key - \" + key, \"transaction:\" + key, object);\n        }\n    });\n}\nexport function shallowCopy(object) {\n    const result = {};\n    for (const key in object) {\n        result[key] = object[key];\n    }\n    return result;\n}\nconst opaque = { bigint: true, boolean: true, \"function\": true, number: true, string: true };\nfunction _isFrozen(object) {\n    // Opaque objects are not mutable, so safe to copy by assignment\n    if (object === undefined || object === null || opaque[typeof (object)]) {\n        return true;\n    }\n    if (Array.isArray(object) || typeof (object) === \"object\") {\n        if (!Object.isFrozen(object)) {\n            return false;\n        }\n        const keys = Object.keys(object);\n        for (let i = 0; i < keys.length; i++) {\n            let value = null;\n            try {\n                value = object[keys[i]];\n            }\n            catch (error) {\n                // If accessing a value triggers an error, it is a getter\n                // designed to do so (e.g. Result) and is therefore \"frozen\"\n                continue;\n            }\n            if (!_isFrozen(value)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return logger.throwArgumentError(`Cannot deepCopy ${typeof (object)}`, \"object\", object);\n}\n// Returns a new copy of object, such that no properties may be replaced.\n// New properties may be added only to objects.\nfunction _deepCopy(object) {\n    if (_isFrozen(object)) {\n        return object;\n    }\n    // Arrays are mutable, so we need to create a copy\n    if (Array.isArray(object)) {\n        return Object.freeze(object.map((item) => deepCopy(item)));\n    }\n    if (typeof (object) === \"object\") {\n        const result = {};\n        for (const key in object) {\n            const value = object[key];\n            if (value === undefined) {\n                continue;\n            }\n            defineReadOnly(result, key, deepCopy(value));\n        }\n        return result;\n    }\n    return logger.throwArgumentError(`Cannot deepCopy ${typeof (object)}`, \"object\", object);\n}\nexport function deepCopy(object) {\n    return _deepCopy(object);\n}\nexport class Description {\n    constructor(info) {\n        for (const key in info) {\n            this[key] = deepCopy(info[key]);\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","export const version = \"properties/5.7.0\";\n//# sourceMappingURL=_version.js.map","import { BigNumber } from '@ethersproject/bignumber';\n\n/**\n * Converts a hex string to a decimal number.\n *\n * @param hexString - The hex string to convert.\n * @public\n */\nexport function fromHex(hexString: string): number {\n  return BigNumber.from(hexString).toNumber();\n}\n\n/**\n * Converts a number to a hex string.\n *\n * @param num - The number to convert to hex.\n * @public\n */\nexport function toHex(num: number): string {\n  return BigNumber.from(num).toHexString();\n}\n\n/**\n * Checks if a value is a hex string.\n *\n * @param possibleHexString - The value to check.\n * @public\n */\nexport function isHex(possibleHexString: string): boolean {\n  return /^0x[0-9a-fA-F]+$/.test(possibleHexString);\n}\n","import { toHex } from '../api/util';\nimport {\n  RawContractBaseNft,\n  RawGetNftSalesResponse,\n  RawNft,\n  RawNftCollection,\n  RawNftContract,\n  RawNftContractForNft,\n  RawNftContractForOwner,\n  RawOwnedBaseNft\n} from '../internal/raw-interfaces';\nimport {\n  BaseNft,\n  GetNftSalesResponse,\n  Nft,\n  NftCollection,\n  NftCollectionMarketplace,\n  NftContract,\n  NftContractForNft,\n  NftContractForOwner,\n  NftSaleMarketplace,\n  NftSaleTakerType,\n  NftSpamClassification,\n  NftTokenType\n} from '../types/nft-types';\nimport { OpenSeaSafelistRequestStatus } from '../types/types';\n\nexport function formatBlock(block: string | number): string {\n  if (typeof block === 'string') {\n    return block;\n  } else if (Number.isInteger(block)) {\n    return toHex(block);\n  }\n  return block.toString();\n}\n\nfunction stringToEnum<T extends string>(\n  x: string,\n  enumb: Record<string, T>\n): T | null {\n  return Object.values(enumb).includes(x as T) ? (x as T) : null;\n}\n\nexport function getNftContractForNftFromRaw(\n  rawNftContract: RawNftContractForNft\n): NftContractForNft {\n  return nullsToUndefined<NftContractForNft>({\n    ...getNftContractFromRaw(rawNftContract),\n    spamClassifications: rawNftContract.spamClassifications.map(\n      parseNftSpamClassification\n    )\n  });\n}\n\nexport function getNftContractsForOwnerFromRaw(\n  rawNftContract: RawNftContractForOwner\n): NftContractForOwner {\n  return nullsToUndefined<NftContractForOwner>({\n    ...getNftContractFromRaw(rawNftContract),\n    displayNft: rawNftContract.displayNft,\n    image: rawNftContract.image,\n    totalBalance: rawNftContract.totalBalance,\n    numDistinctTokensOwned: rawNftContract.numDistinctTokensOwned,\n    isSpam: rawNftContract.isSpam\n  });\n}\n\nexport function getNftContractFromRaw(\n  rawNftContract: RawNftContract\n): NftContract {\n  return nullsToUndefined<NftContract>({\n    ...rawNftContract,\n    tokenType: parseNftTokenType(rawNftContract.tokenType),\n    openSeaMetadata: {\n      ...rawNftContract.openSeaMetadata,\n      safelistRequestStatus:\n        rawNftContract.openSeaMetadata.safelistRequestStatus !== null\n          ? stringToEnum(\n              rawNftContract.openSeaMetadata.safelistRequestStatus,\n              OpenSeaSafelistRequestStatus\n            )\n          : null\n    }\n  });\n}\n\nexport function getNftCollectionFromRaw(\n  rawNftCollection: RawNftCollection\n): NftCollection {\n  return nullsToUndefined<NftCollection>({\n    ...rawNftCollection,\n    floorPrice: {\n      ...rawNftCollection.floorPrice,\n      marketplace: parseNftCollectionMarketplace(\n        rawNftCollection.floorPrice.marketplace\n      )\n    }\n  });\n}\n\nexport function getBaseNftFromRaw(rawBaseNft: RawOwnedBaseNft): BaseNft;\nexport function getBaseNftFromRaw(\n  rawContractBaseNft: RawContractBaseNft,\n  contractAddress: string\n): BaseNft;\nexport function getBaseNftFromRaw(\n  rawBaseNft: RawOwnedBaseNft | RawContractBaseNft,\n  contractAddress?: string\n): BaseNft {\n  return {\n    contractAddress: contractAddress\n      ? contractAddress\n      : (rawBaseNft as RawOwnedBaseNft).contractAddress,\n    tokenId: rawBaseNft.tokenId\n  };\n}\n\nexport function getNftFromRaw(rawNft: RawNft): Nft {\n  return nullsToUndefined<Nft>({\n    ...rawNft,\n    contract: getNftContractForNftFromRaw(rawNft.contract),\n    tokenType: parseNftTokenType(rawNft.tokenType),\n    acquiredAt: rawNft.acquiredAt,\n    collection: rawNft.collection,\n    mint: rawNft.mint\n  });\n}\n\nexport function getNftSalesFromRaw(\n  rawNftSales: RawGetNftSalesResponse\n): GetNftSalesResponse {\n  return nullsToUndefined<GetNftSalesResponse>({\n    nftSales: rawNftSales.nftSales.map(rawNftSale => ({\n      ...rawNftSale,\n      marketplace: parseNftSaleMarketplace(rawNftSale.marketplace),\n      taker: parseNftTaker(rawNftSale.taker)\n    })),\n    validAt: rawNftSales.validAt,\n    pageKey: rawNftSales.pageKey\n  });\n}\n\nfunction parseNftSaleMarketplace(marketplace: string): NftSaleMarketplace {\n  switch (marketplace) {\n    case 'looksrare':\n      return NftSaleMarketplace.LOOKSRARE;\n    case 'seaport':\n      return NftSaleMarketplace.SEAPORT;\n    case 'x2y2':\n      return NftSaleMarketplace.X2Y2;\n    case 'wyvern':\n      return NftSaleMarketplace.WYVERN;\n    case 'cryptopunks':\n      return NftSaleMarketplace.CRYPTOPUNKS;\n    case 'blur':\n      return NftSaleMarketplace.BLUR;\n    default:\n      return NftSaleMarketplace.UNKNOWN;\n  }\n}\n\nfunction parseNftCollectionMarketplace(\n  marketplace: string | null\n): NftCollectionMarketplace | undefined {\n  switch (marketplace) {\n    case 'OpenSea':\n      return NftCollectionMarketplace.OPENSEA;\n    default:\n      return undefined;\n  }\n}\n\nfunction parseNftTaker(taker: string): NftSaleTakerType {\n  // The `.toLowerCase()` call is needed because the API returns the capitalized values\n  switch (taker.toLowerCase()) {\n    case 'buyer':\n      return NftSaleTakerType.BUYER;\n    case 'seller':\n      return NftSaleTakerType.SELLER;\n    default:\n      throw new Error(`Unsupported NftSaleTakerType ${taker}`);\n  }\n}\n\nfunction parseNftSpamClassification(s: string): NftSpamClassification {\n  const res = stringToEnum(s, NftSpamClassification);\n  if (res == null) {\n    return NftSpamClassification.Unknown;\n  }\n\n  return res;\n}\n\nfunction parseNftTokenType(tokenType: string | undefined): NftTokenType {\n  switch (tokenType) {\n    case 'erc721':\n    case 'ERC721':\n      return NftTokenType.ERC721;\n    case 'erc1155':\n    case 'ERC1155':\n      return NftTokenType.ERC1155;\n    case 'no_supported_nft_standard':\n    case 'NO_SUPPORTED_NFT_STANDARD':\n      return NftTokenType.NO_SUPPORTED_NFT_STANDARD;\n    case 'not_a_contract':\n    case 'NOT_A_CONTRACT':\n      return NftTokenType.NOT_A_CONTRACT;\n    default:\n      return NftTokenType.UNKNOWN;\n  }\n}\n\nexport const IS_BROWSER = typeof window !== 'undefined' && window !== null;\n\ntype WithNullableFields<T> = T extends undefined\n  ? null | undefined\n  : T extends (infer U)[]\n  ? WithNullableFields<U>[]\n  : T extends object\n  ? {\n      [K in keyof T]: WithNullableFields<T[K]>;\n    }\n  : T;\n\nexport function nullsToUndefined<U>(obj: WithNullableFields<U>): U {\n  if (obj === null || obj === undefined) {\n    return undefined as any;\n  }\n\n  if ((obj as any).constructor.name === 'Object' || Array.isArray(obj)) {\n    for (const key in obj) {\n      (obj as any)[key] = nullsToUndefined((obj as any)[key]);\n    }\n  }\n  return obj as any;\n}\n","import type { Log } from '@ethersproject/abstract-provider';\nimport { resolveProperties } from '@ethersproject/properties';\n\nimport { AlchemyConfig } from '../api/alchemy-config';\nimport { toHex } from '../api/util';\nimport {\n  AssetTransfersParams,\n  AssetTransfersResponse,\n  AssetTransfersWithMetadataParams,\n  AssetTransfersWithMetadataResponse,\n  Filter,\n  FilterByBlockHash,\n  TransactionReceiptsParams,\n  TransactionReceiptsResponse\n} from '../types/types';\nimport { formatBlock } from '../util/util';\n\n/**\n * This file contains the underlying implementations for exposed API surface in\n * the {@link CoreNamespace}. By moving the methods out into a separate file,\n * other namespaces can access these methods without depending on the entire\n * CoreNamespace, or override the `srcMethod` param used for logging.\n */\n\n/**\n * Gets the asset transfers for the provided params.\n */\nexport async function getAssetTransfers(\n  config: AlchemyConfig,\n  params: AssetTransfersWithMetadataParams | AssetTransfersParams,\n  srcMethod = 'getAssetTransfers'\n): Promise<AssetTransfersResponse | AssetTransfersWithMetadataResponse> {\n  const provider = await config.getProvider();\n  if (params.fromAddress) {\n    params.fromAddress = await provider._getAddress(params.fromAddress);\n  }\n  if (params.toAddress) {\n    params.toAddress = await provider._getAddress(params.toAddress);\n  }\n  return provider._send(\n    'alchemy_getAssetTransfers',\n    [\n      {\n        ...params,\n        fromBlock:\n          params.fromBlock != null ? formatBlock(params.fromBlock) : undefined,\n        toBlock:\n          params.toBlock != null ? formatBlock(params.toBlock) : undefined,\n        maxCount: params.maxCount != null ? toHex(params.maxCount) : undefined\n      }\n    ],\n    srcMethod\n  );\n}\n\nexport async function getTransactionReceipts(\n  config: AlchemyConfig,\n  params: TransactionReceiptsParams,\n  srcMethod = 'getTransactionReceipts'\n): Promise<TransactionReceiptsResponse> {\n  const provider = await config.getProvider();\n  return provider._send('alchemy_getTransactionReceipts', [params], srcMethod);\n}\n\n/**\n * This method is based on the ethers implementation of getLogs, but is expanded\n * to support specifying an address array in the filter.\n *\n * The main modifications made to support an address array are:\n * - Custom `getFilter()` method that supports an address array\n * - Use of `arrayOf()` formatter to format the logs to avoid the `Formatter` import.\n * - Use of `provider.send()` to avoid formatting logic in `provider.perform()`.\n */\nexport async function getLogs(\n  config: AlchemyConfig,\n  filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>\n): Promise<Array<Log>> {\n  const provider = await config.getProvider();\n  await provider.getNetwork();\n  const params = await resolveProperties({\n    filter: getFilter(config, filter)\n  });\n\n  const logs: Array<Log> = await provider.send('eth_getLogs', [params.filter]);\n  logs.forEach(log => {\n    if (log.removed == null) {\n      log.removed = false;\n    }\n  });\n  return arrayOf(provider.formatter.filterLog.bind(provider.formatter))(logs);\n}\n\n/**\n * This method is based on and copied from the ethers implementation of\n * `JsonRpcProvider._getFilter()`, but is extended to support an address array.\n *\n * This implementation is a hacky way to get around the ethers formatter. The\n * formatter is used to check the types of the `filter` params, but ethers does\n * not allow an array in the `address` field. To preserve the ethers formatter\n * on the other fields, we use the formatter to check the types of those other\n * fields, and then manually check the `address` field last.\n */\nasync function getFilter(\n  config: AlchemyConfig,\n  filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>\n): Promise<Filter | FilterByBlockHash> {\n  // START MODIFIED CODE\n  const provider = await config.getProvider();\n  const resolvedFilter = await filter;\n  let result: any = {};\n  // END MODIFIED CODE\n\n  ['blockHash', 'topics'].forEach(key => {\n    if ((resolvedFilter as any)[key] == null) {\n      return;\n    }\n    result[key] = (resolvedFilter as any)[key];\n  });\n\n  ['fromBlock', 'toBlock'].forEach(key => {\n    if ((resolvedFilter as any)[key] == null) {\n      return;\n    }\n    result[key] = provider._getBlockTag((resolvedFilter as any)[key]);\n  });\n\n  // BEGIN MODIFIED CODE\n  // Format the `result` object using the ethers formatter without the `address`\n  // field.\n  result = provider.formatter.filter(await resolveProperties(result));\n\n  // After formatting the other fields, manually format the `address` field\n  // before adding it to the `result` object.\n  if (Array.isArray(resolvedFilter.address)) {\n    result.address = await Promise.all(\n      resolvedFilter.address.map(async (address: string) =>\n        provider._getAddress(address)\n      )\n    );\n  } else if (resolvedFilter.address != null) {\n    result.address = await provider._getAddress(resolvedFilter.address);\n  }\n\n  return result;\n  // END MODIFIED CODE\n}\n\n/**\n * DO NOT MODIFY.\n *\n * This function is directly copied over from ethers implementation of\n * `Formatter.arrayOf()`. It is copied here to avoid having to import the\n * `Formatter` class or `FormatterFunc` type from ethers, that are not part of\n * the default export.\n *\n * This function returns a function that applies the formatter to an array of\n * values, and is used to format the logs returned by `getLogs()`.\n */\nfunction arrayOf(format: any): any {\n  return function (array: any): Array<any> {\n    if (!Array.isArray(array)) {\n      throw new Error('not an array');\n    }\n\n    const result: any = [];\n\n    array.forEach(value => {\n      result.push(format(value));\n    });\n\n    return result;\n  };\n}\n","import type {\n  Block,\n  BlockTag,\n  BlockWithTransactions,\n  FeeData,\n  Log,\n  TransactionReceipt,\n  TransactionRequest,\n  TransactionResponse\n} from '@ethersproject/abstract-provider';\nimport { BigNumber, BigNumberish } from '@ethersproject/bignumber';\nimport type { Network as EthersNetworkAlias } from '@ethersproject/networks/lib/types';\nimport type { Deferrable } from '@ethersproject/properties';\n\nimport {\n  getAssetTransfers,\n  getLogs,\n  getTransactionReceipts\n} from '../internal/core-api';\nimport {\n  AssetTransfersParams,\n  AssetTransfersResponse,\n  AssetTransfersWithMetadataParams,\n  AssetTransfersWithMetadataResponse,\n  DeployResult,\n  Filter,\n  FilterByBlockHash,\n  GetTokensForOwnerOptions,\n  GetTokensForOwnerResponse,\n  OwnedToken,\n  TokenBalanceType,\n  TokenBalancesOptionsDefaultTokens,\n  TokenBalancesOptionsErc20,\n  TokenBalancesResponse,\n  TokenBalancesResponseErc20,\n  TokenMetadataResponse,\n  TransactionReceiptsParams,\n  TransactionReceiptsResponse\n} from '../types/types';\nimport { ETH_NULL_VALUE } from '../util/const';\nimport { nullsToUndefined } from '../util/util';\nimport { AlchemyConfig } from './alchemy-config';\nimport { toHex } from './util';\nimport { formatUnits } from './utils';\n\n/**\n * The core namespace contains all commonly-used [Ethers.js\n * Provider](https://docs.ethers.io/v5/api/providers/api-providers/#AlchemyProvider)\n * methods. If you are already using Ethers.js, you should be simply able to\n * replace the Ethers.js Provider object with `alchemy.core` when accessing\n * provider methods and it should just work.\n *\n * Do not call this constructor directly. Instead, instantiate an Alchemy object\n * with `const alchemy = new Alchemy(config)` and then access the core namespace\n * via `alchemy.core`.\n */\nexport class CoreNamespace {\n  /** @internal */\n  constructor(private readonly config: AlchemyConfig) {}\n\n  /**\n   * Returns the balance of a given address as of the provided block.\n   *\n   * @param addressOrName The address or name of the account to get the balance for.\n   * @param blockTag The optional block number or hash to get the balance for.\n   *   Defaults to 'latest' if unspecified.\n   * @public\n   */\n  async getBalance(\n    addressOrName: string | Promise<string>,\n    blockTag?: BlockTag | Promise<BlockTag>\n  ): Promise<BigNumber> {\n    const provider = await this.config.getProvider();\n    return provider.getBalance(addressOrName, blockTag);\n  }\n\n  /**\n   * Checks if the provided address is a smart contract.\n   *\n   * @param address The address to check type for.\n   * @public\n   */\n  async isContractAddress(address: string): Promise<boolean> {\n    const provider = await this.config.getProvider();\n    const code = await provider.getCode(address);\n    return code !== '0x';\n  }\n\n  /**\n   * Returns the contract code of the provided address at the block. If there is\n   * no contract deployed, the result is `0x`.\n   *\n   * @param addressOrName The address or name of the account to get the code for.\n   * @param blockTag The optional block number or hash to get the code for.\n   *   Defaults to 'latest' if unspecified.\n   * @public\n   */\n  async getCode(\n    addressOrName: string | Promise<string>,\n    blockTag?: BlockTag | Promise<BlockTag>\n  ): Promise<string> {\n    const provider = await this.config.getProvider();\n    return provider.getCode(addressOrName, blockTag);\n  }\n\n  /**\n   * Return the value of the provided position at the provided address, at the\n   * provided block in `Bytes32` format.\n   *\n   * @param addressOrName The address or name of the account to get the code for.\n   * @param position The position of the storage slot to get.\n   * @param blockTag The optional block number or hash to get the code for.\n   *   Defaults to 'latest' if unspecified.\n   * @public\n   */\n  async getStorageAt(\n    addressOrName: string | Promise<string>,\n    position: BigNumberish | Promise<BigNumberish>,\n    blockTag?: BlockTag | Promise<BlockTag>\n  ): Promise<string> {\n    const provider = await this.config.getProvider();\n    return provider.getStorageAt(addressOrName, position, blockTag);\n  }\n\n  /**\n   * Returns the number of transactions ever sent from the provided address, as\n   * of the provided block tag. This value is used as the nonce for the next\n   * transaction from the address sent to the network.\n   *\n   * @param addressOrName The address or name of the account to get the nonce for.\n   * @param blockTag The optional block number or hash to get the nonce for.\n   * @public\n   */\n  async getTransactionCount(\n    addressOrName: string | Promise<string>,\n    blockTag?: BlockTag | Promise<BlockTag>\n  ): Promise<number> {\n    const provider = await this.config.getProvider();\n    return provider.getTransactionCount(addressOrName, blockTag);\n  }\n\n  /**\n   * Returns the block from the network based on the provided block number or\n   * hash. Transactions on the block are represented as an array of transaction\n   * hashes. To get the full transaction details on the block, use\n   * {@link getBlockWithTransactions} instead.\n   *\n   * @param blockHashOrBlockTag The block number or hash to get the block for.\n   * @public\n   */\n  async getBlock(\n    blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>\n  ): Promise<Block> {\n    const provider = await this.config.getProvider();\n    return provider.getBlock(blockHashOrBlockTag);\n  }\n\n  /**\n   * Returns the block from the network based on the provided block number or\n   * hash. Transactions on the block are represented as an array of\n   * {@link TransactionResponse} objects.\n   *\n   * @param blockHashOrBlockTag The block number or hash to get the block for.\n   * @public\n   */\n  async getBlockWithTransactions(\n    blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>\n  ): Promise<BlockWithTransactions> {\n    const provider = await this.config.getProvider();\n    return provider.getBlockWithTransactions(blockHashOrBlockTag);\n  }\n\n  /**\n   * Returns the {@link EthersNetworkAlias} Alchemy is connected to.\n   *\n   * @public\n   */\n  async getNetwork(): Promise<EthersNetworkAlias> {\n    const provider = await this.config.getProvider();\n    return provider.getNetwork();\n  }\n\n  /**\n   * Returns the block number of the most recently mined block.\n   *\n   * @public\n   */\n  async getBlockNumber(): Promise<number> {\n    const provider = await this.config.getProvider();\n    return provider.getBlockNumber();\n  }\n\n  /**\n   * Returns the best guess of the current gas price to use in a transaction.\n   *\n   * @public\n   */\n  async getGasPrice(): Promise<BigNumber> {\n    const provider = await this.config.getProvider();\n    return provider.getGasPrice();\n  }\n\n  /**\n   * Returns the recommended fee data to use in a transaction.\n   *\n   * For an EIP-1559 transaction, the maxFeePerGas and maxPriorityFeePerGas\n   * should be used.\n   *\n   * For legacy transactions and networks which do not support EIP-1559, the\n   * gasPrice should be used.\n   *\n   * @public\n   */\n  async getFeeData(): Promise<FeeData> {\n    const provider = await this.config.getProvider();\n    return provider.getFeeData();\n  }\n\n  /**\n   * Returns a Promise which will stall until the network has heen established,\n   * ignoring errors due to the target node not being active yet.\n   *\n   * This can be used for testing or attaching scripts to wait until the node is\n   * up and running smoothly.\n   *\n   * @public\n   */\n  async ready(): Promise<EthersNetworkAlias> {\n    const provider = await this.config.getProvider();\n    return provider.ready;\n  }\n\n  /**\n   * Returns the result of executing the transaction, using call. A call does\n   * not require any ether, but cannot change any state. This is useful for\n   * calling getters on Contracts.\n   *\n   * @param transaction The transaction to execute.\n   * @param blockTag The optional block number or hash to get the call for.\n   * @public\n   */\n  async call(\n    transaction: Deferrable<TransactionRequest>,\n    blockTag?: BlockTag | Promise<BlockTag>\n  ): Promise<string> {\n    const provider = await this.config.getProvider();\n    return provider.call(transaction, blockTag);\n  }\n\n  /**\n   * Returns an estimate of the amount of gas that would be required to submit\n   * transaction to the network.\n   *\n   * An estimate may not be accurate since there could be another transaction on\n   * the network that was not accounted for, but after being mined affects the\n   * relevant state.\n   *\n   * This is an alias for {@link TransactNamespace.estimateGas}.\n   *\n   * @param transaction The transaction to estimate gas for.\n   * @public\n   */\n  async estimateGas(\n    transaction: Deferrable<TransactionRequest>\n  ): Promise<BigNumber> {\n    const provider = await this.config.getProvider();\n    return provider.estimateGas(transaction);\n  }\n\n  /**\n   * Returns the transaction with hash or null if the transaction is unknown.\n   *\n   * If a transaction has not been mined, this method will search the\n   * transaction pool. Various backends may have more restrictive transaction\n   * pool access (e.g. if the gas price is too low or the transaction was only\n   * recently sent and not yet indexed) in which case this method may also return null.\n   *\n   * NOTE: This is an alias for {@link TransactNamespace.getTransaction}.\n   *\n   * @param transactionHash The hash of the transaction to get.\n   * @public\n   */\n  async getTransaction(\n    transactionHash: string | Promise<string>\n  ): Promise<TransactionResponse | null> {\n    const provider = await this.config.getProvider();\n    return provider.getTransaction(transactionHash);\n  }\n\n  /**\n   * Returns the transaction receipt for hash or null if the transaction has not\n   * been mined.\n   *\n   * To stall until the transaction has been mined, consider the\n   * waitForTransaction method below.\n   *\n   * @param transactionHash The hash of the transaction to get.\n   * @public\n   */\n  async getTransactionReceipt(\n    transactionHash: string | Promise<string>\n  ): Promise<TransactionReceipt | null> {\n    const provider = await this.config.getProvider();\n    return provider.getTransactionReceipt(transactionHash);\n  }\n\n  /**\n   * Submits transaction to the network to be mined. The transaction must be\n   * signed, and be valid (i.e. the nonce is correct and the account has\n   * sufficient balance to pay for the transaction).\n   *\n   * NOTE: This is an alias for {@link TransactNamespace.getTransaction}.\n   *\n   * @param signedTransaction The signed transaction to send.\n   * @public\n   */\n  async sendTransaction(\n    signedTransaction: string | Promise<string>\n  ): Promise<TransactionResponse> {\n    const provider = await this.config.getProvider();\n    return provider.sendTransaction(signedTransaction);\n  }\n\n  /**\n   * Returns a promise which will not resolve until specified transaction hash is mined.\n   *\n   * If {@link confirmations} is 0, this method is non-blocking and if the\n   * transaction has not been mined returns null. Otherwise, this method will\n   * block until the transaction has confirmed blocks mined on top of the block\n   * in which it was mined.\n   *\n   * NOTE: This is an alias for {@link TransactNamespace.getTransaction}.\n   *\n   * @param transactionHash The hash of the transaction to wait for.\n   * @param confirmations The number of blocks to wait for.\n   * @param timeout The maximum time to wait for the transaction to confirm.\n   * @public\n   */\n  async waitForTransaction(\n    transactionHash: string,\n    confirmations?: number,\n    timeout?: number\n  ): Promise<TransactionReceipt | null> {\n    const provider = await this.config.getProvider();\n    return provider.waitForTransaction(transactionHash, confirmations, timeout);\n  }\n\n  /**\n   * Returns an array of logs that match the provided filter.\n   *\n   * @param filter The filter object to use.\n   * @public\n   */\n  async getLogs(\n    filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>\n  ): Promise<Array<Log>> {\n    return getLogs(this.config, filter);\n  }\n\n  /**\n   * Allows sending a raw message to the Alchemy backend.\n   *\n   * @param method The method to call.\n   * @param params The parameters to pass to the method.\n   * @public\n   */\n  async send(method: string, params: Array<any>): Promise<any> {\n    const provider = await this.config.getProvider();\n    return provider.send(method, params);\n  }\n\n  /**\n   * Finds the address that deployed the provided contract and block number it\n   * was deployed in.\n   *\n   * NOTE: This method performs a binary search across all blocks since genesis\n   * and can take a long time to complete. This method is a convenience method\n   * that will eventually be replaced by a single call to an Alchemy endpoint\n   * with this information cached.\n   *\n   * @param contractAddress - The contract address to find the deployer for.\n   * @beta\n   */\n  async findContractDeployer(contractAddress: string): Promise<DeployResult> {\n    const provider = await this.config.getProvider();\n    const currentBlockNum = await provider.getBlockNumber();\n    if (\n      (await provider.getCode(contractAddress, currentBlockNum)) ===\n      ETH_NULL_VALUE\n    ) {\n      throw new Error(`Contract '${contractAddress}' does not exist`);\n    }\n\n    // Binary search for the block number that the contract was deployed in.\n    const firstBlock = await binarySearchFirstBlock(\n      0,\n      currentBlockNum + 1,\n      contractAddress,\n      this.config\n    );\n\n    // Find the first transaction in the block that matches the provided address.\n    const txReceipts = await getTransactionReceipts(\n      this.config,\n      {\n        blockNumber: toHex(firstBlock)\n      },\n      'findContractDeployer'\n    );\n    const matchingReceipt = txReceipts.receipts?.find(\n      receipt => receipt.contractAddress === contractAddress.toLowerCase()\n    );\n    return {\n      deployerAddress: matchingReceipt?.from,\n      blockNumber: firstBlock\n    };\n  }\n\n  /**\n   * Returns the ERC-20 token balances for a specific owner address.\n   *\n   * @param addressOrName The owner address to get the token balances for.\n   * @public\n   */\n  async getTokenBalances(\n    addressOrName: string\n  ): Promise<TokenBalancesResponseErc20>;\n\n  /**\n   * Returns the token balances for a specific owner address given a list of contracts.\n   *\n   * @param addressOrName The owner address to get the token balances for.\n   * @param contractAddresses A list of contract addresses to check. If omitted,\n   *   all ERC-20 tokens will be checked.\n   * @public\n   */\n  async getTokenBalances(\n    addressOrName: string,\n    contractAddresses?: string[]\n  ): Promise<TokenBalancesResponse>;\n\n  /**\n   * Returns the ERC-20 token balances for a specific owner.\n   *\n   * This overload covers the erc-20 token type which includes a page key in the response.\n   *\n   * @param addressOrName The owner address to get the token balances for.\n   * @param options Token type options set to ERC-20 with optional page key.\n   * @public\n   */\n  async getTokenBalances(\n    addressOrName: string,\n    options: TokenBalancesOptionsErc20\n  ): Promise<TokenBalancesResponseErc20>;\n\n  /**\n   * Returns the token balances for a specific owner, fetching from the top 100\n   * tokens by 24 hour volume.\n   *\n   * This overload covers the default token type which includes a page key in\n   * the response.\n   *\n   * @param addressOrName The owner address to get the token balances for.\n   * @param options Token type options set to ERC-20 with optional page key.\n   * @public\n   */\n  async getTokenBalances(\n    addressOrName: string,\n    options: TokenBalancesOptionsDefaultTokens\n  ): Promise<TokenBalancesResponse>;\n\n  async getTokenBalances(\n    addressOrName: string,\n    contractAddressesOrOptions?:\n      | string[]\n      | TokenBalancesOptionsDefaultTokens\n      | TokenBalancesOptionsErc20\n  ) {\n    const provider = await this.config.getProvider();\n    const address = await provider._getAddress(addressOrName);\n    if (Array.isArray(contractAddressesOrOptions)) {\n      if (contractAddressesOrOptions.length > 1500) {\n        throw new Error(\n          'You cannot pass in more than 1500 contract addresses to getTokenBalances()'\n        );\n      }\n      if (contractAddressesOrOptions.length === 0) {\n        throw new Error(\n          'getTokenBalances() requires at least one contractAddress when using an array'\n        );\n      }\n      return provider._send(\n        'alchemy_getTokenBalances',\n        [address, contractAddressesOrOptions],\n        'getTokenBalances'\n      );\n    } else {\n      const tokenType =\n        contractAddressesOrOptions === undefined\n          ? TokenBalanceType.ERC20\n          : contractAddressesOrOptions.type;\n      const params: Array<string | { pageKey: string }> = [address, tokenType];\n      if (\n        contractAddressesOrOptions?.type === TokenBalanceType.ERC20 &&\n        contractAddressesOrOptions.pageKey\n      ) {\n        params.push({ pageKey: contractAddressesOrOptions.pageKey });\n      }\n      return provider._send(\n        'alchemy_getTokenBalances',\n        params,\n        'getTokenBalances'\n      );\n    }\n  }\n\n  /**\n   * Returns the tokens that the specified address owns, along with the amount\n   * of each token and the relevant metadata.\n   *\n   * @param addressOrName The owner address to get the tokens with balances for.\n   * @param options Additional options to pass to the request.\n   * @public\n   */\n  async getTokensForOwner(\n    addressOrName: string,\n    options?: GetTokensForOwnerOptions\n  ): Promise<GetTokensForOwnerResponse> {\n    const provider = await this.config.getProvider();\n    const address = await provider._getAddress(addressOrName);\n    const params: any[] = [\n      address,\n      options?.contractAddresses ?? TokenBalanceType.ERC20\n    ];\n    if (options?.pageKey) {\n      params.push({ pageKey: options.pageKey });\n    }\n    const response = (await provider._send(\n      'alchemy_getTokenBalances',\n      params,\n      'getTokensForOwner'\n    )) as TokenBalancesResponseErc20;\n\n    const formattedBalances = response.tokenBalances.map(balance => ({\n      contractAddress: balance.contractAddress,\n      rawBalance: BigNumber.from(balance.tokenBalance!).toString()\n    }));\n\n    const metadataPromises = await Promise.allSettled(\n      response.tokenBalances.map(token =>\n        provider._send(\n          'alchemy_getTokenMetadata',\n          [token.contractAddress],\n          'getTokensForOwner',\n          /* forceBatch= */ true\n        )\n      )\n    );\n    const metadata: TokenMetadataResponse[] = metadataPromises.map(p =>\n      p.status === 'fulfilled'\n        ? p.value\n        : {\n            name: null,\n            symbol: null,\n            decimals: null,\n            logo: null\n          }\n    );\n    const ownedTokens = formattedBalances.map((balance, index) => ({\n      ...balance,\n      ...metadata[index],\n      balance:\n        metadata[index].decimals !== null\n          ? formatUnits(balance.rawBalance, metadata[index].decimals!)\n          : undefined\n    }));\n\n    return {\n      tokens: ownedTokens.map(t => nullsToUndefined<OwnedToken>(t)),\n      pageKey: response.pageKey\n    };\n  }\n\n  /**\n   * Returns metadata for a given token contract address.\n   *\n   * @param address The contract address to get metadata for.\n   * @public\n   */\n  async getTokenMetadata(address: string): Promise<TokenMetadataResponse> {\n    const provider = await this.config.getProvider();\n    return provider._send(\n      'alchemy_getTokenMetadata',\n      [address],\n      'getTokenMetadata'\n    );\n  }\n\n  /**\n   * Get transactions for specific addresses. See the web documentation for the\n   * full details:\n   * https://docs.alchemy.com/alchemy/enhanced-apis/transfers-api#alchemy_getassettransfers\n   *\n   * This overload requires {@link AssetTransfersWithMetadataParams.withMetadata}\n   * to be set to `true`, which results in additional metadata returned in the\n   * response object.\n   *\n   * @param params An object containing fields for the asset transfer query\n   * @public\n   */\n  async getAssetTransfers(\n    params: AssetTransfersWithMetadataParams\n  ): Promise<AssetTransfersWithMetadataResponse>;\n\n  /**\n   * Get transactions for specific addresses. See the web documentation for the\n   * full details:\n   * https://docs.alchemy.com/alchemy/enhanced-apis/transfers-api#alchemy_getassettransfers\n   *\n   * @param params An object containing fields for the asset transfer query.\n   * @public\n   */\n  async getAssetTransfers(\n    params: AssetTransfersParams\n  ): Promise<AssetTransfersResponse>;\n  async getAssetTransfers(\n    params: AssetTransfersWithMetadataParams | AssetTransfersParams\n  ): Promise<AssetTransfersResponse | AssetTransfersWithMetadataResponse> {\n    return getAssetTransfers(this.config, params);\n  }\n\n  /**\n   * Gets all transaction receipts for a given block by number or block hash.\n   *\n   * @param params An object containing fields for the transaction receipt query.\n   * @public\n   */\n  async getTransactionReceipts(\n    params: TransactionReceiptsParams\n  ): Promise<TransactionReceiptsResponse> {\n    return getTransactionReceipts(this.config, params);\n  }\n\n  /**\n   * Returns the underlying owner address for the provided ENS address, or `null`\n   * if the ENS name does not have an underlying address.\n   *\n   * @param name The ENS address name to resolve.\n   */\n  async resolveName(name: string): Promise<string | null> {\n    const provider = await this.config.getProvider();\n    return provider.resolveName(name);\n  }\n\n  /**\n   * Performs a reverse lookup of the address in ENS using the Reverse Registrar. If the name does not exist, or the forward lookup does not match, null is returned.\n   *\n   * An ENS name requires additional configuration to setup a reverse record, so not all ENS addresses will map back to the original ENS domain.\n   *\n   * @param address The address to look up the ENS domain name for.\n   */\n  async lookupAddress(address: string): Promise<string | null> {\n    const provider = await this.config.getProvider();\n    return provider.lookupAddress(address);\n  }\n}\n\n/**\n * Perform a binary search between an integer range of block numbers to find the\n * block number where the contract was deployed.\n *\n * @internal\n */\nasync function binarySearchFirstBlock(\n  start: number,\n  end: number,\n  address: string,\n  config: AlchemyConfig\n): Promise<number> {\n  if (start >= end) {\n    return end;\n  }\n\n  const mid = Math.floor((start + end) / 2);\n  const provider = await config.getProvider();\n  const code = await provider.getCode(address, mid);\n  if (code === ETH_NULL_VALUE) {\n    return binarySearchFirstBlock(mid + 1, end, address, config);\n  }\n  return binarySearchFirstBlock(start, mid, address, config);\n}\n","import {\n  BlockIdentifier,\n  DebugCallTrace,\n  DebugCallTracer,\n  DebugPrestateTrace,\n  DebugPrestateTracer,\n  DebugTransaction\n} from '../types/types';\nimport { AlchemyConfig } from './alchemy-config';\nimport { hexStripZeros, hexValue, isHexString } from './utils';\n\n/**\n * The Debug namespace contains methods to access the non-standard RPC methods\n * for inspecting and debugging transactions.\n *\n * For more information on the different methods and use cases please read our\n * [documentation](https://docs.alchemy.com/reference/debug-api-quickstart).\n *\n * Do not call this constructor directly. Instead, instantiate an Alchemy object\n * with `const alchemy = new Alchemy(config)` and then access the debug namespace\n * via `alchemy.debug`.\n */\nexport class DebugNamespace {\n  /** @internal */\n  constructor(private readonly config: AlchemyConfig) {}\n\n  /**\n   * Runs an `eth_call` with the context of the provided block execution using the\n   * final state of the parent block as the base.\n   *\n   * @param transaction The transaction to debug trace.\n   * @param blockIdentifier The block to debug the transaction in. Can be a\n   * block hash, block number hex string, or commitment level.\n   * @param tracer Tracer type and configuration.\n   */\n  traceCall(\n    transaction: DebugTransaction,\n    blockIdentifier: BlockIdentifier,\n    tracer: DebugCallTracer\n  ): Promise<DebugCallTrace>;\n\n  /**\n   * Runs an `eth_call` with the context of the provided block execution using the\n   * final state of the parent block as the base.\n   *\n   * @param transaction The transaction to debug trace.\n   * @param blockIdentifier The block to debug the transaction in. Can be a\n   * block hash, block number hex string, or commitment level.\n   * @param tracer Tracer type and configuration.\n   */\n  traceCall(\n    transaction: DebugTransaction,\n    blockIdentifier: BlockIdentifier,\n    tracer: DebugPrestateTracer\n  ): Promise<DebugPrestateTrace>;\n  async traceCall(\n    transaction: DebugTransaction,\n    blockIdentifier: BlockIdentifier,\n    tracer: DebugCallTracer | DebugPrestateTracer\n  ): Promise<DebugCallTrace | DebugPrestateTrace> {\n    const provider = await this.config.getProvider();\n    const params = [transaction, blockIdentifier, parseTracerParams(tracer)];\n    return provider._send('debug_traceCall', params, 'traceCall');\n  }\n\n  /**\n   * Attempts to run the transaction in the exact same manner as it was executed\n   * on the network. It will replay any transaction that may have been executed\n   * prior to this one before it and will then attempt to execute the transaction\n   * that corresponds to the given hash.\n   *\n   * @param transactionHash The transaction hash of the transaction to trace.\n   * @param tracer Tracer type and configuration.\n   * @param timeout  A duration string of decimal numbers that overrides the\n   * default timeout of 5 seconds for JavaScript-based tracing calls. Max\n   * timeout is \"10s\". Valid time units are \"ns\", \"us\", \"ms\", \"s\" each with\n   * optional fraction, such as \"300ms\" or \"2s45ms\".\n   */\n  async traceTransaction(\n    transactionHash: string,\n    tracer: DebugCallTracer,\n    timeout?: string\n  ): Promise<DebugCallTrace>;\n\n  /**\n   * Attempts to run the transaction in the exact same manner as it was executed\n   * on the network. It will replay any transaction that may have been executed\n   * prior to this one before it and will then attempt to execute the transaction\n   * that corresponds to the given hash.\n   *\n   * @param transactionHash The transaction hash of the transaction to trace.\n   * @param tracer Tracer type and configuration.\n   * @param timeout  A duration string of decimal numbers that overrides the\n   * default timeout of 5 seconds for JavaScript-based tracing calls. Max\n   * timeout is \"10s\". Valid time units are \"ns\", \"us\", \"ms\", \"s\" each with\n   * optional fraction, such as \"300ms\" or \"2s45ms\".\n   */\n  async traceTransaction(\n    transactionHash: string,\n    tracer: DebugPrestateTracer,\n    timeout?: string\n  ): Promise<DebugPrestateTrace>;\n  async traceTransaction(\n    transactionHash: string,\n    tracer: DebugCallTracer | DebugPrestateTracer,\n    timeout?: string\n  ): Promise<DebugCallTrace | DebugPrestateTrace> {\n    const provider = await this.config.getProvider();\n    const params = [transactionHash, parseTracerParams(tracer, timeout)];\n    return provider._send('debug_traceTransaction', params, 'traceTransaction');\n  }\n\n  /**\n   * Replays a block that has already been mined.\n   *\n   * @param blockIdentifier The block to debug the transaction in. Can be a\n   * block hash, block number hex string, or commitment level.\n   * @param tracer Tracer type and configuration.\n   */\n  traceBlock(\n    blockIdentifier: BlockIdentifier | number,\n    tracer: DebugCallTracer\n  ): Promise<DebugCallTrace>;\n  /**\n   * Replays a block that has already been mined.\n   *\n   * @param blockIdentifier The block to debug the transaction in. Can be a\n   * block hash, block number hex string, or commitment level.\n   * @param tracer Tracer type and configuration.\n   */\n  traceBlock(\n    blockIdentifier: BlockIdentifier | number,\n    tracer: DebugPrestateTracer\n  ): Promise<DebugPrestateTrace>;\n  async traceBlock(\n    blockIdentifier: BlockIdentifier | number,\n    tracer: DebugCallTracer | DebugPrestateTracer\n  ): Promise<DebugCallTrace | DebugPrestateTrace> {\n    const provider = await this.config.getProvider();\n    let method: string;\n    let params: [string, RawTracer];\n    if (isHexString(blockIdentifier, 32)) {\n      method = 'debug_traceBlockByHash';\n      params = [blockIdentifier as string, parseTracerParams(tracer)];\n    } else {\n      method = 'debug_traceBlockByNumber';\n      const block =\n        typeof blockIdentifier === 'number'\n          ? hexStripZeros(hexValue(blockIdentifier))\n          : blockIdentifier;\n      params = [block as string, parseTracerParams(tracer)];\n    }\n    return provider._send(method, params, 'traceBlock');\n  }\n}\n\ninterface RawTracer {\n  tracer: string;\n  tracerConfig?: {\n    onlyTopCall?: boolean;\n    timeout?: string;\n  };\n}\n\nfunction parseTracerParams(\n  tracer: DebugCallTracer | DebugPrestateTracer,\n  timeout?: string\n): RawTracer {\n  return {\n    tracer: tracer.type,\n    ...(tracer.onlyTopCall !== undefined && {\n      tracerConfig: {\n        onlyTopCall: tracer.onlyTopCall,\n        timeout\n      }\n    })\n  };\n}\n","import { InputNftTokenType } from '../internal/nft-api';\nimport { NftTokenType } from '../types/nft-types';\n\nexport function sanitizeTokenType(tokenType?: NftTokenType): InputNftTokenType {\n  if (tokenType === NftTokenType.ERC1155 || tokenType === NftTokenType.ERC721) {\n    return tokenType;\n  }\n  return undefined;\n}\n","/**\n * The SDK has 4 log levels and a 5th option for disabling all logging. By\n * default, the log level is set to INFO.\n *\n * The order is a follows: DEBUG < INFO < WARN < ERROR\n *\n * All log types above the current log level will be outputted.\n */\nexport enum LogLevel {\n  DEBUG,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\n/**\n * The level of verbosity for the logger.\n *\n * @public\n */\nexport type LogLevelString = 'debug' | 'info' | 'warn' | 'error' | 'silent';\n\nconst logLevelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  debug: LogLevel.DEBUG,\n  info: LogLevel.INFO,\n  warn: LogLevel.WARN,\n  error: LogLevel.ERROR,\n  silent: LogLevel.SILENT\n};\n\n// HACKY: Use the console method as a string rather than the function itself\n// in order to allow for mocking in tests.\nconst logLevelToConsoleFn = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\nconst DEFAULT_LOG_LEVEL = LogLevel.INFO;\n\n/**\n * Configures the verbosity of logging. The default log level is `info`.\n *\n * @param logLevel - The verbosity of logging. Can be any of the following values:\n *\n *   - `debug`: The most verbose logging level.\n *   - `info`: The default logging level.\n *   - `warn`: A logging level for non-critical issues.\n *   - `error`: A logging level for critical issues.\n *   - `silent`: Turn off all logging.\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  loggerClient.logLevel = logLevelStringToEnum[logLevel];\n}\n\nexport function logDebug(message: string, ...args: unknown[]): void {\n  loggerClient.debug(message, args);\n}\n\nexport function logInfo(message: string, ...args: unknown[]): void {\n  loggerClient.info(message, args);\n}\n\nexport function logWarn(message: string, ...args: unknown[]): void {\n  loggerClient.warn(message, args);\n}\n\nexport function logError(message: string, ...args: unknown[]): void {\n  loggerClient.error(message, args);\n}\n\nexport class Logger {\n  /** The log level of the given Logger instance. */\n  private _logLevel = DEFAULT_LOG_LEVEL;\n\n  constructor() {}\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  debug(...args: unknown[]): void {\n    this._log(LogLevel.DEBUG, ...args);\n  }\n\n  info(...args: unknown[]): void {\n    this._log(LogLevel.INFO, ...args);\n  }\n\n  warn(...args: unknown[]): void {\n    this._log(LogLevel.WARN, ...args);\n  }\n\n  error(...args: unknown[]): void {\n    this._log(LogLevel.ERROR, ...args);\n  }\n\n  /**\n   * Forwards log messages to their corresponding console counterparts if the\n   * log level allows it.\n   */\n  private _log(logLevel: LogLevel, ...args: unknown[]): void {\n    if (logLevel < this._logLevel) {\n      return;\n    }\n    const now = new Date().toISOString();\n    const method =\n      logLevelToConsoleFn[logLevel as keyof typeof logLevelToConsoleFn];\n    if (method) {\n      console[method as 'log' | 'info' | 'warn' | 'error'](\n        `[${now}] Alchemy:`,\n        ...args.map(stringify)\n      );\n    } else {\n      throw new Error(\n        `Logger received an invalid logLevel (value: ${logLevel})`\n      );\n    }\n  }\n}\n\nfunction stringify(obj: unknown): string | unknown {\n  if (typeof obj === 'string') {\n    return obj;\n  } else {\n    try {\n      return JSON.stringify(obj);\n    } catch (e) {\n      // Failed to convert to JSON, log the object directly.\n      return obj;\n    }\n  }\n}\n\n// Instantiate default logger for the SDK.\nconst loggerClient: Logger = new Logger();\n","// This file is autogenerated by injectVersion.js. Any changes will be\n// overwritten on commit!\nexport const VERSION = '3.1.1';\n","/**\n * Given a REST endpoint, method, and params, sends the request with axios and\n * returns the response.\n */\nimport axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\n\nimport { VERSION } from '../version';\nimport { IS_BROWSER } from './util';\n\n/**\n * Helper function to send http requests using Axis.\n *\n * @private\n */\nexport function sendAxiosRequest<Req, Res>(\n  baseUrl: string,\n  restApiName: string,\n  methodName: string,\n  params: Req,\n  overrides?: AxiosRequestConfig\n): Promise<AxiosResponse<Res>> {\n  const requestUrl = baseUrl + '/' + restApiName;\n  const config: AxiosRequestConfig = {\n    ...overrides,\n    headers: {\n      ...overrides?.headers,\n      ...(!IS_BROWSER && { 'Accept-Encoding': 'gzip' }),\n      'Alchemy-Ethers-Sdk-Version': VERSION,\n      'Alchemy-Ethers-Sdk-Method': methodName\n    },\n    method: overrides?.method ?? 'GET',\n    url: requestUrl,\n    params\n  };\n  return axios(config);\n}\n","import { logDebug } from '../util/logger';\n\nexport const DEFAULT_BACKOFF_INITIAL_DELAY_MS = 1000;\nexport const DEFAULT_BACKOFF_MULTIPLIER = 1.5;\nexport const DEFAULT_BACKOFF_MAX_DELAY_MS = 30 * 1000;\nexport const DEFAULT_BACKOFF_MAX_ATTEMPTS = 5;\n\n/**\n * Helper class for implementing exponential backoff and max retry attempts.\n *\n * @private\n * @internal\n */\nexport class ExponentialBackoff {\n  private readonly initialDelayMs = DEFAULT_BACKOFF_INITIAL_DELAY_MS;\n  private readonly backoffMultiplier = DEFAULT_BACKOFF_MULTIPLIER;\n  private readonly maxDelayMs = DEFAULT_BACKOFF_MAX_DELAY_MS;\n\n  private numAttempts = 0;\n  private currentDelayMs = 0;\n  private isInBackoff = false;\n\n  constructor(private readonly maxAttempts = DEFAULT_BACKOFF_MAX_ATTEMPTS) {}\n\n  /**\n   * Returns a promise that resolves after the the backoff delay. The delay is\n   * increased for each attempt. The promise is rejected if the maximum number\n   * of attempts is exceeded.\n   */\n  // TODO: beautify this into an async iterator.\n  backoff(): Promise<void> {\n    if (this.numAttempts >= this.maxAttempts) {\n      return Promise.reject(\n        new Error(`Exceeded maximum number of attempts: ${this.maxAttempts}`)\n      );\n    }\n    if (this.isInBackoff) {\n      return Promise.reject(\n        new Error('A backoff operation is already in progress')\n      );\n    }\n\n    const backoffDelayWithJitterMs = this.withJitterMs(this.currentDelayMs);\n    if (backoffDelayWithJitterMs > 0) {\n      logDebug(\n        'ExponentialBackoff.backoff',\n        `Backing off for ${backoffDelayWithJitterMs}ms`\n      );\n    }\n\n    // Calculate the next delay.\n    this.currentDelayMs *= this.backoffMultiplier;\n    this.currentDelayMs = Math.max(this.currentDelayMs, this.initialDelayMs);\n    this.currentDelayMs = Math.min(this.currentDelayMs, this.maxDelayMs);\n    this.numAttempts += 1;\n\n    return new Promise(resolve => {\n      this.isInBackoff = true;\n      setTimeout(() => {\n        this.isInBackoff = false;\n        resolve();\n      }, backoffDelayWithJitterMs);\n    });\n  }\n\n  /**\n   * Applies +/- 50% jitter to the backoff delay, up to the max delay cap.\n   *\n   * @private\n   * @param delayMs\n   */\n  private withJitterMs(delayMs: number): number {\n    return Math.min(delayMs + (Math.random() - 0.5) * delayMs, this.maxDelayMs);\n  }\n}\n","import axios, { AxiosError, AxiosRequestConfig } from 'axios';\n\nimport { AlchemyConfig } from '../api/alchemy-config';\nimport { AlchemyApiType } from '../util/const';\nimport { logDebug, logInfo } from '../util/logger';\nimport { sendAxiosRequest } from '../util/sendRest';\nimport { ExponentialBackoff } from './backoff';\n\n/**\n * A wrapper function to make http requests and retry if the request fails.\n *\n * @internal\n */\n// TODO: Wrap Axios error in AlchemyError.\nexport async function requestHttpWithBackoff<Req, Res>(\n  config: AlchemyConfig,\n  apiType: AlchemyApiType,\n  restApiName: string,\n  methodName: string,\n  params: Req,\n  overrides?: AxiosRequestConfig\n): Promise<Res> {\n  let lastError: Error | undefined = undefined;\n  const backoff = new ExponentialBackoff(config.maxRetries);\n  for (let attempt = 0; attempt < config.maxRetries + 1; attempt++) {\n    try {\n      if (lastError !== undefined) {\n        logInfo('requestHttp', `Retrying after error: ${lastError.message}`);\n      }\n\n      try {\n        await backoff.backoff();\n      } catch (err) {\n        // Backoff errors when the maximum number of attempts is reached. Break\n        // out of the loop to preserve the last error.\n        break;\n      }\n\n      const response = await sendAxiosRequest<Req, Res>(\n        config._getRequestUrl(apiType),\n        restApiName,\n        methodName,\n        params,\n        {\n          ...overrides,\n          timeout: config.requestTimeout\n        }\n      );\n\n      if (response.status === 200) {\n        logDebug(restApiName, `Successful request: ${restApiName}`);\n        return response.data;\n      } else {\n        logInfo(\n          restApiName,\n          `Request failed: ${restApiName}, ${response.status}, ${response.data}`\n        );\n        lastError = new Error(response.status + ': ' + response.data);\n      }\n    } catch (err) {\n      if (!axios.isAxiosError(err) || err.response === undefined) {\n        throw err;\n      }\n      // TODO: Standardize all errors into AlchemyError\n      lastError = new Error(err.response.status + ': ' + err.response.data);\n      if (!isRetryableHttpError(err, apiType)) {\n        break;\n      }\n    }\n  }\n  return Promise.reject(lastError);\n}\n\nfunction isRetryableHttpError(\n  err: AxiosError,\n  apiType: AlchemyApiType\n): boolean {\n  // TODO: remove 500s after webhooks are more stable.\n  const retryableCodes =\n    apiType === AlchemyApiType.WEBHOOK ? [429, 500] : [429];\n  return (\n    err.response !== undefined && retryableCodes.includes(err.response.status)\n  );\n}\n\n/**\n * Fetches all pages in a paginated endpoint, given a `pageKey` field that\n * represents the property name containing the next page token.\n *\n * @internal\n */\nexport async function* paginateEndpoint<\n  ReqPageKey extends string,\n  ResPageKey extends string,\n  Req extends Partial<Record<string, any> & Record<ReqPageKey, string>>,\n  Res extends Partial<Record<string, any> & Record<ResPageKey, string>>\n>(\n  config: AlchemyConfig,\n  apiType: AlchemyApiType,\n  restApiName: string,\n  methodName: string,\n  reqPageKey: ReqPageKey,\n  resPageKey: ResPageKey,\n  params: Req\n): AsyncIterable<Res> {\n  let hasNext = true;\n  const requestParams = { ...params };\n  while (hasNext) {\n    const response = await requestHttpWithBackoff<Req, Res>(\n      config,\n      apiType,\n      restApiName,\n      methodName,\n      requestParams\n    );\n    yield response;\n    if (response[resPageKey] !== null) {\n      requestParams[reqPageKey] = response[resPageKey] as any;\n    } else {\n      hasNext = false;\n    }\n  }\n}\n","import { BigNumber, BigNumberish } from '@ethersproject/bignumber';\n\nimport { AlchemyConfig } from '../api/alchemy-config';\nimport {\n  BaseNft,\n  ComputeRarityResponse,\n  GetBaseNftsForContractOptions,\n  GetBaseNftsForOwnerOptions,\n  GetContractMetadataBatchResponse,\n  GetContractsForOwnerOptions,\n  GetContractsForOwnerResponse,\n  GetFloorPriceResponse,\n  GetMintedNftsOptions,\n  GetNftMetadataBatchResponse,\n  GetNftMetadataOptions,\n  GetNftSalesOptions,\n  GetNftSalesOptionsByContractAddress,\n  GetNftSalesResponse,\n  GetNftsForContractOptions,\n  GetNftsForOwnerOptions,\n  GetOwnersForContractOptions,\n  GetOwnersForContractResponse,\n  GetOwnersForContractWithTokenBalancesOptions,\n  GetOwnersForContractWithTokenBalancesResponse,\n  GetOwnersForNftResponse,\n  GetSpamContractsResponse,\n  GetTransfersForContractOptions,\n  IsAirdropNftResponse,\n  IsSpamContractResponse,\n  Nft,\n  NftAttributesResponse,\n  NftCollection,\n  NftContract,\n  NftContractBaseNftsResponse,\n  NftContractNftsResponse,\n  NftFilters,\n  NftMetadataBatchOptions,\n  NftMetadataBatchToken,\n  NftOrdering,\n  NftRefreshState,\n  NftSaleMarketplace,\n  NftSaleTakerType,\n  NftTokenType,\n  OwnedBaseNft,\n  OwnedBaseNftsResponse,\n  OwnedNft,\n  OwnedNftsResponse,\n  SearchContractMetadataResponse,\n  TransfersNftResponse\n} from '../types/nft-types';\nimport {\n  AssetTransfersCategory,\n  AssetTransfersParams,\n  AssetTransfersResponse,\n  AssetTransfersResult,\n  GetTransfersForOwnerOptions,\n  GetTransfersForOwnerTransferType,\n  RefreshContractResult,\n  SortingOrder\n} from '../types/types';\nimport { AlchemyApiType, ETH_NULL_ADDRESS } from '../util/const';\nimport { sanitizeTokenType } from '../util/inputSanitization';\nimport {\n  getBaseNftFromRaw,\n  getNftCollectionFromRaw,\n  getNftContractFromRaw,\n  getNftContractsForOwnerFromRaw,\n  getNftFromRaw,\n  getNftSalesFromRaw,\n  nullsToUndefined\n} from '../util/util';\nimport { getAssetTransfers } from './core-api';\nimport { paginateEndpoint, requestHttpWithBackoff } from './dispatch';\nimport {\n  RawComputeRarityResponse,\n  RawContractBaseNft,\n  RawGetBaseNftsForContractResponse,\n  RawGetBaseNftsResponse,\n  RawGetContractMetadataBatchResponse,\n  RawGetContractsForOwnerResponse,\n  RawGetFloorPriceResponse,\n  RawGetNftMetadataBatchResponse,\n  RawGetNftSalesResponse,\n  RawGetNftsForContractResponse,\n  RawGetNftsForOwnerResponse,\n  RawGetOwnersForContractResponse,\n  RawGetOwnersForContractWithTokenBalancesResponse,\n  RawGetSpamContractsResponse,\n  RawIsAirdropNftResponse,\n  RawIsSpamContractResponse,\n  RawNft,\n  RawNftAttributesResponse,\n  RawNftCollection,\n  RawNftContractForNft,\n  RawOwnedBaseNft,\n  RawOwnedNft,\n  RawReingestContractResponse,\n  RawSearchContractMetadataResponse\n} from './raw-interfaces';\n\n/**\n * This file contains the underlying implementations for exposed API surface in\n * the {@link NftNamespace}. By moving the methods out into a separate file,\n * other namespaces can access these methods without depending on the entire\n * NftNamespace.\n */\n\n/**\n * Get the NFT metadata for the provided contract address.\n */\nexport async function getNftMetadata(\n  config: AlchemyConfig,\n  contractAddress: string,\n  tokenId: BigNumberish,\n  options?: GetNftMetadataOptions,\n  srcMethod = 'getNftMetadata'\n): Promise<Nft> {\n  const response = await requestHttpWithBackoff<GetNftMetadataParams, RawNft>(\n    config,\n    AlchemyApiType.NFT,\n    'getNFTMetadata',\n    srcMethod,\n    {\n      contractAddress,\n      tokenId: BigNumber.from(tokenId!).toString(),\n      tokenType: sanitizeTokenType(options?.tokenType),\n      tokenUriTimeoutInMs: options?.tokenUriTimeoutInMs,\n      refreshCache: options?.refreshCache\n    }\n  );\n  return getNftFromRaw(response);\n}\n\nexport async function getNftMetadataBatch(\n  config: AlchemyConfig,\n  tokens: Array<NftMetadataBatchToken>,\n  options?: NftMetadataBatchOptions\n): Promise<GetNftMetadataBatchResponse> {\n  const data = {\n    tokens,\n    tokenUriTimeoutInMs: options?.tokenUriTimeoutInMs,\n    refreshCache: options?.refreshCache\n  };\n  const response = await requestHttpWithBackoff<\n    {},\n    RawGetNftMetadataBatchResponse\n  >(\n    config,\n    AlchemyApiType.NFT,\n    'getNFTMetadataBatch',\n    'getNftMetadataBatch',\n    {},\n    {\n      method: 'POST',\n      data\n    }\n  );\n  return {\n    nfts: response.nfts.map(nft => getNftFromRaw(nft))\n  };\n}\n\nexport async function getContractMetadata(\n  config: AlchemyConfig,\n  contractAddress: string,\n  srcMethod = 'getContractMetadata'\n): Promise<NftContract> {\n  const response = await requestHttpWithBackoff<\n    GetContractMetadataParams,\n    RawNftContractForNft\n  >(config, AlchemyApiType.NFT, 'getContractMetadata', srcMethod, {\n    contractAddress\n  });\n\n  return getNftContractFromRaw(response);\n}\n\nexport async function getContractMetadataBatch(\n  config: AlchemyConfig,\n  contractAddresses: string[]\n): Promise<GetContractMetadataBatchResponse> {\n  const response = await requestHttpWithBackoff<\n    {},\n    RawGetContractMetadataBatchResponse\n  >(\n    config,\n    AlchemyApiType.NFT,\n    'getContractMetadataBatch',\n    'getContractMetadataBatch',\n    {},\n    {\n      method: 'POST',\n      data: { contractAddresses }\n    }\n  );\n\n  return {\n    contracts: response.contracts.map(getNftContractFromRaw)\n  };\n}\n\nexport async function getCollectionMetadata(\n  config: AlchemyConfig,\n  collectionSlug: string,\n  srcMethod = 'getCollectionMetadata'\n): Promise<NftCollection> {\n  const response = await requestHttpWithBackoff<\n    GetCollectionMetadataParams,\n    RawNftCollection\n  >(config, AlchemyApiType.NFT, 'getCollectionMetadata', srcMethod, {\n    collectionSlug\n  });\n\n  return getNftCollectionFromRaw(response);\n}\n\nexport async function* getNftsForOwnerIterator(\n  config: AlchemyConfig,\n  owner: string,\n  options?: GetNftsForOwnerOptions | GetBaseNftsForOwnerOptions,\n  srcMethod = 'getNftsForOwnerIterator'\n): AsyncIterable<OwnedBaseNft | OwnedNft> {\n  const withMetadata = omitMetadataToWithMetadata(options?.omitMetadata);\n  for await (const response of paginateEndpoint(\n    config,\n    AlchemyApiType.NFT,\n    'getNFTsForOwner',\n    srcMethod,\n    'pageKey',\n    'pageKey',\n    {\n      contractAddresses: options?.contractAddresses,\n      pageKey: options?.pageKey,\n      excludeFilters: options?.excludeFilters,\n      includeFilters: options?.includeFilters,\n      owner,\n      withMetadata,\n      tokenUriTimeoutInMs: options?.tokenUriTimeoutInMs,\n      orderBy: options?.orderBy\n    }\n  )) {\n    for (const ownedNft of response.ownedNfts as\n      | RawOwnedNft[]\n      | RawOwnedBaseNft[]) {\n      yield {\n        ...nftFromGetNftResponse(ownedNft),\n        balance: ownedNft.balance\n      };\n    }\n  }\n}\n\nexport async function getNftsForOwner(\n  config: AlchemyConfig,\n  owner: string,\n  options?: GetNftsForOwnerOptions | GetBaseNftsForOwnerOptions,\n  srcMethod = 'getNftsForOwner'\n): Promise<OwnedNftsResponse | OwnedBaseNftsResponse> {\n  const withMetadata = omitMetadataToWithMetadata(options?.omitMetadata);\n  const response = await requestHttpWithBackoff<\n    GetNftsAlchemyParams,\n    RawGetBaseNftsResponse | RawGetNftsForOwnerResponse\n  >(config, AlchemyApiType.NFT, 'getNFTsForOwner', srcMethod, {\n    contractAddresses: options?.contractAddresses,\n    pageKey: options?.pageKey,\n    excludeFilters: options?.excludeFilters,\n    includeFilters: options?.includeFilters,\n    owner,\n    pageSize: options?.pageSize,\n    withMetadata,\n    tokenUriTimeoutInMs: options?.tokenUriTimeoutInMs,\n    orderBy: options?.orderBy\n  });\n  if (withMetadata) {\n    return nullsToUndefined<OwnedNftsResponse>({\n      ownedNfts: response.ownedNfts.map(res => ({\n        ...getNftFromRaw(res as RawOwnedNft),\n        balance: res.balance\n      })),\n      pageKey: response.pageKey,\n      totalCount: response.totalCount,\n      validAt: response.validAt\n    });\n  }\n\n  return nullsToUndefined<OwnedBaseNftsResponse>({\n    ownedNfts: response.ownedNfts.map(res => ({\n      ...getBaseNftFromRaw(res as RawOwnedBaseNft),\n      balance: res.balance\n    })),\n    pageKey: response.pageKey,\n    totalCount: response.totalCount,\n    validAt: response.validAt\n  });\n}\n\nexport async function getNftsForContract(\n  config: AlchemyConfig,\n  contractAddress: string,\n  options?: GetBaseNftsForContractOptions | GetNftsForContractOptions,\n  srcMethod = 'getNftsForContract'\n): Promise<NftContractNftsResponse | NftContractBaseNftsResponse> {\n  const withMetadata = omitMetadataToWithMetadata(options?.omitMetadata);\n  const response = await requestHttpWithBackoff<\n    GetNftsForContractAlchemyParams,\n    RawGetBaseNftsForContractResponse | RawGetNftsForContractResponse\n  >(config, AlchemyApiType.NFT, 'getNFTsForContract', srcMethod, {\n    contractAddress,\n    pageKey: options?.pageKey,\n    withMetadata,\n    limit: options?.pageSize ?? undefined,\n    tokenUriTimeoutInMs: options?.tokenUriTimeoutInMs\n  });\n\n  if (withMetadata) {\n    return nullsToUndefined<NftContractNftsResponse>({\n      nfts: response.nfts.map(res => getNftFromRaw(res as RawNft)),\n      pageKey: response.pageKey\n    });\n  }\n\n  return nullsToUndefined<NftContractBaseNftsResponse>({\n    nfts: response.nfts.map(res =>\n      getBaseNftFromRaw(res as RawContractBaseNft, contractAddress)\n    ),\n    pageKey: response.pageKey\n  });\n}\n\nexport async function* getNftsForContractIterator(\n  config: AlchemyConfig,\n  contractAddress: string,\n  options?: GetBaseNftsForContractOptions | GetNftsForContractOptions,\n  srcMethod = 'getNftsForContractIterator'\n): AsyncIterable<BaseNft | Nft> {\n  const withMetadata = omitMetadataToWithMetadata(options?.omitMetadata);\n  for await (const response of paginateEndpoint(\n    config,\n    AlchemyApiType.NFT,\n    'getNFTsForContract',\n    srcMethod,\n    'pageKey',\n    'pageKey',\n    {\n      contractAddress,\n      pageKey: options?.pageKey,\n      withMetadata\n    }\n  )) {\n    for (const nft of response.nfts as RawContractBaseNft[] | RawNft[]) {\n      yield nftFromGetNftContractResponse(nft, contractAddress);\n    }\n  }\n}\n\nexport async function getOwnersForContract(\n  config: AlchemyConfig,\n  contractAddress: string,\n  options?:\n    | GetOwnersForContractWithTokenBalancesOptions\n    | GetOwnersForContractOptions,\n  srcMethod = 'getOwnersForContract'\n): Promise<\n  GetOwnersForContractResponse | GetOwnersForContractWithTokenBalancesResponse\n> {\n  // Cast to `any` to avoid more type wrangling.\n  const response = await requestHttpWithBackoff<\n    GetOwnersForNftContractAlchemyParams,\n    | RawGetOwnersForContractResponse\n    | RawGetOwnersForContractWithTokenBalancesResponse\n  >(config, AlchemyApiType.NFT, 'getOwnersForContract', srcMethod, {\n    ...options,\n    contractAddress\n  });\n\n  if (options?.withTokenBalances) {\n    return nullsToUndefined<GetOwnersForContractWithTokenBalancesResponse>({\n      owners: (response as RawGetOwnersForContractWithTokenBalancesResponse)\n        .owners,\n      pageKey: response.pageKey\n    });\n  }\n  return nullsToUndefined<GetOwnersForContractResponse>({\n    owners: response.owners as string[],\n    pageKey: response.pageKey\n  });\n}\n\nexport async function getContractsForOwner(\n  config: AlchemyConfig,\n  owner: string,\n  options?: GetContractsForOwnerOptions,\n  srcMethod = 'getContractsForOwner'\n): Promise<GetContractsForOwnerResponse> {\n  const response = await requestHttpWithBackoff<\n    GetContractsForOwnerParams,\n    RawGetContractsForOwnerResponse\n  >(config, AlchemyApiType.NFT, 'getContractsForOwner', srcMethod, {\n    owner,\n    excludeFilters: options?.excludeFilters,\n    includeFilters: options?.includeFilters,\n    pageKey: options?.pageKey,\n    pageSize: options?.pageSize,\n    orderBy: options?.orderBy\n  });\n\n  return nullsToUndefined<GetContractsForOwnerResponse>({\n    contracts: response.contracts.map(getNftContractsForOwnerFromRaw),\n    pageKey: response.pageKey,\n    totalCount: response.totalCount\n  });\n}\n\nexport async function getOwnersForNft(\n  config: AlchemyConfig,\n  contractAddress: string,\n  tokenId: BigNumberish,\n  options?: GetOwnersForContractOptions,\n  srcMethod = 'getOwnersForNft'\n): Promise<GetOwnersForNftResponse> {\n  return requestHttpWithBackoff(\n    config,\n    AlchemyApiType.NFT,\n    'getOwnersForNFT',\n    srcMethod,\n    {\n      contractAddress,\n      tokenId: BigNumber.from(tokenId!).toString(),\n      ...options\n    }\n  );\n}\n\nexport async function getMintedNfts(\n  config: AlchemyConfig,\n  owner: string,\n  options?: GetMintedNftsOptions\n): Promise<TransfersNftResponse> {\n  const provider = await config.getProvider();\n  const ownerAddress = await provider._getAddress(owner);\n  const category = nftTokenTypeToCategory(options?.tokenType);\n  const params: AssetTransfersParams = {\n    fromBlock: '0x0',\n    fromAddress: ETH_NULL_ADDRESS,\n    toAddress: ownerAddress,\n    excludeZeroValue: true,\n    contractAddresses: options?.contractAddresses,\n    category,\n    maxCount: 100,\n    pageKey: options?.pageKey\n  };\n  const response = await getAssetTransfers(config, params, 'getMintedNfts');\n  return getNftsForTransfers(config, response);\n}\n\nexport async function getTransfersForOwner(\n  config: AlchemyConfig,\n  owner: string,\n  transferType: GetTransfersForOwnerTransferType,\n  options?: GetTransfersForOwnerOptions\n): Promise<TransfersNftResponse> {\n  const provider = await config.getProvider();\n  const ownerAddress = await provider._getAddress(owner);\n  const category = nftTokenTypeToCategory(options?.tokenType);\n  const params: AssetTransfersParams = {\n    fromBlock: '0x0',\n    excludeZeroValue: true,\n    contractAddresses: options?.contractAddresses,\n    category,\n    maxCount: 100,\n    pageKey: options?.pageKey\n  };\n\n  if (transferType === GetTransfersForOwnerTransferType.TO) {\n    params.toAddress = ownerAddress;\n  } else {\n    params.fromAddress = ownerAddress;\n  }\n  const transfersResponse = await getAssetTransfers(\n    config,\n    params,\n    'getTransfersForOwner'\n  );\n\n  return getNftsForTransfers(config, transfersResponse);\n}\n\nexport async function getTransfersForContract(\n  config: AlchemyConfig,\n  contract: string,\n  options?: GetTransfersForContractOptions\n): Promise<TransfersNftResponse> {\n  const category = [\n    AssetTransfersCategory.ERC721,\n    AssetTransfersCategory.ERC1155,\n    AssetTransfersCategory.SPECIALNFT\n  ];\n  const provider = await config.getProvider();\n  const fromBlock = options?.fromBlock\n    ? provider.formatter.blockTag(\n        await provider._getBlockTag(options.fromBlock)\n      )\n    : '0x0';\n  const toBlock = options?.toBlock\n    ? provider.formatter.blockTag(await provider._getBlockTag(options.toBlock))\n    : undefined;\n  const params: AssetTransfersParams = {\n    fromBlock,\n    toBlock,\n    excludeZeroValue: true,\n    contractAddresses: [contract],\n    order: options?.order,\n    category,\n    maxCount: 100,\n    pageKey: options?.pageKey\n  };\n\n  const transfersResponse = await getAssetTransfers(\n    config,\n    params,\n    'getTransfersForContract'\n  );\n\n  return getNftsForTransfers(config, transfersResponse);\n}\n\nfunction nftTokenTypeToCategory(\n  tokenType: NftTokenType | undefined\n): AssetTransfersCategory[] {\n  switch (tokenType) {\n    case NftTokenType.ERC721:\n      return [AssetTransfersCategory.ERC721];\n    case NftTokenType.ERC1155:\n      return [AssetTransfersCategory.ERC1155];\n    default:\n      return [\n        AssetTransfersCategory.ERC721,\n        AssetTransfersCategory.ERC1155,\n        AssetTransfersCategory.SPECIALNFT\n      ];\n  }\n}\n\nfunction parse1155Transfer(\n  transfer: AssetTransfersResult\n): NftMetadataBatchToken[] {\n  return transfer.erc1155Metadata!.map(metadata => ({\n    contractAddress: transfer.rawContract.address!,\n    tokenId: metadata.tokenId,\n    tokenType: NftTokenType.ERC1155\n  }));\n}\n\nexport async function verifyNftOwnership(\n  config: AlchemyConfig,\n  owner: string,\n  contractAddresses: string | string[],\n  srcMethod = 'verifyNftOwnership'\n): Promise<boolean | { [contractAddress: string]: boolean }> {\n  if (typeof contractAddresses === 'string') {\n    const response = await getNftsForOwner(\n      config,\n      owner,\n      {\n        contractAddresses: [contractAddresses],\n        omitMetadata: true\n      },\n      srcMethod\n    );\n    return response.ownedNfts.length > 0;\n  } else {\n    if (contractAddresses.length === 0) {\n      throw new Error('Must provide at least one contract address');\n    }\n    const response = await getNftsForOwner(\n      config,\n      owner,\n      {\n        contractAddresses,\n        omitMetadata: true\n      },\n      srcMethod\n    );\n\n    // Create map where all input contract addresses are set to false, then flip\n    // owned nfts to true.\n    const result = contractAddresses.reduce(\n      (acc: { [contractAddress: string]: boolean }, curr) => {\n        acc[curr] = false;\n        return acc;\n      },\n      {}\n    );\n    for (const nft of response.ownedNfts) {\n      result[(nft as OwnedBaseNft).contractAddress] = true;\n    }\n    return result;\n  }\n}\n\nexport async function isSpamContract(\n  config: AlchemyConfig,\n  contractAddress: string,\n  srcMethod = 'isSpamContract'\n): Promise<IsSpamContractResponse> {\n  return requestHttpWithBackoff<\n    IsSpamContractParams,\n    RawIsSpamContractResponse\n  >(config, AlchemyApiType.NFT, 'isSpamContract', srcMethod, {\n    contractAddress\n  });\n}\n\nexport async function getSpamContracts(\n  config: AlchemyConfig,\n  srcMethod = 'getSpamContracts'\n): Promise<GetSpamContractsResponse> {\n  return requestHttpWithBackoff<undefined, RawGetSpamContractsResponse>(\n    config,\n    AlchemyApiType.NFT,\n    'getSpamContracts',\n    srcMethod,\n    undefined\n  );\n}\n\nexport async function reportSpam(\n  config: AlchemyConfig,\n  contractAddress: string,\n  srcMethod = 'reportSpam'\n): Promise<void> {\n  void requestHttpWithBackoff<ReportSpamParams, void>(\n    config,\n    AlchemyApiType.NFT,\n    'reportSpam',\n    srcMethod,\n    {\n      contractAddress\n    }\n  );\n}\n\nexport async function isAirdropNft(\n  config: AlchemyConfig,\n  contractAddress: string,\n  tokenId: string,\n  srcMethod = 'isAirdropNft'\n): Promise<IsAirdropNftResponse> {\n  return requestHttpWithBackoff<isAirdropNftParams, RawIsAirdropNftResponse>(\n    config,\n    AlchemyApiType.NFT,\n    'isAirdropNFT',\n    srcMethod,\n    {\n      contractAddress,\n      tokenId\n    }\n  );\n}\n\nexport async function getFloorPrice(\n  config: AlchemyConfig,\n  contractAddress: string,\n  srcMethod = 'getFloorPrice'\n): Promise<GetFloorPriceResponse> {\n  const response = await requestHttpWithBackoff<\n    GetFloorPriceParams,\n    RawGetFloorPriceResponse\n  >(config, AlchemyApiType.NFT, 'getFloorPrice', srcMethod, {\n    contractAddress\n  });\n  return nullsToUndefined<GetFloorPriceResponse>(response);\n}\n\nexport async function getNftSales(\n  config: AlchemyConfig,\n  options: GetNftSalesOptions | GetNftSalesOptionsByContractAddress = {},\n  srcMethod = 'getNftSales'\n): Promise<GetNftSalesResponse> {\n  // Avoid ts compiler complaining about the contractAddress field.\n  const params: Partial<GetNftSalesOptionsByContractAddress> = {\n    ...options\n  };\n\n  const response = await requestHttpWithBackoff<\n    GetNftSalesParams,\n    RawGetNftSalesResponse\n  >(config, AlchemyApiType.NFT, 'getNFTSales', srcMethod, {\n    fromBlock: params?.fromBlock,\n    toBlock: params?.toBlock,\n    order: params?.order,\n    marketplace: params?.marketplace,\n    contractAddress: params?.contractAddress,\n    tokenId: params?.tokenId\n      ? BigNumber.from(params?.tokenId).toString()\n      : undefined,\n    sellerAddress: params?.sellerAddress,\n    buyerAddress: params?.buyerAddress,\n    taker: params?.taker,\n    limit: params?.limit,\n    pageKey: params?.pageKey\n  });\n\n  return getNftSalesFromRaw(response);\n}\n\nexport async function computeRarity(\n  config: AlchemyConfig,\n  contractAddress: string,\n  tokenId: BigNumberish,\n  srcMethod = 'computeRarity'\n): Promise<ComputeRarityResponse> {\n  const response = await requestHttpWithBackoff<\n    ComputeRarityParams,\n    RawComputeRarityResponse\n  >(config, AlchemyApiType.NFT, 'computeRarity', srcMethod, {\n    contractAddress,\n    tokenId: BigNumber.from(tokenId).toString()\n  });\n\n  return nullsToUndefined(response);\n}\n\nexport async function searchContractMetadata(\n  config: AlchemyConfig,\n  query: string,\n  srcMethod = 'searchContractMetadata'\n): Promise<SearchContractMetadataResponse> {\n  const response = await requestHttpWithBackoff<\n    SearchContractMetadataParams,\n    RawSearchContractMetadataResponse\n  >(config, AlchemyApiType.NFT, 'searchContractMetadata', srcMethod, {\n    query\n  });\n\n  return {\n    contracts: response.contracts.map(getNftContractFromRaw)\n  };\n}\n\nexport async function summarizeNftAttributes(\n  config: AlchemyConfig,\n  contractAddress: string,\n  srcMethod = 'summarizeNftAttributes'\n): Promise<NftAttributesResponse> {\n  return requestHttpWithBackoff<\n    SummarizeNftAttributesParams,\n    RawNftAttributesResponse\n  >(config, AlchemyApiType.NFT, 'summarizeNFTAttributes', srcMethod, {\n    contractAddress\n  });\n}\n\nexport async function refreshNftMetadata(\n  config: AlchemyConfig,\n  contractAddress: string,\n  tokenId: BigNumberish,\n  srcMethod = 'refreshNftMetadata'\n): Promise<boolean> {\n  const tokenIdString = BigNumber.from(tokenId!).toString();\n  const first = await getNftMetadata(\n    config,\n    contractAddress,\n    tokenIdString,\n    undefined,\n    srcMethod\n  );\n  const second = await refresh(\n    config,\n    contractAddress,\n    tokenIdString,\n    srcMethod\n  );\n  return first.timeLastUpdated !== second.timeLastUpdated;\n}\n\nexport async function refreshContract(\n  config: AlchemyConfig,\n  contractAddress: string,\n  srcMethod = 'refreshContract'\n): Promise<RefreshContractResult> {\n  const response = await requestHttpWithBackoff<\n    ReingestContractParams,\n    RawReingestContractResponse\n  >(config, AlchemyApiType.NFT, 'reingestContract', srcMethod, {\n    contractAddress\n  });\n\n  return {\n    contractAddress: response.contractAddress,\n    refreshState: parseReingestionState(response.reingestionState),\n    progress: response.progress\n  };\n}\n\nasync function refresh(\n  config: AlchemyConfig,\n  contractAddress: string,\n  tokenId: BigNumberish,\n  srcMethod: string\n): Promise<Nft> {\n  const response = await requestHttpWithBackoff<GetNftMetadataParams, RawNft>(\n    config,\n    AlchemyApiType.NFT,\n    'getNFTMetadata',\n    srcMethod,\n    {\n      contractAddress,\n      tokenId: BigNumber.from(tokenId!).toString(),\n      refreshCache: true\n    }\n  );\n  return getNftFromRaw(response);\n}\n\n/**\n * Helper method to convert a NFT response received from Alchemy backend to an\n * SDK NFT type.\n *\n * @internal\n */\nfunction nftFromGetNftResponse(\n  ownedNft: RawOwnedBaseNft | RawOwnedNft\n): Nft | BaseNft {\n  if (isNftWithMetadata(ownedNft)) {\n    return getNftFromRaw(ownedNft);\n  } else {\n    return getBaseNftFromRaw(ownedNft);\n  }\n}\n\n/**\n * Helper method to convert a NFT response received from Alchemy backend to an\n * SDK NFT type.\n *\n * @internal\n */\nfunction nftFromGetNftContractResponse(\n  ownedNft: RawContractBaseNft | RawNft,\n  contractAddress: string\n): Nft | BaseNft {\n  if (isNftWithMetadata(ownedNft)) {\n    return getNftFromRaw(ownedNft);\n  } else {\n    return getBaseNftFromRaw(ownedNft, contractAddress);\n  }\n}\n\n/** @internal */\n// TODO: more comprehensive type check\nfunction isNftWithMetadata(\n  response: RawContractBaseNft | RawNft\n): response is RawNft {\n  return (response as RawNft).name !== undefined;\n}\n\n/**\n * Given an AssetTransfersResponse, fetches the NFTs associated with the\n * transfers and collates them with transfer metadata.\n *\n * VISIBLE FOR TESTING\n */\nexport async function getNftsForTransfers(\n  config: AlchemyConfig,\n  response: AssetTransfersResponse\n): Promise<TransfersNftResponse> {\n  const metadataTransfers = response.transfers\n    .filter(transfer => transfer.rawContract.address !== null)\n    // Use flatMap to flatten 1155 transfers that contain multiple NFTs.\n    .flatMap(transfer => {\n      const tokens = getTokensFromTransfer(transfer);\n\n      const metadata = {\n        from: transfer.from,\n        to: transfer.to ?? undefined,\n        transactionHash: transfer.hash,\n        blockNumber: transfer.blockNum\n      };\n      return tokens.map(token => ({ metadata, token }));\n    });\n\n  if (metadataTransfers.length === 0) {\n    return { nfts: [] };\n  }\n\n  // If we have more than 100 elements after unrolling 1155 transfers, split\n  // transfers into batches of 100 to stay under endpoint batch size limit.\n  const batchSize = 100;\n  const requestBatches = [];\n  for (let i = 0; i < metadataTransfers.length; i += batchSize) {\n    requestBatches.push(metadataTransfers.slice(i, i + batchSize));\n  }\n  const responseBatches = await Promise.all(\n    requestBatches.map(batch =>\n      getNftMetadataBatch(\n        config,\n        batch.map(transfer => transfer.token)\n      )\n    )\n  );\n  const nfts = responseBatches.map(r => r.nfts).flat();\n\n  // The same NFT can be transferred multiple times in the same transfers response.\n  // We want to return one NFT for each transfer, so we create a mapping for\n  // each NFT to pair with the transfer metadata.\n  const nftsByTokenId = new Map<string, Nft>();\n  nfts.forEach(nft => {\n    const key = `${nft.contract.address.toLowerCase()}-${BigNumber.from(\n      nft.tokenId\n    ).toString()}`;\n    nftsByTokenId.set(key, nft);\n  });\n\n  const transferredNfts = metadataTransfers.map(t => {\n    const key = `${t.token.contractAddress.toLowerCase()}-${BigNumber.from(\n      t.token.tokenId\n    ).toString()}`;\n    return {\n      ...nftsByTokenId.get(key)!,\n      ...t.metadata\n    };\n  });\n\n  return {\n    nfts: transferredNfts,\n    pageKey: response.pageKey\n  };\n}\n\n/**\n * Returns the underlying NFT tokens from a transfer as the params for a\n * `getNftMetadataBatch` call. Handles the 1155 case where multiple NFTs can be\n * transferred in a single transaction.\n */\nfunction getTokensFromTransfer(\n  transfer: AssetTransfersResult\n): NftMetadataBatchToken[] {\n  // ERC1155 NFTs can contain multiple tokens in a single transfer, which\n  // requires special logic.\n  if (transfer.category === AssetTransfersCategory.ERC1155) {\n    return parse1155Transfer(transfer);\n  } else {\n    return [\n      {\n        contractAddress: transfer.rawContract.address!,\n        tokenId: transfer.tokenId!,\n        tokenType:\n          transfer.category === AssetTransfersCategory.ERC721\n            ? NftTokenType.ERC721\n            : undefined\n      }\n    ];\n  }\n}\n\n/**\n * Flips the `omitMetadata` SDK parameter type to the `withMetadata` parameter\n * required by the Alchemy API. If `omitMetadata` is undefined, the SDK defaults\n * to including metadata.\n *\n * @internal\n */\nfunction omitMetadataToWithMetadata(\n  omitMetadata: boolean | undefined\n): boolean {\n  return omitMetadata === undefined ? true : !omitMetadata;\n}\n\nfunction parseReingestionState(reingestionState: string): NftRefreshState {\n  switch (reingestionState) {\n    case 'does_not_exist':\n      return NftRefreshState.DOES_NOT_EXIST;\n    case 'already_queued':\n      return NftRefreshState.ALREADY_QUEUED;\n    case 'in_progress':\n      return NftRefreshState.IN_PROGRESS;\n    case 'finished':\n      return NftRefreshState.FINISHED;\n    case 'queued':\n      return NftRefreshState.QUEUED;\n    case 'queue_failed':\n      return NftRefreshState.QUEUE_FAILED;\n    default:\n      throw new Error('Unknown reingestion state: ' + reingestionState);\n  }\n}\n\n/**\n * Interface for the `getNftsForNftContract` endpoint.\n *\n * @internal\n */\ninterface GetNftsForContractAlchemyParams {\n  contractAddress: string;\n  pageKey?: string;\n  withMetadata: boolean;\n  limit?: number;\n  tokenUriTimeoutInMs?: number;\n}\n\n/**\n * Interface for the `getNfts` endpoint. The main difference is that the\n * endpoint has a `withMetadata` parameter, but the SDK exposes the parameter as\n * `omitMetadata`.\n *\n * @internal\n */\ninterface GetNftsAlchemyParams {\n  owner: string;\n  pageKey?: string;\n  contractAddresses?: string[];\n  excludeFilters?: NftFilters[];\n  includeFilters?: NftFilters[];\n  pageSize?: number;\n  withMetadata: boolean;\n  tokenUriTimeoutInMs?: number;\n  orderBy?: string;\n}\n\n/**\n * NftTokenTypes that are allowed as request inputs.\n *\n * @internal\n */\nexport type InputNftTokenType =\n  | NftTokenType.ERC1155\n  | NftTokenType.ERC721\n  | undefined;\n\n/**\n * Interface for the `getNftMetadata` endpoint.\n *\n * @internal\n */\ninterface GetNftMetadataParams {\n  contractAddress: string;\n  tokenId: string;\n  tokenType?: InputNftTokenType;\n  refreshCache?: boolean;\n  tokenUriTimeoutInMs?: number;\n}\n\n/**\n * Interface for the `isSpamContract` endpoint.\n *\n * @internal\n */\ninterface IsSpamContractParams {\n  contractAddress: string;\n}\n\n/**\n * Interface for the `reportSpam` endpoint.\n *\n * @internal\n */\ninterface ReportSpamParams {\n  contractAddress: string;\n}\n\n/**\n * Interface for the `isAirdropNft` endpoint.\n *\n * @internal\n */\ninterface isAirdropNftParams {\n  contractAddress: string;\n  tokenId: string;\n}\n\n/**\n * Interface for the `getContractMetadata` endpoint.\n *\n * @internal\n */\ninterface GetContractMetadataParams {\n  contractAddress: string;\n}\n/**\n * Interface for the `getCollectionMetadata` endpoint.\n *\n * @internal\n */\ninterface GetCollectionMetadataParams {\n  collectionSlug: string;\n}\n\n/**\n * Interface for the `getOwnersForNftContract` endpoint.\n *\n * @internal\n */\ninterface GetOwnersForNftContractAlchemyParams {\n  contractAddress: string;\n}\n\n/**\n * Interface for the `getOwnersForContract` endpoint.\n *\n * @internal\n */\ninterface GetContractsForOwnerParams {\n  owner: string;\n  pageKey?: string;\n  pageSize?: number;\n  includeFilters?: NftFilters[];\n  excludeFilters?: NftFilters[];\n  orderBy?: NftOrdering;\n}\n\n/**\n * Interface for the `getFloorPrice` endpoint.\n *\n * @internal\n */\ninterface GetFloorPriceParams {\n  contractAddress: string;\n}\n\n/**\n * Interface for the `getNftSales` endpoint.\n *\n * @internal\n */\ninterface GetNftSalesParams {\n  fromBlock?: number | 'latest';\n  toBlock?: number | 'latest';\n  order?: SortingOrder;\n  marketplace?: NftSaleMarketplace;\n  contractAddress?: string;\n  tokenId?: string;\n  sellerAddress?: string;\n  buyerAddress?: string;\n  taker?: NftSaleTakerType;\n  limit?: number;\n  pageKey?: string;\n}\n\n/**\n * Interface for the `computeRarity` endpoint.\n *\n * @internal\n */\ninterface ComputeRarityParams {\n  contractAddress: string;\n  tokenId: string;\n}\n\n/**\n * Interface for the `searchContractMetadata` endpoint.\n *\n * @internal\n */\ninterface SearchContractMetadataParams {\n  query: string;\n}\n\n/**\n * Interface for the `summarizeNFTAttributes` endpoint.\n *\n * @internal\n */\ninterface SummarizeNftAttributesParams {\n  contractAddress: string;\n}\n\ninterface ReingestContractParams {\n  contractAddress: string;\n}\n","import type { BigNumberish } from '@ethersproject/bignumber';\n\nimport {\n  computeRarity,\n  getCollectionMetadata,\n  getContractMetadata,\n  getContractMetadataBatch,\n  getContractsForOwner,\n  getFloorPrice,\n  getMintedNfts,\n  getNftMetadata,\n  getNftMetadataBatch,\n  getNftSales,\n  getNftsForContract,\n  getNftsForContractIterator,\n  getNftsForOwner,\n  getNftsForOwnerIterator,\n  getOwnersForContract,\n  getOwnersForNft,\n  getSpamContracts,\n  getTransfersForContract,\n  getTransfersForOwner,\n  isAirdropNft,\n  isSpamContract,\n  refreshContract,\n  refreshNftMetadata,\n  reportSpam,\n  searchContractMetadata,\n  summarizeNftAttributes,\n  verifyNftOwnership\n} from '../internal/nft-api';\nimport {\n  BaseNft,\n  ComputeRarityResponse,\n  GetBaseNftsForContractOptions,\n  GetBaseNftsForOwnerOptions,\n  GetContractMetadataBatchResponse,\n  GetContractsForOwnerOptions,\n  GetContractsForOwnerResponse,\n  GetFloorPriceResponse,\n  GetMintedNftsOptions,\n  GetNftMetadataBatchResponse,\n  GetNftMetadataOptions,\n  GetNftSalesOptions,\n  GetNftSalesOptionsByContractAddress,\n  GetNftSalesResponse,\n  GetNftsForContractOptions,\n  GetNftsForOwnerOptions,\n  GetOwnersForContractOptions,\n  GetOwnersForContractResponse,\n  GetOwnersForContractWithTokenBalancesOptions,\n  GetOwnersForContractWithTokenBalancesResponse,\n  GetOwnersForNftOptions,\n  GetOwnersForNftResponse,\n  GetSpamContractsResponse,\n  GetTransfersForContractOptions,\n  IsAirdropNftResponse,\n  IsSpamContractResponse,\n  Nft,\n  NftAttributesResponse,\n  NftCollection,\n  NftContract,\n  NftContractBaseNftsResponse,\n  NftContractNftsResponse,\n  NftMetadataBatchOptions,\n  NftMetadataBatchToken,\n  NftTokenType,\n  OwnedBaseNft,\n  OwnedBaseNftsResponse,\n  OwnedNft,\n  OwnedNftsResponse,\n  SearchContractMetadataResponse,\n  TransfersNftResponse\n} from '../types/nft-types';\nimport {\n  GetTransfersForOwnerOptions,\n  GetTransfersForOwnerTransferType,\n  RefreshContractResult\n} from '../types/types';\nimport { AlchemyConfig } from './alchemy-config';\n\n/**\n * The NFT namespace contains all the functionality related to NFTs.\n *\n * Do not call this constructor directly. Instead, instantiate an Alchemy object\n * with `const alchemy = new Alchemy(config)` and then access the core namespace\n * via `alchemy.nft`.\n */\nexport class NftNamespace {\n  /** @internal */\n  constructor(private readonly config: AlchemyConfig) {}\n\n  /**\n   * Get the NFT metadata associated with the provided parameters.\n   *\n   * @param contractAddress - The contract address of the NFT.\n   * @param tokenId - Token id of the NFT.\n   * @param options - Options for the request.\n   * @public\n   */\n  getNftMetadata(\n    contractAddress: string,\n    tokenId: BigNumberish,\n    options?: GetNftMetadataOptions\n  ): Promise<Nft>;\n  getNftMetadata(\n    contractAddress: string,\n    tokenId: BigNumberish,\n    optionsOrTokenType?: GetNftMetadataOptions | NftTokenType,\n    tokenUriTimeoutInMs?: number\n  ): Promise<Nft> {\n    let options: GetNftMetadataOptions;\n    if (typeof optionsOrTokenType === 'object') {\n      options = {\n        tokenType: optionsOrTokenType.tokenType,\n        tokenUriTimeoutInMs: optionsOrTokenType.tokenUriTimeoutInMs,\n        refreshCache: optionsOrTokenType.refreshCache\n      };\n    } else {\n      options = {\n        tokenType: optionsOrTokenType,\n        tokenUriTimeoutInMs\n      };\n    }\n    return getNftMetadata(this.config, contractAddress, tokenId, options);\n  }\n\n  /**\n   * Gets the NFT metadata for multiple NFT tokens.\n   *\n   * @param tokens An array of NFT tokens to fetch metadata for.\n   * @param options Configuration options for making the request.\n   */\n  getNftMetadataBatch(\n    tokens: Array<NftMetadataBatchToken>,\n    options?: NftMetadataBatchOptions\n  ): Promise<GetNftMetadataBatchResponse> {\n    return getNftMetadataBatch(this.config, tokens, options);\n  }\n\n  /**\n   * Get the NFT contract metadata associated with the provided parameters.\n   *\n   * @param contractAddress - The contract address of the NFT.\n   * @public\n   */\n  getContractMetadata(contractAddress: string): Promise<NftContract> {\n    return getContractMetadata(this.config, contractAddress);\n  }\n\n  /**\n   * Get the NFT contract metadata for multiple NFT contracts in a single request.\n   *\n   * @param contractAddresses - An array of contract addresses to fetch metadata for.\n   */\n  getContractMetadataBatch(\n    contractAddresses: string[]\n  ): Promise<GetContractMetadataBatchResponse> {\n    return getContractMetadataBatch(this.config, contractAddresses);\n  }\n\n  /**\n   * Get the NFT collection metadata associated with the provided parameters.\n   *\n   * @param collectionSlug - The OpenSea collection slug of the NFT.\n   * @beta\n   */\n  getCollectionMetadata(collectionSlug: string): Promise<NftCollection> {\n    return getCollectionMetadata(this.config, collectionSlug);\n  }\n\n  /**\n   * Fetches all NFTs for a given owner and yields them in an async iterable.\n   *\n   * This method returns the full NFT for the owner and pages through all page\n   * keys until all NFTs have been fetched.\n   *\n   * @param owner - The address of the owner.\n   * @param options - The optional parameters to use for the request.\n   * @public\n   */\n  getNftsForOwnerIterator(\n    owner: string,\n    options?: GetNftsForOwnerOptions\n  ): AsyncIterable<OwnedNft>;\n  /**\n   * Fetches all NFTs for a given owner and yields them in an async iterable.\n   *\n   * This method returns the base NFTs that omit the associated metadata and\n   * pages through all page keys until all NFTs have been fetched.\n   *\n   * @param owner - The address of the owner.\n   * @param options - The optional parameters to use for the request.\n   * @public\n   */\n  getNftsForOwnerIterator(\n    owner: string,\n    options?: GetBaseNftsForOwnerOptions\n  ): AsyncIterable<OwnedBaseNft>;\n  getNftsForOwnerIterator(\n    owner: string,\n    options?: GetNftsForOwnerOptions | GetBaseNftsForOwnerOptions\n  ): AsyncIterable<OwnedBaseNft | OwnedNft> {\n    return getNftsForOwnerIterator(this.config, owner, options);\n  }\n\n  /**\n   * Get all base NFTs for an owner.\n   *\n   * This method returns the base NFTs that omit the associated metadata. To get\n   * all NFTs with their associated metadata, use {@link GetNftsForOwnerOptions}.\n   *\n   * @param owner - The address of the owner.\n   * @param options - The optional parameters to use for the request.\n   * @public\n   */\n  getNftsForOwner(\n    owner: string,\n    options: GetBaseNftsForOwnerOptions\n  ): Promise<OwnedBaseNftsResponse>;\n  /**\n   * Get all NFTs for an owner.\n   *\n   * This method returns the full NFTs in the contract. To get all NFTs without\n   * their associated metadata, use {@link GetBaseNftsForOwnerOptions}.\n   *\n   * @param owner - The address of the owner.\n   * @param options - The optional parameters to use for the request.\n   * @public\n   */\n  getNftsForOwner(\n    owner: string,\n    options?: GetNftsForOwnerOptions\n  ): Promise<OwnedNftsResponse>;\n  getNftsForOwner(\n    owner: string,\n    options?: GetNftsForOwnerOptions | GetBaseNftsForOwnerOptions\n  ): Promise<OwnedNftsResponse | OwnedBaseNftsResponse> {\n    return getNftsForOwner(this.config, owner, options);\n  }\n\n  /**\n   * Get all NFTs for a given contract address.\n   *\n   * This method returns the full NFTs in the contract. To get all NFTs without\n   * their associated metadata, use {@link GetBaseNftsForContractOptions}.\n   *\n   * @param contractAddress - The contract address of the NFT contract.\n   * @param options - The parameters to use for the request. or\n   *   {@link NftContractNftsResponse} response.\n   * @beta\n   */\n  getNftsForContract(\n    contractAddress: string,\n    options?: GetNftsForContractOptions\n  ): Promise<NftContractNftsResponse>;\n  /**\n   * Get all base NFTs for a given contract address.\n   *\n   * This method returns the base NFTs that omit the associated metadata. To get\n   * all NFTs with their associated metadata, use {@link GetNftsForContractOptions}.\n   *\n   * @param contractAddress - The contract address of the NFT contract.\n   * @param options - The optional parameters to use for the request.\n   * @beta\n   */\n  getNftsForContract(\n    contractAddress: string,\n    options?: GetBaseNftsForContractOptions\n  ): Promise<NftContractBaseNftsResponse>;\n  getNftsForContract(\n    contractAddress: string,\n    options?: GetBaseNftsForContractOptions | GetNftsForContractOptions\n  ): Promise<NftContractNftsResponse | NftContractBaseNftsResponse> {\n    return getNftsForContract(this.config, contractAddress, options);\n  }\n\n  /**\n   * Fetches all NFTs for a given contract address and yields them in an async iterable.\n   *\n   * This method returns the full NFTs in the contract and pages through all\n   * page keys until all NFTs have been fetched. To get all NFTs without their\n   * associated metadata, use {@link GetBaseNftsForContractOptions}.\n   *\n   * @param contractAddress - The contract address of the NFT contract.\n   * @param options - The optional parameters to use for the request.\n   * @beta\n   */\n  getNftsForContractIterator(\n    contractAddress: string,\n    options?: GetNftsForContractOptions\n  ): AsyncIterable<Nft>;\n  /**\n   * Fetches all base NFTs for a given contract address and yields them in an\n   * async iterable.\n   *\n   * This method returns the base NFTs that omit the associated metadata and\n   * pages through all page keys until all NFTs have been fetched. To get all\n   * NFTs with their associated metadata, use {@link GetNftsForContractOptions}.\n   *\n   * @param contractAddress - The contract address of the NFT contract.\n   * @param options - The optional parameters to use for the request.\n   * @beta\n   */\n  getNftsForContractIterator(\n    contractAddress: string,\n    options?: GetBaseNftsForContractOptions\n  ): AsyncIterable<BaseNft>;\n  getNftsForContractIterator(\n    contractAddress: string,\n    options?: GetBaseNftsForContractOptions | GetNftsForContractOptions\n  ): AsyncIterable<BaseNft | Nft> {\n    return getNftsForContractIterator(this.config, contractAddress, options);\n  }\n\n  /**\n   * Gets all the owners for a given NFT contract along with the token balance.\n   *\n   * @param contractAddress - The NFT contract to get the owners for.\n   * @param options Optional parameters to use for the request.\n   * @public\n   */\n  getOwnersForContract(\n    contractAddress: string,\n    options: GetOwnersForContractWithTokenBalancesOptions\n  ): Promise<GetOwnersForContractWithTokenBalancesResponse>;\n\n  /**\n   * Gets all the owners for a given NFT contract.\n   *\n   * Note that token balances are omitted by default. To include token balances\n   * for each owner, use {@link GetOwnersForContractWithTokenBalancesOptions},\n   * which has the `withTokenBalances` field set to `true`.\n   *\n   * @param contractAddress - The NFT contract to get the owners for.\n   * @param options Optional parameters to use for the request.\n   * @public\n   */\n  getOwnersForContract(\n    contractAddress: string,\n    options?: GetOwnersForContractOptions\n  ): Promise<GetOwnersForContractResponse>;\n  getOwnersForContract(\n    contractAddress: string,\n    options?:\n      | GetOwnersForContractOptions\n      | GetOwnersForContractWithTokenBalancesOptions\n  ): Promise<\n    GetOwnersForContractResponse | GetOwnersForContractWithTokenBalancesResponse\n  > {\n    return getOwnersForContract(this.config, contractAddress, options);\n  }\n\n  /**\n   * Gets all the owners for a given NFT contract address and token ID.\n   *\n   * @param contractAddress - The NFT contract address.\n   * @param tokenId - Token id of the NFT.\n   * @param options - Optional parameters to use for the request.\n   * @beta\n   */\n  getOwnersForNft(\n    contractAddress: string,\n    tokenId: BigNumberish,\n    options?: GetOwnersForNftOptions\n  ): Promise<GetOwnersForNftResponse> {\n    return getOwnersForNft(this.config, contractAddress, tokenId, options);\n  }\n\n  /**\n   * Gets all NFT contracts held by the specified owner address.\n   *\n   * @param owner - Address for NFT owner (can be in ENS format!).\n   * @param options - The optional parameters to use for the request.\n   * @public\n   */\n  // TODO(v3): Add overload for withMetadata=false\n  getContractsForOwner(\n    owner: string,\n    options?: GetContractsForOwnerOptions\n  ): Promise<GetContractsForOwnerResponse> {\n    return getContractsForOwner(this.config, owner, options);\n  }\n\n  /**\n   * Gets all NFT transfers for a given owner's address.\n   *\n   * @param owner The owner to get transfers for.\n   * @param category Whether to get transfers to or from the owner address.\n   * @param options Additional options for the request.\n   */\n  getTransfersForOwner(\n    owner: string,\n    category: GetTransfersForOwnerTransferType,\n    options?: GetTransfersForOwnerOptions\n  ): Promise<TransfersNftResponse> {\n    return getTransfersForOwner(this.config, owner, category, options);\n  }\n\n  /**\n   * Gets all NFT transfers for a given NFT contract address.\n   *\n   * Defaults to all transfers for the contract. To get transfers for a specific\n   * block range, use {@link GetTransfersForContractOptions}.\n   *\n   * @param contract The NFT contract to get transfers for.\n   * @param options Additional options for the request.\n   */\n  getTransfersForContract(\n    contract: string,\n    options?: GetTransfersForContractOptions\n  ): Promise<TransfersNftResponse> {\n    return getTransfersForContract(this.config, contract, options);\n  }\n\n  /**\n   * Get all the NFTs minted by a specified owner address.\n   *\n   * @param owner - Address for the NFT owner (can be in ENS format).\n   * @param options - The optional parameters to use for the request.\n   */\n  async getMintedNfts(\n    owner: string,\n    options?: GetMintedNftsOptions\n  ): Promise<TransfersNftResponse> {\n    return getMintedNfts(this.config, owner, options);\n  }\n\n  /**\n   * Checks that the provided owner address owns one of more of the provided\n   * NFT. Returns a boolean indicating whether the owner address owns the provided NFT.\n   *\n   * @param owner - The owner address to check.\n   * @param contractAddress - An NFT contract address to check ownership for.\n   */\n  verifyNftOwnership(owner: string, contractAddress: string): Promise<boolean>;\n\n  /**\n   * Checks which of the provided NFTs the owner address owns. Returns a map of\n   * contract address to a boolean indicating whether the owner address owns the NFT.\n   *\n   * @param owner - The owner address to check.\n   * @param contractAddresses - An array NFT contract address to check ownership for.\n   */\n  verifyNftOwnership(\n    owner: string,\n    contractAddresses: string[]\n  ): Promise<{ [contractAddress: string]: boolean }>;\n  verifyNftOwnership(\n    owner: string,\n    contractAddress: string | string[]\n  ): Promise<boolean | { [contractAddress: string]: boolean }> {\n    return verifyNftOwnership(this.config, owner, contractAddress);\n  }\n\n  /**\n   * Returns whether a contract is marked as spam or not by Alchemy. For more\n   * information on how we classify spam, go to our NFT API FAQ at\n   * https://docs.alchemy.com/alchemy/enhanced-apis/nft-api/nft-api-faq#nft-spam-classification.\n   *\n   * @param contractAddress - The contract address to check.\n   */\n  isSpamContract(contractAddress: string): Promise<IsSpamContractResponse> {\n    return isSpamContract(this.config, contractAddress);\n  }\n\n  /**\n   * Returns a list of all spam contracts marked by Alchemy. For details on how\n   * Alchemy marks spam contracts, go to\n   * https://docs.alchemy.com/alchemy/enhanced-apis/nft-api/nft-api-faq#nft-spam-classification.\n   */\n  getSpamContracts(): Promise<GetSpamContractsResponse> {\n    return getSpamContracts(this.config);\n  }\n\n  /**\n   * Returns whether a contract is marked as spam or not by Alchemy. For more\n   * information on how we classify spam, go to our NFT API FAQ at\n   * https://docs.alchemy.com/alchemy/enhanced-apis/nft-api/nft-api-faq#nft-spam-classification.\n   *\n   * @param contractAddress - The contract address to check.\n   */\n  reportSpam(contractAddress: string): Promise<void> {\n    return reportSpam(this.config, contractAddress);\n  }\n\n  /**\n   * Returns whether a token is marked as an airdrop or not.\n   * Airdrops are defined as NFTs that were minted to a user address in a transaction\n   * sent by a different address.\n   *\n   * @param contractAddress - The contract address to check.\n   * @param tokenId - Token id of the NFT.\n   */\n  isAirdropNft(\n    contractAddress: string,\n    tokenId: string\n  ): Promise<IsAirdropNftResponse> {\n    return isAirdropNft(this.config, contractAddress, tokenId);\n  }\n\n  /**\n   * Returns the floor prices of a NFT contract by marketplace.\n   *\n   * @param contractAddress - The contract address for the NFT collection.\n   * @beta\n   */\n  getFloorPrice(contractAddress: string): Promise<GetFloorPriceResponse> {\n    return getFloorPrice(this.config, contractAddress);\n  }\n\n  /**\n   * Returns NFT sales that have happened through on-chain marketplaces.\n   *\n   * @param options - The optional parameters to use for the request.\n   * @beta\n   */\n  getNftSales(options?: GetNftSalesOptions): Promise<GetNftSalesResponse>;\n  getNftSales(\n    options?: GetNftSalesOptionsByContractAddress\n  ): Promise<GetNftSalesResponse>;\n  getNftSales(\n    options?: GetNftSalesOptions | GetNftSalesOptionsByContractAddress\n  ): Promise<GetNftSalesResponse> {\n    return getNftSales(this.config, options);\n  }\n\n  /**\n   * Get the rarity of each attribute of an NFT.\n   *\n   * @param contractAddress - Contract address for the NFT collection.\n   * @param tokenId - Token id of the NFT.\n   */\n  computeRarity(\n    contractAddress: string,\n    tokenId: BigNumberish\n  ): Promise<ComputeRarityResponse> {\n    return computeRarity(this.config, contractAddress, tokenId);\n  }\n\n  /**\n   * Search for a keyword across metadata of all ERC-721 and ERC-1155 smart contracts.\n   *\n   * @param query - The search string that you want to search for in contract metadata.\n   */\n  searchContractMetadata(\n    query: string\n  ): Promise<SearchContractMetadataResponse> {\n    return searchContractMetadata(this.config, query);\n  }\n\n  /**\n   * Get a summary of attribute prevalence for an NFT collection.\n   *\n   * @param contractAddress - Contract address for the NFT collection.\n   */\n  summarizeNftAttributes(\n    contractAddress: string\n  ): Promise<NftAttributesResponse> {\n    return summarizeNftAttributes(this.config, contractAddress);\n  }\n\n  /**\n   * Refreshes the cached metadata for a provided NFT contract address and token\n   * id. Returns a boolean value indicating whether the metadata was refreshed.\n   *\n   * This method is useful when you want to refresh the metadata for a NFT that\n   * has been updated since the last time it was fetched. Note that the backend\n   * only allows one refresh per token every 15 minutes, globally for all users.\n   * The last refresh time for an NFT can be accessed on the\n   * {@link Nft.timeLastUpdated} field.\n   *\n   * To trigger a refresh for all NFTs in a contract, use {@link refreshContract} instead.\n   *\n   * @param contractAddress - The contract address of the NFT.\n   * @param tokenId - The token id of the NFT.\n   */\n  refreshNftMetadata(\n    contractAddress: string,\n    tokenId: BigNumberish\n  ): Promise<boolean> {\n    return refreshNftMetadata(this.config, contractAddress, tokenId);\n  }\n\n  /**\n   * Triggers a metadata refresh all NFTs in the provided contract address. This\n   * method is useful after an NFT collection is revealed.\n   *\n   * Refreshes are queued on the Alchemy backend and may take time to fully\n   * process. To refresh the metadata for a specific token, use the\n   * {@link refreshNftMetadata} method instead.\n   *\n   * @param contractAddress - The contract address of the NFT collection.\n   * @beta\n   */\n  refreshContract(contractAddress: string): Promise<RefreshContractResult> {\n    return refreshContract(this.config, contractAddress);\n  }\n}\n","import { AxiosRequestConfig, Method } from 'axios';\n\nimport { BigNumber } from '@ethersproject/bignumber';\n\nimport { requestHttpWithBackoff } from '../internal/dispatch';\nimport {\n  RawAddressActivityResponse,\n  RawCreateWebhookResponse,\n  RawCustomGraphqlWebhookConfig,\n  RawGetAllWebhooksResponse,\n  RawNftFilterParam,\n  RawNftFiltersResponse,\n  RawWebhook\n} from '../internal/raw-interfaces';\nimport {\n  AddressActivityResponse,\n  AddressActivityWebhook,\n  AddressWebhookParams,\n  AddressWebhookUpdate,\n  CustomGraphqlWebhook,\n  CustomGraphqlWebhookConfig,\n  CustomGraphqlWebhookParams,\n  CustomGraphqlWebhookUpdate,\n  DroppedTransactionWebhook,\n  GetAddressesOptions,\n  GetAllWebhooksResponse,\n  MinedTransactionWebhook,\n  Network,\n  NftActivityWebhook,\n  NftFilter,\n  NftFiltersResponse,\n  NftMetadataUpdateWebhook,\n  NftMetadataWebhookUpdate,\n  NftWebhookParams,\n  NftWebhookUpdate,\n  TransactionWebhookParams,\n  Webhook,\n  WebhookType,\n  WebhookVersion\n} from '../types/types';\nimport { AlchemyApiType } from '../util/const';\nimport { AlchemyConfig } from './alchemy-config';\n\n/**\n * The Notify namespace contains methods used for creating, reading, updating,\n * and deleting webhooks in the Notify API.\n *\n * To use the methods in the API, you must provide your team's auth token in the\n * {@link AlchemySettings.authToken} field when configuring\n * {@link AlchemySettings}. The auth token can be found in the Alchemy Dashboard\n * on the Notify tab.\n *\n * Note that not all networks are supported in the Notify API. Please consult\n * the documentation for which networks are supported.\n *\n * Do not call this constructor directly. Instead, instantiate an Alchemy object\n * with `const alchemy = new Alchemy(config)` and then access the notify\n * namespace via `alchemy.notify`.\n */\nexport class NotifyNamespace {\n  /** @internal */\n  constructor(private readonly config: AlchemyConfig) {}\n\n  /**\n   * Get all webhooks on your team.\n   *\n   * The team is determined by the `authToken` provided into the {@link AlchemySettings}\n   * object when creating a new {@link Alchemy} instance.\n   *\n   * This method returns a response object containing all the webhooks\n   */\n  async getAllWebhooks(): Promise<GetAllWebhooksResponse> {\n    this.verifyConfig();\n    const response = await this.sendWebhookRequest<RawGetAllWebhooksResponse>(\n      'team-webhooks',\n      'getAllWebhooks',\n      {}\n    );\n    return {\n      webhooks: parseRawWebhookResponse(response),\n      totalCount: response.data.length\n    };\n  }\n\n  /**\n   * Get all addresses tracked for the provided {@link AddressActivityWebhook}.\n   *\n   * @param addressWebhook The Address Activity webhook.\n   * @param options Pagination options when fetching addresses.\n   */\n  getAddresses(\n    addressWebhook: AddressActivityWebhook,\n    options?: GetAddressesOptions\n  ): Promise<AddressActivityResponse>;\n\n  /**\n   * Get all addresses tracked for the provided {@link AddressActivityWebhook}.\n   *\n   * @param webhookId The id of the address activity webhook. Passing in an id\n   *   of a non-address-activity webhook will result in a response object with\n   *   no addresses.\n   * @param options Pagination options when fetching addresses.\n   */\n  getAddresses(\n    webhookId: string,\n    options?: GetAddressesOptions\n  ): Promise<AddressActivityResponse>;\n  async getAddresses(\n    webhookOrId: AddressActivityWebhook | string,\n    options?: GetAddressesOptions\n  ): Promise<AddressActivityResponse> {\n    this.verifyConfig();\n    const webhookId =\n      typeof webhookOrId === 'string' ? webhookOrId : webhookOrId.id;\n    const response = await this.sendWebhookRequest<RawAddressActivityResponse>(\n      'webhook-addresses',\n      'getAddresses',\n      {\n        webhook_id: webhookId,\n        limit: options?.limit,\n        after: options?.pageKey\n      }\n    );\n    return parseRawAddressActivityResponse(response);\n  }\n\n  /**\n   * Get the graphql query used for the provided {@link CustomGraphqlWebhook}.\n   *\n   * @param customGraphqlWebhook The webhook to get the graphql query for.\n   */\n  getGraphqlQuery(\n    customGraphqlWebhook: CustomGraphqlWebhook\n  ): Promise<CustomGraphqlWebhookConfig>;\n\n  /**\n   * Get the graphql query used for the provided {@link CustomGraphqlWebhook}.\n   *\n   * @param webhookId The id of the custom webhook. Passing in an id\n   *   of a non-custom webhook will result in a response object with\n   *   no graphql query.\n   */\n  getGraphqlQuery(webhookId: string): Promise<CustomGraphqlWebhookConfig>;\n  async getGraphqlQuery(\n    webhookOrId: CustomGraphqlWebhook | string\n  ): Promise<CustomGraphqlWebhookConfig> {\n    this.verifyConfig();\n    const webhookId =\n      typeof webhookOrId === 'string' ? webhookOrId : webhookOrId.id;\n    const response =\n      await this.sendWebhookRequest<RawCustomGraphqlWebhookConfig>(\n        'dashboard-webhook-graphql-query',\n        'getGraphqlQuery',\n        {\n          webhook_id: webhookId\n        }\n      );\n    return parseRawCustomGraphqlWebhookResponse(response);\n  }\n\n  /**\n   * Get all NFTs tracked for the provided {@link NftActivityWebhook}.\n   *\n   * @param nftWebhook The NFT Activity webhook.\n   * @param options Pagination options when fetching NFT filters.\n   */\n  getNftFilters(\n    nftWebhook: NftActivityWebhook,\n    options?: GetAddressesOptions\n  ): Promise<NftFiltersResponse>;\n\n  /**\n   * Get all NFT filters tracked for the provided {@link NftActivityWebhook}.\n   *\n   * @param webhookId The id of the NFT activity webhook. Passing in an\n   *   incorrect id of a non-NFT webhook will result in a response object with\n   *   no filters.\n   * @param options Pagination options when fetching nft filters.\n   */\n  getNftFilters(\n    webhookId: string,\n    options?: GetAddressesOptions\n  ): Promise<NftFiltersResponse>;\n  async getNftFilters(\n    webhookOrId: NftActivityWebhook | string,\n    options?: GetAddressesOptions\n  ): Promise<NftFiltersResponse> {\n    this.verifyConfig();\n    const webhookId =\n      typeof webhookOrId === 'string' ? webhookOrId : webhookOrId.id;\n    const response = await this.sendWebhookRequest<RawNftFiltersResponse>(\n      'webhook-nft-filters',\n      'getNftFilters',\n      {\n        webhook_id: webhookId,\n        limit: options?.limit,\n        after: options?.pageKey\n      }\n    );\n    return parseRawNftFiltersResponse(response);\n  }\n\n  /**\n   * Update a {@link NftActivityWebhook}'s active status or NFT filters.\n   *\n   * @param nftWebhook The NFT activity webhook to update.\n   * @param update Object containing the update.\n   */\n  updateWebhook(\n    nftWebhook: NftActivityWebhook,\n    update: NftWebhookUpdate\n  ): Promise<void>;\n\n  /**\n   * Update a {@link NftActivityWebhook}'s active status or NFT filters.\n   *\n   * @param nftWebhookId The id of the NFT activity webhook.\n   * @param update Object containing the update.\n   */\n  updateWebhook(nftWebhookId: string, update: NftWebhookUpdate): Promise<void>;\n\n  /**\n   * Update a {@link NftMetadataUpdateWebhook}'s active status or NFT filters.\n   *\n   * @param nftMetadataWebhookId The id of the NFT activity webhook.\n   * @param update Object containing the update.\n   */\n  updateWebhook(\n    nftMetadataWebhookId: string,\n    update: NftMetadataWebhookUpdate\n  ): Promise<void>;\n\n  /**\n   * Update a {@link CustomGraphqlWebhook}'s active status.\n   * The graphql query associated with the webhook is immutable.\n   *\n   * @param customGraphqlWebhookId The id of the custom webhook.\n   * @param update Object containing the update.\n   */\n  updateWebhook(\n    customGraphqlWebhookId: string,\n    update: CustomGraphqlWebhookUpdate\n  ): Promise<void>;\n\n  /**\n   * Update a {@link AddressActivityWebhook}'s active status or addresses.\n   *\n   * @param addressWebhook The address activity webhook to update.\n   * @param update Object containing the update.\n   */\n  updateWebhook(\n    addressWebhook: AddressActivityWebhook,\n    update: AddressWebhookUpdate\n  ): Promise<void>;\n\n  /**\n   * Update a {@link AddressActivityWebhook}'s active status or addresses.\n   *\n   * @param addressWebhookId The id of the address activity webhook.\n   * @param update Object containing the update.\n   */\n  updateWebhook(\n    addressWebhookId: string,\n    update: AddressWebhookUpdate\n  ): Promise<void>;\n  async updateWebhook(\n    webhookOrId: NftActivityWebhook | AddressActivityWebhook | string,\n    update:\n      | NftWebhookUpdate\n      | AddressWebhookUpdate\n      | NftMetadataWebhookUpdate\n      | CustomGraphqlWebhookUpdate\n  ): Promise<void> {\n    const webhookId =\n      typeof webhookOrId === 'string' ? webhookOrId : webhookOrId.id;\n    let restApiName;\n    let methodName;\n    let method: Method;\n    let data;\n    if ('isActive' in update) {\n      restApiName = 'update-webhook';\n      methodName = 'updateWebhook';\n      method = 'PUT';\n      data = {\n        webhook_id: webhookId,\n        is_active: update.isActive\n      };\n    } else if ('addFilters' in update || 'removeFilters' in update) {\n      restApiName = 'update-webhook-nft-filters';\n      methodName = 'updateWebhookNftFilters';\n      method = 'PATCH';\n      data = {\n        webhook_id: webhookId,\n        nft_filters_to_add: update.addFilters\n          ? update.addFilters.map(nftFilterToParam)\n          : [],\n        nft_filters_to_remove: update.removeFilters\n          ? update.removeFilters.map(nftFilterToParam)\n          : []\n      };\n    } else if (\n      'addMetadataFilters' in update ||\n      'removeMetadataFilters' in update\n    ) {\n      restApiName = 'update-webhook-nft-metadata-filters';\n      methodName = 'updateWebhookNftMetadataFilters';\n      method = 'PATCH';\n      data = {\n        webhook_id: webhookId,\n        nft_metadata_filters_to_add: update.addMetadataFilters\n          ? update.addMetadataFilters.map(nftFilterToParam)\n          : [],\n        nft_metadata_filters_to_remove: update.removeMetadataFilters\n          ? update.removeMetadataFilters.map(nftFilterToParam)\n          : []\n      };\n    } else if ('addAddresses' in update || 'removeAddresses' in update) {\n      restApiName = 'update-webhook-addresses';\n      methodName = 'webhook:updateWebhookAddresses';\n      method = 'PATCH';\n      data = {\n        webhook_id: webhookId,\n        addresses_to_add: await this.resolveAddresses(update.addAddresses),\n        addresses_to_remove: await this.resolveAddresses(update.removeAddresses)\n      };\n    } else if ('newAddresses' in update) {\n      restApiName = 'update-webhook-addresses';\n      methodName = 'webhook:updateWebhookAddress';\n      method = 'PUT';\n      data = {\n        webhook_id: webhookId,\n        addresses: await this.resolveAddresses(update.newAddresses)\n      };\n    } else {\n      throw new Error('Invalid `update` param passed into `updateWebhook`');\n    }\n\n    await this.sendWebhookRequest(\n      restApiName,\n      methodName,\n      {},\n      {\n        method,\n        data\n      }\n    );\n  }\n\n  /**\n   * Create a new {@link MinedTransactionWebhook} to track mined transactions\n   * sent by the app associated with the app id.\n   *\n   * Note that the webhook will be created in the app network of the provided app id.\n   *\n   * @param url The URL that the webhook should send events to.\n   * @param type The type of webhook to create.\n   * @param params Parameters object containing the app id.\n   */\n  // TODO(webhook): Automatically populate app id from api key.\n  createWebhook(\n    url: string,\n    type: WebhookType.MINED_TRANSACTION,\n    params: TransactionWebhookParams\n  ): Promise<MinedTransactionWebhook>;\n\n  /**\n   * Create a new {@link DroppedTransactionWebhook} to track dropped transactions\n   * sent by the app associated with the app id.\n   *\n   * Note that the webhook will be created in the app network of the provided app id.\n   *\n   * @param url The URL that the webhook should send events to.\n   * @param type The type of webhook to create.\n   * @param params Parameters object containing the app id.\n   */\n  // TODO(webhook): Automatically populate app id from api key.\n  createWebhook(\n    url: string,\n    type: WebhookType.DROPPED_TRANSACTION,\n    params: TransactionWebhookParams\n  ): Promise<DroppedTransactionWebhook>;\n\n  /**\n   * Create a new {@link NftActivityWebhook} to track NFT transfers.\n   *\n   * @param url The URL that the webhook should send events to.\n   * @param type The type of webhook to create.\n   * @param params Parameters object containing the NFTs to track and the\n   *   network the webhook should be created on.\n   */\n  createWebhook(\n    url: string,\n    type: WebhookType.NFT_ACTIVITY,\n    params: NftWebhookParams\n  ): Promise<NftActivityWebhook>;\n\n  createWebhook(\n    url: string,\n    type: WebhookType.NFT_METADATA_UPDATE,\n    params: NftWebhookParams\n  ): Promise<NftMetadataUpdateWebhook>;\n\n  /**\n   * Create a new {@link CustomGraphqlWebhook} to track any event on every block.\n   *\n   * @param url The URL that the webhook should send events to.\n   * @param type The type of webhook to create.\n   * @param params Parameters object containing the graphql query to be executed\n   * on every block\n   */\n  createWebhook(\n    url: string,\n    type: WebhookType.GRAPHQL,\n    params: CustomGraphqlWebhookParams\n  ): Promise<CustomGraphqlWebhook>;\n\n  /**\n   * Create a new {@link AddressActivityWebhook} to track address activity.\n   *\n   * @param url The URL that the webhook should send events to.\n   * @param type The type of webhook to create.\n   * @param params Parameters object containing the addresses to track and the\n   *   network the webhook should be created on.\n   */\n  createWebhook(\n    url: string,\n    type: WebhookType.ADDRESS_ACTIVITY,\n    params: AddressWebhookParams\n  ): Promise<AddressActivityWebhook>;\n  async createWebhook(\n    url: string,\n    type: WebhookType,\n    params:\n      | NftWebhookParams\n      | AddressWebhookParams\n      | TransactionWebhookParams\n      | CustomGraphqlWebhookParams\n  ): Promise<\n    | MinedTransactionWebhook\n    | DroppedTransactionWebhook\n    | NftActivityWebhook\n    | AddressActivityWebhook\n    | NftMetadataUpdateWebhook\n    | CustomGraphqlWebhook\n  > {\n    let appId;\n    if (\n      type === WebhookType.MINED_TRANSACTION ||\n      type === WebhookType.DROPPED_TRANSACTION\n    ) {\n      if (!('appId' in params)) {\n        throw new Error('Transaction Webhooks require an app id.');\n      }\n      appId = params.appId;\n    }\n\n    let network = NETWORK_TO_WEBHOOK_NETWORK.get(this.config.network);\n    let nftFilterObj;\n    let addresses;\n    let graphqlQuery;\n    if (\n      type === WebhookType.NFT_ACTIVITY ||\n      type === WebhookType.NFT_METADATA_UPDATE\n    ) {\n      if (!('filters' in params) || params.filters.length === 0) {\n        throw new Error(\n          'Nft Activity Webhooks require a non-empty array input.'\n        );\n      }\n      network = params.network\n        ? NETWORK_TO_WEBHOOK_NETWORK.get(params.network)\n        : network;\n      const filters = (params.filters as NftFilter[]).map(filter =>\n        filter.tokenId\n          ? {\n              contract_address: filter.contractAddress,\n              token_id: BigNumber.from(filter.tokenId).toString()\n            }\n          : {\n              contract_address: filter.contractAddress\n            }\n      );\n      nftFilterObj =\n        type === WebhookType.NFT_ACTIVITY\n          ? { nft_filters: filters }\n          : { nft_metadata_filters: filters };\n    } else if (type === WebhookType.ADDRESS_ACTIVITY) {\n      if (\n        params === undefined ||\n        !('addresses' in params) ||\n        params.addresses.length === 0\n      ) {\n        throw new Error(\n          'Address Activity Webhooks require a non-empty array input.'\n        );\n      }\n      network = params.network\n        ? NETWORK_TO_WEBHOOK_NETWORK.get(params.network)\n        : network;\n      addresses = await this.resolveAddresses(params.addresses);\n    } else if (type == WebhookType.GRAPHQL) {\n      if (\n        params === undefined ||\n        !('graphqlQuery' in params) ||\n        params.graphqlQuery.length === 0\n      ) {\n        throw new Error('Custom Webhooks require a non-empty graphql query.');\n      }\n      network = params.network\n        ? NETWORK_TO_WEBHOOK_NETWORK.get(params.network)\n        : network;\n      graphqlQuery = params.graphqlQuery;\n    }\n\n    const data = {\n      network,\n      webhook_type: type,\n      webhook_url: url,\n      ...(appId && { app_id: appId }),\n\n      // Only include the filters/addresses in the final response if they're defined\n      ...nftFilterObj,\n      ...(addresses && { addresses }),\n      ...(graphqlQuery && { graphql_query: graphqlQuery })\n    };\n\n    const response = await this.sendWebhookRequest<RawCreateWebhookResponse>(\n      'create-webhook',\n      'createWebhook',\n      {},\n      {\n        method: 'POST',\n        data\n      }\n    );\n\n    return parseRawWebhook(response.data);\n  }\n\n  /**\n   * Delete the provided webhook.\n   *\n   * @param webhook The webhook to delete.\n   */\n  deleteWebhook(webhook: Webhook): Promise<void>;\n\n  /**\n   * Delete the provided webhook.\n   *\n   * @param webhookId The id of the webhook to delete.\n   */\n  deleteWebhook(webhookId: string): Promise<void>;\n  async deleteWebhook(webhookOrId: Webhook | string): Promise<void> {\n    this.verifyConfig();\n    const webhookId =\n      typeof webhookOrId === 'string' ? webhookOrId : webhookOrId.id;\n    const response = await this.sendWebhookRequest<RawNftFiltersResponse>(\n      'delete-webhook',\n      'deleteWebhook',\n      {\n        webhook_id: webhookId\n      },\n      {\n        method: 'DELETE'\n      }\n    );\n\n    if ('message' in response) {\n      throw new Error(\n        `Webhook not found. Failed to delete webhook: ${webhookId}`\n      );\n    }\n  }\n\n  private verifyConfig() {\n    if (this.config.authToken === undefined) {\n      throw new Error(\n        'Using the Notify API requires setting the Alchemy Auth Token in ' +\n          'the settings object when initializing Alchemy.'\n      );\n    }\n  }\n\n  private sendWebhookRequest<Response>(\n    restApiName: string,\n    methodName: string,\n    params: {},\n    overrides?: AxiosRequestConfig\n  ): Promise<Response> {\n    return requestHttpWithBackoff(\n      this.config,\n      AlchemyApiType.WEBHOOK,\n      restApiName,\n      methodName,\n      params,\n      {\n        ...overrides,\n        headers: {\n          'X-Alchemy-Token': this.config.authToken!,\n          ...overrides?.headers\n        }\n      }\n    );\n  }\n\n  /** Resolves ENS addresses to the raw address.\n   * @internal */\n  private async resolveAddresses(\n    addresses: string[] | undefined\n  ): Promise<string[]> {\n    if (addresses === undefined) {\n      return [];\n    }\n    const resolvedAddresses: string[] = [];\n    const provider = await this.config.getProvider();\n    for (const address of addresses) {\n      const rawAddress = await provider.resolveName(address);\n      if (rawAddress === null) {\n        throw new Error(`Unable to resolve the ENS address: ${address}`);\n      }\n      resolvedAddresses.push(rawAddress);\n    }\n\n    return resolvedAddresses;\n  }\n}\n\n/**\n * Mapping of webhook network representations to the SDK's network representation.\n *\n * @internal\n */\nconst WEBHOOK_NETWORK_TO_NETWORK: { [key: string]: Network } = {\n  ETH_MAINNET: Network.ETH_MAINNET,\n  ETH_GOERLI: Network.ETH_GOERLI,\n  ETH_SEPOLIA: Network.ETH_SEPOLIA,\n  MATIC_MAINNET: Network.MATIC_MAINNET,\n  MATIC_MUMBAI: Network.MATIC_MUMBAI,\n  ARB_MAINNET: Network.ARB_MAINNET,\n  ARB_GOERLI: Network.ARB_GOERLI,\n  OPT_MAINNET: Network.OPT_MAINNET,\n  OPT_GOERLI: Network.OPT_GOERLI,\n  BASE_MAINNET: Network.BASE_MAINNET,\n  BASE_GOERLI: Network.BASE_GOERLI,\n  BASE_SEPOLIA: Network.BASE_SEPOLIA\n};\n\n/** Mapping of the SDK's network representation the webhook API's network representation. */\nconst NETWORK_TO_WEBHOOK_NETWORK: Map<Network, string> = Object.keys(\n  Network\n).reduce((map: Map<Network, string>, key) => {\n  if (key in WEBHOOK_NETWORK_TO_NETWORK) {\n    map.set(WEBHOOK_NETWORK_TO_NETWORK[key], key);\n  }\n  return map;\n}, new Map());\n\nfunction parseRawWebhookResponse(\n  response: RawGetAllWebhooksResponse\n): Webhook[] {\n  return response.data.map(parseRawWebhook);\n}\n\nfunction parseRawWebhook(rawWebhook: RawWebhook): Webhook {\n  return {\n    id: rawWebhook.id,\n    network: WEBHOOK_NETWORK_TO_NETWORK[rawWebhook.network],\n    type: rawWebhook.webhook_type as WebhookType,\n    url: rawWebhook.webhook_url,\n    isActive: rawWebhook.is_active,\n    timeCreated: new Date(rawWebhook.time_created).toISOString(),\n    signingKey: rawWebhook.signing_key,\n    version: rawWebhook.version as WebhookVersion,\n    // Only include the appId in the final response if it's defined\n    ...(rawWebhook.app_id !== undefined && { appId: rawWebhook.app_id })\n  };\n}\n\nfunction parseRawAddressActivityResponse(\n  response: RawAddressActivityResponse\n): AddressActivityResponse {\n  return {\n    addresses: response.data,\n    totalCount: response.pagination.total_count,\n    pageKey: response.pagination.cursors.after\n  };\n}\n\nfunction parseRawCustomGraphqlWebhookResponse(\n  response: RawCustomGraphqlWebhookConfig\n): CustomGraphqlWebhookConfig {\n  return {\n    graphqlQuery: response.data.graphql_query\n  };\n}\n\nfunction parseRawNftFiltersResponse(\n  response: RawNftFiltersResponse\n): NftFiltersResponse {\n  return {\n    filters: response.data.map(f =>\n      f.token_id\n        ? {\n            contractAddress: f.contract_address,\n            tokenId: BigNumber.from(f.token_id).toString()\n          }\n        : {\n            contractAddress: f.contract_address\n          }\n    ),\n    totalCount: response.pagination.total_count,\n    pageKey: response.pagination.cursors.after\n  };\n}\n\nfunction nftFilterToParam(filter: NftFilter): RawNftFilterParam {\n  return filter.tokenId\n    ? {\n        contract_address: filter.contractAddress,\n        token_id: BigNumber.from(filter.tokenId).toString()\n      }\n    : {\n        contract_address: filter.contractAddress\n      };\n}\n","import {\n  TransactionReceipt,\n  TransactionRequest,\n  TransactionResponse\n} from '@ethersproject/abstract-provider';\nimport type { BigNumber } from '@ethersproject/bignumber';\nimport { Deferrable } from '@ethersproject/properties';\n\nimport {\n  BlockIdentifier,\n  DebugTransaction,\n  GasOptimizedTransactionResponse,\n  GasOptimizedTransactionStatusResponse,\n  SendPrivateTransactionOptions,\n  SimulateAssetChangesResponse,\n  SimulateExecutionResponse\n} from '../types/types';\nimport { nullsToUndefined } from '../util/util';\nimport { AlchemyConfig } from './alchemy-config';\nimport { Wallet } from './alchemy-wallet';\nimport { fromHex, toHex } from './util';\n\n/**\n * Multiples to increment fee per gas when using\n * {@link TransactNamespace.sendGasOptimizedTransaction}.\n *\n * @internal\n */\nexport const GAS_OPTIMIZED_TX_FEE_MULTIPLES = [0.9, 1, 1.1, 1.2, 1.3];\n\n/**\n * The Transact namespace contains methods used for sending transactions and\n * checking on the state of submitted transactions.\n *\n * Do not call this constructor directly. Instead, instantiate an Alchemy object\n * with `const alchemy = new Alchemy(config)` and then access the transact\n * namespace via `alchemy.transact`.\n */\nexport class TransactNamespace {\n  /** @internal */\n  constructor(private readonly config: AlchemyConfig) {}\n\n  /**\n   * Used to send a single transaction to Flashbots. Flashbots will attempt to\n   * send the transaction to miners for the next 25 blocks.\n   *\n   * Returns the transaction hash of the submitted transaction.\n   *\n   * @param signedTransaction The raw, signed transaction as a hash.\n   * @param maxBlockNumber Optional highest block number in which the\n   *   transaction should be included.\n   * @param options Options to configure the request.\n   */\n  async sendPrivateTransaction(\n    signedTransaction: string,\n    maxBlockNumber?: number,\n    options?: SendPrivateTransactionOptions\n  ): Promise<string> {\n    const provider = await this.config.getProvider();\n    const hexBlockNumber = maxBlockNumber ? toHex(maxBlockNumber) : undefined;\n    return provider._send(\n      'eth_sendPrivateTransaction',\n      [\n        {\n          tx: signedTransaction,\n          maxBlockNumber: hexBlockNumber,\n          preferences: options\n        }\n      ],\n      'sendPrivateTransaction'\n    );\n  }\n\n  /**\n   * Stops the provided private transaction from being submitted for future\n   * blocks. A transaction can only be cancelled if the request is signed by the\n   * same key as the {@link sendPrivateTransaction} call submitting the\n   * transaction in first place.\n   *\n   * Please note that fast mode transactions cannot be cancelled using this method.\n   *\n   * Returns a boolean indicating whether the cancellation was successful.\n   *\n   * @param transactionHash Transaction hash of private tx to be cancelled\n   */\n  async cancelPrivateTransaction(transactionHash: string): Promise<boolean> {\n    const provider = await this.config.getProvider();\n    return provider._send(\n      'eth_cancelPrivateTransaction',\n      [\n        {\n          txHash: transactionHash\n        }\n      ],\n      'cancelPrivateTransaction'\n    );\n  }\n\n  /**\n   * Simulates the asset changes resulting from a list of transactions simulated\n   * in sequence.\n   *\n   * Returns a list of asset changes for each transaction during simulation.\n   *\n   * @param transactions Transactions list of max 3 transactions to simulate.\n   * @param blockIdentifier Optional block identifier to simulate the\n   * transaction in.\n   */\n  async simulateAssetChangesBundle(\n    transactions: DebugTransaction[],\n    blockIdentifier?: BlockIdentifier\n  ): Promise<SimulateAssetChangesResponse[]> {\n    const provider = await this.config.getProvider();\n    const params =\n      blockIdentifier !== undefined\n        ? [transactions, blockIdentifier]\n        : [transactions];\n    const res = await provider._send(\n      'alchemy_simulateAssetChangesBundle',\n      params,\n      'simulateAssetChangesBundle'\n    );\n    return nullsToUndefined(res);\n  }\n\n  /**\n   * Simulates the asset changes resulting from a single transaction.\n   *\n   * Returns list of asset changes that occurred during the transaction\n   * simulation. Note that this method does not run the transaction on the\n   * blockchain.\n   *\n   * @param transaction The transaction to simulate.\n   * @param blockIdentifier Optional block identifier to simulate the\n   * transaction in.\n   */\n  async simulateAssetChanges(\n    transaction: DebugTransaction,\n    blockIdentifier?: BlockIdentifier\n  ): Promise<SimulateAssetChangesResponse> {\n    const provider = await this.config.getProvider();\n    const params =\n      blockIdentifier !== undefined\n        ? [transaction, blockIdentifier]\n        : [transaction];\n    const res = await provider._send(\n      'alchemy_simulateAssetChanges',\n      params,\n      'simulateAssetChanges'\n    );\n    return nullsToUndefined(res);\n  }\n\n  /**\n   * Simulates a list of transactions in sequence and returns list of decoded\n   * traces and logs that occurred for each transaction during simulation.\n   *\n   * Note that this method does not run any transactions on the blockchain.\n   *\n   * @param transactions Transactions list of max 3 transactions to simulate.\n   * @param blockIdentifier Optional block identifier to simulate the\n   * transaction in.\n   */\n  async simulateExecutionBundle(\n    transactions: DebugTransaction[],\n    blockIdentifier?: BlockIdentifier\n  ): Promise<SimulateExecutionResponse[]> {\n    const provider = await this.config.getProvider();\n    const params =\n      blockIdentifier !== undefined\n        ? [transactions, blockIdentifier]\n        : [transactions];\n    const res = provider._send(\n      'alchemy_simulateExecutionBundle',\n      params,\n      'simulateExecutionBundle'\n    );\n    return nullsToUndefined(res);\n  }\n\n  /**\n   * Simulates a single transaction and the resulting and returns list of\n   * decoded traces and logs that occurred during the transaction simulation.\n   *\n   * Note that this method does not run the transaction on the blockchain.\n   *\n   * @param transaction The transaction to simulate.\n   * @param blockIdentifier Optional block identifier to simulate the\n   * transaction in.\n   */\n  async simulateExecution(\n    transaction: DebugTransaction,\n    blockIdentifier?: BlockIdentifier\n  ): Promise<SimulateExecutionResponse> {\n    const provider = await this.config.getProvider();\n    const params =\n      blockIdentifier !== undefined\n        ? [transaction, blockIdentifier]\n        : [transaction];\n    const res = provider._send(\n      'alchemy_simulateExecution',\n      params,\n      'simulateExecution'\n    );\n    return nullsToUndefined(res);\n  }\n\n  /**\n   * Returns the transaction with hash or null if the transaction is unknown.\n   *\n   * If a transaction has not been mined, this method will search the\n   * transaction pool. Various backends may have more restrictive transaction\n   * pool access (e.g. if the gas price is too low or the transaction was only\n   * recently sent and not yet indexed) in which case this method may also return null.\n   *\n   * NOTE: This is an alias for {@link CoreNamespace.getTransaction}.\n   *\n   * @param transactionHash The hash of the transaction to get.\n   * @public\n   */\n  async getTransaction(\n    transactionHash: string | Promise<string>\n  ): Promise<TransactionResponse | null> {\n    const provider = await this.config.getProvider();\n    return provider.getTransaction(transactionHash);\n  }\n\n  /**\n   * Submits transaction to the network to be mined. The transaction must be\n   * signed, and be valid (i.e. the nonce is correct and the account has\n   * sufficient balance to pay for the transaction).\n   *\n   * NOTE: This is an alias for {@link CoreNamespace.sendTransaction}.\n   *\n   * @param signedTransaction The signed transaction to send.\n   * @public\n   */\n  async sendTransaction(\n    signedTransaction: string | Promise<string>\n  ): Promise<TransactionResponse> {\n    const provider = await this.config.getProvider();\n    return provider.sendTransaction(signedTransaction);\n  }\n\n  /**\n   * Returns an estimate of the amount of gas that would be required to submit\n   * transaction to the network.\n   *\n   * An estimate may not be accurate since there could be another transaction on\n   * the network that was not accounted for, but after being mined affects the\n   * relevant state.\n   *\n   * This is an alias for {@link CoreNamespace.estimateGas}.\n   *\n   * @param transaction The transaction to estimate gas for.\n   * @public\n   */\n  async estimateGas(\n    transaction: Deferrable<TransactionRequest>\n  ): Promise<BigNumber> {\n    const provider = await this.config.getProvider();\n    return provider.estimateGas(transaction);\n  }\n\n  /**\n   * Returns a fee per gas (in wei) that is an estimate of how much you can pay\n   * as a priority fee, or \"tip\", to get a transaction included in the current block.\n   *\n   * This number is generally used to set the `maxPriorityFeePerGas` field in a\n   * transaction request.\n   *\n   * @public\n   */\n  async getMaxPriorityFeePerGas(): Promise<number> {\n    const provider = await this.config.getProvider();\n    const feeHex = await provider._send(\n      'eth_maxPriorityFeePerGas',\n      [],\n      'getMaxPriorityFeePerGas'\n    );\n    return fromHex(feeHex);\n  }\n\n  /**\n   * Returns a promise which will not resolve until specified transaction hash is mined.\n   *\n   * If {@link confirmations} is 0, this method is non-blocking and if the\n   * transaction has not been mined returns null. Otherwise, this method will\n   * block until the transaction has confirmed blocks mined on top of the block\n   * in which it was mined.\n   *\n   * NOTE: This is an alias for {@link CoreNamespace.waitForTransaction}.\n   *\n   * @param transactionHash The hash of the transaction to wait for.\n   * @param confirmations The number of blocks to wait for.\n   * @param timeout The maximum time to wait for the transaction to confirm.\n   * @public\n   */\n  async waitForTransaction(\n    transactionHash: string,\n    confirmations?: number,\n    timeout?: number\n  ): Promise<TransactionReceipt | null> {\n    const provider = await this.config.getProvider();\n    return provider.waitForTransaction(transactionHash, confirmations, timeout);\n  }\n\n  /**\n   * Instead of sending a single transaction that might not get mined, this\n   * method allows you to send the same transaction multiple times, with\n   * different gas prices and gas limits. This should result in lower fees paid.\n   *\n   * Alchemy will submit the cheapest transaction, and if it does not get mined,\n   * the next cheapest transaction will be submitted. This process will continue\n   * until one of the transactions is mined, or until all transactions are rejected.\n   *\n   * To have Alchemy automatically generate a fee and gas spread, pass in a\n   * {@link TransactionRequest} object and a {@link Wallet} as a signer.\n   *\n   * This method returns a response object containing the transaction hash for\n   * each of the signed transactions and a transaction job id that can be used\n   * to track the state of the transaction job.\n   *\n   * @param signedTransactions An array of signed transactions to send. Each\n   *   transaction in the array must have the same values, but with different\n   *   gas and fee values.\n   * @internal\n   */\n  // TODO(txjob): Remove internal tag once this feature is released.\n  async sendGasOptimizedTransaction(\n    signedTransactions: string[]\n  ): Promise<GasOptimizedTransactionResponse>;\n\n  /**\n   * Instead of sending a single transaction that might not get mined, this\n   * method will generate a series of five EIP-1559 transactions with different\n   * gas prices in order to minimize the final fees paid.\n   *\n   * Alchemy will submit the cheapest transaction, and if it does not get mined,\n   * the next cheapest transaction will be submitted. This process will continue\n   * until one of the transactions is mined, or until all transactions are rejected.\n   *\n   * To calculate the fee, gas, and gas spread for each transaction, this method\n   * first calculates the base fee from the latest block, estimates the gas for\n   * the transaction, and then calculates the fee and gas spread for the\n   * transaction. The five transactions will have 90%, 100%, 110%, 120%, and\n   * 130% of the max priority fee per gas.\n   *\n   * Note that you can also pass in an array of pre-signed transactions with set\n   * gas levels for more granular control over gas.\n   *\n   * This method returns a response object containing the transaction hash for\n   * each of the signed transactions and a transaction job id that can be used\n   * to track the state of the transaction job.\n   *\n   * @param transaction The raw transaction to send.\n   * @param wallet A wallet to use to sign the transaction.\n   * @internal\n   */\n  // TODO(txjob): Remove internal tag once this feature is released.\n  async sendGasOptimizedTransaction(\n    transaction: TransactionRequest,\n    wallet: Wallet\n  ): Promise<GasOptimizedTransactionResponse>;\n  async sendGasOptimizedTransaction(\n    transactionOrSignedTxs: TransactionRequest | string[],\n    wallet?: Wallet\n  ): Promise<GasOptimizedTransactionResponse> {\n    if (Array.isArray(transactionOrSignedTxs)) {\n      return this._sendGasOptimizedTransaction(\n        transactionOrSignedTxs,\n        'sendGasOptimizedTransactionPreSigned'\n      );\n    }\n\n    let gasLimit;\n    let priorityFee;\n    let baseFee;\n    const provider = await this.config.getProvider();\n    try {\n      gasLimit = await this.estimateGas(transactionOrSignedTxs);\n      priorityFee = await this.getMaxPriorityFeePerGas();\n      const currentBlock = await provider.getBlock('latest');\n      baseFee = currentBlock.baseFeePerGas!.toNumber();\n    } catch (e) {\n      throw new Error(`Failed to estimate gas for transaction: ${e}`);\n    }\n\n    const gasSpreadTransactions = generateGasSpreadTransactions(\n      transactionOrSignedTxs,\n      gasLimit.toNumber(),\n      baseFee,\n      priorityFee\n    );\n    const signedTransactions = await Promise.all(\n      gasSpreadTransactions.map(tx => wallet!.signTransaction(tx))\n    );\n\n    return this._sendGasOptimizedTransaction(\n      signedTransactions,\n      'sendGasOptimizedTransactionGenerated'\n    );\n  }\n\n  /**\n   * Returns the state of the transaction job returned by the\n   * {@link sendGasOptimizedTransaction}.\n   *\n   * @param trackingId The tracking id from the response of the sent gas optimized transaction.\n   * @internal\n   */\n  // TODO(txjob): Remove internal tag once this feature is released.\n  async getGasOptimizedTransactionStatus(\n    trackingId: string\n  ): Promise<GasOptimizedTransactionStatusResponse> {\n    const provider = await this.config.getProvider();\n    return provider._send(\n      'alchemy_getGasOptimizedTransactionStatus',\n      [trackingId],\n      'getGasOptimizedTransactionStatus'\n    );\n  }\n\n  /** @internal */\n  private async _sendGasOptimizedTransaction(\n    signedTransactions: string[],\n    methodName: string\n  ): Promise<GasOptimizedTransactionResponse> {\n    const provider = await this.config.getProvider();\n    return provider._send(\n      'alchemy_sendGasOptimizedTransaction',\n      [\n        {\n          rawTransactions: signedTransactions\n        }\n      ],\n      methodName\n    );\n  }\n}\n\n/**\n * Helper method to generate the raw transaction with the given gas limit and\n * priority fee across a spread of different gas prices.\n *\n * @internal\n */\n// Visible for testing\nexport function generateGasSpreadTransactions(\n  transaction: TransactionRequest,\n  gasLimit: number,\n  baseFee: number,\n  priorityFee: number\n): TransactionRequest[] {\n  return GAS_OPTIMIZED_TX_FEE_MULTIPLES.map(feeMultiplier => {\n    return {\n      ...transaction,\n      gasLimit,\n      maxFeePerGas: Math.round(\n        baseFee * feeMultiplier + priorityFee * feeMultiplier\n      ),\n      maxPriorityFeePerGas: Math.round(feeMultiplier * priorityFee)\n    };\n  });\n}\n","/** This file contains internal types used by the SDK and are not exposed to the end user. */\n\ntype JsonRpcId = string | number | null;\n\n/**\n * Prefix for `alchemy_pendingTransactions` subscriptions when serializing to\n * ethers events.\n *\n * This tag is used internally by ethers to track different event filters.\n */\nexport const ALCHEMY_PENDING_TRANSACTIONS_EVENT_TYPE =\n  'alchemy-pending-transactions';\n\n/**\n * Prefix for `alchemy_minedTransactions` subscriptions when serializing to ethers events.\n *\n * This tag is used internally by ethers to track different event filters.\n */\nexport const ALCHEMY_MINED_TRANSACTIONS_EVENT_TYPE =\n  'alchemy-mined-transactions';\n\n/**\n * Array containing all the custom event tags used internally by ethers to track\n * event filters.\n */\nexport const ALCHEMY_EVENT_TYPES = [\n  ALCHEMY_PENDING_TRANSACTIONS_EVENT_TYPE,\n  ALCHEMY_MINED_TRANSACTIONS_EVENT_TYPE\n];\n\nexport interface JsonRpcRequest {\n  jsonrpc: '2.0';\n  method: string;\n  params?: any[];\n  id?: JsonRpcId;\n}\n\nexport interface JsonRpcResponse<T = any> {\n  jsonrpc: '2.0';\n  result?: T;\n  error?: JsonRpcError;\n  id: JsonRpcId;\n}\n\ninterface JsonRpcError<T = any> {\n  code: number;\n  message: string;\n  data?: T;\n}\n\nexport type WebSocketMessage = SingleOrBatchResponse | SubscriptionEvent;\nexport type SingleOrBatchResponse = JsonRpcResponse | JsonRpcResponse[];\nexport interface SubscriptionEvent<T = any> {\n  jsonrpc: '2.0';\n  method: 'eth_subscription';\n  params: {\n    subscription: string;\n    result: T;\n  };\n}\n","import { EventType, Filter, Listener } from '@ethersproject/abstract-provider';\n\nimport {\n  AlchemyEventFilter,\n  AlchemyEventType,\n  AlchemyMinedTransactionsAddress,\n  AlchemyMinedTransactionsEventFilter,\n  AlchemyPendingTransactionsEventFilter,\n  AlchemySubscription,\n  NonEmptyArray\n} from '../types/types';\nimport {\n  ALCHEMY_EVENT_TYPES,\n  ALCHEMY_MINED_TRANSACTIONS_EVENT_TYPE,\n  ALCHEMY_PENDING_TRANSACTIONS_EVENT_TYPE\n} from './internal-types';\n\n/**\n * DO NOT MODIFY.\n *\n * Event class copied directly over from ethers.js's `BaseProvider` class.\n *\n * This class is used to represent events and their corresponding listeners. The\n * SDK needs to extend this class in order to support Alchemy's custom\n * Subscription API types. The original class is not exported by ethers. Minimal\n * changes have been made in order to get TS to compile.\n */\nclass Event {\n  readonly listener: Listener;\n  readonly once: boolean;\n  readonly tag: string;\n\n  _lastBlockNumber: number;\n  _inflight: boolean;\n\n  constructor(tag: string, listener: Listener, once: boolean) {\n    this.listener = listener;\n    this.tag = tag;\n    this.once = once;\n    this._lastBlockNumber = -2;\n    this._inflight = false;\n  }\n\n  get event(): EventType {\n    switch (this.type) {\n      case 'tx':\n        return this.hash!;\n      case 'filter':\n        return this.filter!;\n      default:\n        return this.tag;\n    }\n  }\n\n  get type(): string {\n    return this.tag.split(':')[0];\n  }\n\n  get hash(): string {\n    const comps = this.tag.split(':');\n    if (comps[0] !== 'tx') {\n      throw new Error('Not a transaction event');\n    }\n    return comps[1];\n  }\n\n  get filter(): Filter {\n    const comps = this.tag.split(':');\n    if (comps[0] !== 'filter') {\n      throw new Error('Not a transaction event');\n    }\n    const address = comps[1];\n\n    const topics = deserializeTopics(comps[2]);\n    const filter: Filter = {};\n\n    if (topics.length > 0) {\n      filter.topics = topics;\n    }\n    if (address && address !== '*') {\n      filter.address = address;\n    }\n\n    return filter;\n  }\n\n  pollable(): boolean {\n    const PollableEvents = ['block', 'network', 'pending', 'poll'];\n    return this.tag.indexOf(':') >= 0 || PollableEvents.indexOf(this.tag) >= 0;\n  }\n}\n\n/**\n * Wrapper class around the ethers `Event` class in order to add support for\n * Alchemy's custom subscriptions types.\n *\n * The serialization and deserialization mechanism requires the order of the\n * fields to be the same across different {@link ALCHEMY_EVENT_TYPES}. Before\n * using a getter on a new event filter, make sure that the position of the\n * field in serialization is correct.\n *\n * The getters on this class deserialize the event tag generated by\n * {@link getAlchemyEventTag} into the original fields passed into the event.\n */\nexport class EthersEvent extends Event {\n  /**\n   * Converts the event tag into the original `fromAddress` field in\n   * {@link AlchemyPendingTransactionsEventFilter}.\n   */\n  get fromAddress(): string | string[] | undefined {\n    const comps = this.tag.split(':');\n    if (comps[0] !== ALCHEMY_PENDING_TRANSACTIONS_EVENT_TYPE) {\n      return undefined;\n    }\n    if (comps[1] && comps[1] !== '*') {\n      return deserializeAddressField(comps[1]);\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * Converts the event tag into the original `toAddress` field in\n   * {@link AlchemyPendingTransactionsEventFilter}.\n   */\n  get toAddress(): string | string[] | undefined {\n    const comps = this.tag.split(':');\n    if (comps[0] !== ALCHEMY_PENDING_TRANSACTIONS_EVENT_TYPE) {\n      return undefined;\n    }\n    if (comps[2] && comps[2] !== '*') {\n      return deserializeAddressField(comps[2]);\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * Converts the event tag into the original `hashesOnly` field in\n   * {@link AlchemyPendingTransactionsEventFilter} and {@link AlchemyMinedTransactionsEventFilter}.\n   */\n  get hashesOnly(): boolean | undefined {\n    const comps = this.tag.split(':');\n    if (!ALCHEMY_EVENT_TYPES.includes(comps[0])) {\n      return undefined;\n    }\n    if (comps[3] && comps[3] !== '*') {\n      return comps[3] === 'true';\n    } else {\n      return undefined;\n    }\n  }\n\n  get includeRemoved(): boolean | undefined {\n    const comps = this.tag.split(':');\n    if (comps[0] !== ALCHEMY_MINED_TRANSACTIONS_EVENT_TYPE) {\n      return undefined;\n    }\n    if (comps[2] && comps[2] !== '*') {\n      return comps[2] === 'true';\n    } else {\n      return undefined;\n    }\n  }\n\n  get addresses(): NonEmptyArray<AlchemyMinedTransactionsAddress> | undefined {\n    const comps = this.tag.split(':');\n    if (comps[0] !== ALCHEMY_MINED_TRANSACTIONS_EVENT_TYPE) {\n      return undefined;\n    }\n    if (comps[1] && comps[1] !== '*') {\n      return deserializeAddressesField(comps[1]);\n    } else {\n      return undefined;\n    }\n  }\n}\n\nexport function isAlchemyEvent(\n  event: AlchemyEventType\n): event is\n  | AlchemyMinedTransactionsEventFilter\n  | AlchemyPendingTransactionsEventFilter {\n  return typeof event === 'object' && 'method' in event;\n}\n\n/**\n * Creates a string representation of an `alchemy_pendingTransaction`\n * subscription filter that is compatible with the ethers implementation of\n * `getEventTag()`. The method is not an exported function in ethers, which is\n * why the SDK has its own implementation.\n *\n * The event tag is then deserialized by the SDK's {@link EthersEvent} getters.\n *\n * @example\n *   ```js\n *   // Returns 'alchemy-pending-transactions:0xABC:0xDEF|0xGHI:true'\n *   const eventTag =  getAlchemyEventTag(\n *   {\n *     \"method\": \"alchemy_pendingTransactions\",\n *     \"fromAddress\": \"0xABC\",\n *     \"toAddress\": [\"0xDEF\", \"0xGHI\"],\n *     \"hashesOnly: true\n *   });\n *   ```;\n *\n * @param event\n * @internal\n */\nexport function getAlchemyEventTag(event: AlchemyEventType): string {\n  if (!isAlchemyEvent(event)) {\n    throw new Error('Event tag requires AlchemyEventType');\n  }\n\n  if (event.method === AlchemySubscription.PENDING_TRANSACTIONS) {\n    return serializePendingTransactionsEvent(event);\n  } else if (event.method === AlchemySubscription.MINED_TRANSACTIONS) {\n    return serializeMinedTransactionsEvent(event);\n  } else {\n    throw new Error(`Unrecognized AlchemyFilterEvent: ${event}`);\n  }\n}\n\nexport function verifyAlchemyEventName(eventName: AlchemyEventFilter): void {\n  if (!Object.values(AlchemySubscription).includes(eventName.method)) {\n    throw new Error(\n      `Invalid method name ${\n        eventName.method\n      }. Accepted method names: ${Object.values(AlchemySubscription)}`\n    );\n  }\n}\n\n/**\n * Serializes the provided {@link AlchemyPendingTransactionsEventFilter} into an ethers\n * compatible event tag.\n *\n * For the example event:\n * ```\n *  {\n *     \"method\": \"alchemy_pendingTransactions\",\n *     \"fromAddress\": \"0xABC\",\n *     \"toAddress\": [\"0xDEF\", \"0xGHI\"],\n *     \"hashesOnly: true\n *   }\n * ```\n *\n * The resulting serialization is:\n * `alchemy_pendingTransactions:0xABC:0xDEF|0xGHI:true`\n *\n * If a field is omitted, it is replaced with a `*`.\n */\nfunction serializePendingTransactionsEvent(\n  event: AlchemyPendingTransactionsEventFilter\n): string {\n  const fromAddress = serializeAddressField(event.fromAddress);\n  const toAddress = serializeAddressField(event.toAddress);\n  const hashesOnly = serializeBooleanField(event.hashesOnly);\n  return (\n    ALCHEMY_PENDING_TRANSACTIONS_EVENT_TYPE +\n    ':' +\n    fromAddress +\n    ':' +\n    toAddress +\n    ':' +\n    hashesOnly\n  );\n}\n\n/**\n * Serializes the provided {@link AlchemyPendingTransactionsEventFilter} into an ethers\n * compatible event tag.\n *\n * For the example event:\n * ```\n *  {\n *     \"method\": \"alchemy_minedTransactions\",\n *     \"addresses\": [\n *       {\n *         from: \"0xABC\"\n *       },\n *       {\n *         to: \"0xDEF\",\n *         from: \"0x123\"\n *       }\n *     ]\n *     \"includeRemoved\": false\n *     \"hashesOnly: true\n *   }\n * ```\n *\n * The resulting serialization is:\n * `alchemy_minedTransactions:*,0xABC|0xDEF,0x123:false:true`\n *\n * If a field is omitted, it is replaced with a `*`.\n *\n * The `addresses` array is split by the '|' character, and each to/from address\n * pair is separated by a ',' character.\n *\n */\nfunction serializeMinedTransactionsEvent(\n  event: AlchemyMinedTransactionsEventFilter\n): string {\n  const addresses = serializeAddressesField(event.addresses);\n  const includeRemoved = serializeBooleanField(event.includeRemoved);\n  const hashesOnly = serializeBooleanField(event.hashesOnly);\n  return (\n    ALCHEMY_MINED_TRANSACTIONS_EVENT_TYPE +\n    ':' +\n    addresses +\n    ':' +\n    includeRemoved +\n    ':' +\n    hashesOnly\n  );\n}\n\nfunction serializeAddressesField(\n  addresses: AlchemyMinedTransactionsAddress[] | undefined\n): string {\n  if (addresses === undefined) {\n    return '*';\n  }\n\n  return addresses\n    .map(\n      filter =>\n        serializeAddressField(filter.to) +\n        ',' +\n        serializeAddressField(filter.from)\n    )\n    .join('|');\n}\n\nfunction serializeAddressField(\n  field: string | Array<string> | undefined\n): string {\n  if (field === undefined) {\n    return '*';\n  } else if (Array.isArray(field)) {\n    return field.join('|');\n  } else {\n    return field;\n  }\n}\n\nfunction serializeBooleanField(field: boolean | undefined): string | undefined {\n  if (field === undefined) {\n    return '*';\n  } else {\n    return field.toString();\n  }\n}\n\nexport function deserializeTopics(data: string): any {\n  if (data === '') {\n    return [];\n  }\n\n  return data.split(/&/g).map(topic => {\n    if (topic === '') {\n      return [];\n    }\n\n    const comps = topic.split('|').map(topic => {\n      return topic === 'null' ? null : topic;\n    });\n\n    return comps.length === 1 ? comps[0] : comps;\n  });\n}\n\nfunction deserializeAddressField(data: string): string | string[] | undefined {\n  if (data === '') {\n    return undefined;\n  }\n\n  const addresses = data.split('|');\n  return addresses.length === 1 ? addresses[0] : addresses;\n}\n\nfunction deserializeAddressesField(\n  data: string\n): NonEmptyArray<AlchemyMinedTransactionsAddress> | undefined {\n  if (data === '') {\n    return undefined;\n  }\n\n  // Perform a cast here since TS doesn't know we're guaranteed a non-empty\n  // array from deserializing.\n  return data\n    .split('|')\n    .map(addressStr => addressStr.split(','))\n    .map(addressPair => ({\n      ...(addressPair[0] !== '*' && { to: addressPair[0] }),\n      ...(addressPair[1] !== '*' && { from: addressPair[1] })\n    })) as NonEmptyArray<AlchemyMinedTransactionsAddress>;\n}\n","import type { Listener } from '@ethersproject/abstract-provider';\n\nimport { isAlchemyEvent } from '../internal/ethers-event';\nimport {\n  AlchemyEventType,\n  AlchemyMinedTransactionsAddress,\n  AlchemySubscription,\n  NonEmptyArray\n} from '../types/types';\nimport { AlchemyConfig } from './alchemy-config';\n\n/**\n * The Websocket namespace contains all subscription related functions that\n * allow you to subscribe to events and receive updates as they occur. The\n * underlying WebSocket provider has additional logic to handle reconnections\n * and automatically backfills missed events.\n *\n * Do not call this constructor directly. Instead, instantiate an Alchemy object\n * with `const alchemy = new Alchemy(config)` and then access the core namespace\n * via `alchemy.ws`.\n */\nexport class WebSocketNamespace {\n  /** @internal */\n  constructor(private readonly config: AlchemyConfig) {}\n\n  /**\n   * Adds a listener to be triggered for each {@link eventName} event. Also\n   * includes Alchemy's Subscription API events. See {@link AlchemyEventType} for\n   * how to use them.\n   *\n   * @param eventName The event to listen for.\n   * @param listener The listener to call when the event is triggered.\n   * @public\n   */\n  on(eventName: AlchemyEventType, listener: Listener): this {\n    void (async () => {\n      const provider = await this.config.getWebSocketProvider();\n      const processedEvent = await this._resolveEnsAlchemyEvent(eventName);\n      provider.on(processedEvent, listener);\n    })();\n    return this;\n  }\n\n  /**\n   * Adds a listener to be triggered for only the next {@link eventName} event,\n   * after which it will be removed. Also includes Alchemy's Subscription API\n   * events. See {@link AlchemyEventType} for how to use them.\n   *\n   * @param eventName The event to listen for.\n   * @param listener The listener to call when the event is triggered.\n   * @public\n   */\n  once(eventName: AlchemyEventType, listener: Listener): this {\n    void (async () => {\n      const provider = await this.config.getWebSocketProvider();\n      const processedEvent = await this._resolveEnsAlchemyEvent(eventName);\n      provider.once(processedEvent, listener);\n    })();\n    return this;\n  }\n\n  /**\n   * Removes the provided {@link listener} for the {@link eventName} event. If no\n   * listener is provided, all listeners for the event will be removed.\n   *\n   * @param eventName The event to unlisten to.\n   * @param listener The listener to remove.\n   * @public\n   */\n  off(eventName: AlchemyEventType, listener?: Listener): this {\n    void (async () => {\n      const provider = await this.config.getWebSocketProvider();\n      const processedEvent = await this._resolveEnsAlchemyEvent(eventName);\n      return provider.off(processedEvent, listener);\n    })();\n    return this;\n  }\n\n  /**\n   * Remove all listeners for the provided {@link eventName} event. If no event\n   * is provided, all events and their listeners are removed.\n   *\n   * @param eventName The event to remove all listeners for.\n   * @public\n   */\n  removeAllListeners(eventName?: AlchemyEventType): this {\n    void (async () => {\n      const provider = await this.config.getWebSocketProvider();\n      const processedEvent = eventName\n        ? await this._resolveEnsAlchemyEvent(eventName)\n        : undefined;\n      provider.removeAllListeners(processedEvent);\n    })();\n    return this;\n  }\n\n  /**\n   * Returns the number of listeners for the provided {@link eventName} event. If\n   * no event is provided, the total number of listeners for all events is returned.\n   *\n   * @param eventName The event to get the number of listeners for.\n   * @public\n   */\n  async listenerCount(eventName?: AlchemyEventType): Promise<number> {\n    const provider = await this.config.getWebSocketProvider();\n    const processedEvent = eventName\n      ? await this._resolveEnsAlchemyEvent(eventName)\n      : undefined;\n    return provider.listenerCount(processedEvent);\n  }\n\n  /**\n   * Returns an array of listeners for the provided {@link eventName} event. If\n   * no event is provided, all listeners will be included.\n   *\n   * @param eventName The event to get the listeners for.\n   */\n  async listeners(eventName?: AlchemyEventType): Promise<Listener[]> {\n    const provider = await this.config.getWebSocketProvider();\n    const processedEvent = eventName\n      ? await this._resolveEnsAlchemyEvent(eventName)\n      : undefined;\n    return provider.listeners(processedEvent);\n  }\n\n  /**\n   * Converts ENS addresses in an Alchemy Event to the underlying resolved\n   * address.\n   *\n   * VISIBLE ONLY FOR TESTING.\n   *\n   * @internal\n   */\n  async _resolveEnsAlchemyEvent(\n    eventName: AlchemyEventType\n  ): Promise<AlchemyEventType> {\n    if (!isAlchemyEvent(eventName)) {\n      return eventName;\n    }\n\n    if (\n      eventName.method === AlchemySubscription.MINED_TRANSACTIONS &&\n      eventName.addresses\n    ) {\n      const processedAddresses: AlchemyMinedTransactionsAddress[] = [];\n      for (const address of eventName.addresses) {\n        if (address.to) {\n          address.to = await this._resolveNameOrError(address.to);\n        }\n        if (address.from) {\n          address.from = await this._resolveNameOrError(address.from);\n        }\n        processedAddresses.push(address);\n      }\n      eventName.addresses =\n        processedAddresses as NonEmptyArray<AlchemyMinedTransactionsAddress>;\n    } else if (eventName.method === AlchemySubscription.PENDING_TRANSACTIONS) {\n      if (eventName.fromAddress) {\n        if (typeof eventName.fromAddress === 'string') {\n          eventName.fromAddress = await this._resolveNameOrError(\n            eventName.fromAddress\n          );\n        } else {\n          eventName.fromAddress = await Promise.all(\n            eventName.fromAddress.map(address =>\n              this._resolveNameOrError(address)\n            )\n          );\n        }\n      }\n      if (eventName.toAddress) {\n        if (typeof eventName.toAddress === 'string') {\n          eventName.toAddress = await this._resolveNameOrError(\n            eventName.toAddress\n          );\n        } else {\n          eventName.toAddress = await Promise.all(\n            eventName.toAddress.map(address =>\n              this._resolveNameOrError(address)\n            )\n          );\n        }\n      }\n    }\n\n    return eventName;\n  }\n\n  /**\n   * Converts the provided ENS address or throws an error. This improves code\n   * readability and type safety in other methods.\n   *\n   * VISIBLE ONLY FOR TESTING.\n   *\n   * @internal\n   */\n  async _resolveNameOrError(name: string): Promise<string> {\n    const provider = await this.config.getProvider();\n    const resolved = await provider.resolveName(name);\n    if (resolved === null) {\n      throw new Error(`Unable to resolve the ENS address: ${name}`);\n    }\n    return resolved;\n  }\n}\n","import { AlchemySettings } from '../types/types';\nimport { AlchemyConfig } from './alchemy-config';\nimport { CoreNamespace } from './core-namespace';\nimport { DebugNamespace } from './debug-namespace';\nimport { NftNamespace } from './nft-namespace';\nimport { NotifyNamespace } from './notify-namespace';\nimport { TransactNamespace } from './transact-namespace';\nimport { WebSocketNamespace } from './websocket-namespace';\n\n/**\n * The Alchemy SDK client. This class is the main entry point into Alchemy's\n * APIs and separates functionality into different namespaces.\n *\n * Each SDK instance is associated with a specific network and API key. To use a\n * different network or API key, create a new instance of {@link Alchemy}.\n *\n * @public\n */\nexport class Alchemy {\n  /**\n   * The `core` namespace contains the core eth json-rpc calls and Alchemy's\n   * Enhanced APIs.\n   */\n  readonly core: CoreNamespace;\n\n  /** The `nft` namespace contains methods for Alchemy's NFT API. */\n  readonly nft: NftNamespace;\n\n  /** The `ws` namespace contains methods for using WebSockets and creating subscriptions. */\n  readonly ws: WebSocketNamespace;\n\n  /**\n   * The `transact` namespace contains methods for sending transactions and\n   * checking on the state of submitted transasctions.\n   */\n  readonly transact: TransactNamespace;\n\n  /**\n   * Holds the setting information for the instance of the Alchemy SDK client\n   * and allows access to the underlying providers.\n   */\n  readonly config: AlchemyConfig;\n\n  /**\n   * The `notify` namespace contains methods for creating and managing webhooks\n   * as part of the Notify API.\n   */\n  readonly notify: NotifyNamespace;\n\n  /**\n   * The `debug` namespace contains methods for inspecting and debugging\n   * transactions.\n   */\n  readonly debug: DebugNamespace;\n\n  /**\n   * @param {string} [settings.apiKey] - The API key to use for Alchemy\n   * @param {Network} [settings.network] - The network to use for Alchemy\n   * @param {number} [settings.maxRetries] - The maximum number of retries to attempt\n   * @param {number} [settings.requestTimeout] - The timeout after which request should fail\n   * @public\n   */\n  constructor(settings?: AlchemySettings) {\n    this.config = new AlchemyConfig(settings);\n\n    this.core = new CoreNamespace(this.config);\n    this.nft = new NftNamespace(this.config);\n    this.ws = new WebSocketNamespace(this.config);\n    this.transact = new TransactNamespace(this.config);\n    this.notify = new NotifyNamespace(this.config);\n    this.debug = new DebugNamespace(this.config);\n  }\n}\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar transitionalDefaults = require('../defaults/transitional');\nvar Cancel = require('../cancel/Cancel');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(\n        timeoutErrorMessage,\n        config,\n        transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new Cancel('canceled') : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(configOrUrl, config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof configOrUrl === 'string') {\n    config = config || {};\n    config.url = configOrUrl;\n  } else {\n    config = configOrUrl || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar Cancel = require('../cancel/Cancel');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new Cancel('canceled');\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar normalizeHeaderName = require('../helpers/normalizeHeaderName');\nvar enhanceError = require('../core/enhanceError');\nvar transitionalDefaults = require('./transitional');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('../adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('../adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw enhanceError(e, this, 'E_JSON_PARSE');\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nmodule.exports = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","module.exports = {\n  \"version\": \"0.26.1\"\n};","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar VERSION = require('../env/data').version;\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new Error(formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')));\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new TypeError('option ' + opt + ' must be ' + result);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw Error('Unknown option ' + opt);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return toString.call(val) === '[object FormData]';\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return toString.call(val) === '[object URLSearchParams]';\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;function Lg(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var Mg=Uf(null),Ng=null,Og=null,Pg=null;function Qg(){Pg=Og=Ng=null}function Rg(a){var b=Mg.current;E(Mg);a._currentValue=b}\nfunction Sg(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}function Tg(a,b){Ng=a;Pg=Og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(Ug=!0),a.firstContext=null)}\nfunction Vg(a){var b=a._currentValue;if(Pg!==a)if(a={context:a,memoizedValue:b,next:null},null===Og){if(null===Ng)throw Error(p(308));Og=a;Ng.dependencies={lanes:0,firstContext:a}}else Og=Og.next=a;return b}var Wg=null;function Xg(a){null===Wg?Wg=[a]:Wg.push(a)}function Yg(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,Xg(b)):(c.next=e.next,e.next=c);b.interleaved=c;return Zg(a,d)}\nfunction Zg(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var $g=!1;function ah(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction bh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function ch(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction dh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return Zg(a,c)}e=d.interleaved;null===e?(b.next=b,Xg(d)):(b.next=e.next,e.next=b);d.interleaved=b;return Zg(a,c)}function eh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction fh(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction gh(a,b,c,d){var e=a.updateQueue;$g=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:$g=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);hh|=g;a.lanes=g;a.memoizedState=q}}\nfunction ih(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var jh=(new aa.Component).refs;function kh(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar nh={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=L(),d=\nlh(a),e=ch(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=dh(a,e,d);null!==b&&(mh(b,a,d,c),eh(b,a,d))}};function oh(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction ph(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=Vg(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=nh;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction qh(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&nh.enqueueReplaceState(b,b.state,null)}\nfunction rh(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jh;ah(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=Vg(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(kh(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&nh.enqueueReplaceState(e,e.state,null),gh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}\nfunction sh(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;b===jh&&(b=e.refs={});null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction th(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function uh(a){var b=a._init;return b(a._payload)}\nfunction vh(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=wh(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=xh(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&uh(f)===b.type))return d=e(b,c.props),d.ref=sh(a,b,c),d.return=a,d;d=yh(c.type,c.key,c.props,null,a.mode,d);d.ref=sh(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=zh(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ah(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=xh(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=yh(b.type,b.key,b.props,null,a.mode,c),\nc.ref=sh(a,null,b),c.return=a,c;case wa:return b=zh(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Ah(b,a.mode,c,null),b.return=a,b;th(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);th(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);th(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&uh(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=sh(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Ah(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=yh(f.type,f.key,f.props,null,a.mode,h),h.ref=sh(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=zh(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);th(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=xh(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Bh=vh(!0),Ch=vh(!1),Dh={},Eh=Uf(Dh),Fh=Uf(Dh),Gh=Uf(Dh);function Hh(a){if(a===Dh)throw Error(p(174));return a}function Ih(a,b){G(Gh,b);G(Fh,a);G(Eh,Dh);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(Eh);G(Eh,b)}function Jh(){E(Eh);E(Fh);E(Gh)}\nfunction Kh(a){Hh(Gh.current);var b=Hh(Eh.current);var c=lb(b,a.type);b!==c&&(G(Fh,a),G(Eh,c))}function Lh(a){Fh.current===a&&(E(Eh),E(Fh))}var M=Uf(0);\nfunction Mh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Nh=[];\nfunction Oh(){for(var a=0;a<Nh.length;a++)Nh[a]._workInProgressVersionPrimary=null;Nh.length=0}var Ph=ua.ReactCurrentDispatcher,Qh=ua.ReactCurrentBatchConfig,Rh=0,N=null,O=null,P=null,Sh=!1,Th=!1,Uh=0,Vh=0;function Q(){throw Error(p(321));}function Wh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Xh(a,b,c,d,e,f){Rh=f;N=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Ph.current=null===a||null===a.memoizedState?Yh:Zh;a=c(d,e);if(Th){f=0;do{Th=!1;Uh=0;if(25<=f)throw Error(p(301));f+=1;P=O=null;b.updateQueue=null;Ph.current=$h;a=c(d,e)}while(Th)}Ph.current=ai;b=null!==O&&null!==O.next;Rh=0;P=O=N=null;Sh=!1;if(b)throw Error(p(300));return a}function bi(){var a=0!==Uh;Uh=0;return a}\nfunction ci(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}function di(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(p(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}\nfunction ei(a,b){return\"function\"===typeof b?b(a):b}\nfunction fi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Rh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;N.lanes|=m;hh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(Ug=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,N.lanes|=f,hh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction gi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(Ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function hi(){}\nfunction ii(a,b){var c=N,d=di(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,Ug=!0);d=d.queue;ji(ki.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==P&&P.memoizedState.tag&1){c.flags|=2048;li(9,mi.bind(null,c,d,e,b),void 0,null);if(null===R)throw Error(p(349));0!==(Rh&30)||ni(c,b,e)}return e}function ni(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction mi(a,b,c,d){b.value=c;b.getSnapshot=d;oi(b)&&pi(a)}function ki(a,b,c){return c(function(){oi(b)&&pi(a)})}function oi(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function pi(a){var b=Zg(a,1);null!==b&&mh(b,a,1,-1)}\nfunction qi(a){var b=ci();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:ei,lastRenderedState:a};b.queue=a;a=a.dispatch=ri.bind(null,N,a);return[b.memoizedState,a]}\nfunction li(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function si(){return di().memoizedState}function ti(a,b,c,d){var e=ci();N.flags|=a;e.memoizedState=li(1|b,c,void 0,void 0===d?null:d)}\nfunction ui(a,b,c,d){var e=di();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&Wh(d,g.deps)){e.memoizedState=li(b,c,f,d);return}}N.flags|=a;e.memoizedState=li(1|b,c,f,d)}function vi(a,b){return ti(8390656,8,a,b)}function ji(a,b){return ui(2048,8,a,b)}function wi(a,b){return ui(4,2,a,b)}function xi(a,b){return ui(4,4,a,b)}\nfunction yi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function zi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ui(4,4,yi.bind(null,b,a),c)}function Ai(){}function Bi(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction Ci(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function Di(a,b,c){if(0===(Rh&21))return a.baseState&&(a.baseState=!1,Ug=!0),a.memoizedState=c;He(c,b)||(c=yc(),N.lanes|=c,hh|=c,a.baseState=!0);return b}function Ei(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Qh.transition;Qh.transition={};try{a(!1),b()}finally{C=c,Qh.transition=d}}function Fi(){return di().memoizedState}\nfunction Gi(a,b,c){var d=lh(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,c);else if(c=Yg(a,b,c,d),null!==c){var e=L();mh(c,a,d,e);Ji(c,b,d)}}\nfunction ri(a,b,c){var d=lh(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,Xg(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=Yg(a,b,e,d);null!==c&&(e=L(),mh(c,a,d,e),Ji(c,b,d))}}\nfunction Hi(a){var b=a.alternate;return a===N||null!==b&&b===N}function Ii(a,b){Th=Sh=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Ji(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar ai={readContext:Vg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useInsertionEffect:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useDeferredValue:Q,useTransition:Q,useMutableSource:Q,useSyncExternalStore:Q,useId:Q,unstable_isNewReconciler:!1},Yh={readContext:Vg,useCallback:function(a,b){ci().memoizedState=[a,void 0===b?null:b];return a},useContext:Vg,useEffect:vi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ti(4194308,\n4,yi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ti(4194308,4,a,b)},useInsertionEffect:function(a,b){return ti(4,2,a,b)},useMemo:function(a,b){var c=ci();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=ci();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=Gi.bind(null,N,a);return[d.memoizedState,a]},useRef:function(a){var b=\nci();a={current:a};return b.memoizedState=a},useState:qi,useDebugValue:Ai,useDeferredValue:function(a){return ci().memoizedState=a},useTransition:function(){var a=qi(!1),b=a[0];a=Ei.bind(null,a[1]);ci().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=N,e=ci();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===R)throw Error(p(349));0!==(Rh&30)||ni(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;vi(ki.bind(null,d,\nf,a),[a]);d.flags|=2048;li(9,mi.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=ci(),b=R.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Uh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Vh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Zh={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:fi,useRef:si,useState:function(){return fi(ei)},\nuseDebugValue:Ai,useDeferredValue:function(a){var b=di();return Di(b,O.memoizedState,a)},useTransition:function(){var a=fi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1},$h={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:gi,useRef:si,useState:function(){return gi(ei)},useDebugValue:Ai,useDeferredValue:function(a){var b=di();return null===\nO?b.memoizedState=a:Di(b,O.memoizedState,a)},useTransition:function(){var a=gi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1};function Ki(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}function Li(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}\nfunction Mi(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Ni=\"function\"===typeof WeakMap?WeakMap:Map;function Oi(a,b,c){c=ch(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Pi||(Pi=!0,Qi=d);Mi(a,b)};return c}\nfunction Ri(a,b,c){c=ch(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Mi(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Mi(a,b);\"function\"!==typeof d&&(null===Si?Si=new Set([this]):Si.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Ti(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Ni;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ui.bind(null,a,b,c),b.then(a,a))}function Vi(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Wi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=ch(-1,1),b.tag=2,dh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Xi=ua.ReactCurrentOwner,Ug=!1;function Yi(a,b,c,d){b.child=null===a?Ch(b,null,c,d):Bh(b,a.child,c,d)}\nfunction Zi(a,b,c,d,e){c=c.render;var f=b.ref;Tg(b,e);d=Xh(a,b,c,d,f,e);c=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&c&&vg(b);b.flags|=1;Yi(a,b,d,e);return b.child}\nfunction aj(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!bj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,cj(a,b,f,d,e);a=yh(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return $i(a,b,e)}b.flags|=1;a=wh(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction cj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(Ug=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(Ug=!0);else return b.lanes=a.lanes,$i(a,b,e)}return dj(a,b,c,d,e)}\nfunction ej(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(fj,gj),gj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(fj,gj),gj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(fj,gj);gj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(fj,gj),gj|=d;Yi(a,b,e,c);return b.child}function hj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function dj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);Tg(b,e);c=Xh(a,b,c,d,f,e);d=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&d&&vg(b);b.flags|=1;Yi(a,b,c,e);return b.child}\nfunction ij(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;Tg(b,e);if(null===b.stateNode)jj(a,b),ph(b,c,d),rh(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=Vg(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&qh(b,g,d,l);$g=!1;var r=b.memoizedState;g.state=r;gh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||$g?(\"function\"===typeof m&&(kh(b,c,m,d),k=b.memoizedState),(h=$g||oh(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;bh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Lg(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=Vg(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&qh(b,g,d,k);$g=!1;r=b.memoizedState;g.state=r;gh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||$g?(\"function\"===typeof y&&(kh(b,c,y,d),n=b.memoizedState),(l=$g||oh(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return kj(a,b,c,d,f,e)}\nfunction kj(a,b,c,d,e,f){hj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),$i(a,b,f);d=b.stateNode;Xi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Bh(b,a.child,null,f),b.child=Bh(b,null,h,f)):Yi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function lj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);Ih(a,b.containerInfo)}\nfunction mj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Yi(a,b,c,d);return b.child}var nj={dehydrated:null,treeContext:null,retryLane:0};function oj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction pj(a,b,c){var d=b.pendingProps,e=M.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(M,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=qj(g,d,0,null),a=Ah(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=oj(c),b.memoizedState=nj,a):rj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return sj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=wh(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=wh(h,f):(f=Ah(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?oj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=nj;return d}f=a.child;a=f.sibling;d=wh(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction rj(a,b){b=qj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function tj(a,b,c,d){null!==d&&Jg(d);Bh(b,a.child,null,c);a=rj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction sj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Li(Error(p(422))),tj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=qj({mode:\"visible\",children:d.children},e,0,null);f=Ah(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Bh(b,a.child,null,g);b.child.memoizedState=oj(g);b.memoizedState=nj;return f}if(0===(b.mode&1))return tj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Li(f,d,void 0);return tj(a,b,g,d)}h=0!==(g&a.childLanes);if(Ug||h){d=R;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,Zg(a,e),mh(d,a,e,-1))}uj();d=Li(Error(p(421)));return tj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=vj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=rj(b,d.children);b.flags|=4096;return b}function wj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);Sg(a.return,b,c)}\nfunction xj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction yj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Yi(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&wj(a,c,b);else if(19===a.tag)wj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(M,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Mh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);xj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Mh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}xj(b,!0,c,null,f);break;case \"together\":xj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction jj(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function $i(a,b,c){null!==a&&(b.dependencies=a.dependencies);hh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=wh(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=wh(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction zj(a,b,c){switch(b.tag){case 3:lj(b);Ig();break;case 5:Kh(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:Ih(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Mg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(M,M.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return pj(a,b,c);G(M,M.current&1);a=$i(a,b,c);return null!==a?a.sibling:null}G(M,M.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return yj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(M,M.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,ej(a,b,c)}return $i(a,b,c)}var Aj,Bj,Cj,Dj;\nAj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Bj=function(){};\nCj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;Hh(Eh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Dj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Ej(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Fj(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;Jh();E(Wf);E(H);Oh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Gj(zg),zg=null));Bj(a,b);S(b);return null;case 5:Lh(b);var e=Hh(Gh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Cj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;Aj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Dj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=Hh(Gh.current);Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(M);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Gj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(M.current&1)?0===T&&(T=3):uj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return Jh(),\nBj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return Rg(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(M);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Ej(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Mh(a);if(null!==g){b.flags|=128;Ej(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(M,M.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Hj&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304)}else{if(!d)if(a=Mh(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Ej(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Hj&&1073741824!==c&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=M.current,G(M,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Ij(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(gj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Jj(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return Jh(),E(Wf),E(H),Oh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Lh(b),null;case 13:E(M);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(M),null;case 4:return Jh(),null;case 10:return Rg(b.type._context),null;case 22:case 23:return Ij(),\nnull;case 24:return null;default:return null}}var Kj=!1,U=!1,Lj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Mj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Nj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Oj=!1;\nfunction Pj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Lg(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Oj;Oj=!1;return n}\nfunction Qj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Nj(b,c,f)}e=e.next}while(e!==d)}}function Rj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Sj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Tj(a){var b=a.alternate;null!==b&&(a.alternate=null,Tj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Uj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Vj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Uj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}\nfunction Xj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Xj(a,b,c),a=a.sibling;null!==a;)Xj(a,b,c),a=a.sibling}var X=null,Yj=!1;function Zj(a,b,c){for(c=c.child;null!==c;)ak(a,b,c),c=c.sibling}\nfunction ak(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Mj(c,b);case 6:var d=X,e=Yj;X=null;Zj(a,b,c);X=d;Yj=e;null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Yj;X=c.stateNode.containerInfo;Yj=!0;\nZj(a,b,c);X=d;Yj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Nj(c,b,g):0!==(f&4)&&Nj(c,b,g));e=e.next}while(e!==d)}Zj(a,b,c);break;case 1:if(!U&&(Mj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Zj(a,b,c);break;case 21:Zj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Zj(a,b,c),U=d):Zj(a,b,c);break;default:Zj(a,b,c)}}function bk(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Lj);b.forEach(function(b){var d=ck.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction dk(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Yj=!1;break a;case 3:X=h.stateNode.containerInfo;Yj=!0;break a;case 4:X=h.stateNode.containerInfo;Yj=!0;break a}h=h.return}if(null===X)throw Error(p(160));ak(f,g,e);X=null;Yj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)ek(b,a),b=b.sibling}\nfunction ek(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:dk(b,a);fk(a);if(d&4){try{Qj(3,a,a.return),Rj(3,a)}catch(t){W(a,a.return,t)}try{Qj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);break;case 5:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:dk(b,a);fk(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:dk(b,a);fk(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:dk(b,a);fk(a);break;case 13:dk(b,a);fk(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(gk=B()));d&4&&bk(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,dk(b,a),U=l):dk(b,a);fk(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Qj(4,r,r.return);break;case 1:Mj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Mj(r,r.return);break;case 22:if(null!==r.memoizedState){hk(q);continue}}null!==y?(y.return=r,V=y):hk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:dk(b,a);fk(a);d&4&&bk(a);break;case 21:break;default:dk(b,\na),fk(a)}}function fk(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Uj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Vj(a);Xj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Vj(a);Wj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function ik(a,b,c){V=a;jk(a,b,c)}\nfunction jk(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Kj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Kj;var l=U;Kj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?kk(e):null!==k?(k.return=g,V=k):kk(e);for(;null!==f;)V=f,jk(f,b,c),f=f.sibling;V=e;Kj=h;U=l}lk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):lk(a,b,c)}}\nfunction lk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Rj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Lg(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&ih(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}ih(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Sj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function hk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction kk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Rj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Sj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Sj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar mk=Math.ceil,nk=ua.ReactCurrentDispatcher,ok=ua.ReactCurrentOwner,pk=ua.ReactCurrentBatchConfig,K=0,R=null,Y=null,Z=0,gj=0,fj=Uf(0),T=0,qk=null,hh=0,rk=0,sk=0,tk=null,uk=null,gk=0,Hj=Infinity,vk=null,Pi=!1,Qi=null,Si=null,wk=!1,xk=null,yk=0,zk=0,Ak=null,Bk=-1,Ck=0;function L(){return 0!==(K&6)?B():-1!==Bk?Bk:Bk=B()}\nfunction lh(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Ck&&(Ck=yc()),Ck;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function mh(a,b,c,d){if(50<zk)throw zk=0,Ak=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==R)a===R&&(0===(K&2)&&(rk|=c),4===T&&Dk(a,Z)),Ek(a,d),1===c&&0===K&&0===(b.mode&1)&&(Hj=B()+500,fg&&jg())}\nfunction Ek(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===R?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Fk.bind(null,a)):hg(Fk.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Gk(c,Hk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Hk(a,b){Bk=-1;Ck=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Ik()&&a.callbackNode!==c)return null;var d=uc(a,a===R?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Jk(a,d);else{b=d;var e=K;K|=2;var f=Kk();if(R!==a||Z!==b)vk=null,Hj=B()+500,Lk(a,b);do try{Mk();break}catch(h){Nk(a,h)}while(1);Qg();nk.current=f;K=e;null!==Y?b=0:(R=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Ok(a,e)));if(1===b)throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;if(6===b)Dk(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Pk(e)&&(b=Jk(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Ok(a,f))),1===b))throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Qk(a,uk,vk);break;case 3:Dk(a,d);if((d&130023424)===d&&(b=gk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){L();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),b);break}Qk(a,uk,vk);break;case 4:Dk(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*mk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),d);break}Qk(a,uk,vk);break;case 5:Qk(a,uk,vk);break;default:throw Error(p(329));}}}Ek(a,B());return a.callbackNode===c?Hk.bind(null,a):null}\nfunction Ok(a,b){var c=tk;a.current.memoizedState.isDehydrated&&(Lk(a,b).flags|=256);a=Jk(a,b);2!==a&&(b=uk,uk=c,null!==b&&Gj(b));return a}function Gj(a){null===uk?uk=a:uk.push.apply(uk,a)}\nfunction Pk(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Dk(a,b){b&=~sk;b&=~rk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Fk(a){if(0!==(K&6))throw Error(p(327));Ik();var b=uc(a,0);if(0===(b&1))return Ek(a,B()),null;var c=Jk(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Ok(a,d))}if(1===c)throw c=qk,Lk(a,0),Dk(a,b),Ek(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Qk(a,uk,vk);Ek(a,B());return null}\nfunction Rk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Hj=B()+500,fg&&jg())}}function Sk(a){null!==xk&&0===xk.tag&&0===(K&6)&&Ik();var b=K;K|=1;var c=pk.transition,d=C;try{if(pk.transition=null,C=1,a)return a()}finally{C=d,pk.transition=c,K=b,0===(K&6)&&jg()}}function Ij(){gj=fj.current;E(fj)}\nfunction Lk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:Jh();E(Wf);E(H);Oh();break;case 5:Lh(d);break;case 4:Jh();break;case 13:E(M);break;case 19:E(M);break;case 10:Rg(d.type._context);break;case 22:case 23:Ij()}c=c.return}R=a;Y=a=wh(a.current,null);Z=gj=b;T=0;qk=null;sk=rk=hh=0;uk=tk=null;if(null!==Wg){for(b=\n0;b<Wg.length;b++)if(c=Wg[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}Wg=null}return a}\nfunction Nk(a,b){do{var c=Y;try{Qg();Ph.current=ai;if(Sh){for(var d=N.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Sh=!1}Rh=0;P=O=N=null;Th=!1;Uh=0;ok.current=null;if(null===c||null===c.return){T=1;qk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Vi(g);if(null!==y){y.flags&=-257;Wi(y,g,h,f,b);y.mode&1&&Ti(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Ti(f,l,b);uj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Vi(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Wi(J,g,h,f,b);Jg(Ki(k,h));break a}}f=k=Ki(k,h);4!==T&&(T=2);null===tk?tk=[f]:tk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Oi(f,k,b);fh(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Si||!Si.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Ri(f,h,b);fh(f,F);break a}}f=f.return}while(null!==f)}Tk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Kk(){var a=nk.current;nk.current=ai;return null===a?ai:a}\nfunction uj(){if(0===T||3===T||2===T)T=4;null===R||0===(hh&268435455)&&0===(rk&268435455)||Dk(R,Z)}function Jk(a,b){var c=K;K|=2;var d=Kk();if(R!==a||Z!==b)vk=null,Lk(a,b);do try{Uk();break}catch(e){Nk(a,e)}while(1);Qg();K=c;nk.current=d;if(null!==Y)throw Error(p(261));R=null;Z=0;return T}function Uk(){for(;null!==Y;)Vk(Y)}function Mk(){for(;null!==Y&&!cc();)Vk(Y)}function Vk(a){var b=Wk(a.alternate,a,gj);a.memoizedProps=a.pendingProps;null===b?Tk(a):Y=b;ok.current=null}\nfunction Tk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Fj(c,b,gj),null!==c){Y=c;return}}else{c=Jj(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Qk(a,b,c){var d=C,e=pk.transition;try{pk.transition=null,C=1,Xk(a,b,c,d)}finally{pk.transition=e,C=d}return null}\nfunction Xk(a,b,c,d){do Ik();while(null!==xk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===R&&(Y=R=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||wk||(wk=!0,Gk(hc,function(){Ik();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=pk.transition;pk.transition=null;\nvar g=C;C=1;var h=K;K|=4;ok.current=null;Pj(a,c);ek(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;ik(c,a,e);dc();K=h;C=g;pk.transition=f}else a.current=c;wk&&(wk=!1,xk=a,yk=e);f=a.pendingLanes;0===f&&(Si=null);mc(c.stateNode,d);Ek(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Pi)throw Pi=!1,a=Qi,Qi=null,a;0!==(yk&1)&&0!==a.tag&&Ik();f=a.pendingLanes;0!==(f&1)?a===Ak?zk++:(zk=0,Ak=a):zk=0;jg();return null}\nfunction Ik(){if(null!==xk){var a=Dc(yk),b=pk.transition,c=C;try{pk.transition=null;C=16>a?16:a;if(null===xk)var d=!1;else{a=xk;xk=null;yk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Qj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Tj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Qj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Rj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,pk.transition=b}}return!1}function Yk(a,b,c){b=Ki(c,b);b=Oi(a,b,1);a=dh(a,b,1);b=L();null!==a&&(Ac(a,1,b),Ek(a,b))}\nfunction W(a,b,c){if(3===a.tag)Yk(a,a,c);else for(;null!==b;){if(3===b.tag){Yk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Si||!Si.has(d))){a=Ki(c,a);a=Ri(b,a,1);b=dh(b,a,1);a=L();null!==b&&(Ac(b,1,a),Ek(b,a));break}}b=b.return}}\nfunction Ui(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=L();a.pingedLanes|=a.suspendedLanes&c;R===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-gk?Lk(a,0):sk|=c);Ek(a,b)}function Zk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=L();a=Zg(a,b);null!==a&&(Ac(a,b,c),Ek(a,c))}function vj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Zk(a,c)}\nfunction ck(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Zk(a,c)}var Wk;\nWk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)Ug=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return Ug=!1,zj(a,b,c);Ug=0!==(a.flags&131072)?!0:!1}else Ug=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;jj(a,b);a=b.pendingProps;var e=Yf(b,H.current);Tg(b,c);e=Xh(null,b,d,a,e,c);var f=bi();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,ah(b),e.updater=nh,b.stateNode=e,e._reactInternals=b,rh(b,d,a,c),b=kj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Yi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{jj(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=$k(d);a=Lg(d,a);switch(e){case 0:b=dj(null,b,d,a,c);break a;case 1:b=ij(null,b,d,a,c);break a;case 11:b=Zi(null,b,d,a,c);break a;case 14:b=aj(null,b,d,Lg(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),dj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),ij(a,b,d,e,c);case 3:a:{lj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;bh(a,b);gh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ki(Error(p(423)),b);b=mj(a,b,d,c,e);break a}else if(d!==e){e=Ki(Error(p(424)),b);b=mj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Ch(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=$i(a,b,c);break a}Yi(a,b,d,c)}b=b.child}return b;case 5:return Kh(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\nhj(a,b),Yi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return pj(a,b,c);case 4:return Ih(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Bh(b,null,d,c):Yi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),Zi(a,b,d,e,c);case 7:return Yi(a,b,b.pendingProps,c),b.child;case 8:return Yi(a,b,b.pendingProps.children,c),b.child;case 12:return Yi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Mg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=$i(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=ch(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);Sg(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);Sg(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Yi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,Tg(b,c),e=Vg(e),d=d(e),b.flags|=1,Yi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Lg(d,b.pendingProps),e=Lg(d.type,e),aj(a,b,d,e,c);case 15:return cj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),jj(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,Tg(b,c),ph(b,d,e),rh(b,d,e,c),kj(null,b,d,!0,a,c);case 19:return yj(a,b,c);case 22:return ej(a,b,c)}throw Error(p(156,b.tag));};function Gk(a,b){return ac(a,b)}\nfunction al(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new al(a,b,c,d)}function bj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction $k(a){if(\"function\"===typeof a)return bj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction wh(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction yh(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)bj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Ah(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return qj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Ah(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function qj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function xh(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction zh(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction bl(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function cl(a,b,c,d,e,f,g,h,k){a=new bl(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};ah(f);return a}function dl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction el(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction fl(a,b,c,d,e,f,g,h,k){a=cl(c,d,!0,a,e,f,g,h,k);a.context=el(null);c=a.current;d=L();e=lh(c);f=ch(d,e);f.callback=void 0!==b&&null!==b?b:null;dh(c,f,e);a.current.lanes=e;Ac(a,e,d);Ek(a,d);return a}function gl(a,b,c,d){var e=b.current,f=L(),g=lh(e);c=el(c);null===b.context?b.context=c:b.pendingContext=c;b=ch(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=dh(e,b,g);null!==a&&(mh(a,e,g,f),eh(a,e,g));return g}\nfunction hl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function il(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function jl(a,b){il(a,b);(a=a.alternate)&&il(a,b)}function kl(){return null}var ll=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ml(a){this._internalRoot=a}\nnl.prototype.render=ml.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));gl(a,b,null,null)};nl.prototype.unmount=ml.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Sk(function(){gl(null,a,null,null)});b[uf]=null}};function nl(a){this._internalRoot=a}\nnl.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function pl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function ql(){}\nfunction rl(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=hl(g);f.call(a)}}var g=fl(b,d,a,0,null,!1,!1,\"\",ql);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Sk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=hl(k);h.call(a)}}var k=cl(a,0,!1,null,null,!1,!1,\"\",ql);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Sk(function(){gl(b,k,c,d)});return k}\nfunction sl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=hl(g);h.call(a)}}gl(b,g,a,e)}else g=rl(c,b,a,e,d);return hl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Ek(b,B()),0===(K&6)&&(Hj=B()+500,jg()))}break;case 13:Sk(function(){var b=Zg(a,1);if(null!==b){var c=L();mh(b,a,1,c)}}),jl(a,1)}};\nFc=function(a){if(13===a.tag){var b=Zg(a,134217728);if(null!==b){var c=L();mh(b,a,134217728,c)}jl(a,134217728)}};Gc=function(a){if(13===a.tag){var b=lh(a),c=Zg(a,b);if(null!==c){var d=L();mh(c,a,b,d)}jl(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Rk;Hb=Sk;\nvar tl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Rk]},ul={findFiberByHostInstance:Wc,bundleType:0,version:\"18.2.0\",rendererPackageName:\"react-dom\"};\nvar vl={bundleType:ul.bundleType,version:ul.version,rendererPackageName:ul.rendererPackageName,rendererConfig:ul.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:ul.findFiberByHostInstance||\nkl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.2.0-next-9e3b772b8-20220608\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var wl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!wl.isDisabled&&wl.supportsFiber)try{kc=wl.inject(vl),lc=wl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ol(b))throw Error(p(200));return dl(a,b,null,c)};exports.createRoot=function(a,b){if(!ol(a))throw Error(p(299));var c=!1,d=\"\",e=ll;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=cl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ml(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Sk(a)};exports.hydrate=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!ol(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=ll;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=fl(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new nl(b)};exports.render=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!pl(a))throw Error(p(40));return a._reactRootContainer?(Sk(function(){sl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Rk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!pl(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return sl(a,b,c,!1,d)};exports.version=\"18.2.0-next-9e3b772b8-20220608\";\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;\nexports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error(\"act(...) is not supported in production builds of React.\");};\nexports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};\nexports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};\nexports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.2.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"301\":\"c3956204\",\"731\":\"ec44bc41\",\"787\":\"fdea3311\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"my-ethereum-wallet:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmy_ethereum_wallet\"] = self[\"webpackChunkmy_ethereum_wallet\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = (\n  (product) => {\n    return hasBrowserEnv && ['ReactNative', 'NativeScript', 'NS'].indexOf(product) < 0\n  })(typeof navigator !== 'undefined' && navigator.product);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      if (!hasJSONContentType) {\n        return data;\n      }\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover its components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport cookies from './../helpers/cookies.js';\nimport buildURL from './../helpers/buildURL.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport isURLSameOrigin from './../helpers/isURLSameOrigin.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport speedometer from '../helpers/speedometer.js';\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    let {responseType, withXSRFToken} = config;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    let contentType;\n\n    if (utils.isFormData(requestData)) {\n      if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n        requestHeaders.setContentType(false); // Let the browser set it\n      } else if ((contentType = requestHeaders.getContentType()) !== false) {\n        // fix semicolon duplication issue for ReactNative FormData implementation\n        const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n        requestHeaders.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if(platform.hasStandardBrowserEnv) {\n      withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(config));\n\n      if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(fullPath))) {\n        // Add xsrf header\n        const xsrfValue = config.xsrfHeaderName && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n        if (xsrfValue) {\n          requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n        }\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","export const VERSION = \"1.6.5\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","export default function _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}","import checkPrivateRedeclaration from \"./checkPrivateRedeclaration.js\";\nexport default function _classPrivateMethodInitSpec(obj, privateSet) {\n  checkPrivateRedeclaration(obj, privateSet);\n  privateSet.add(obj);\n}","import checkPrivateRedeclaration from \"./checkPrivateRedeclaration.js\";\nexport default function _classPrivateFieldInitSpec(obj, privateMap, value) {\n  checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}","export default function _classPrivateMethodGet(receiver, privateSet, fn) {\n  if (!privateSet.has(receiver)) {\n    throw new TypeError(\"attempted to get private field on non-instance\");\n  }\n  return fn;\n}","export default function _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}","import classApplyDescriptorSet from \"./classApplyDescriptorSet.js\";\nimport classExtractFieldDescriptor from \"./classExtractFieldDescriptor.js\";\nexport default function _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}","export default function _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    descriptor.value = value;\n  }\n}","import classApplyDescriptorGet from \"./classApplyDescriptorGet.js\";\nimport classExtractFieldDescriptor from \"./classExtractFieldDescriptor.js\";\nexport default function _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return classApplyDescriptorGet(receiver, descriptor);\n}","export default function _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : String(i);\n}","import _typeof from \"./typeof.js\";\nexport default function toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","/* Do NOT modify this file; see /src.ts/_admin/update-version.ts */\n\n/**\n *  The current version of Ethers.\n */\nexport const version: string = \"6.10.0\";\n","/**\n *  Property helper functions.\n *\n *  @_subsection api/utils:Properties  [about-properties]\n */\n\nfunction checkType(value: any, type: string, name: string): void {\n    const types = type.split(\"|\").map(t => t.trim());\n    for (let i = 0; i < types.length; i++) {\n        switch (type) {\n            case \"any\":\n                return;\n            case \"bigint\":\n            case \"boolean\":\n            case \"number\":\n            case \"string\":\n                if (typeof(value) === type) { return; }\n        }\n    }\n\n    const error: any = new Error(`invalid value for type ${ type }`);\n    error.code = \"INVALID_ARGUMENT\";\n    error.argument = `value.${ name }`;\n    error.value = value;\n\n    throw error;\n}\n\n/**\n *  Resolves to a new object that is a copy of %%value%%, but with all\n *  values resolved.\n */\nexport async function resolveProperties<T>(value: { [ P in keyof T ]: T[P] | Promise<T[P]>}): Promise<T> {\n    const keys = Object.keys(value);\n    const results = await Promise.all(keys.map((k) => Promise.resolve(value[<keyof T>k])));\n    return results.reduce((accum: any, v, index) => {\n        accum[keys[index]] = v;\n        return accum;\n    }, <{ [ P in keyof T]: T[P] }>{ });\n}\n\n/**\n *  Assigns the %%values%% to %%target%% as read-only values.\n *\n *  It %%types%% is specified, the values are checked.\n */\nexport function defineProperties<T>(\n target: T,\n values: { [ K in keyof T ]?: T[K] },\n types?: { [ K in keyof T ]?: string }): void {\n\n    for (let key in values) {\n        let value = values[key];\n\n        const type = (types ? types[key]: null);\n        if (type) { checkType(value, type, key); }\n\n        Object.defineProperty(target, key, { enumerable: true, value, writable: false });\n    }\n}\n","/**\n *  All errors in ethers include properties to ensure they are both\n *  human-readable (i.e. ``.message``) and machine-readable (i.e. ``.code``).\n *\n *  The [[isError]] function can be used to check the error ``code`` and\n *  provide a type guard for the properties present on that error interface.\n *\n *  @_section: api/utils/errors:Errors  [about-errors]\n */\n\nimport { version } from \"../_version.js\";\n\nimport { defineProperties } from \"./properties.js\";\n\nimport type {\n    TransactionRequest, TransactionReceipt, TransactionResponse\n} from \"../providers/index.js\";\n\nimport type { FetchRequest, FetchResponse } from \"./fetch.js\";\n\n/**\n *  An error may contain additional properties, but those must not\n *  conflict with any implicit properties.\n */\nexport type ErrorInfo<T> = Omit<T, \"code\" | \"name\" | \"message\" | \"shortMessage\"> & { shortMessage?: string };\n\n\nfunction stringify(value: any): any {\n    if (value == null) { return \"null\"; }\n\n    if (Array.isArray(value)) {\n        return \"[ \" + (value.map(stringify)).join(\", \") + \" ]\";\n    }\n\n    if (value instanceof Uint8Array) {\n        const HEX = \"0123456789abcdef\";\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            result += HEX[value[i] >> 4];\n            result += HEX[value[i] & 0xf];\n        }\n        return result;\n    }\n\n    if (typeof(value) === \"object\" && typeof(value.toJSON) === \"function\") {\n        return stringify(value.toJSON());\n    }\n\n    switch (typeof(value)) {\n        case \"boolean\": case \"symbol\":\n            return value.toString();\n        case \"bigint\":\n            return BigInt(value).toString();\n        case \"number\":\n            return (value).toString();\n        case \"string\":\n            return JSON.stringify(value);\n        case \"object\": {\n            const keys = Object.keys(value);\n            keys.sort();\n            return \"{ \" + keys.map((k) => `${ stringify(k) }: ${ stringify(value[k]) }`).join(\", \") + \" }\";\n        }\n    }\n\n    return `[ COULD NOT SERIALIZE ]`;\n}\n\n/**\n *  All errors emitted by ethers have an **ErrorCode** to help\n *  identify and coalesce errors to simplify programmatic analysis.\n *\n *  Each **ErrorCode** is the %%code%% proerty of a coresponding\n *  [[EthersError]].\n *\n *  **Generic Errors**\n *\n *  **``\"UNKNOWN_ERROR\"``** - see [[UnknownError]]\n *\n *  **``\"NOT_IMPLEMENTED\"``** - see [[NotImplementedError]]\n *\n *  **``\"UNSUPPORTED_OPERATION\"``** - see [[UnsupportedOperationError]]\n *\n *  **``\"NETWORK_ERROR\"``** - see [[NetworkError]]\n *\n *  **``\"SERVER_ERROR\"``** - see [[ServerError]]\n *\n *  **``\"TIMEOUT\"``** - see [[TimeoutError]]\n *\n *  **``\"BAD_DATA\"``** - see [[BadDataError]]\n *\n *  **``\"CANCELLED\"``** - see [[CancelledError]]\n *\n *  **Operational Errors**\n *\n *  **``\"BUFFER_OVERRUN\"``** - see [[BufferOverrunError]]\n *\n *  **``\"NUMERIC_FAULT\"``** - see [[NumericFaultError]]\n *\n *  **Argument Errors**\n *\n *  **``\"INVALID_ARGUMENT\"``** - see [[InvalidArgumentError]]\n *\n *  **``\"MISSING_ARGUMENT\"``** - see [[MissingArgumentError]]\n *\n *  **``\"UNEXPECTED_ARGUMENT\"``** - see [[UnexpectedArgumentError]]\n *\n *  **``\"VALUE_MISMATCH\"``** - //unused//\n *\n *  **Blockchain Errors**\n *\n *  **``\"CALL_EXCEPTION\"``** - see [[CallExceptionError]]\n *\n *  **``\"INSUFFICIENT_FUNDS\"``** - see [[InsufficientFundsError]]\n *\n *  **``\"NONCE_EXPIRED\"``** - see [[NonceExpiredError]]\n *\n *  **``\"REPLACEMENT_UNDERPRICED\"``** - see [[ReplacementUnderpricedError]]\n *\n *  **``\"TRANSACTION_REPLACED\"``** - see [[TransactionReplacedError]]\n *\n *  **``\"UNCONFIGURED_NAME\"``** - see [[UnconfiguredNameError]]\n *\n *  **``\"OFFCHAIN_FAULT\"``** - see [[OffchainFaultError]]\n *\n *  **User Interaction Errors**\n *\n *  **``\"ACTION_REJECTED\"``** - see [[ActionRejectedError]]\n */\nexport type ErrorCode =\n\n    // Generic Errors\n    \"UNKNOWN_ERROR\" | \"NOT_IMPLEMENTED\" | \"UNSUPPORTED_OPERATION\" |\n    \"NETWORK_ERROR\" | \"SERVER_ERROR\" | \"TIMEOUT\" | \"BAD_DATA\" |\n    \"CANCELLED\" |\n\n    // Operational Errors\n    \"BUFFER_OVERRUN\" |  \"NUMERIC_FAULT\" |\n\n    // Argument Errors\n    \"INVALID_ARGUMENT\" | \"MISSING_ARGUMENT\" | \"UNEXPECTED_ARGUMENT\" |\n    \"VALUE_MISMATCH\" |\n\n    // Blockchain Errors\n    \"CALL_EXCEPTION\" | \"INSUFFICIENT_FUNDS\" | \"NONCE_EXPIRED\" |\n    \"REPLACEMENT_UNDERPRICED\" | \"TRANSACTION_REPLACED\" |\n    \"UNCONFIGURED_NAME\" | \"OFFCHAIN_FAULT\" |\n\n    // User Interaction\n    \"ACTION_REJECTED\"\n;\n\n/**\n *  All errors in Ethers include properties to assist in\n *  machine-readable errors.\n */\nexport interface EthersError<T extends ErrorCode = ErrorCode> extends Error {\n    /**\n     *  The string error code.\n     */\n    code: ErrorCode;\n\n    /**\n     *  A short message describing the error, with minimal additional\n     *  details.\n     */\n    shortMessage: string;\n\n    /**\n     *  Additional info regarding the error that may be useful.\n     *\n     *  This is generally helpful mostly for human-based debugging.\n     */\n    info?: Record<string, any>;\n\n    /**\n     *  Any related error.\n     */\n    error?: Error;\n}\n\n// Generic Errors\n\n/**\n *  This Error is a catch-all for when there is no way for Ethers to\n *  know what the underlying problem is.\n */\nexport interface UnknownError extends EthersError<\"UNKNOWN_ERROR\"> {\n    [ key: string ]: any;\n}\n\n/**\n *  This Error is mostly used as a stub for functionality that is\n *  intended for the future, but is currently not implemented.\n */\nexport interface NotImplementedError extends EthersError<\"NOT_IMPLEMENTED\"> {\n    /**\n     *  The attempted operation.\n     */\n    operation: string;\n}\n\n/**\n *  This Error indicates that the attempted operation is not supported.\n *\n *  This could range from a specific JSON-RPC end-point not supporting\n *  a feature to a specific configuration of an object prohibiting the\n *  operation.\n *\n *  For example, a [[Wallet]] with no connected [[Provider]] is unable\n *  to send a transaction.\n */\nexport interface UnsupportedOperationError extends EthersError<\"UNSUPPORTED_OPERATION\"> {\n    /**\n     *  The attempted operation.\n     */\n    operation: string;\n}\n\n/**\n *  This Error indicates a problem connecting to a network.\n */\nexport interface NetworkError extends EthersError<\"NETWORK_ERROR\"> {\n    /**\n     *  The network event.\n     */\n    event: string;\n}\n\n/**\n *  This Error indicates there was a problem fetching a resource from\n *  a server.\n */\nexport interface ServerError extends EthersError<\"SERVER_ERROR\"> {\n    /**\n     *  The requested resource.\n     */\n    request: FetchRequest | string;\n\n    /**\n     *  The response received from the server, if available.\n     */\n    response?: FetchResponse;\n}\n\n/**\n *  This Error indicates that the timeout duration has expired and\n *  that the operation has been implicitly cancelled.\n *\n *  The side-effect of the operation may still occur, as this\n *  generally means a request has been sent and there has simply\n *  been no response to indicate whether it was processed or not.\n */\nexport interface TimeoutError extends EthersError<\"TIMEOUT\"> {\n    /**\n     *  The attempted operation.\n     */\n    operation: string;\n\n    /**\n     *  The reason.\n     */\n    reason: string;\n\n    /**\n     *  The resource request, if available.\n     */\n    request?: FetchRequest;\n}\n\n/**\n *  This Error indicates that a provided set of data cannot\n *  be correctly interpreted.\n */\nexport interface BadDataError extends EthersError<\"BAD_DATA\"> {\n    /**\n     *  The data.\n     */\n    value: any;\n}\n\n/**\n *  This Error indicates that the operation was cancelled by a\n *  programmatic call, for example to ``cancel()``.\n */\nexport interface CancelledError extends EthersError<\"CANCELLED\"> {\n}\n\n\n// Operational Errors\n\n/**\n *  This Error indicates an attempt was made to read outside the bounds\n *  of protected data.\n *\n *  Most operations in Ethers are protected by bounds checks, to mitigate\n *  exploits when parsing data.\n */\nexport interface BufferOverrunError extends EthersError<\"BUFFER_OVERRUN\"> {\n    /**\n     *  The buffer that was overrun.\n     */\n    buffer: Uint8Array;\n\n    /**\n     *  The length of the buffer.\n     */\n    length: number;\n\n    /**\n     *  The offset that was requested.\n     */\n    offset: number;\n}\n\n/**\n *  This Error indicates an operation which would result in incorrect\n *  arithmetic output has occurred.\n *\n *  For example, trying to divide by zero or using a ``uint8`` to store\n *  a negative value.\n */\nexport interface NumericFaultError extends EthersError<\"NUMERIC_FAULT\"> {\n    /**\n     *  The attempted operation.\n     */\n    operation: string;\n\n    /**\n     *  The fault reported.\n     */\n    fault: string;\n\n    /**\n     *  The value the operation was attempted against.\n     */\n    value: any;\n}\n\n\n// Argument Errors\n\n/**\n *  This Error indicates an incorrect type or value was passed to\n *  a function or method.\n */\nexport interface InvalidArgumentError extends EthersError<\"INVALID_ARGUMENT\"> {\n    /**\n     *  The name of the argument.\n     */\n    argument: string;\n\n    /**\n     *  The value that was provided.\n     */\n    value: any;\n\n    info?: Record<string, any>\n}\n\n/**\n *  This Error indicates there were too few arguments were provided.\n */\nexport interface MissingArgumentError extends EthersError<\"MISSING_ARGUMENT\"> {\n    /**\n     *  The number of arguments received.\n     */\n    count: number;\n\n    /**\n     *  The number of arguments expected.\n     */\n    expectedCount: number;\n}\n\n/**\n *  This Error indicates too many arguments were provided.\n */\nexport interface UnexpectedArgumentError extends EthersError<\"UNEXPECTED_ARGUMENT\"> {\n    /**\n     *  The number of arguments received.\n     */\n    count: number;\n\n    /**\n     *  The number of arguments expected.\n     */\n    expectedCount: number;\n}\n\n\n// Blockchain Errors\n\n/**\n *  The action that resulted in the call exception.\n */\nexport type CallExceptionAction = \"call\" | \"estimateGas\" | \"getTransactionResult\" | \"sendTransaction\" | \"unknown\";\n\n/**\n *  The related transaction that caused the error.\n */\nexport type CallExceptionTransaction = {\n    to: null | string;\n    from?: string;\n    data: string;\n};\n\n/**\n *  This **Error** indicates a transaction reverted.\n */\nexport interface CallExceptionError extends EthersError<\"CALL_EXCEPTION\"> {\n\n    /**\n     *  The action being performed when the revert was encountered.\n     */\n    action: CallExceptionAction;\n\n    /**\n     *  The revert data returned.\n     */\n    data: null | string;\n\n    /**\n     *  A human-readable representation of data, if possible.\n     */\n    reason: null | string;\n\n    /**\n     *  The transaction that triggered the exception.\n     */\n    transaction: CallExceptionTransaction,\n\n    /**\n     *  The contract invocation details, if available.\n     */\n    invocation: null | {\n        method: string;\n        signature: string;\n        args: Array<any>;\n    }\n\n    /**\n     *  The built-in or custom revert error, if available\n     */\n    revert: null | {\n        signature: string;\n        name: string;\n        args: Array<any>;\n    }\n\n    /**\n     *  If the error occurred in a transaction that was mined\n     *  (with a status of ``0``), this is the receipt.\n     */\n    receipt?: TransactionReceipt;   // @TODO: in v7, make this `null | TransactionReceipt`\n}\n\n\n/**\n *  The sending account has insufficient funds to cover the\n *  entire transaction cost.\n */\nexport interface InsufficientFundsError extends EthersError<\"INSUFFICIENT_FUNDS\"> {\n    /**\n     *  The transaction.\n     */\n    transaction: TransactionRequest;\n}\n\n/**\n *  The sending account has already used this nonce in a\n *  transaction that has been included.\n */\nexport interface NonceExpiredError extends EthersError<\"NONCE_EXPIRED\"> {\n    /**\n     *  The transaction.\n     */\n    transaction: TransactionRequest;\n}\n\n/**\n *  A CCIP-read exception, which cannot be recovered from or\n *  be further processed.\n */\nexport interface OffchainFaultError extends EthersError<\"OFFCHAIN_FAULT\"> {\n    /**\n     *  The transaction.\n     */\n    transaction?: TransactionRequest;\n\n    /**\n     *  The reason the CCIP-read failed.\n     */\n    reason: string;\n}\n\n/**\n *  An attempt was made to replace a transaction, but with an\n *  insufficient additional fee to afford evicting the old\n *  transaction from the memory pool.\n */\nexport interface ReplacementUnderpricedError extends EthersError<\"REPLACEMENT_UNDERPRICED\"> {\n    /**\n     *  The transaction.\n     */\n    transaction: TransactionRequest;\n}\n\n/**\n *  A pending transaction was replaced by another.\n */\nexport interface TransactionReplacedError extends EthersError<\"TRANSACTION_REPLACED\"> {\n    /**\n     *  If the transaction was cancelled, such that the original\n     *  effects of the transaction cannot be assured.\n     */\n    cancelled: boolean;\n\n    /**\n     *  The reason the transaction was replaced.\n     */\n    reason: \"repriced\" | \"cancelled\" | \"replaced\";\n\n    /**\n     *  The hash of the replaced transaction.\n     */\n    hash: string;\n\n    /**\n     *  The transaction that replaced the transaction.\n     */\n    replacement: TransactionResponse;\n\n    /**\n     *  The receipt of the transaction that replace the transaction.\n     */\n    receipt: TransactionReceipt;\n}\n\n/**\n *  This Error indicates an ENS name was used, but the name has not\n *  been configured.\n *\n *  This could indicate an ENS name is unowned or that the current\n *  address being pointed to is the [[ZeroAddress]].\n */\nexport interface UnconfiguredNameError extends EthersError<\"UNCONFIGURED_NAME\"> {\n    /**\n     *  The ENS name that was requested\n     */\n    value: string;\n}\n\n/**\n *  This Error indicates a request was rejected by the user.\n *\n *  In most clients (such as MetaMask), when an operation requires user\n *  authorization (such as ``signer.sendTransaction``), the client\n *  presents a dialog box to the user. If the user denies the request\n *  this error is thrown.\n */\nexport interface ActionRejectedError extends EthersError<\"ACTION_REJECTED\"> {\n    /**\n     *  The requested action.\n     */\n    action: \"requestAccess\" | \"sendTransaction\" | \"signMessage\" | \"signTransaction\" | \"signTypedData\" | \"unknown\",\n\n    /**\n     *  The reason the action was rejected.\n     *\n     *  If there is already a pending request, some clients may indicate\n     *  there is already a ``\"pending\"`` action. This prevents an app\n     *  from spamming the user.\n     */\n    reason: \"expired\" | \"rejected\" | \"pending\"\n}\n\n// Coding; converts an ErrorCode its Typed Error\n\n/**\n *  A conditional type that transforms the [[ErrorCode]] T into\n *  its EthersError type.\n *\n *  @flatworm-skip-docs\n */\nexport type CodedEthersError<T> =\n    T extends \"UNKNOWN_ERROR\" ? UnknownError:\n    T extends \"NOT_IMPLEMENTED\" ? NotImplementedError:\n    T extends \"UNSUPPORTED_OPERATION\" ? UnsupportedOperationError:\n    T extends \"NETWORK_ERROR\" ? NetworkError:\n    T extends \"SERVER_ERROR\" ? ServerError:\n    T extends \"TIMEOUT\" ? TimeoutError:\n    T extends \"BAD_DATA\" ? BadDataError:\n    T extends \"CANCELLED\" ? CancelledError:\n\n    T extends \"BUFFER_OVERRUN\" ? BufferOverrunError:\n    T extends \"NUMERIC_FAULT\" ? NumericFaultError:\n\n    T extends \"INVALID_ARGUMENT\" ? InvalidArgumentError:\n    T extends \"MISSING_ARGUMENT\" ? MissingArgumentError:\n    T extends \"UNEXPECTED_ARGUMENT\" ? UnexpectedArgumentError:\n\n    T extends \"CALL_EXCEPTION\" ? CallExceptionError:\n    T extends \"INSUFFICIENT_FUNDS\" ? InsufficientFundsError:\n    T extends \"NONCE_EXPIRED\" ? NonceExpiredError:\n    T extends \"OFFCHAIN_FAULT\" ? OffchainFaultError:\n    T extends \"REPLACEMENT_UNDERPRICED\" ? ReplacementUnderpricedError:\n    T extends \"TRANSACTION_REPLACED\" ? TransactionReplacedError:\n    T extends \"UNCONFIGURED_NAME\" ? UnconfiguredNameError:\n\n    T extends \"ACTION_REJECTED\" ? ActionRejectedError:\n\n    never;\n\n\n\n/**\n *  Returns true if the %%error%% matches an error thrown by ethers\n *  that matches the error %%code%%.\n *\n *  In TypeScript environments, this can be used to check that %%error%%\n *  matches an EthersError type, which means the expected properties will\n *  be set.\n *\n *  @See [ErrorCodes](api:ErrorCode)\n *  @example\n *    try {\n *      // code....\n *    } catch (e) {\n *      if (isError(e, \"CALL_EXCEPTION\")) {\n *          // The Type Guard has validated this object\n *          console.log(e.data);\n *      }\n *    }\n */\nexport function isError<K extends ErrorCode, T extends CodedEthersError<K>>(error: any, code: K): error is T {\n    return (error && (<EthersError>error).code === code);\n}\n\n/**\n *  Returns true if %%error%% is a [[CallExceptionError].\n */\nexport function isCallException(error: any): error is CallExceptionError {\n    return isError(error, \"CALL_EXCEPTION\");\n}\n\n/**\n *  Returns a new Error configured to the format ethers emits errors, with\n *  the %%message%%, [[api:ErrorCode]] %%code%% and additional properties\n *  for the corresponding EthersError.\n *\n *  Each error in ethers includes the version of ethers, a\n *  machine-readable [[ErrorCode]], and depending on %%code%%, additional\n *  required properties. The error message will also include the %%message%%,\n *  ethers version, %%code%% and all additional properties, serialized.\n */\nexport function makeError<K extends ErrorCode, T extends CodedEthersError<K>>(message: string, code: K, info?: ErrorInfo<T>): T {\n    let shortMessage = message;\n\n    {\n        const details: Array<string> = [];\n        if (info) {\n            if (\"message\" in info || \"code\" in info || \"name\" in info) {\n                throw new Error(`value will overwrite populated values: ${ stringify(info) }`);\n            }\n            for (const key in info) {\n                if (key === \"shortMessage\") { continue; }\n                const value = <any>(info[<keyof ErrorInfo<T>>key]);\n//                try {\n                    details.push(key + \"=\" + stringify(value));\n//                } catch (error: any) {\n//                console.log(\"MMM\", error.message);\n//                    details.push(key + \"=[could not serialize object]\");\n//                }\n            }\n        }\n        details.push(`code=${ code }`);\n        details.push(`version=${ version }`);\n\n        if (details.length) {\n            message += \" (\" + details.join(\", \") + \")\";\n        }\n    }\n\n    let error;\n    switch (code) {\n        case \"INVALID_ARGUMENT\":\n            error = new TypeError(message);\n            break;\n        case \"NUMERIC_FAULT\":\n        case \"BUFFER_OVERRUN\":\n            error = new RangeError(message);\n            break;\n        default:\n            error = new Error(message);\n    }\n\n    defineProperties<EthersError>(<EthersError>error, { code });\n\n    if (info) { Object.assign(error, info); }\n\n    if ((<any>error).shortMessage == null) {\n        defineProperties<EthersError>(<EthersError>error, { shortMessage });\n    }\n\n    return <T>error;\n}\n\n/**\n *  Throws an EthersError with %%message%%, %%code%% and additional error\n *  %%info%% when %%check%% is falsish..\n *\n *  @see [[api:makeError]]\n */\nexport function assert<K extends ErrorCode, T extends CodedEthersError<K>>(check: unknown, message: string, code: K, info?: ErrorInfo<T>): asserts check {\n    if (!check) { throw makeError(message, code, info); }\n}\n\n\n/**\n *  A simple helper to simply ensuring provided arguments match expected\n *  constraints, throwing if not.\n *\n *  In TypeScript environments, the %%check%% has been asserted true, so\n *  any further code does not need additional compile-time checks.\n */\nexport function assertArgument(check: unknown, message: string, name: string, value: unknown): asserts check {\n    assert(check, message, \"INVALID_ARGUMENT\", { argument: name, value: value });\n}\n\nexport function assertArgumentCount(count: number, expectedCount: number, message?: string): void {\n    if (message == null) { message = \"\"; }\n    if (message) { message = \": \" + message; }\n\n    assert(count >= expectedCount, \"missing arguemnt\" + message, \"MISSING_ARGUMENT\", {\n        count: count,\n        expectedCount: expectedCount\n    });\n\n    assert(count <= expectedCount, \"too many arguemnts\" + message, \"UNEXPECTED_ARGUMENT\", {\n        count: count,\n        expectedCount: expectedCount\n    });\n}\n\nconst _normalizeForms = [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].reduce((accum, form) => {\n    try {\n        // General test for normalize\n        /* c8 ignore start */\n        if (\"test\".normalize(form) !== \"test\") { throw new Error(\"bad\"); };\n        /* c8 ignore stop */\n\n        if (form === \"NFD\") {\n            const check = String.fromCharCode(0xe9).normalize(\"NFD\");\n            const expected = String.fromCharCode(0x65, 0x0301)\n            /* c8 ignore start */\n            if (check !== expected) { throw new Error(\"broken\") }\n            /* c8 ignore stop */\n        }\n\n        accum.push(form);\n    } catch(error) { }\n\n    return accum;\n}, <Array<string>>[]);\n\n/**\n *  Throws if the normalization %%form%% is not supported.\n */\nexport function assertNormalize(form: string): void {\n    assert(_normalizeForms.indexOf(form) >= 0, \"platform missing String.prototype.normalize\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"String.prototype.normalize\", info: { form }\n    });\n}\n\n/**\n *  Many classes use file-scoped values to guard the constructor,\n *  making it effectively private. This facilitates that pattern\n *  by ensuring the %%givenGaurd%% matches the file-scoped %%guard%%,\n *  throwing if not, indicating the %%className%% if provided.\n */\nexport function assertPrivate(givenGuard: any, guard: any, className?: string): void {\n    if (className == null) { className = \"\"; }\n    if (givenGuard !== guard) {\n        let method = className, operation = \"new\";\n        if (className) {\n            method += \".\";\n            operation += \" \" + className;\n        }\n        assert(false, `private constructor; use ${ method }from* methods`, \"UNSUPPORTED_OPERATION\", {\n            operation\n        });\n    }\n}\n","/**\n *  Some data helpers.\n *\n *\n *  @_subsection api/utils:Data Helpers  [about-data]\n */\nimport { assert, assertArgument } from \"./errors.js\";\n\n/**\n *  A [[HexString]] whose length is even, which ensures it is a valid\n *  representation of binary data.\n */\nexport type DataHexString = string;\n\n/**\n *  A string which is prefixed with ``0x`` and followed by any number\n *  of case-agnostic hexadecimal characters.\n *\n *  It must match the regular expression ``/0x[0-9A-Fa-f]*\\/``.\n */\nexport type HexString = string;\n\n/**\n *  An object that can be used to represent binary data.\n */\nexport type BytesLike = DataHexString | Uint8Array;\n\nfunction _getBytes(value: BytesLike, name?: string, copy?: boolean): Uint8Array {\n    if (value instanceof Uint8Array) {\n        if (copy) { return new Uint8Array(value); }\n        return value;\n    }\n\n    if (typeof(value) === \"string\" && value.match(/^0x([0-9a-f][0-9a-f])*$/i)) {\n        const result = new Uint8Array((value.length - 2) / 2);\n        let offset = 2;\n        for (let i = 0; i < result.length; i++) {\n            result[i] = parseInt(value.substring(offset, offset + 2), 16);\n            offset += 2;\n        }\n        return result;\n    }\n\n    assertArgument(false, \"invalid BytesLike value\", name || \"value\", value);\n}\n\n/**\n *  Get a typed Uint8Array for %%value%%. If already a Uint8Array\n *  the original %%value%% is returned; if a copy is required use\n *  [[getBytesCopy]].\n *\n *  @see: getBytesCopy\n */\nexport function getBytes(value: BytesLike, name?: string): Uint8Array {\n    return _getBytes(value, name, false);\n}\n\n/**\n *  Get a typed Uint8Array for %%value%%, creating a copy if necessary\n *  to prevent any modifications of the returned value from being\n *  reflected elsewhere.\n *\n *  @see: getBytes\n */\nexport function getBytesCopy(value: BytesLike, name?: string): Uint8Array {\n    return _getBytes(value, name, true);\n}\n\n\n/**\n *  Returns true if %%value%% is a valid [[HexString]].\n *\n *  If %%length%% is ``true`` or a //number//, it also checks that\n *  %%value%% is a valid [[DataHexString]] of %%length%% (if a //number//)\n *  bytes of data (e.g. ``0x1234`` is 2 bytes).\n */\nexport function isHexString(value: any, length?: number | boolean): value is `0x${ string }` {\n    if (typeof(value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false\n    }\n\n    if (typeof(length) === \"number\" && value.length !== 2 + 2 * length) { return false; }\n    if (length === true && (value.length % 2) !== 0) { return false; }\n\n    return true;\n}\n\n/**\n *  Returns true if %%value%% is a valid representation of arbitrary\n *  data (i.e. a valid [[DataHexString]] or a Uint8Array).\n */\nexport function isBytesLike(value: any): value is BytesLike {\n    return (isHexString(value, true) || (value instanceof Uint8Array));\n}\n\nconst HexCharacters: string = \"0123456789abcdef\";\n\n/**\n *  Returns a [[DataHexString]] representation of %%data%%.\n */\nexport function hexlify(data: BytesLike): string {\n    const bytes = getBytes(data);\n\n    let result = \"0x\";\n    for (let i = 0; i < bytes.length; i++) {\n        const v = bytes[i];\n        result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n    }\n    return result;\n}\n\n/**\n *  Returns a [[DataHexString]] by concatenating all values\n *  within %%data%%.\n */\nexport function concat(datas: ReadonlyArray<BytesLike>): string {\n    return \"0x\" + datas.map((d) => hexlify(d).substring(2)).join(\"\");\n}\n\n/**\n *  Returns the length of %%data%%, in bytes.\n */\nexport function dataLength(data: BytesLike): number {\n    if (isHexString(data, true)) { return (data.length - 2) / 2; }\n    return getBytes(data).length;\n}\n\n/**\n *  Returns a [[DataHexString]] by slicing %%data%% from the %%start%%\n *  offset to the %%end%% offset.\n *\n *  By default %%start%% is 0 and %%end%% is the length of %%data%%.\n */\nexport function dataSlice(data: BytesLike, start?: number, end?: number): string {\n    const bytes = getBytes(data);\n    if (end != null && end > bytes.length) {\n        assert(false, \"cannot slice beyond data bounds\", \"BUFFER_OVERRUN\", {\n            buffer: bytes, length: bytes.length, offset: end\n        });\n    }\n    return hexlify(bytes.slice((start == null) ? 0: start, (end == null) ? bytes.length: end));\n}\n\n/**\n *  Return the [[DataHexString]] result by stripping all **leading**\n ** zero bytes from %%data%%.\n */\nexport function stripZerosLeft(data: BytesLike): string {\n    let bytes = hexlify(data).substring(2);\n    while (bytes.startsWith(\"00\")) { bytes = bytes.substring(2); }\n    return \"0x\" + bytes;\n}\n\nfunction zeroPad(data: BytesLike, length: number, left: boolean): string {\n    const bytes = getBytes(data);\n    assert(length >= bytes.length, \"padding exceeds data length\", \"BUFFER_OVERRUN\", {\n        buffer: new Uint8Array(bytes),\n        length: length,\n        offset: length + 1\n    });\n\n    const result = new Uint8Array(length);\n    result.fill(0);\n    if (left) {\n        result.set(bytes, length - bytes.length);\n    } else {\n        result.set(bytes, 0);\n    }\n\n    return hexlify(result);\n}\n\n/**\n *  Return the [[DataHexString]] of %%data%% padded on the **left**\n *  to %%length%% bytes.\n *\n *  If %%data%% already exceeds %%length%%, a [[BufferOverrunError]] is\n *  thrown.\n *\n *  This pads data the same as **values** are in Solidity\n *  (e.g. ``uint128``).\n */\nexport function zeroPadValue(data: BytesLike, length: number): string {\n    return zeroPad(data, length, true);\n}\n\n/**\n *  Return the [[DataHexString]] of %%data%% padded on the **right**\n *  to %%length%% bytes.\n *\n *  If %%data%% already exceeds %%length%%, a [[BufferOverrunError]] is\n *  thrown.\n *\n *  This pads data the same as **bytes** are in Solidity\n *  (e.g. ``bytes16``).\n */\nexport function zeroPadBytes(data: BytesLike, length: number): string {\n    return zeroPad(data, length, false);\n}\n","/**\n *  Some mathematic operations.\n *\n *  @_subsection: api/utils:Math Helpers  [about-maths]\n */\nimport { hexlify, isBytesLike } from \"./data.js\";\nimport { assert, assertArgument } from \"./errors.js\";\n\nimport type { BytesLike } from \"./data.js\";\n\n/**\n *  Any type that can be used where a numeric value is needed.\n */\nexport type Numeric = number | bigint;\n\n/**\n *  Any type that can be used where a big number is needed.\n */\nexport type BigNumberish = string | Numeric;\n\n\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\n\n//const BN_Max256 = (BN_1 << BigInt(256)) - BN_1;\n\n\n// IEEE 754 support 53-bits of mantissa\nconst maxValue = 0x1fffffffffffff;\n\n/**\n *  Convert %%value%% from a twos-compliment representation of %%width%%\n *  bits to its value.\n *\n *  If the highest bit is ``1``, the result will be negative.\n */\nexport function fromTwos(_value: BigNumberish, _width: Numeric): bigint {\n    const value = getUint(_value, \"value\");\n    const width = BigInt(getNumber(_width, \"width\"));\n\n    assert((value >> width) === BN_0, \"overflow\", \"NUMERIC_FAULT\", {\n        operation: \"fromTwos\", fault: \"overflow\", value: _value\n    });\n\n    // Top bit set; treat as a negative value\n    if (value >> (width - BN_1)) {\n        const mask = (BN_1 << width) - BN_1;\n        return -(((~value) & mask) + BN_1);\n    }\n\n    return value;\n}\n\n/**\n *  Convert %%value%% to a twos-compliment representation of\n *  %%width%% bits.\n *\n *  The result will always be positive.\n */\nexport function toTwos(_value: BigNumberish, _width: Numeric): bigint {\n    let value = getBigInt(_value, \"value\");\n    const width = BigInt(getNumber(_width, \"width\"));\n\n    const limit = (BN_1 << (width - BN_1));\n\n    if (value < BN_0) {\n        value = -value;\n        assert(value <= limit, \"too low\", \"NUMERIC_FAULT\", {\n            operation: \"toTwos\", fault: \"overflow\", value: _value\n        });\n        const mask = (BN_1 << width) - BN_1;\n        return ((~value) & mask) + BN_1;\n    } else {\n        assert(value < limit, \"too high\", \"NUMERIC_FAULT\", {\n            operation: \"toTwos\", fault: \"overflow\", value: _value\n        });\n    }\n\n    return value;\n}\n\n/**\n *  Mask %%value%% with a bitmask of %%bits%% ones.\n */\nexport function mask(_value: BigNumberish, _bits: Numeric): bigint {\n    const value = getUint(_value, \"value\");\n    const bits = BigInt(getNumber(_bits, \"bits\"));\n    return value & ((BN_1 << bits) - BN_1);\n}\n\n/**\n *  Gets a BigInt from %%value%%. If it is an invalid value for\n *  a BigInt, then an ArgumentError will be thrown for %%name%%.\n */\nexport function getBigInt(value: BigNumberish, name?: string): bigint {\n    switch (typeof(value)) {\n        case \"bigint\": return value;\n        case \"number\":\n            assertArgument(Number.isInteger(value), \"underflow\", name || \"value\", value);\n            assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return BigInt(value);\n        case \"string\":\n            try {\n                if (value === \"\") { throw new Error(\"empty string\"); }\n                if (value[0] === \"-\" && value[1] !== \"-\") {\n                    return -BigInt(value.substring(1));\n                }\n                return BigInt(value);\n            } catch(e: any) {\n                assertArgument(false, `invalid BigNumberish string: ${ e.message }`, name || \"value\", value);\n            }\n    }\n    assertArgument(false, \"invalid BigNumberish value\", name || \"value\", value);\n}\n\n/**\n *  Returns %%value%% as a bigint, validating it is valid as a bigint\n *  value and that it is positive.\n */\nexport function getUint(value: BigNumberish, name?: string): bigint {\n    const result = getBigInt(value, name);\n    assert(result >= BN_0, \"unsigned value cannot be negative\", \"NUMERIC_FAULT\", {\n        fault: \"overflow\", operation: \"getUint\", value\n    });\n    return result;\n}\n\nconst Nibbles = \"0123456789abcdef\";\n\n/*\n * Converts %%value%% to a BigInt. If %%value%% is a Uint8Array, it\n * is treated as Big Endian data.\n */\nexport function toBigInt(value: BigNumberish | Uint8Array): bigint {\n    if (value instanceof Uint8Array) {\n        let result = \"0x0\";\n        for (const v of value) {\n            result += Nibbles[v >> 4];\n            result += Nibbles[v & 0x0f];\n        }\n        return BigInt(result);\n    }\n\n    return getBigInt(value);\n}\n\n/**\n *  Gets a //number// from %%value%%. If it is an invalid value for\n *  a //number//, then an ArgumentError will be thrown for %%name%%.\n */\nexport function getNumber(value: BigNumberish, name?: string): number {\n    switch (typeof(value)) {\n        case \"bigint\":\n            assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return Number(value);\n        case \"number\":\n            assertArgument(Number.isInteger(value), \"underflow\", name || \"value\", value);\n            assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return value;\n        case \"string\":\n            try {\n                if (value === \"\") { throw new Error(\"empty string\"); }\n                return getNumber(BigInt(value), name);\n            } catch(e: any) {\n                assertArgument(false, `invalid numeric string: ${ e.message }`, name || \"value\", value);\n            }\n    }\n    assertArgument(false, \"invalid numeric value\", name || \"value\", value);\n}\n\n\n/**\n *  Converts %%value%% to a number. If %%value%% is a Uint8Array, it\n *  is treated as Big Endian data. Throws if the value is not safe.\n */\nexport function toNumber(value: BigNumberish | Uint8Array): number {\n    return getNumber(toBigInt(value));\n}\n\n/**\n *  Converts %%value%% to a Big Endian hexstring, optionally padded to\n *  %%width%% bytes.\n */\nexport function toBeHex(_value: BigNumberish, _width?: Numeric): string {\n    const value = getUint(_value, \"value\");\n\n    let result = value.toString(16);\n\n    if (_width == null) {\n        // Ensure the value is of even length\n        if (result.length % 2) { result = \"0\" + result; }\n    } else {\n        const width = getNumber(_width, \"width\");\n        assert(width * 2 >= result.length, `value exceeds width (${ width } bytes)`, \"NUMERIC_FAULT\", {\n            operation: \"toBeHex\",\n            fault: \"overflow\",\n            value: _value\n        });\n\n        // Pad the value to the required width\n        while (result.length < (width * 2)) { result = \"0\" + result; }\n\n    }\n\n    return \"0x\" + result;\n}\n\n/**\n *  Converts %%value%% to a Big Endian Uint8Array.\n */\nexport function toBeArray(_value: BigNumberish): Uint8Array {\n    const value = getUint(_value, \"value\");\n\n    if (value === BN_0) { return new Uint8Array([ ]); }\n\n    let hex = value.toString(16);\n    if (hex.length % 2) { hex = \"0\" + hex; }\n\n    const result = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < result.length; i++) {\n        const offset = i * 2;\n        result[i] = parseInt(hex.substring(offset, offset + 2), 16);\n    }\n\n    return result;\n}\n\n/**\n *  Returns a [[HexString]] for %%value%% safe to use as a //Quantity//.\n *\n *  A //Quantity// does not have and leading 0 values unless the value is\n *  the literal value `0x0`. This is most commonly used for JSSON-RPC\n *  numeric values.\n */\nexport function toQuantity(value: BytesLike | BigNumberish): string {\n    let result = hexlify(isBytesLike(value) ? value: toBeArray(value)).substring(2);\n    while (result.startsWith(\"0\")) { result = result.substring(1); }\n    if (result === \"\") { result = \"0\"; }\n    return \"0x\" + result;\n}\n","\nimport {\n    defineProperties, concat, getBytesCopy, getNumber, hexlify,\n    toBeArray, toBigInt, toNumber,\n    assert, assertArgument\n} from \"../../utils/index.js\";\n\nimport type { BigNumberish, BytesLike } from \"../../utils/index.js\";\n\n/**\n * @_ignore:\n */\nexport const WordSize: number = 32;\nconst Padding = new Uint8Array(WordSize);\n\n// Properties used to immediate pass through to the underlying object\n// - `then` is used to detect if an object is a Promise for await\nconst passProperties = [ \"then\" ];\n\nconst _guard = { };\n\nfunction throwError(name: string, error: Error): never {\n    const wrapped = new Error(`deferred error during ABI decoding triggered accessing ${ name }`);\n    (<any>wrapped).error = error;\n    throw wrapped;\n}\n\n/**\n *  A [[Result]] is a sub-class of Array, which allows accessing any\n *  of its values either positionally by its index or, if keys are\n *  provided by its name.\n *\n *  @_docloc: api/abi\n */\nexport class Result extends Array<any> {\n    readonly #names: ReadonlyArray<null | string>;\n\n    [ K: string | number ]: any\n\n    /**\n     *  @private\n     */\n    constructor(...args: Array<any>) {\n        // To properly sub-class Array so the other built-in\n        // functions work, the constructor has to behave fairly\n        // well. So, in the event we are created via fromItems()\n        // we build the read-only Result object we want, but on\n        // any other input, we use the default constructor\n\n        // constructor(guard: any, items: Array<any>, keys?: Array<null | string>);\n        const guard = args[0];\n        let items: Array<any> = args[1];\n        let names: Array<null | string> = (args[2] || [ ]).slice();\n\n        let wrap = true;\n        if (guard !== _guard) {\n            items = args;\n            names = [ ];\n            wrap = false;\n        }\n\n        // Can't just pass in ...items since an array of length 1\n        // is a special case in the super.\n        super(items.length);\n        items.forEach((item, index) => { this[index] = item; });\n\n        // Find all unique keys\n        const nameCounts = names.reduce((accum, name) => {\n            if (typeof(name) === \"string\") {\n                accum.set(name, (accum.get(name) || 0) + 1);\n            }\n            return accum;\n        }, <Map<string, number>>(new Map()));\n\n        // Remove any key thats not unique\n        this.#names = Object.freeze(items.map((item, index) => {\n            const name = names[index];\n            if (name != null && nameCounts.get(name) === 1) {\n                return name;\n            }\n            return null;\n        }));\n\n        if (!wrap) { return; }\n\n        // A wrapped Result is immutable\n        Object.freeze(this);\n\n        // Proxy indices and names so we can trap deferred errors\n        return new Proxy(this, {\n            get: (target, prop, receiver) => {\n                if (typeof(prop) === \"string\") {\n\n                    // Index accessor\n                    if (prop.match(/^[0-9]+$/)) {\n                        const index = getNumber(prop, \"%index\");\n                        if (index < 0 || index >= this.length) {\n                            throw new RangeError(\"out of result range\");\n                        }\n\n                        const item = target[index];\n                        if (item instanceof Error) {\n                            throwError(`index ${ index }`, item);\n                        }\n                        return item;\n                    }\n\n                    // Pass important checks (like `then` for Promise) through\n                    if (passProperties.indexOf(prop) >= 0) {\n                        return Reflect.get(target, prop, receiver);\n                    }\n\n                    const value = target[prop];\n                    if (value instanceof Function) {\n                        // Make sure functions work with private variables\n                        // See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy#no_private_property_forwarding\n                        return function(this: any, ...args: Array<any>) {\n                            return value.apply((this === receiver) ? target: this, args);\n                        };\n\n                    } else if (!(prop in target)) {\n                        // Possible name accessor\n                        return target.getValue.apply((this === receiver) ? target: this, [ prop ]);\n                    }\n                }\n\n                return Reflect.get(target, prop, receiver);\n            }\n        });\n    }\n\n    /**\n     *  Returns the Result as a normal Array.\n     *\n     *  This will throw if there are any outstanding deferred\n     *  errors.\n     */\n    toArray(): Array<any> {\n        const result: Array<any> = [ ];\n        this.forEach((item, index) => {\n            if (item instanceof Error) { throwError(`index ${ index }`, item); }\n            result.push(item);\n        });\n        return result;\n    }\n\n    /**\n     *  Returns the Result as an Object with each name-value pair.\n     *\n     *  This will throw if any value is unnamed, or if there are\n     *  any outstanding deferred errors.\n     */\n    toObject(): Record<string, any> {\n        return this.#names.reduce((accum, name, index) => {\n            assert(name != null, \"value at index ${ index } unnamed\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"toObject()\"\n            });\n\n            // Add values for names that don't conflict\n            if (!(name in accum)) {\n                accum[name] = this.getValue(name);\n            }\n\n            return accum;\n        }, <Record<string, any>>{});\n    }\n\n    /**\n     *  @_ignore\n     */\n    slice(start?: number | undefined, end?: number | undefined): Result {\n        if (start == null) { start = 0; }\n        if (start < 0) {\n            start += this.length;\n            if (start < 0) { start = 0; }\n        }\n\n        if (end == null) { end = this.length; }\n        if (end < 0) {\n            end += this.length;\n            if (end < 0) { end = 0; }\n        }\n        if (end > this.length) { end = this.length; }\n\n        const result: Array<any> = [ ], names: Array<null | string> = [ ];\n        for (let i = start; i < end; i++) {\n            result.push(this[i]);\n            names.push(this.#names[i]);\n        }\n\n        return new Result(_guard, result, names);\n    }\n\n    /**\n     *  @_ignore\n     */\n    filter(callback: (el: any, index: number, array: Result) => boolean, thisArg?: any): Result {\n        const result: Array<any> = [ ], names: Array<null | string> = [ ];\n        for (let i = 0; i < this.length; i++) {\n            const item = this[i];\n            if (item instanceof Error) {\n                throwError(`index ${ i }`, item);\n            }\n\n            if (callback.call(thisArg, item, i, this)) {\n                result.push(item);\n                names.push(this.#names[i]);\n            }\n        }\n\n        return new Result(_guard, result, names);\n    }\n\n    /**\n     *  @_ignore\n     */\n    map<T extends any = any>(callback: (el: any, index: number, array: Result) => T, thisArg?: any): Array<T> {\n        const result: Array<T> = [ ];\n        for (let i = 0; i < this.length; i++) {\n            const item = this[i];\n            if (item instanceof Error) {\n                throwError(`index ${ i }`, item);\n            }\n\n            result.push(callback.call(thisArg, item, i, this));\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Returns the value for %%name%%.\n     *\n     *  Since it is possible to have a key whose name conflicts with\n     *  a method on a [[Result]] or its superclass Array, or any\n     *  JavaScript keyword, this ensures all named values are still\n     *  accessible by name.\n     */\n    getValue(name: string): any {\n        const index = this.#names.indexOf(name);\n        if (index === -1) { return undefined; }\n\n        const value = this[index];\n\n        if (value instanceof Error) {\n            throwError(`property ${ JSON.stringify(name) }`, (<any>value).error);\n        }\n\n        return value;\n    }\n\n    /**\n     *  Creates a new [[Result]] for %%items%% with each entry\n     *  also accessible by its corresponding name in %%keys%%.\n     */\n    static fromItems(items: Array<any>, keys?: Array<null | string>): Result {\n        return new Result(_guard, items, keys);\n    }\n}\n\n/**\n *  Returns all errors found in a [[Result]].\n *\n *  Since certain errors encountered when creating a [[Result]] do\n *  not impact the ability to continue parsing data, they are\n *  deferred until they are actually accessed. Hence a faulty string\n *  in an Event that is never used does not impact the program flow.\n *\n *  However, sometimes it may be useful to access, identify or\n *  validate correctness of a [[Result]].\n *\n *  @_docloc api/abi\n */\nexport function checkResultErrors(result: Result): Array<{ path: Array<string | number>, error: Error }> {\n    // Find the first error (if any)\n    const errors: Array<{ path: Array<string | number>, error: Error }> = [ ];\n\n    const checkErrors = function(path: Array<string | number>, object: any): void {\n        if (!Array.isArray(object)) { return; }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n\n            try {\n                 checkErrors(childPath, object[key]);\n            } catch (error: any) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    }\n    checkErrors([ ], result);\n\n    return errors;\n\n}\n\nfunction getValue(value: BigNumberish): Uint8Array {\n    let bytes = toBeArray(value);\n\n    assert (bytes.length <= WordSize, \"value out-of-bounds\",\n        \"BUFFER_OVERRUN\", { buffer: bytes, length: WordSize, offset: bytes.length });\n\n    if (bytes.length !== WordSize) {\n        bytes = getBytesCopy(concat([ Padding.slice(bytes.length % WordSize), bytes ]));\n    }\n\n    return bytes;\n}\n\n/**\n *  @_ignore\n */\nexport abstract class Coder {\n\n    // The coder name:\n    //   - address, uint256, tuple, array, etc.\n    readonly name!: string;\n\n    // The fully expanded type, including composite types:\n    //   - address, uint256, tuple(address,bytes), uint256[3][4][],  etc.\n    readonly type!: string;\n\n    // The localName bound in the signature, in this example it is \"baz\":\n    //   - tuple(address foo, uint bar) baz\n    readonly localName!: string;\n\n    // Whether this type is dynamic:\n    //  - Dynamic: bytes, string, address[], tuple(boolean[]), etc.\n    //  - Not Dynamic: address, uint256, boolean[3], tuple(address, uint8)\n    readonly dynamic!: boolean;\n\n    constructor(name: string, type: string, localName: string, dynamic: boolean) {\n        defineProperties<Coder>(this, { name, type, localName, dynamic }, {\n            name: \"string\", type: \"string\", localName: \"string\", dynamic: \"boolean\"\n        });\n    }\n\n    _throwError(message: string, value: any): never {\n        assertArgument(false, message, this.localName, value);\n    }\n\n    abstract encode(writer: Writer, value: any): number;\n    abstract decode(reader: Reader): any;\n\n    abstract defaultValue(): any;\n}\n\n/**\n *  @_ignore\n */\nexport class Writer {\n    // An array of WordSize lengthed objects to concatenation\n    #data: Array<Uint8Array>;\n    #dataLength: number;\n\n    constructor() {\n        this.#data = [ ];\n        this.#dataLength = 0;\n    }\n\n    get data(): string {\n        return concat(this.#data);\n    }\n    get length(): number { return this.#dataLength; }\n\n    #writeData(data: Uint8Array): number {\n        this.#data.push(data);\n        this.#dataLength += data.length;\n        return data.length;\n    }\n\n    appendWriter(writer: Writer): number {\n        return this.#writeData(getBytesCopy(writer.data));\n    }\n\n    // Arrayish item; pad on the right to *nearest* WordSize\n    writeBytes(value: BytesLike): number {\n        let bytes = getBytesCopy(value);\n        const paddingOffset = bytes.length % WordSize;\n        if (paddingOffset) {\n            bytes = getBytesCopy(concat([ bytes, Padding.slice(paddingOffset) ]))\n        }\n        return this.#writeData(bytes);\n    }\n\n    // Numeric item; pad on the left *to* WordSize\n    writeValue(value: BigNumberish): number {\n        return this.#writeData(getValue(value));\n    }\n\n    // Inserts a numeric place-holder, returning a callback that can\n    // be used to asjust the value later\n    writeUpdatableValue(): (value: BigNumberish) => void {\n        const offset = this.#data.length;\n        this.#data.push(Padding);\n        this.#dataLength += WordSize;\n        return (value: BigNumberish) => {\n            this.#data[offset] = getValue(value);\n        };\n    }\n}\n\n/**\n *  @_ignore\n */\nexport class Reader {\n    // Allows incomplete unpadded data to be read; otherwise an error\n    // is raised if attempting to overrun the buffer. This is required\n    // to deal with an old Solidity bug, in which event data for\n    // external (not public thoguh) was tightly packed.\n    readonly allowLoose!: boolean;\n\n    readonly #data: Uint8Array;\n    #offset: number;\n\n    #bytesRead: number;\n    #parent: null | Reader;\n    #maxInflation: number;\n\n    constructor(data: BytesLike, allowLoose?: boolean, maxInflation?: number) {\n        defineProperties<Reader>(this, { allowLoose: !!allowLoose });\n\n        this.#data = getBytesCopy(data);\n        this.#bytesRead = 0;\n        this.#parent = null;\n        this.#maxInflation = (maxInflation != null) ? maxInflation: 1024;\n\n        this.#offset = 0;\n    }\n\n    get data(): string { return hexlify(this.#data); }\n    get dataLength(): number { return this.#data.length; }\n    get consumed(): number { return this.#offset; }\n    get bytes(): Uint8Array { return new Uint8Array(this.#data); }\n\n    #incrementBytesRead(count: number): void {\n        if (this.#parent) { return this.#parent.#incrementBytesRead(count); }\n\n        this.#bytesRead += count;\n\n        // Check for excessive inflation (see: #4537)\n        assert(this.#maxInflation < 1 || this.#bytesRead <= this.#maxInflation * this.dataLength, `compressed ABI data exceeds inflation ratio of ${ this.#maxInflation } ( see: https:/\\/github.com/ethers-io/ethers.js/issues/4537 )`,  \"BUFFER_OVERRUN\", {\n            buffer: getBytesCopy(this.#data), offset: this.#offset,\n            length: count, info: {\n                bytesRead: this.#bytesRead,\n                dataLength: this.dataLength\n            }\n        });\n    }\n\n    #peekBytes(offset: number, length: number, loose?: boolean): Uint8Array {\n        let alignedLength = Math.ceil(length / WordSize) * WordSize;\n        if (this.#offset + alignedLength > this.#data.length) {\n            if (this.allowLoose && loose && this.#offset + length <= this.#data.length) {\n                alignedLength = length;\n            } else {\n                assert(false, \"data out-of-bounds\", \"BUFFER_OVERRUN\", {\n                    buffer: getBytesCopy(this.#data),\n                    length: this.#data.length,\n                    offset: this.#offset + alignedLength\n                });\n            }\n        }\n        return this.#data.slice(this.#offset, this.#offset + alignedLength)\n    }\n\n    // Create a sub-reader with the same underlying data, but offset\n    subReader(offset: number): Reader {\n        const reader = new Reader(this.#data.slice(this.#offset + offset), this.allowLoose, this.#maxInflation);\n        reader.#parent = this;\n        return reader;\n    }\n\n    // Read bytes\n    readBytes(length: number, loose?: boolean): Uint8Array {\n        let bytes = this.#peekBytes(0, length, !!loose);\n        this.#incrementBytesRead(length);\n        this.#offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n\n    // Read a numeric values\n    readValue(): bigint {\n        return toBigInt(this.readBytes(WordSize));\n    }\n\n    readIndex(): number {\n        return toNumber(this.readBytes(WordSize));\n    }\n}\n","function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new Error('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number) => l;\nconst rotr32L = (h: number, _l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!u8a(data)) throw new Error(`expected Uint8Array, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport {\n  Hash,\n  u32,\n  Input,\n  toBytes,\n  wrapConstructor,\n  wrapXOFConstructorWithOpts,\n  HashXOF,\n} from './utils.js';\n\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA]: [number[], number[], bigint[]] = [[], [], []];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n    if (R & _2n) t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n  }\n  _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h: number, l: number, s: number) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h: number, l: number, s: number) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s: Uint32Array, rounds: number = 24) {\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta θ\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (ρ) and Pi (π)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (χ)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (ι)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  B.fill(0);\n}\n\nexport class Keccak extends Hash<Keccak> implements HashXOF<Keccak> {\n  protected state: Uint8Array;\n  protected pos = 0;\n  protected posOut = 0;\n  protected finished = false;\n  protected state32: Uint32Array;\n  protected destroyed = false;\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(\n    public blockLen: number,\n    public suffix: number,\n    public outputLen: number,\n    protected enableXOF = false,\n    protected rounds: number = 24\n  ) {\n    super();\n    // Can be passed from user as dkLen\n    number(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    if (0 >= this.blockLen || this.blockLen >= 200)\n      throw new Error('Sha3 supports only keccak-f1600 function');\n    this.state = new Uint8Array(200);\n    this.state32 = u32(this.state);\n  }\n  protected keccak() {\n    keccakP(this.state32, this.rounds);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data: Input) {\n    exists(this);\n    const { blockLen, state } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  protected finish() {\n    if (this.finished) return;\n    this.finished = true;\n    const { state, suffix, pos, blockLen } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  protected writeInto(out: Uint8Array): Uint8Array {\n    exists(this, false);\n    bytes(out);\n    this.finish();\n    const bufferOut = this.state;\n    const { blockLen } = this;\n    for (let pos = 0, len = out.length; pos < len; ) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out: Uint8Array): Uint8Array {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes: number): Uint8Array {\n    number(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out: Uint8Array) {\n    output(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest() {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy() {\n    this.destroyed = true;\n    this.state.fill(0);\n  }\n  _cloneInto(to?: Keccak): Keccak {\n    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n    to ||= new Keccak(blockLen, suffix, outputLen, enableXOF, rounds);\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\n\nconst gen = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\n\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\n\nexport type ShakeOpts = { dkLen?: number };\n\nconst genShake = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapXOFConstructorWithOpts<HashXOF<Keccak>, ShakeOpts>(\n    (opts: ShakeOpts = {}) =>\n      new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true)\n  );\n\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n","/**\n *  Cryptographic hashing functions\n *\n *  @_subsection: api/crypto:Hash Functions [about-crypto-hashing]\n */\n\nimport { keccak_256 } from \"@noble/hashes/sha3\";\n\nimport { getBytes, hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nlet locked = false;\n\nconst _keccak256 = function(data: Uint8Array): Uint8Array {\n    return keccak_256(data);\n}\n\nlet __keccak256: (data: Uint8Array) => BytesLike = _keccak256;\n\n/**\n *  Compute the cryptographic KECCAK256 hash of %%data%%.\n *\n *  The %%data%% **must** be a data representation, to compute the\n *  hash of UTF-8 data use the [[id]] function.\n *\n *  @returns DataHexstring\n *  @example:\n *    keccak256(\"0x\")\n *    //_result:\n *\n *    keccak256(\"0x1337\")\n *    //_result:\n *\n *    keccak256(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n *\n *    // Strings are assumed to be DataHexString, otherwise it will\n *    // throw. To hash UTF-8 data, see the note above.\n *    keccak256(\"Hello World\")\n *    //_error:\n */\nexport function keccak256(_data: BytesLike): string {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__keccak256(data));\n}\nkeccak256._ = _keccak256;\nkeccak256.lock = function(): void { locked = true; }\nkeccak256.register = function(func: (data: Uint8Array) => BytesLike) {\n    if (locked) { throw new TypeError(\"keccak256 is locked\"); }\n    __keccak256 = func;\n}\nObject.freeze(keccak256);\n","import { keccak256 } from \"../crypto/index.js\";\nimport { getBytes, assertArgument } from \"../utils/index.js\";\n\n\nconst BN_0 = BigInt(0);\nconst BN_36 = BigInt(36);\n\nfunction getChecksumAddress(address: string): string {\n//    if (!isHexString(address, 20)) {\n//        logger.throwArgumentError(\"invalid address\", \"address\", address);\n//    }\n\n    address = address.toLowerCase();\n\n    const chars = address.substring(2).split(\"\");\n\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n\n    const hashed = getBytes(keccak256(expanded));\n\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n\n    return \"0x\" + chars.join(\"\");\n}\n\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n\n// Create lookup table\nconst ibanLookup: { [character: string]: string } = { };\nfor (let i = 0; i < 10; i++) { ibanLookup[String(i)] = String(i); }\nfor (let i = 0; i < 26; i++) { ibanLookup[String.fromCharCode(65 + i)] = String(10 + i); }\n\n// How many decimal digits can we process? (for 64-bit float, this is 15)\n// i.e. Math.floor(Math.log10(Number.MAX_SAFE_INTEGER));\nconst safeDigits = 15;\n\nfunction ibanChecksum(address: string): string {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits){\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) { checksum = \"0\" + checksum; }\n\n    return checksum;\n};\n\nconst Base36 = (function() {;\n    const result: Record<string, bigint> = { };\n    for (let i = 0; i < 36; i++) {\n        const key = \"0123456789abcdefghijklmnopqrstuvwxyz\"[i];\n        result[key] = BigInt(i);\n    }\n    return result;\n})();\n\nfunction fromBase36(value: string): bigint {\n    value = value.toLowerCase();\n\n    let result = BN_0;\n    for (let i = 0; i < value.length; i++) {\n        result = result * BN_36 + Base36[value[i]];\n    }\n    return result;\n}\n\n/**\n *  Returns a normalized and checksumed address for %%address%%.\n *  This accepts non-checksum addresses, checksum addresses and\n *  [[getIcapAddress]] formats.\n *\n *  The checksum in Ethereum uses the capitalization (upper-case\n *  vs lower-case) of the characters within an address to encode\n *  its checksum, which offers, on average, a checksum of 15-bits.\n *\n *  If %%address%% contains both upper-case and lower-case, it is\n *  assumed to already be a checksum address and its checksum is\n *  validated, and if the address fails its expected checksum an\n *  error is thrown.\n *\n *  If you wish the checksum of %%address%% to be ignore, it should\n *  be converted to lower-case (i.e. ``.toLowercase()``) before\n *  being passed in. This should be a very rare situation though,\n *  that you wish to bypass the safegaurds in place to protect\n *  against an address that has been incorrectly copied from another\n *  source.\n *\n *  @example:\n *    // Adds the checksum (via upper-casing specific letters)\n *    getAddress(\"0x8ba1f109551bd432803012645ac136ddd64dba72\")\n *    //_result:\n *\n *    // Converts ICAP address and adds checksum\n *    getAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK36\");\n *    //_result:\n *\n *    // Throws an error if an address contains mixed case,\n *    // but the checksum fails\n *    getAddress(\"0x8Ba1f109551bD432803012645Ac136ddd64DBA72\")\n *    //_error:\n */\nexport function getAddress(address: string): string {\n\n    assertArgument(typeof(address) === \"string\", \"invalid address\", \"address\", address);\n\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n\n        // Missing the 0x prefix\n        if (!address.startsWith(\"0x\")) { address = \"0x\" + address; }\n\n        const result = getChecksumAddress(address);\n\n        // It is a checksummed address with a bad checksum\n        assertArgument(!address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) || result === address,\n            \"bad address checksum\", \"address\", address);\n\n        return result;\n    }\n\n    // Maybe ICAP? (we only support direct mode)\n    if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        // It is an ICAP address with a bad checksum\n        assertArgument(address.substring(2, 4) === ibanChecksum(address), \"bad icap checksum\", \"address\", address);\n\n        let result = fromBase36(address.substring(4)).toString(16);\n        while (result.length < 40) { result = \"0\" + result; }\n        return  getChecksumAddress(\"0x\" + result);\n    }\n\n    assertArgument(false, \"invalid address\", \"address\", address);\n}\n\n/**\n *  The [ICAP Address format](link-icap) format is an early checksum\n *  format which attempts to be compatible with the banking\n *  industry [IBAN format](link-wiki-iban) for bank accounts.\n *\n *  It is no longer common or a recommended format.\n *\n *  @example:\n *    getIcapAddress(\"0x8ba1f109551bd432803012645ac136ddd64dba72\");\n *    //_result:\n *\n *    getIcapAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK36\");\n *    //_result:\n *\n *    // Throws an error if the ICAP checksum is wrong\n *    getIcapAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK37\");\n *    //_error:\n */\nexport function getIcapAddress(address: string): string {\n    //let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    let base36 = BigInt(getAddress(address)).toString(36).toUpperCase();\n    while (base36.length < 30) { base36 = \"0\" + base36; }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n","/**\n *  A Typed object allows a value to have its type explicitly\n *  specified.\n *\n *  For example, in Solidity, the value ``45`` could represent a\n *  ``uint8`` or a ``uint256``. The value ``0x1234`` could represent\n *  a ``bytes2`` or ``bytes``.\n *\n *  Since JavaScript has no meaningful way to explicitly inform any\n *  APIs which what the type is, this allows transparent interoperation\n *  with Soldity.\n *\n *  @_subsection: api/abi:Typed Values\n */\n\nimport { assertPrivate, defineProperties } from \"../utils/index.js\";\n\nimport type { Addressable } from \"../address/index.js\";\nimport type { BigNumberish, BytesLike } from \"../utils/index.js\";\n\nimport type { Result } from \"./coders/abstract-coder.js\";\n\nconst _gaurd = { };\n\nfunction n(value: BigNumberish, width: number): Typed {\n    let signed = false;\n    if (width < 0) {\n        signed = true;\n        width *= -1;\n    }\n\n    // @TODO: Check range is valid for value\n    return new Typed(_gaurd, `${ signed ? \"\": \"u\" }int${ width }`, value, { signed, width });\n}\n\nfunction b(value: BytesLike, size?: number): Typed {\n    // @TODO: Check range is valid for value\n    return new Typed(_gaurd, `bytes${ (size) ? size: \"\" }`, value, { size });\n}\n\n// @TODO: Remove this in v7, it was replaced by TypedBigInt\n/**\n *  @_ignore:\n */\nexport interface TypedNumber extends Typed {\n    value: number;\n    defaultValue(): number;\n    minValue(): number;\n    maxValue(): number;\n}\n\n/**\n *  A **Typed** that represents a numeric value.\n */\nexport interface TypedBigInt extends Typed {\n    /**\n     *  The value.\n     */\n    value: bigint;\n\n    /**\n     *  The default value for all numeric types is ``0``.\n     */\n    defaultValue(): bigint;\n\n    /**\n     *  The minimum value for this type, accounting for bit-width and signed-ness.\n     */\n    minValue(): bigint;\n\n    /**\n     *  The minimum value for this type, accounting for bit-width.\n     */\n    maxValue(): bigint;\n}\n\n/**\n *  A **Typed** that represents a binary sequence of data as bytes.\n */\nexport interface TypedData extends Typed {\n    /**\n     *  The value.\n     */\n    value: string;\n\n    /**\n     *  The default value for this type.\n     */\n    defaultValue(): string;\n}\n\n/**\n *  A **Typed** that represents a UTF-8 sequence of bytes.\n */\nexport interface TypedString extends Typed {\n    /**\n     *  The value.\n     */\n    value: string;\n\n    /**\n     *  The default value for the string type is the empty string (i.e. ``\"\"``).\n     */\n    defaultValue(): string;\n}\n\nconst _typedSymbol = Symbol.for(\"_ethers_typed\");\n\n/**\n *  The **Typed** class to wrap values providing explicit type information.\n */\nexport class Typed {\n\n    /**\n     *  The type, as a Solidity-compatible type.\n     */\n    readonly type!: string;\n\n    /**\n     *  The actual value.\n     */\n    readonly value!: any;\n\n    readonly #options: any;\n\n    /**\n     *  @_ignore:\n     */\n    readonly _typedSymbol!: Symbol;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(gaurd: any, type: string, value: any, options?: any) {\n        if (options == null) { options = null; }\n        assertPrivate(_gaurd, gaurd, \"Typed\");\n        defineProperties<Typed>(this, { _typedSymbol, type, value });\n        this.#options = options;\n\n        // Check the value is valid\n        this.format();\n    }\n\n    /**\n     *  Format the type as a Human-Readable type.\n     */\n    format(): string {\n        if (this.type === \"array\") {\n            throw new Error(\"\");\n        } else if (this.type === \"dynamicArray\") {\n            throw new Error(\"\");\n        } else if (this.type === \"tuple\") {\n            return `tuple(${ this.value.map((v: Typed) => v.format()).join(\",\") })`\n        }\n\n        return this.type;\n    }\n\n    /**\n     *  The default value returned by this type.\n     */\n    defaultValue(): string | number | bigint | Result {\n        return 0;\n    }\n\n    /**\n     *  The minimum value for numeric types.\n     */\n    minValue(): string | number | bigint {\n        return 0;\n    }\n\n    /**\n     *  The maximum value for numeric types.\n     */\n    maxValue(): string | number | bigint {\n        return 0;\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard is this is a [[TypedBigInt]].\n     */\n    isBigInt(): this is TypedBigInt {\n        return !!(this.type.match(/^u?int[0-9]+$/));\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard is this is a [[TypedData]].\n     */\n    isData(): this is TypedData {\n        return this.type.startsWith(\"bytes\");\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard is this is a [[TypedString]].\n     */\n    isString(): this is TypedString {\n        return (this.type === \"string\");\n    }\n\n    /**\n     *  Returns the tuple name, if this is a tuple. Throws otherwise.\n     */\n    get tupleName(): null | string {\n        if (this.type !== \"tuple\") { throw TypeError(\"not a tuple\"); }\n        return this.#options;\n    }\n\n    // Returns the length of this type as an array\n    // - `null` indicates the length is unforced, it could be dynamic\n    // - `-1` indicates the length is dynamic\n    // - any other value indicates it is a static array and is its length\n\n    /**\n     *  Returns the length of the array type or ``-1`` if it is dynamic.\n     *\n     *  Throws if the type is not an array.\n     */\n    get arrayLength(): null | number {\n        if (this.type !== \"array\") { throw TypeError(\"not an array\"); }\n        if (this.#options === true) { return -1; }\n        if (this.#options === false) { return (<Array<any>>(this.value)).length; }\n        return null;\n    }\n\n    /**\n     *  Returns a new **Typed** of %%type%% with the %%value%%.\n     */\n    static from(type: string, value: any): Typed {\n        return new Typed(_gaurd, type, value);\n    }\n\n    /**\n     *  Return a new ``uint8`` type for %%v%%.\n     */\n    static uint8(v: BigNumberish): Typed { return n(v, 8); }\n\n    /**\n     *  Return a new ``uint16`` type for %%v%%.\n     */\n    static uint16(v: BigNumberish): Typed { return n(v, 16); }\n\n    /**\n     *  Return a new ``uint24`` type for %%v%%.\n     */\n    static uint24(v: BigNumberish): Typed { return n(v, 24); }\n\n    /**\n     *  Return a new ``uint32`` type for %%v%%.\n     */\n    static uint32(v: BigNumberish): Typed { return n(v, 32); }\n\n    /**\n     *  Return a new ``uint40`` type for %%v%%.\n     */\n    static uint40(v: BigNumberish): Typed { return n(v, 40); }\n\n    /**\n     *  Return a new ``uint48`` type for %%v%%.\n     */\n    static uint48(v: BigNumberish): Typed { return n(v, 48); }\n\n    /**\n     *  Return a new ``uint56`` type for %%v%%.\n     */\n    static uint56(v: BigNumberish): Typed { return n(v, 56); }\n\n    /**\n     *  Return a new ``uint64`` type for %%v%%.\n     */\n    static uint64(v: BigNumberish): Typed { return n(v, 64); }\n\n    /**\n     *  Return a new ``uint72`` type for %%v%%.\n     */\n    static uint72(v: BigNumberish): Typed { return n(v, 72); }\n\n    /**\n     *  Return a new ``uint80`` type for %%v%%.\n     */\n    static uint80(v: BigNumberish): Typed { return n(v, 80); }\n\n    /**\n     *  Return a new ``uint88`` type for %%v%%.\n     */\n    static uint88(v: BigNumberish): Typed { return n(v, 88); }\n\n    /**\n     *  Return a new ``uint96`` type for %%v%%.\n     */\n    static uint96(v: BigNumberish): Typed { return n(v, 96); }\n\n    /**\n     *  Return a new ``uint104`` type for %%v%%.\n     */\n    static uint104(v: BigNumberish): Typed { return n(v, 104); }\n\n    /**\n     *  Return a new ``uint112`` type for %%v%%.\n     */\n    static uint112(v: BigNumberish): Typed { return n(v, 112); }\n\n    /**\n     *  Return a new ``uint120`` type for %%v%%.\n     */\n    static uint120(v: BigNumberish): Typed { return n(v, 120); }\n\n    /**\n     *  Return a new ``uint128`` type for %%v%%.\n     */\n    static uint128(v: BigNumberish): Typed { return n(v, 128); }\n\n    /**\n     *  Return a new ``uint136`` type for %%v%%.\n     */\n    static uint136(v: BigNumberish): Typed { return n(v, 136); }\n\n    /**\n     *  Return a new ``uint144`` type for %%v%%.\n     */\n    static uint144(v: BigNumberish): Typed { return n(v, 144); }\n\n    /**\n     *  Return a new ``uint152`` type for %%v%%.\n     */\n    static uint152(v: BigNumberish): Typed { return n(v, 152); }\n\n    /**\n     *  Return a new ``uint160`` type for %%v%%.\n     */\n    static uint160(v: BigNumberish): Typed { return n(v, 160); }\n\n    /**\n     *  Return a new ``uint168`` type for %%v%%.\n     */\n    static uint168(v: BigNumberish): Typed { return n(v, 168); }\n\n    /**\n     *  Return a new ``uint176`` type for %%v%%.\n     */\n    static uint176(v: BigNumberish): Typed { return n(v, 176); }\n\n    /**\n     *  Return a new ``uint184`` type for %%v%%.\n     */\n    static uint184(v: BigNumberish): Typed { return n(v, 184); }\n\n    /**\n     *  Return a new ``uint192`` type for %%v%%.\n     */\n    static uint192(v: BigNumberish): Typed { return n(v, 192); }\n\n    /**\n     *  Return a new ``uint200`` type for %%v%%.\n     */\n    static uint200(v: BigNumberish): Typed { return n(v, 200); }\n\n    /**\n     *  Return a new ``uint208`` type for %%v%%.\n     */\n    static uint208(v: BigNumberish): Typed { return n(v, 208); }\n\n    /**\n     *  Return a new ``uint216`` type for %%v%%.\n     */\n    static uint216(v: BigNumberish): Typed { return n(v, 216); }\n\n    /**\n     *  Return a new ``uint224`` type for %%v%%.\n     */\n    static uint224(v: BigNumberish): Typed { return n(v, 224); }\n\n    /**\n     *  Return a new ``uint232`` type for %%v%%.\n     */\n    static uint232(v: BigNumberish): Typed { return n(v, 232); }\n\n    /**\n     *  Return a new ``uint240`` type for %%v%%.\n     */\n    static uint240(v: BigNumberish): Typed { return n(v, 240); }\n\n    /**\n     *  Return a new ``uint248`` type for %%v%%.\n     */\n    static uint248(v: BigNumberish): Typed { return n(v, 248); }\n\n    /**\n     *  Return a new ``uint256`` type for %%v%%.\n     */\n    static uint256(v: BigNumberish): Typed { return n(v, 256); }\n\n    /**\n     *  Return a new ``uint256`` type for %%v%%.\n     */\n    static uint(v: BigNumberish): Typed { return n(v, 256); }\n\n    /**\n     *  Return a new ``int8`` type for %%v%%.\n     */\n    static int8(v: BigNumberish): Typed { return n(v, -8); }\n\n    /**\n     *  Return a new ``int16`` type for %%v%%.\n     */\n    static int16(v: BigNumberish): Typed { return n(v, -16); }\n\n    /**\n     *  Return a new ``int24`` type for %%v%%.\n     */\n    static int24(v: BigNumberish): Typed { return n(v, -24); }\n\n    /**\n     *  Return a new ``int32`` type for %%v%%.\n     */\n    static int32(v: BigNumberish): Typed { return n(v, -32); }\n\n    /**\n     *  Return a new ``int40`` type for %%v%%.\n     */\n    static int40(v: BigNumberish): Typed { return n(v, -40); }\n\n    /**\n     *  Return a new ``int48`` type for %%v%%.\n     */\n    static int48(v: BigNumberish): Typed { return n(v, -48); }\n\n    /**\n     *  Return a new ``int56`` type for %%v%%.\n     */\n    static int56(v: BigNumberish): Typed { return n(v, -56); }\n\n    /**\n     *  Return a new ``int64`` type for %%v%%.\n     */\n    static int64(v: BigNumberish): Typed { return n(v, -64); }\n\n    /**\n     *  Return a new ``int72`` type for %%v%%.\n     */\n    static int72(v: BigNumberish): Typed { return n(v, -72); }\n\n    /**\n     *  Return a new ``int80`` type for %%v%%.\n     */\n    static int80(v: BigNumberish): Typed { return n(v, -80); }\n\n    /**\n     *  Return a new ``int88`` type for %%v%%.\n     */\n    static int88(v: BigNumberish): Typed { return n(v, -88); }\n\n    /**\n     *  Return a new ``int96`` type for %%v%%.\n     */\n    static int96(v: BigNumberish): Typed { return n(v, -96); }\n\n    /**\n     *  Return a new ``int104`` type for %%v%%.\n     */\n    static int104(v: BigNumberish): Typed { return n(v, -104); }\n\n    /**\n     *  Return a new ``int112`` type for %%v%%.\n     */\n    static int112(v: BigNumberish): Typed { return n(v, -112); }\n\n    /**\n     *  Return a new ``int120`` type for %%v%%.\n     */\n    static int120(v: BigNumberish): Typed { return n(v, -120); }\n\n    /**\n     *  Return a new ``int128`` type for %%v%%.\n     */\n    static int128(v: BigNumberish): Typed { return n(v, -128); }\n\n    /**\n     *  Return a new ``int136`` type for %%v%%.\n     */\n    static int136(v: BigNumberish): Typed { return n(v, -136); }\n\n    /**\n     *  Return a new ``int144`` type for %%v%%.\n     */\n    static int144(v: BigNumberish): Typed { return n(v, -144); }\n\n    /**\n     *  Return a new ``int52`` type for %%v%%.\n     */\n    static int152(v: BigNumberish): Typed { return n(v, -152); }\n\n    /**\n     *  Return a new ``int160`` type for %%v%%.\n     */\n    static int160(v: BigNumberish): Typed { return n(v, -160); }\n\n    /**\n     *  Return a new ``int168`` type for %%v%%.\n     */\n    static int168(v: BigNumberish): Typed { return n(v, -168); }\n\n    /**\n     *  Return a new ``int176`` type for %%v%%.\n     */\n    static int176(v: BigNumberish): Typed { return n(v, -176); }\n\n    /**\n     *  Return a new ``int184`` type for %%v%%.\n     */\n    static int184(v: BigNumberish): Typed { return n(v, -184); }\n\n    /**\n     *  Return a new ``int92`` type for %%v%%.\n     */\n    static int192(v: BigNumberish): Typed { return n(v, -192); }\n\n    /**\n     *  Return a new ``int200`` type for %%v%%.\n     */\n    static int200(v: BigNumberish): Typed { return n(v, -200); }\n\n    /**\n     *  Return a new ``int208`` type for %%v%%.\n     */\n    static int208(v: BigNumberish): Typed { return n(v, -208); }\n\n    /**\n     *  Return a new ``int216`` type for %%v%%.\n     */\n    static int216(v: BigNumberish): Typed { return n(v, -216); }\n\n    /**\n     *  Return a new ``int224`` type for %%v%%.\n     */\n    static int224(v: BigNumberish): Typed { return n(v, -224); }\n\n    /**\n     *  Return a new ``int232`` type for %%v%%.\n     */\n    static int232(v: BigNumberish): Typed { return n(v, -232); }\n\n    /**\n     *  Return a new ``int240`` type for %%v%%.\n     */\n    static int240(v: BigNumberish): Typed { return n(v, -240); }\n\n    /**\n     *  Return a new ``int248`` type for %%v%%.\n     */\n    static int248(v: BigNumberish): Typed { return n(v, -248); }\n\n    /**\n     *  Return a new ``int256`` type for %%v%%.\n     */\n    static int256(v: BigNumberish): Typed { return n(v, -256); }\n\n    /**\n     *  Return a new ``int256`` type for %%v%%.\n     */\n    static int(v: BigNumberish): Typed { return n(v, -256); }\n\n    /**\n     *  Return a new ``bytes1`` type for %%v%%.\n     */\n    static bytes1(v: BytesLike): Typed { return b(v, 1); }\n\n    /**\n     *  Return a new ``bytes2`` type for %%v%%.\n     */\n    static bytes2(v: BytesLike): Typed { return b(v, 2); }\n\n    /**\n     *  Return a new ``bytes3`` type for %%v%%.\n     */\n    static bytes3(v: BytesLike): Typed { return b(v, 3); }\n\n    /**\n     *  Return a new ``bytes4`` type for %%v%%.\n     */\n    static bytes4(v: BytesLike): Typed { return b(v, 4); }\n\n    /**\n     *  Return a new ``bytes5`` type for %%v%%.\n     */\n    static bytes5(v: BytesLike): Typed { return b(v, 5); }\n\n    /**\n     *  Return a new ``bytes6`` type for %%v%%.\n     */\n    static bytes6(v: BytesLike): Typed { return b(v, 6); }\n\n    /**\n     *  Return a new ``bytes7`` type for %%v%%.\n     */\n    static bytes7(v: BytesLike): Typed { return b(v, 7); }\n\n    /**\n     *  Return a new ``bytes8`` type for %%v%%.\n     */\n    static bytes8(v: BytesLike): Typed { return b(v, 8); }\n\n    /**\n     *  Return a new ``bytes9`` type for %%v%%.\n     */\n    static bytes9(v: BytesLike): Typed { return b(v, 9); }\n\n    /**\n     *  Return a new ``bytes10`` type for %%v%%.\n     */\n    static bytes10(v: BytesLike): Typed { return b(v, 10); }\n\n    /**\n     *  Return a new ``bytes11`` type for %%v%%.\n     */\n    static bytes11(v: BytesLike): Typed { return b(v, 11); }\n\n    /**\n     *  Return a new ``bytes12`` type for %%v%%.\n     */\n    static bytes12(v: BytesLike): Typed { return b(v, 12); }\n\n    /**\n     *  Return a new ``bytes13`` type for %%v%%.\n     */\n    static bytes13(v: BytesLike): Typed { return b(v, 13); }\n\n    /**\n     *  Return a new ``bytes14`` type for %%v%%.\n     */\n    static bytes14(v: BytesLike): Typed { return b(v, 14); }\n\n    /**\n     *  Return a new ``bytes15`` type for %%v%%.\n     */\n    static bytes15(v: BytesLike): Typed { return b(v, 15); }\n\n    /**\n     *  Return a new ``bytes16`` type for %%v%%.\n     */\n    static bytes16(v: BytesLike): Typed { return b(v, 16); }\n\n    /**\n     *  Return a new ``bytes17`` type for %%v%%.\n     */\n    static bytes17(v: BytesLike): Typed { return b(v, 17); }\n\n    /**\n     *  Return a new ``bytes18`` type for %%v%%.\n     */\n    static bytes18(v: BytesLike): Typed { return b(v, 18); }\n\n    /**\n     *  Return a new ``bytes19`` type for %%v%%.\n     */\n    static bytes19(v: BytesLike): Typed { return b(v, 19); }\n\n    /**\n     *  Return a new ``bytes20`` type for %%v%%.\n     */\n    static bytes20(v: BytesLike): Typed { return b(v, 20); }\n\n    /**\n     *  Return a new ``bytes21`` type for %%v%%.\n     */\n    static bytes21(v: BytesLike): Typed { return b(v, 21); }\n\n    /**\n     *  Return a new ``bytes22`` type for %%v%%.\n     */\n    static bytes22(v: BytesLike): Typed { return b(v, 22); }\n\n    /**\n     *  Return a new ``bytes23`` type for %%v%%.\n     */\n    static bytes23(v: BytesLike): Typed { return b(v, 23); }\n\n    /**\n     *  Return a new ``bytes24`` type for %%v%%.\n     */\n    static bytes24(v: BytesLike): Typed { return b(v, 24); }\n\n    /**\n     *  Return a new ``bytes25`` type for %%v%%.\n     */\n    static bytes25(v: BytesLike): Typed { return b(v, 25); }\n\n    /**\n     *  Return a new ``bytes26`` type for %%v%%.\n     */\n    static bytes26(v: BytesLike): Typed { return b(v, 26); }\n\n    /**\n     *  Return a new ``bytes27`` type for %%v%%.\n     */\n    static bytes27(v: BytesLike): Typed { return b(v, 27); }\n\n    /**\n     *  Return a new ``bytes28`` type for %%v%%.\n     */\n    static bytes28(v: BytesLike): Typed { return b(v, 28); }\n\n    /**\n     *  Return a new ``bytes29`` type for %%v%%.\n     */\n    static bytes29(v: BytesLike): Typed { return b(v, 29); }\n\n    /**\n     *  Return a new ``bytes30`` type for %%v%%.\n     */\n    static bytes30(v: BytesLike): Typed { return b(v, 30); }\n\n    /**\n     *  Return a new ``bytes31`` type for %%v%%.\n     */\n    static bytes31(v: BytesLike): Typed { return b(v, 31); }\n\n    /**\n     *  Return a new ``bytes32`` type for %%v%%.\n     */\n    static bytes32(v: BytesLike): Typed { return b(v, 32); }\n\n\n    /**\n     *  Return a new ``address`` type for %%v%%.\n     */\n    static address(v: string | Addressable): Typed { return new Typed(_gaurd, \"address\", v); }\n\n    /**\n     *  Return a new ``bool`` type for %%v%%.\n     */\n    static bool(v: any): Typed { return new Typed(_gaurd, \"bool\", !!v); }\n\n    /**\n     *  Return a new ``bytes`` type for %%v%%.\n     */\n    static bytes(v: BytesLike): Typed { return new Typed(_gaurd, \"bytes\", v); }\n\n    /**\n     *  Return a new ``string`` type for %%v%%.\n     */\n    static string(v: string): Typed { return new Typed(_gaurd, \"string\", v); }\n\n\n    /**\n     *  Return a new ``array`` type for %%v%%, allowing %%dynamic%% length.\n     */\n    static array(v: Array<any | Typed>, dynamic?: null | boolean): Typed {\n        throw new Error(\"not implemented yet\");\n        return new Typed(_gaurd, \"array\", v, dynamic);\n    }\n\n\n    /**\n     *  Return a new ``tuple`` type for %%v%%, with the optional %%name%%.\n     */\n    static tuple(v: Array<any | Typed> | Record<string, any | Typed>, name?: string): Typed {\n        throw new Error(\"not implemented yet\");\n        return new Typed(_gaurd, \"tuple\", v, name);\n    }\n\n\n    /**\n     *  Return a new ``uint8`` type for %%v%%.\n     */\n    static overrides(v: Record<string, any>): Typed {\n        return new Typed(_gaurd, \"overrides\", Object.assign({ }, v));\n    }\n\n    /**\n     *  Returns true only if %%value%% is a [[Typed]] instance.\n     */\n    static isTyped(value: any): value is Typed {\n        return (value\n            && typeof(value) === \"object\"\n            && \"_typedSymbol\" in value\n            && value._typedSymbol === _typedSymbol);\n    }\n\n    /**\n     *  If the value is a [[Typed]] instance, validates the underlying value\n     *  and returns it, otherwise returns value directly.\n     *\n     *  This is useful for functions that with to accept either a [[Typed]]\n     *  object or values.\n     */\n    static dereference<T>(value: Typed | T, type: string): T {\n        if (Typed.isTyped(value)) {\n            if (value.type !== type) {\n                throw new Error(`invalid type: expecetd ${ type }, got ${ value.type }`);\n            }\n            return value.value;\n        }\n        return value;\n    }\n}\n","import { getAddress } from \"../../address/index.js\";\nimport { toBeHex } from \"../../utils/maths.js\";\n\nimport { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n\n/**\n *  @_ignore\n */\nexport class AddressCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"address\", \"address\", localName, false);\n    }\n\n    defaultValue(): string {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n\n    encode(writer: Writer, _value: string | Typed): number {\n        let value = Typed.dereference(_value, \"string\");\n        try {\n            value = getAddress(value);\n        } catch (error: any) {\n            return this._throwError(error.message, _value);\n        }\n        return writer.writeValue(value);\n    }\n\n    decode(reader: Reader): any {\n        return getAddress(toBeHex(reader.readValue(), 20));\n    }\n}\n","import { Coder } from \"./abstract-coder.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n/**\n *  Clones the functionality of an existing Coder, but without a localName\n *\n *  @_ignore\n */\nexport class AnonymousCoder extends Coder {\n    private coder: Coder;\n\n    constructor(coder: Coder) {\n        super(coder.name, coder.type, \"_\", coder.dynamic);\n        this.coder = coder;\n    }\n\n    defaultValue(): any {\n        return this.coder.defaultValue();\n    }\n\n    encode(writer: Writer, value: any): number {\n        return this.coder.encode(writer, value);\n    }\n\n    decode(reader: Reader): any {\n        return this.coder.decode(reader);\n    }\n}\n","import {\n    defineProperties, isError, assert, assertArgument, assertArgumentCount\n} from \"../../utils/index.js\";\n\nimport { Typed } from \"../typed.js\";\n\nimport { Coder, Result, WordSize, Writer } from \"./abstract-coder.js\";\nimport { AnonymousCoder } from \"./anonymous.js\";\n\nimport type { Reader } from \"./abstract-coder.js\";\n\n/**\n *  @_ignore\n */\nexport function pack(writer: Writer, coders: ReadonlyArray<Coder>, values: Array<any> | { [ name: string ]: any }): number {\n    let arrayValues: Array<any> = [ ];\n\n    if (Array.isArray(values)) {\n       arrayValues = values;\n\n    } else if (values && typeof(values) === \"object\") {\n        let unique: { [ name: string ]: boolean } = { };\n\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            assert(name, \"cannot encode object for signature with missing names\",\n                \"INVALID_ARGUMENT\", { argument: \"values\", info: { coder }, value: values });\n\n            assert(!unique[name], \"cannot encode object for signature with duplicate names\",\n                \"INVALID_ARGUMENT\", { argument: \"values\", info: { coder }, value: values });\n\n            unique[name] = true;\n\n            return values[name];\n        });\n\n    } else {\n        assertArgument(false, \"invalid tuple value\", \"tuple\", values);\n    }\n\n    assertArgument(coders.length === arrayValues.length, \"types/value length mismatch\", \"tuple\", values);\n\n    let staticWriter = new Writer();\n    let dynamicWriter = new Writer();\n\n    let updateFuncs: Array<(baseOffset: number) => void> = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset: number) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n\n        } else {\n            coder.encode(staticWriter, value);\n        }\n    });\n\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\n\n/**\n *  @_ignore\n */\nexport function unpack(reader: Reader, coders: ReadonlyArray<Coder>): Result {\n    let values: Array<any> = [];\n    let keys: Array<null | string> = [ ];\n\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n\n    coders.forEach((coder) => {\n        let value: any = null;\n\n        if (coder.dynamic) {\n            let offset = reader.readIndex();\n            let offsetReader = baseReader.subReader(offset);\n            try {\n                value = coder.decode(offsetReader);\n            } catch (error: any) {\n                // Cannot recover from this\n                if (isError(error, \"BUFFER_OVERRUN\")) {\n                    throw error;\n                }\n\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n\n        } else {\n            try {\n                value = coder.decode(reader);\n            } catch (error: any) {\n                // Cannot recover from this\n                if (isError(error, \"BUFFER_OVERRUN\")) {\n                    throw error;\n                }\n\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n\n        if (value == undefined) {\n            throw new Error(\"investigate\");\n        }\n\n        values.push(value);\n        keys.push(coder.localName || null);\n    });\n\n    return Result.fromItems(values, keys);\n}\n\n/**\n *  @_ignore\n */\nexport class ArrayCoder extends Coder {\n    readonly coder!: Coder;\n    readonly length!: number;\n\n    constructor(coder: Coder, length: number, localName: string) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length: \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n        defineProperties<ArrayCoder>(this, { coder, length });\n    }\n\n    defaultValue(): Array<any> {\n        // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n        const defaultChild = this.coder.defaultValue();\n\n        const result: Array<any> = [];\n        for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n        }\n        return result;\n    }\n\n    encode(writer: Writer, _value: Array<any> | Typed): number {\n        const value = Typed.dereference(_value, \"array\");\n\n        if(!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n\n        let count = this.length;\n\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n\n        assertArgumentCount(value.length, count, \"coder array\" + (this.localName? (\" \"+ this.localName): \"\"));\n\n        let coders: Array<Coder> = [ ];\n        for (let i = 0; i < value.length; i++) { coders.push(this.coder); }\n\n        return pack(writer, coders, value);\n    }\n\n    decode(reader: Reader): any {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readIndex();\n\n            // Check that there is *roughly* enough data to ensure\n            // stray random data is not being read as a length. Each\n            // slot requires at least 32 bytes for their value (or 32\n            // bytes as a link to the data). This could use a much\n            // tighter bound, but we are erroring on the side of safety.\n            assert(count * WordSize <= reader.dataLength, \"insufficient data length\",\n                \"BUFFER_OVERRUN\", { buffer: reader.bytes, offset: count * WordSize, length: reader.dataLength });\n        }\n        let coders: Array<Coder> = [];\n        for (let i = 0; i < count; i++) { coders.push(new AnonymousCoder(this.coder)); }\n\n        return unpack(reader, coders);\n    }\n}\n\n","import { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n/**\n *  @_ignore\n */\nexport class BooleanCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n\n    defaultValue(): boolean {\n        return false;\n    }\n\n    encode(writer: Writer, _value: boolean | Typed): number {\n        const value = Typed.dereference(_value, \"bool\");\n        return writer.writeValue(value ? 1: 0);\n    }\n\n    decode(reader: Reader): any {\n        return !!reader.readValue();\n    }\n}\n","import { getBytesCopy, hexlify } from \"../../utils/index.js\";\n\nimport { Coder } from \"./abstract-coder.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n\n/**\n *  @_ignore\n */\nexport class DynamicBytesCoder extends Coder {\n    constructor(type: string, localName: string) {\n       super(type, type, localName, true);\n    }\n\n    defaultValue(): string {\n        return \"0x\";\n    }\n\n    encode(writer: Writer, value: any): number {\n        value = getBytesCopy(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n\n    decode(reader: Reader): any {\n        return reader.readBytes(reader.readIndex(), true);\n    }\n}\n\n/**\n *  @_ignore\n */\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName: string) {\n        super(\"bytes\", localName);\n    }\n\n    decode(reader: Reader): any {\n        return hexlify(super.decode(reader));\n    }\n}\n","\nimport { defineProperties, getBytesCopy, hexlify } from \"../../utils/index.js\";\n\nimport { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n\nimport type { BytesLike } from \"../../utils/index.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n\n/**\n *  @_ignore\n */\nexport class FixedBytesCoder extends Coder {\n    readonly size!: number;\n\n    constructor(size: number, localName: string) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        defineProperties<FixedBytesCoder>(this, { size }, { size: \"number\" });\n    }\n\n    defaultValue(): string {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n\n    encode(writer: Writer, _value: BytesLike | Typed): number {\n        let data = getBytesCopy(Typed.dereference(_value, this.type));\n        if (data.length !== this.size) { this._throwError(\"incorrect data length\", _value); }\n        return writer.writeBytes(data);\n    }\n\n    decode(reader: Reader): any {\n        return hexlify(reader.readBytes(this.size));\n    }\n}\n","import { Coder } from \"./abstract-coder.js\";\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\nconst Empty = new Uint8Array([ ]);\n\n/**\n *  @_ignore\n */\nexport class NullCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"null\", \"\", localName, false);\n    }\n\n    defaultValue(): null {\n        return null;\n    }\n\n    encode(writer: Writer, value: any): number {\n        if (value != null) { this._throwError(\"not null\", value); }\n        return writer.writeBytes(Empty);\n    }\n\n    decode(reader: Reader): any {\n        reader.readBytes(0);\n        return null;\n    }\n}\n","import {\n    defineProperties, fromTwos, getBigInt, mask, toTwos\n} from \"../../utils/index.js\";\n\nimport { Typed } from \"../typed.js\";\nimport { Coder, WordSize } from \"./abstract-coder.js\";\n\nimport type { BigNumberish } from \"../../utils/index.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_MAX_UINT256 = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\n/**\n *  @_ignore\n */\nexport class NumberCoder extends Coder {\n    readonly size!: number;\n    readonly signed!: boolean;\n\n    constructor(size: number, signed: boolean, localName: string) {\n        const name = ((signed ? \"int\": \"uint\") + (size * 8));\n        super(name, name, localName, false);\n\n        defineProperties<NumberCoder>(this, { size, signed }, { size: \"number\", signed: \"boolean\" });\n    }\n\n    defaultValue(): number {\n        return 0;\n    }\n\n    encode(writer: Writer, _value: BigNumberish | Typed): number {\n        let value = getBigInt(Typed.dereference(_value, this.type));\n\n        // Check bounds are safe for encoding\n        let maxUintValue = mask(BN_MAX_UINT256, WordSize * 8);\n        if (this.signed) {\n            let bounds = mask(maxUintValue, (this.size * 8) - 1);\n            if (value > bounds || value < -(bounds + BN_1)) {\n                this._throwError(\"value out-of-bounds\", _value);\n            }\n            value = toTwos(value, 8 * WordSize);\n        } else if (value < BN_0 || value > mask(maxUintValue, this.size * 8)) {\n            this._throwError(\"value out-of-bounds\", _value);\n        }\n\n        return writer.writeValue(value);\n    }\n\n    decode(reader: Reader): any {\n        let value = mask(reader.readValue(), this.size * 8);\n\n        if (this.signed) {\n            value = fromTwos(value, this.size * 8);\n        }\n\n        return value;\n    }\n}\n\n","/**\n *  Using strings in Ethereum (or any security-basd system) requires\n *  additional care. These utilities attempt to mitigate some of the\n *  safety issues as well as provide the ability to recover and analyse\n *  strings.\n *\n *  @_subsection api/utils:Strings and UTF-8  [about-strings]\n */\nimport { getBytes } from \"./data.js\";\nimport { assertArgument, assertNormalize } from \"./errors.js\";\n\nimport type { BytesLike } from \"./index.js\";\n\n\n///////////////////////////////\n\n/**\n *  The stanard normalization forms.\n */\nexport type UnicodeNormalizationForm = \"NFC\" | \"NFD\" | \"NFKC\" | \"NFKD\";\n\n/**\n *  When using the UTF-8 error API the following errors can be intercepted\n *  and processed as the %%reason%% passed to the [[Utf8ErrorFunc]].\n *\n *  **``\"UNEXPECTED_CONTINUE\"``** - a continuation byte was present where there\n *  was nothing to continue.\n *\n *  **``\"BAD_PREFIX\"``** - an invalid (non-continuation) byte to start a\n *  UTF-8 codepoint was found.\n *\n *  **``\"OVERRUN\"``** - the string is too short to process the expected\n *  codepoint length.\n *\n *  **``\"MISSING_CONTINUE\"``** - a missing continuation byte was expected but\n *  not found. The %%offset%% indicates the index the continuation byte\n *  was expected at.\n *\n *  **``\"OUT_OF_RANGE\"``** - the computed code point is outside the range\n *  for UTF-8. The %%badCodepoint%% indicates the computed codepoint, which was\n *  outside the valid UTF-8 range.\n *\n *  **``\"UTF16_SURROGATE\"``** - the UTF-8 strings contained a UTF-16 surrogate\n *  pair. The %%badCodepoint%% is the computed codepoint, which was inside the\n *  UTF-16 surrogate range.\n *\n *  **``\"OVERLONG\"``** - the string is an overlong representation. The\n *  %%badCodepoint%% indicates the computed codepoint, which has already\n *  been bounds checked.\n *\n *\n *  @returns string\n */\nexport type Utf8ErrorReason = \"UNEXPECTED_CONTINUE\" | \"BAD_PREFIX\" | \"OVERRUN\" |\n    \"MISSING_CONTINUE\" | \"OUT_OF_RANGE\" | \"UTF16_SURROGATE\" | \"OVERLONG\";\n\n\n/**\n *  A callback that can be used with [[toUtf8String]] to analysis or\n *  recovery from invalid UTF-8 data.\n *\n *  Parsing UTF-8 data is done through a simple Finite-State Machine (FSM)\n *  which calls the ``Utf8ErrorFunc`` if a fault is detected.\n *\n *  The %%reason%% indicates where in the FSM execution the fault\n *  occurred and the %%offset%% indicates where the input failed.\n *\n *  The %%bytes%% represents the raw UTF-8 data that was provided and\n *  %%output%% is the current array of UTF-8 code-points, which may\n *  be updated by the ``Utf8ErrorFunc``.\n *\n *  The value of the %%badCodepoint%% depends on the %%reason%%. See\n *  [[Utf8ErrorReason]] for details.\n *\n *  The function should return the number of bytes that should be skipped\n *  when control resumes to the FSM.\n */\nexport type Utf8ErrorFunc = (reason: Utf8ErrorReason, offset: number, bytes: Uint8Array, output: Array<number>, badCodepoint?: number) => number;\n\n\nfunction errorFunc(reason: Utf8ErrorReason, offset: number, bytes: Uint8Array, output: Array<number>, badCodepoint?: number): number {\n    assertArgument(false, `invalid codepoint at offset ${ offset }; ${ reason }`, \"bytes\", bytes);\n}\n\nfunction ignoreFunc(reason: Utf8ErrorReason, offset: number, bytes: Uint8Array, output: Array<number>, badCodepoint?: number): number {\n\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === \"BAD_PREFIX\" || reason === \"UNEXPECTED_CONTINUE\") {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) { break; }\n            i++;\n        }\n        return i;\n    }\n\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === \"OVERRUN\") {\n        return bytes.length - offset - 1;\n    }\n\n    // Nothing to skip\n    return 0;\n}\n\nfunction replaceFunc(reason: Utf8ErrorReason, offset: number, bytes: Uint8Array, output: Array<number>, badCodepoint?: number): number {\n\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === \"OVERLONG\") {\n        assertArgument(typeof(badCodepoint) === \"number\", \"invalid bad code point for replacement\", \"badCodepoint\", badCodepoint);\n        output.push(badCodepoint);\n        return 0;\n    }\n\n    // Put the replacement character into the output\n    output.push(0xfffd);\n\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n\n/**\n *  A handful of popular, built-in UTF-8 error handling strategies.\n *\n *  **``\"error\"``** - throws on ANY illegal UTF-8 sequence or\n *  non-canonical (overlong) codepoints (this is the default)\n *\n *  **``\"ignore\"``** - silently drops any illegal UTF-8 sequence\n *  and accepts non-canonical (overlong) codepoints\n *\n *  **``\"replace\"``** - replace any illegal UTF-8 sequence with the\n *  UTF-8 replacement character (i.e. ``\"\\\\ufffd\"``) and accepts\n *  non-canonical (overlong) codepoints\n *\n *  @returns: Record<\"error\" | \"ignore\" | \"replace\", Utf8ErrorFunc>\n */\nexport const Utf8ErrorFuncs: Readonly<Record<\"error\" | \"ignore\" | \"replace\", Utf8ErrorFunc>> = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(_bytes: BytesLike, onError?: Utf8ErrorFunc): Array<number> {\n    if (onError == null) { onError = Utf8ErrorFuncs.error; }\n\n    const bytes = getBytes(_bytes, \"bytes\");\n\n    const result: Array<number> = [];\n    let i = 0;\n\n    // Invalid bytes are ignored\n    while(i < bytes.length) {\n\n        const c = bytes[i++];\n\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n\n        // Multibyte; how many bytes left for this character?\n        let extraLength: null | number = null;\n        let overlongMask: null | number = null;\n\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n\n        // 1110 xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n\n        // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n\n        } else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(\"UNEXPECTED_CONTINUE\", i - 1, bytes, result);\n            } else {\n                i += onError(\"BAD_PREFIX\", i - 1, bytes, result);\n            }\n            continue;\n        }\n\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(\"OVERRUN\", i - 1, bytes, result);\n            continue;\n        }\n\n        // Remove the length prefix from the char\n        let res: null | number = c & ((1 << (8 - extraLength - 1)) - 1);\n\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(\"MISSING_CONTINUE\", i, bytes, result);\n                res = null;\n                break;\n            };\n\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n\n        // See above loop for invalid continuation byte\n        if (res === null) { continue; }\n\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(\"OUT_OF_RANGE\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(\"UTF16_SURROGATE\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(\"OVERLONG\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        result.push(res);\n    }\n\n    return result;\n}\n\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n\n/**\n *  Returns the UTF-8 byte representation of %%str%%.\n *\n *  If %%form%% is specified, the string is normalized.\n */\nexport function toUtf8Bytes(str: string, form?: UnicodeNormalizationForm): Uint8Array {\n\n    if (form != null) {\n        assertNormalize(form);\n        str = str.normalize(form);\n    }\n\n    let result: Array<number> = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n\n        if (c < 0x80) {\n            result.push(c);\n\n        } else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n\n        } else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n\n            assertArgument(i < str.length && ((c2 & 0xfc00) === 0xdc00),\n                \"invalid surrogate pair\", \"str\", str);\n\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n\n        } else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n\n    return new Uint8Array(result);\n};\n\n//export \nfunction _toUtf8String(codePoints: Array<number>): string {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode(\n            (((codePoint >> 10) & 0x3ff) + 0xd800),\n            ((codePoint & 0x3ff) + 0xdc00)\n        );\n    }).join(\"\");\n}\n\n/**\n *  Returns the string represented by the UTF-8 data %%bytes%%.\n *\n *  When %%onError%% function is specified, it is called on UTF-8\n *  errors allowing recovery using the [[Utf8ErrorFunc]] API.\n *  (default: [error](Utf8ErrorFuncs))\n */\nexport function toUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n\n/**\n *  Returns the UTF-8 code-points for %%str%%.\n *\n *  If %%form%% is specified, the string is normalized.\n */\nexport function toUtf8CodePoints(str: string, form?: UnicodeNormalizationForm): Array<number> {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n\n","import { toUtf8Bytes, toUtf8String } from \"../../utils/utf8.js\";\n\nimport { Typed } from \"../typed.js\";\nimport { DynamicBytesCoder } from \"./bytes.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n\n/**\n *  @_ignore\n */\nexport class StringCoder extends DynamicBytesCoder {\n\n    constructor(localName: string) {\n        super(\"string\", localName);\n    }\n\n    defaultValue(): string {\n        return \"\";\n    }\n\n    encode(writer: Writer, _value: string | Typed): number {\n        return super.encode(writer, toUtf8Bytes(Typed.dereference(_value, \"string\")));\n    }\n\n    decode(reader: Reader): any {\n        return toUtf8String(super.decode(reader));\n    }\n}\n","import { defineProperties } from \"../../utils/properties.js\";\n\nimport { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n\nimport { pack, unpack } from \"./array.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n/**\n *  @_ignore\n */\nexport class TupleCoder extends Coder {\n    readonly coders!: ReadonlyArray<Coder>;\n\n    constructor(coders: Array<Coder>, localName: string) {\n        let dynamic = false;\n        const types: Array<string> = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) { dynamic = true; }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n\n        super(\"tuple\", type, localName, dynamic);\n        defineProperties<TupleCoder>(this, { coders: Object.freeze(coders.slice()) });\n    }\n\n    defaultValue(): any {\n        const values: any = [ ];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) { accum[name] = 0; }\n                accum[name]++;\n            }\n            return accum;\n        }, <{ [ name: string ]: number }>{ });\n\n        // Add named values\n        this.coders.forEach((coder: Coder, index: number) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) { return; }\n\n            if (name === \"length\") { name = \"_length\"; }\n\n            if (values[name] != null) { return; }\n\n            values[name] = values[index];\n        });\n\n        return Object.freeze(values);\n    }\n\n    encode(writer: Writer, _value: Array<any> | { [ name: string ]: any } | Typed): number {\n        const value = Typed.dereference(_value, \"tuple\");\n        return pack(writer, this.coders, value);\n    }\n\n    decode(reader: Reader): any {\n        return unpack(reader, this.coders);\n    }\n}\n\n","import { keccak256 } from \"../crypto/index.js\";\nimport { toUtf8Bytes } from \"../utils/index.js\";\n\n/**\n *  A simple hashing function which operates on UTF-8 strings to\n *  compute an 32-byte identifier.\n *\n *  This simply computes the [UTF-8 bytes](toUtf8Bytes) and computes\n *  the [[keccak256]].\n *\n *  @example:\n *    id(\"hello world\")\n *    //_result:\n */\nexport function id(value: string): string {\n    return keccak256(toUtf8Bytes(value));\n}\n","/**\n *  A fragment is a single item from an ABI, which may represent any of:\n *\n *  - [Functions](FunctionFragment)\n *  - [Events](EventFragment)\n *  - [Constructors](ConstructorFragment)\n *  - Custom [Errors](ErrorFragment)\n *  - [Fallback or Receive](FallbackFragment) functions\n *\n *  @_subsection api/abi/abi-coder:Fragments  [about-fragments]\n */\n\nimport {\n    defineProperties, getBigInt, getNumber,\n    assert, assertPrivate, assertArgument\n} from \"../utils/index.js\";\nimport { id } from \"../hash/index.js\";\n\n/**\n *  A Type description in a [JSON ABI format](link-solc-jsonabi).\n */\nexport interface JsonFragmentType {\n    /**\n     *  The parameter name.\n     */\n    readonly name?: string;\n\n    /**\n     *  If the parameter is indexed.\n     */\n    readonly indexed?: boolean;\n\n    /**\n     *  The type of the parameter.\n     */\n    readonly type?: string;\n\n    /**\n     *  The internal Solidity type.\n     */\n    readonly internalType?: string;\n\n    /**\n     *  The components for a tuple.\n     */\n    readonly components?: ReadonlyArray<JsonFragmentType>;\n}\n\n/**\n *  A fragment for a method, event or error in a [JSON ABI format](link-solc-jsonabi).\n */\nexport interface JsonFragment {\n    /**\n     *  The name of the error, event, function, etc.\n     */\n    readonly name?: string;\n\n    /**\n     *  The type of the fragment (e.g. ``event``, ``\"function\"``, etc.)\n     */\n    readonly type?: string;\n\n    /**\n     *  If the event is anonymous.\n     */\n    readonly anonymous?: boolean;\n\n    /**\n     *  If the function is payable.\n     */\n    readonly payable?: boolean;\n\n    /**\n     *  If the function is constant.\n     */\n    readonly constant?: boolean;\n\n    /**\n     *  The mutability state of the function.\n     */\n    readonly stateMutability?: string;\n\n    /**\n     *  The input parameters.\n     */\n    readonly inputs?: ReadonlyArray<JsonFragmentType>;\n\n    /**\n     *  The output parameters.\n     */\n    readonly outputs?: ReadonlyArray<JsonFragmentType>;\n\n    /**\n     *  The gas limit to use when sending a transaction for this function.\n     */\n    readonly gas?: string;\n};\n\n/**\n *  The format to serialize the output as.\n *\n *  **``\"sighash\"``** - the bare formatting, used to compute the selector\n *  or topic hash; this format cannot be reversed (as it discards ``indexed``)\n *  so cannot by used to export an [[Interface]].\n *\n *  **``\"minimal\"``** - Human-Readable ABI with minimal spacing and without\n *  names, so it is compact, but will result in Result objects that cannot\n *  be accessed by name.\n *\n *  **``\"full\"``** - Full Human-Readable ABI, with readable spacing and names\n *  intact; this is generally the recommended format.\n *\n *  **``\"json\"``** - The [JSON ABI format](link-solc-jsonabi).\n */\nexport type FormatType = \"sighash\" | \"minimal\" | \"full\" | \"json\";\n\n// [ \"a\", \"b\" ] => { \"a\": 1, \"b\": 1 }\nfunction setify(items: Array<string>): ReadonlySet<string> {\n    const result: Set<string> = new Set();\n    items.forEach((k) => result.add(k));\n    return Object.freeze(result);\n}\n\nconst _kwVisibDeploy = \"external public payable\";\nconst KwVisibDeploy = setify(_kwVisibDeploy.split(\" \"));\n\n// Visibility Keywords\nconst _kwVisib = \"constant external internal payable private public pure view\";\nconst KwVisib = setify(_kwVisib.split(\" \"));\n\nconst _kwTypes = \"constructor error event fallback function receive struct\";\nconst KwTypes = setify(_kwTypes.split(\" \"));\n\nconst _kwModifiers = \"calldata memory storage payable indexed\";\nconst KwModifiers = setify(_kwModifiers.split(\" \"));\n\nconst _kwOther = \"tuple returns\";\n\n// All Keywords\nconst _keywords = [ _kwTypes, _kwModifiers, _kwOther, _kwVisib ].join(\" \");\nconst Keywords = setify(_keywords.split(\" \"));\n\n// Single character tokens\nconst SimpleTokens: Record<string, string> = {\n  \"(\": \"OPEN_PAREN\", \")\": \"CLOSE_PAREN\",\n  \"[\": \"OPEN_BRACKET\", \"]\": \"CLOSE_BRACKET\",\n  \",\": \"COMMA\", \"@\": \"AT\"\n};\n\n// Parser regexes to consume the next token\nconst regexWhitespacePrefix = new RegExp(\"^(\\\\s*)\");\nconst regexNumberPrefix = new RegExp(\"^([0-9]+)\");\nconst regexIdPrefix = new RegExp(\"^([a-zA-Z$_][a-zA-Z0-9$_]*)\");\n\n// Parser regexs to check validity\nconst regexId = new RegExp(\"^([a-zA-Z$_][a-zA-Z0-9$_]*)$\");\nconst regexType = new RegExp(\"^(address|bool|bytes([0-9]*)|string|u?int([0-9]*))$\");\n\n/**\n *  @ignore:\n */\ntype Token = Readonly<{\n    // Type of token (e.g. TYPE, KEYWORD, NUMBER, etc)\n    type: string;\n\n    // Offset into the original source code\n    offset: number;\n\n    // Actual text content of the token\n    text: string;\n\n    // The parenthesis depth\n    depth: number;\n\n    // If a parenthesis, the offset (in tokens) that balances it\n    match: number;\n\n    // For parenthesis and commas, the offset (in tokens) to the\n    // previous/next parenthesis or comma in the list\n    linkBack: number;\n    linkNext: number;\n\n    // If a BRACKET, the value inside\n    value: number;\n}>;\n\nclass TokenString {\n    #offset: number;\n    #tokens: ReadonlyArray<Token>;\n\n    get offset(): number { return this.#offset; }\n    get length(): number { return this.#tokens.length - this.#offset; }\n\n    constructor(tokens: ReadonlyArray<Token>) {\n        this.#offset = 0;\n        this.#tokens = tokens.slice();\n    }\n\n    clone(): TokenString { return new TokenString(this.#tokens); }\n    reset(): void { this.#offset = 0; }\n\n    #subTokenString(from: number = 0, to: number = 0): TokenString {\n        return new TokenString(this.#tokens.slice(from, to).map((t) => {\n            return Object.freeze(Object.assign({ }, t, {\n                match: (t.match - from),\n                linkBack: (t.linkBack - from),\n                linkNext: (t.linkNext - from),\n            }));\n        }));\n    }\n\n    // Pops and returns the value of the next token, if it is a keyword in allowed; throws if out of tokens\n    popKeyword(allowed: ReadonlySet<string>): string {\n        const top = this.peek();\n        if (top.type !== \"KEYWORD\" || !allowed.has(top.text)) { throw new Error(`expected keyword ${ top.text }`); }\n        return this.pop().text;\n    }\n\n    // Pops and returns the value of the next token if it is `type`; throws if out of tokens\n    popType(type: string): string {\n        if (this.peek().type !== type) { throw new Error(`expected ${ type }; got ${ JSON.stringify(this.peek()) }`); }\n        return this.pop().text;\n    }\n\n    // Pops and returns a \"(\" TOKENS \")\"\n    popParen(): TokenString {\n        const top = this.peek();\n        if (top.type !== \"OPEN_PAREN\") { throw new Error(\"bad start\"); }\n        const result = this.#subTokenString(this.#offset + 1, top.match + 1);\n        this.#offset = top.match + 1;\n        return result;\n    }\n\n    // Pops and returns the items within \"(\" ITEM1 \",\" ITEM2 \",\" ... \")\"\n    popParams(): Array<TokenString> {\n        const top = this.peek();\n\n        if (top.type !== \"OPEN_PAREN\") { throw new Error(\"bad start\"); }\n\n        const result: Array<TokenString> = [ ];\n\n        while(this.#offset < top.match - 1) {\n            const link = this.peek().linkNext;\n            result.push(this.#subTokenString(this.#offset + 1, link));\n            this.#offset = link;\n        }\n\n        this.#offset = top.match + 1;\n\n        return result;\n    }\n\n    // Returns the top Token, throwing if out of tokens\n    peek(): Token {\n        if (this.#offset >= this.#tokens.length) {\n            throw new Error(\"out-of-bounds\");\n        }\n        return this.#tokens[this.#offset];\n    }\n\n    // Returns the next value, if it is a keyword in `allowed`\n    peekKeyword(allowed: ReadonlySet<string>): null | string {\n        const top = this.peekType(\"KEYWORD\");\n        return (top != null && allowed.has(top)) ? top: null;\n    }\n\n    // Returns the value of the next token if it is `type`\n    peekType(type: string): null | string {\n        if (this.length === 0) { return null; }\n        const top = this.peek();\n        return (top.type === type) ? top.text: null;\n    }\n\n    // Returns the next token; throws if out of tokens\n    pop(): Token {\n        const result = this.peek();\n        this.#offset++;\n        return result;\n    }\n\n    toString(): string {\n        const tokens: Array<string> = [ ];\n        for (let i = this.#offset; i < this.#tokens.length; i++) {\n            const token = this.#tokens[i];\n            tokens.push(`${ token.type }:${ token.text }`);\n        }\n        return `<TokenString ${ tokens.join(\" \") }>`\n    }\n}\n\ntype Writeable<T> = { -readonly [P in keyof T]: T[P] };\n\nfunction lex(text: string): TokenString {\n    const tokens: Array<Token> = [ ];\n\n    const throwError = (message: string) => {\n        const token = (offset < text.length) ? JSON.stringify(text[offset]): \"$EOI\";\n        throw new Error(`invalid token ${ token } at ${ offset }: ${ message }`);\n    };\n\n    let brackets: Array<number> = [ ];\n    let commas: Array<number> = [ ];\n\n    let offset = 0;\n    while (offset < text.length) {\n\n        // Strip off any leading whitespace\n        let cur = text.substring(offset);\n        let match = cur.match(regexWhitespacePrefix);\n        if (match) {\n            offset += match[1].length;\n            cur = text.substring(offset);\n        }\n\n        const token = { depth: brackets.length, linkBack: -1, linkNext: -1, match: -1, type: \"\", text: \"\", offset, value: -1 };\n        tokens.push(token);\n\n        let type = (SimpleTokens[cur[0]] || \"\");\n        if (type) {\n            token.type = type;\n            token.text = cur[0];\n            offset++;\n\n            if (type === \"OPEN_PAREN\") {\n                brackets.push(tokens.length - 1);\n                commas.push(tokens.length - 1);\n\n            } else if (type == \"CLOSE_PAREN\") {\n                if (brackets.length === 0) { throwError(\"no matching open bracket\"); }\n\n                token.match = brackets.pop() as number;\n                (<Writeable<Token>>(tokens[token.match])).match = tokens.length - 1;\n                token.depth--;\n\n                token.linkBack = commas.pop() as number;\n                (<Writeable<Token>>(tokens[token.linkBack])).linkNext = tokens.length - 1;\n\n            } else if (type === \"COMMA\") {\n                token.linkBack = commas.pop() as number;\n                (<Writeable<Token>>(tokens[token.linkBack])).linkNext = tokens.length - 1;\n                commas.push(tokens.length - 1);\n\n            } else if (type === \"OPEN_BRACKET\") {\n                token.type = \"BRACKET\";\n\n            } else if (type === \"CLOSE_BRACKET\") {\n                // Remove the CLOSE_BRACKET\n                let suffix = (tokens.pop() as Token).text;\n                if (tokens.length > 0 && tokens[tokens.length - 1].type === \"NUMBER\") {\n                    const value = (tokens.pop() as Token).text;\n                    suffix = value + suffix;\n                    (<Writeable<Token>>(tokens[tokens.length - 1])).value = getNumber(value);\n                }\n                if (tokens.length === 0 || tokens[tokens.length - 1].type !== \"BRACKET\") {\n                    throw new Error(\"missing opening bracket\");\n                }\n                (<Writeable<Token>>(tokens[tokens.length - 1])).text += suffix;\n            }\n\n            continue;\n        }\n\n        match = cur.match(regexIdPrefix);\n        if (match) {\n            token.text = match[1];\n            offset += token.text.length;\n\n            if (Keywords.has(token.text)) {\n                token.type = \"KEYWORD\";\n                continue;\n            }\n\n            if (token.text.match(regexType)) {\n                token.type = \"TYPE\";\n                continue;\n            }\n\n            token.type = \"ID\";\n            continue;\n        }\n\n        match = cur.match(regexNumberPrefix);\n        if (match) {\n            token.text = match[1];\n            token.type = \"NUMBER\";\n            offset += token.text.length;\n            continue;\n        }\n\n        throw new Error(`unexpected token ${ JSON.stringify(cur[0]) } at position ${ offset }`);\n    }\n\n    return new TokenString(tokens.map((t) => Object.freeze(t)));\n}\n\n// Check only one of `allowed` is in `set`\nfunction allowSingle(set: ReadonlySet<string>, allowed: ReadonlySet<string>): void {\n    let included: Array<string> = [ ];\n    for (const key in allowed.keys()) {\n        if (set.has(key)) { included.push(key); }\n    }\n    if (included.length > 1) { throw new Error(`conflicting types: ${ included.join(\", \") }`); }\n}\n\n// Functions to process a Solidity Signature TokenString from left-to-right for...\n\n// ...the name with an optional type, returning the name\nfunction consumeName(type: string, tokens: TokenString): string {\n    if (tokens.peekKeyword(KwTypes)) {\n        const keyword = tokens.pop().text;\n        if (keyword !== type) {\n            throw new Error(`expected ${ type }, got ${ keyword }`);\n        }\n    }\n\n    return tokens.popType(\"ID\");\n}\n\n// ...all keywords matching allowed, returning the keywords\nfunction consumeKeywords(tokens: TokenString, allowed?: ReadonlySet<string>): ReadonlySet<string> {\n    const keywords: Set<string> = new Set();\n    while (true) {\n        const keyword = tokens.peekType(\"KEYWORD\");\n\n        if (keyword == null || (allowed && !allowed.has(keyword))) { break; }\n        tokens.pop();\n\n        if (keywords.has(keyword)) { throw new Error(`duplicate keywords: ${ JSON.stringify(keyword) }`); }\n        keywords.add(keyword);\n    }\n\n    return Object.freeze(keywords);\n}\n\n// ...all visibility keywords, returning the coalesced mutability\nfunction consumeMutability(tokens: TokenString): \"payable\" | \"nonpayable\" | \"view\" | \"pure\" {\n    let modifiers = consumeKeywords(tokens, KwVisib);\n\n    // Detect conflicting modifiers\n    allowSingle(modifiers, setify(\"constant payable nonpayable\".split(\" \")));\n    allowSingle(modifiers, setify(\"pure view payable nonpayable\".split(\" \")));\n\n    // Process mutability states\n    if (modifiers.has(\"view\")) { return \"view\"; }\n    if (modifiers.has(\"pure\")) { return \"pure\"; }\n    if (modifiers.has(\"payable\")) { return \"payable\"; }\n    if (modifiers.has(\"nonpayable\")) { return \"nonpayable\"; }\n\n    // Process legacy `constant` last\n    if (modifiers.has(\"constant\")) { return \"view\"; }\n\n    return \"nonpayable\";\n}\n\n// ...a parameter list, returning the ParamType list\nfunction consumeParams(tokens: TokenString, allowIndexed?: boolean): Array<ParamType> {\n    return tokens.popParams().map((t) => ParamType.from(t, allowIndexed));\n}\n\n// ...a gas limit, returning a BigNumber or null if none\nfunction consumeGas(tokens: TokenString): null | bigint {\n    if (tokens.peekType(\"AT\")) {\n        tokens.pop();\n        if (tokens.peekType(\"NUMBER\")) {\n            return getBigInt(tokens.pop().text);\n        }\n        throw new Error(\"invalid gas\");\n    }\n    return null;\n}\n\nfunction consumeEoi(tokens: TokenString): void {\n    if (tokens.length) {\n        throw new Error(`unexpected tokens: ${ tokens.toString() }`);\n    }\n}\n\nconst regexArrayType = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\n\nfunction verifyBasicType(type: string): string {\n    const match = type.match(regexType);\n    assertArgument(match, \"invalid type\", \"type\", type);\n    if (type === \"uint\") { return \"uint256\"; }\n    if (type === \"int\") { return \"int256\"; }\n\n    if (match[2]) {\n        // bytesXX\n        const length = parseInt(match[2]);\n        assertArgument(length !== 0 && length <= 32, \"invalid bytes length\", \"type\", type);\n\n    } else if (match[3]) {\n        // intXX or uintXX\n        const size = parseInt(match[3] as string);\n        assertArgument(size !== 0 && size <= 256 && (size % 8) === 0, \"invalid numeric width\", \"type\", type);\n    }\n\n    return type;\n}\n\n// Make the Fragment constructors effectively private\nconst _guard = { };\n\n\n/**\n *  When [walking](ParamType-walk) a [[ParamType]], this is called\n *  on each component.\n */\nexport type ParamTypeWalkFunc = (type: string, value: any) => any;\n\n/**\n *  When [walking asynchronously](ParamType-walkAsync) a [[ParamType]],\n *  this is called on each component.\n */\nexport type ParamTypeWalkAsyncFunc = (type: string, value: any) => any | Promise<any>;\n\nconst internal = Symbol.for(\"_ethers_internal\");\n\nconst ParamTypeInternal = \"_ParamTypeInternal\";\nconst ErrorFragmentInternal = \"_ErrorInternal\";\nconst EventFragmentInternal = \"_EventInternal\";\nconst ConstructorFragmentInternal = \"_ConstructorInternal\";\nconst FallbackFragmentInternal = \"_FallbackInternal\";\nconst FunctionFragmentInternal = \"_FunctionInternal\";\nconst StructFragmentInternal = \"_StructInternal\";\n\n/**\n *  Each input and output of a [[Fragment]] is an Array of **ParamType**.\n */\nexport class ParamType {\n\n    /**\n     *  The local name of the parameter (or ``\"\"`` if unbound)\n     */\n    readonly name!: string;\n\n    /**\n     *  The fully qualified type (e.g. ``\"address\"``, ``\"tuple(address)\"``,\n     *  ``\"uint256[3][]\"``)\n     */\n    readonly type!: string;\n\n    /**\n     *  The base type (e.g. ``\"address\"``, ``\"tuple\"``, ``\"array\"``)\n     */\n    readonly baseType!: string;\n\n    /**\n     *  True if the parameters is indexed.\n     *\n     *  For non-indexable types this is ``null``.\n     */\n    readonly indexed!: null | boolean;\n\n    /**\n     *  The components for the tuple.\n     *\n     *  For non-tuple types this is ``null``.\n     */\n    readonly components!: null | ReadonlyArray<ParamType>;\n\n    /**\n     *  The array length, or ``-1`` for dynamic-lengthed arrays.\n     *\n     *  For non-array types this is ``null``.\n     */\n    readonly arrayLength!: null | number;\n\n    /**\n     *  The type of each child in the array.\n     *\n     *  For non-array types this is ``null``.\n     */\n    readonly arrayChildren!: null | ParamType;\n\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, name: string, type: string, baseType: string, indexed: null | boolean, components: null | ReadonlyArray<ParamType>, arrayLength: null | number, arrayChildren: null | ParamType) {\n        assertPrivate(guard, _guard, \"ParamType\");\n        Object.defineProperty(this, internal, { value: ParamTypeInternal });\n\n        if (components) { components = Object.freeze(components.slice()); }\n\n        if (baseType === \"array\") {\n            if (arrayLength == null || arrayChildren == null) {\n                throw new Error(\"\");\n            }\n        } else if (arrayLength != null || arrayChildren != null) {\n            throw new Error(\"\");\n        }\n\n        if (baseType === \"tuple\") {\n            if (components == null) { throw new Error(\"\"); }\n        } else if (components != null) {\n            throw new Error(\"\");\n        }\n\n        defineProperties<ParamType>(this, {\n            name, type, baseType, indexed, components, arrayLength, arrayChildren\n        });\n    }\n\n    /**\n     *  Return a string representation of this type.\n     *\n     *  For example,\n     *\n     *  ``sighash\" => \"(uint256,address)\"``\n     *\n     *  ``\"minimal\" => \"tuple(uint256,address) indexed\"``\n     *\n     *  ``\"full\" => \"tuple(uint256 foo, address bar) indexed baz\"``\n     */\n    format(format?: FormatType): string {\n        if (format == null) { format = \"sighash\"; }\n        if (format === \"json\") {\n            const name = this.name || \"\";\n\n            if (this.isArray()) {\n                const result = JSON.parse(this.arrayChildren.format(\"json\"));\n                result.name = name;\n                result.type += `[${ (this.arrayLength < 0 ? \"\": String(this.arrayLength)) }]`;\n                return JSON.stringify(result);\n            }\n\n            const result: any = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\": this.type),\n                name\n            };\n\n\n            if (typeof(this.indexed) === \"boolean\") { result.indexed = this.indexed; }\n            if (this.isTuple()) {\n                result.components = this.components.map((c) => JSON.parse(c.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n\n        let result = \"\";\n\n        // Array\n        if (this.isArray()) {\n            result += this.arrayChildren.format(format);\n            result += `[${ (this.arrayLength < 0 ? \"\": String(this.arrayLength)) }]`;\n        } else {\n            if (this.isTuple()) {\n                result += \"(\" + this.components.map(\n                    (comp) => comp.format(format)\n                ).join((format === \"full\") ? \", \": \",\") + \")\";\n            } else {\n                result += this.type;\n            }\n        }\n\n        if (format !== \"sighash\") {\n            if (this.indexed === true) { result += \" indexed\"; }\n            if (format === \"full\" && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     *  Returns true if %%this%% is an Array type.\n     *\n     *  This provides a type gaurd ensuring that [[arrayChildren]]\n     *  and [[arrayLength]] are non-null.\n     */\n    isArray(): this is (ParamType & { arrayChildren: ParamType, arrayLength: number }) {\n        return (this.baseType === \"array\")\n    }\n\n    /**\n     *  Returns true if %%this%% is a Tuple type.\n     *\n     *  This provides a type gaurd ensuring that [[components]]\n     *  is non-null.\n     */\n    isTuple(): this is (ParamType & { components: ReadonlyArray<ParamType> }) {\n        return (this.baseType === \"tuple\");\n    }\n\n    /**\n     *  Returns true if %%this%% is an Indexable type.\n     *\n     *  This provides a type gaurd ensuring that [[indexed]]\n     *  is non-null.\n     */\n    isIndexable(): this is (ParamType & { indexed: boolean }) {\n        return (this.indexed != null);\n    }\n\n    /**\n     *  Walks the **ParamType** with %%value%%, calling %%process%%\n     *  on each type, destructing the %%value%% recursively.\n     */\n    walk(value: any, process: ParamTypeWalkFunc): any {\n        if (this.isArray()) {\n            if (!Array.isArray(value)) { throw new Error(\"invalid array value\"); }\n            if (this.arrayLength !== -1 && value.length !== this.arrayLength) {\n                throw new Error(\"array is wrong length\");\n            }\n            const _this = this;\n            return value.map((v) => (_this.arrayChildren.walk(v, process)));\n        }\n\n        if (this.isTuple()) {\n            if (!Array.isArray(value)) { throw new Error(\"invalid tuple value\"); }\n            if (value.length !== this.components.length) {\n                throw new Error(\"array is wrong length\");\n            }\n            const _this = this;\n            return value.map((v, i) => (_this.components[i].walk(v, process)));\n        }\n\n        return process(this.type, value);\n    }\n\n    #walkAsync(promises: Array<Promise<void>>, value: any, process: ParamTypeWalkAsyncFunc, setValue: (value: any) => void): void {\n\n        if (this.isArray()) {\n            if (!Array.isArray(value)) { throw new Error(\"invalid array value\"); }\n            if (this.arrayLength !== -1 && value.length !== this.arrayLength) {\n                throw new Error(\"array is wrong length\");\n            }\n            const childType = this.arrayChildren;\n\n            const result = value.slice();\n            result.forEach((value, index) => {\n                childType.#walkAsync(promises, value, process, (value: any) => {\n                    result[index] = value;\n                });\n            });\n            setValue(result);\n            return;\n        }\n\n        if (this.isTuple()) {\n            const components = this.components;\n\n            // Convert the object into an array\n            let result: Array<any>;\n            if (Array.isArray(value)) {\n                result = value.slice();\n\n            } else {\n                if (value == null || typeof(value) !== \"object\") {\n                    throw new Error(\"invalid tuple value\");\n                }\n\n                result = components.map((param) => {\n                    if (!param.name) { throw new Error(\"cannot use object value with unnamed components\"); }\n                    if (!(param.name in value)) {\n                        throw new Error(`missing value for component ${ param.name }`);\n                    }\n                    return value[param.name];\n                });\n            }\n\n            if (result.length !== this.components.length) {\n                throw new Error(\"array is wrong length\");\n            }\n\n            result.forEach((value, index) => {\n                components[index].#walkAsync(promises, value, process, (value: any) => {\n                    result[index] = value;\n                });\n            });\n            setValue(result);\n            return;\n        }\n\n        const result = process(this.type, value);\n        if (result.then) {\n            promises.push((async function() { setValue(await result); })());\n        } else {\n            setValue(result);\n        }\n    }\n\n    /**\n     *  Walks the **ParamType** with %%value%%, asynchronously calling\n     *  %%process%% on each type, destructing the %%value%% recursively.\n     *\n     *  This can be used to resolve ENS naes by walking and resolving each\n     *  ``\"address\"`` type.\n     */\n    async walkAsync(value: any, process: ParamTypeWalkAsyncFunc): Promise<any> {\n        const promises: Array<Promise<void>> = [ ];\n        const result: [ any ] = [ value ];\n        this.#walkAsync(promises, value, process, (value: any) => {\n            result[0] = value;\n        });\n        if (promises.length) { await Promise.all(promises); }\n        return result[0];\n    }\n\n    /**\n     *  Creates a new **ParamType** for %%obj%%.\n     *\n     *  If %%allowIndexed%% then the ``indexed`` keyword is permitted,\n     *  otherwise the ``indexed`` keyword will throw an error.\n     */\n    static from(obj: any, allowIndexed?: boolean): ParamType {\n        if (ParamType.isParamType(obj)) { return obj; }\n\n        if (typeof(obj) === \"string\") {\n            try {\n                return ParamType.from(lex(obj), allowIndexed);\n            } catch (error) {\n                assertArgument(false, \"invalid param type\", \"obj\", obj);\n            }\n\n        } else if (obj instanceof TokenString) {\n            let type = \"\", baseType = \"\";\n            let comps: null | Array<ParamType> = null;\n\n            if (consumeKeywords(obj, setify([ \"tuple\" ])).has(\"tuple\") || obj.peekType(\"OPEN_PAREN\")) {\n                // Tuple\n                baseType = \"tuple\";\n                comps = obj.popParams().map((t) => ParamType.from(t));\n                type = `tuple(${ comps.map((c) => c.format()).join(\",\") })`;\n            } else {\n                // Normal\n                type = verifyBasicType(obj.popType(\"TYPE\"));\n                baseType = type;\n            }\n\n            // Check for Array\n            let arrayChildren: null | ParamType  = null;\n            let arrayLength: null | number = null;\n\n            while (obj.length && obj.peekType(\"BRACKET\")) {\n                const bracket = obj.pop(); //arrays[i];\n                arrayChildren = new ParamType(_guard, \"\", type, baseType, null, comps, arrayLength, arrayChildren);\n                arrayLength = bracket.value;\n                type += bracket.text;\n                baseType = \"array\";\n                comps = null;\n            }\n\n            let indexed: null | boolean = null;\n            const keywords = consumeKeywords(obj, KwModifiers);\n            if (keywords.has(\"indexed\")) {\n                if (!allowIndexed) { throw new Error(\"\"); }\n                indexed = true;\n            }\n\n            const name = (obj.peekType(\"ID\") ? obj.pop().text: \"\");\n\n            if (obj.length) { throw new Error(\"leftover tokens\"); }\n\n            return new ParamType(_guard, name, type, baseType, indexed, comps, arrayLength, arrayChildren);\n        }\n\n        const name = obj.name;\n        assertArgument(!name || (typeof(name) === \"string\" && name.match(regexId)),\n            \"invalid name\", \"obj.name\", name);\n\n        let indexed = obj.indexed;\n        if (indexed != null) {\n            assertArgument(allowIndexed, \"parameter cannot be indexed\", \"obj.indexed\", obj.indexed);\n            indexed = !!indexed;\n        }\n\n        let type = obj.type;\n\n        let arrayMatch = type.match(regexArrayType);\n        if (arrayMatch) {\n            const arrayLength = parseInt(arrayMatch[2] || \"-1\");\n            const arrayChildren = ParamType.from({\n                type: arrayMatch[1],\n                components: obj.components\n            });\n\n            return new ParamType(_guard, name || \"\", type, \"array\", indexed, null, arrayLength, arrayChildren);\n        }\n\n        if (type === \"tuple\" || type.startsWith(\"tuple(\"/* fix: ) */) || type.startsWith(\"(\" /* fix: ) */)) {\n            const comps = (obj.components != null) ? obj.components.map((c: any) => ParamType.from(c)): null;\n            const tuple = new ParamType(_guard, name || \"\", type, \"tuple\", indexed, comps, null, null);\n            // @TODO: use lexer to validate and normalize type\n            return tuple;\n        }\n\n        type = verifyBasicType(obj.type);\n\n        return new ParamType(_guard, name || \"\", type, type, indexed, null, null, null);\n    }\n\n    /**\n     *  Returns true if %%value%% is a **ParamType**.\n     */\n    static isParamType(value: any): value is ParamType {\n        return (value && value[internal] === ParamTypeInternal);\n    }\n}\n\n/**\n *  The type of a [[Fragment]].\n */\nexport type FragmentType = \"constructor\" | \"error\" | \"event\" | \"fallback\" | \"function\" | \"struct\";\n\n/**\n *  An abstract class to represent An individual fragment from a parse ABI.\n */\nexport abstract class Fragment {\n    /**\n     *  The type of the fragment.\n     */\n    readonly type!: FragmentType;\n\n    /**\n     *  The inputs for the fragment.\n     */\n    readonly inputs!: ReadonlyArray<ParamType>;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, type: FragmentType, inputs: ReadonlyArray<ParamType>) {\n        assertPrivate(guard, _guard, \"Fragment\");\n        inputs = Object.freeze(inputs.slice());\n        defineProperties<Fragment>(this, { type, inputs });\n    }\n\n    /**\n     *  Returns a string representation of this fragment as %%format%%.\n     */\n    abstract format(format?: FormatType): string;\n\n    /**\n     *  Creates a new **Fragment** for %%obj%%, wich can be any supported\n     *  ABI frgament type.\n     */\n    static from(obj: any): Fragment {\n        if (typeof(obj) === \"string\") {\n\n            // Try parsing JSON...\n            try {\n                Fragment.from(JSON.parse(obj));\n            } catch (e) { }\n\n            // ...otherwise, use the human-readable lexer\n            return Fragment.from(lex(obj));\n        }\n\n        if (obj instanceof TokenString) {\n            // Human-readable ABI (already lexed)\n\n            const type = obj.peekKeyword(KwTypes);\n\n            switch (type) {\n                case \"constructor\": return ConstructorFragment.from(obj);\n                case \"error\": return ErrorFragment.from(obj);\n                case \"event\": return EventFragment.from(obj);\n                case \"fallback\": case \"receive\":\n                    return FallbackFragment.from(obj);\n                case \"function\": return FunctionFragment.from(obj);\n                case \"struct\": return StructFragment.from(obj);\n            }\n\n        } else if (typeof(obj) === \"object\") {\n            // JSON ABI\n\n            switch (obj.type) {\n                case \"constructor\": return ConstructorFragment.from(obj);\n                case \"error\": return ErrorFragment.from(obj);\n                case \"event\": return EventFragment.from(obj);\n                case \"fallback\": case \"receive\":\n                    return FallbackFragment.from(obj);\n                case \"function\": return FunctionFragment.from(obj);\n                case \"struct\": return StructFragment.from(obj);\n            }\n\n            assert(false, `unsupported type: ${ obj.type }`, \"UNSUPPORTED_OPERATION\", {\n                operation: \"Fragment.from\"\n            });\n        }\n\n        assertArgument(false, \"unsupported frgament object\", \"obj\", obj);\n    }\n\n    /**\n     *  Returns true if %%value%% is a [[ConstructorFragment]].\n     */\n    static isConstructor(value: any): value is ConstructorFragment {\n        return ConstructorFragment.isFragment(value);\n    }\n\n    /**\n     *  Returns true if %%value%% is an [[ErrorFragment]].\n     */\n    static isError(value: any): value is ErrorFragment {\n        return ErrorFragment.isFragment(value);\n    }\n\n    /**\n     *  Returns true if %%value%% is an [[EventFragment]].\n     */\n    static isEvent(value: any): value is EventFragment {\n        return EventFragment.isFragment(value);\n    }\n\n    /**\n     *  Returns true if %%value%% is a [[FunctionFragment]].\n     */\n    static isFunction(value: any): value is FunctionFragment {\n        return FunctionFragment.isFragment(value);\n    }\n\n    /**\n     *  Returns true if %%value%% is a [[StructFragment]].\n     */\n    static isStruct(value: any): value is StructFragment {\n        return StructFragment.isFragment(value);\n    }\n}\n\n/**\n *  An abstract class to represent An individual fragment\n *  which has a name from a parse ABI.\n */\nexport abstract class NamedFragment extends Fragment {\n    /**\n     *  The name of the fragment.\n     */\n    readonly name!: string;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, type: FragmentType, name: string, inputs: ReadonlyArray<ParamType>) {\n        super(guard, type, inputs);\n        assertArgument(typeof(name) === \"string\" && name.match(regexId),\n            \"invalid identifier\", \"name\", name);\n        inputs = Object.freeze(inputs.slice());\n        defineProperties<NamedFragment>(this, { name });\n    }\n}\n\nfunction joinParams(format: FormatType, params: ReadonlyArray<ParamType>): string { \n    return \"(\" + params.map((p) => p.format(format)).join((format === \"full\") ? \", \": \",\") + \")\";\n}\n\n/**\n *  A Fragment which represents a //Custom Error//.\n */\nexport class ErrorFragment extends NamedFragment {\n    /**\n     *  @private\n     */\n    constructor(guard: any, name: string, inputs: ReadonlyArray<ParamType>) {\n        super(guard, \"error\", name, inputs);\n        Object.defineProperty(this, internal, { value: ErrorFragmentInternal });\n    }\n\n    /**\n     *  The Custom Error selector.\n     */\n    get selector(): string {\n        return id(this.format(\"sighash\")).substring(0, 10);\n    }\n\n    /**\n     *  Returns a string representation of this fragment as %%format%%.\n     */\n    format(format?: FormatType): string {\n        if (format == null) { format = \"sighash\"; }\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"error\",\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n\n        const result: Array<string> = [ ];\n        if (format !== \"sighash\") { result.push(\"error\"); }\n        result.push(this.name + joinParams(format, this.inputs));\n        return result.join(\" \");\n    }\n\n    /**\n     *  Returns a new **ErrorFragment** for %%obj%%.\n     */\n    static from(obj: any): ErrorFragment {\n        if (ErrorFragment.isFragment(obj)) { return obj; }\n\n        if (typeof(obj) === \"string\") {\n            return ErrorFragment.from(lex(obj));\n\n        } else if (obj instanceof TokenString) {\n            const name = consumeName(\"error\", obj);\n            const inputs = consumeParams(obj);\n            consumeEoi(obj);\n\n            return new ErrorFragment(_guard, name, inputs);\n        }\n\n        return new ErrorFragment(_guard, obj.name,\n            obj.inputs ? obj.inputs.map(ParamType.from): [ ]);\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is an\n     *  **ErrorFragment**.\n     */\n    static isFragment(value: any): value is ErrorFragment {\n        return (value && value[internal] === ErrorFragmentInternal);\n    }\n}\n\n/**\n *  A Fragment which represents an Event.\n */\nexport class EventFragment extends NamedFragment {\n    /**\n     *  Whether this event is anonymous.\n     */\n    readonly anonymous!: boolean;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, name: string, inputs: ReadonlyArray<ParamType>, anonymous: boolean) {\n        super(guard, \"event\", name, inputs);\n        Object.defineProperty(this, internal, { value: EventFragmentInternal });\n        defineProperties<EventFragment>(this, { anonymous });\n    }\n\n    /**\n     *  The Event topic hash.\n     */\n    get topicHash(): string {\n        return id(this.format(\"sighash\"));\n    }\n\n    /**\n     *  Returns a string representation of this event as %%format%%.\n     */\n    format(format?: FormatType): string {\n        if (format == null) { format = \"sighash\"; }\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format)))\n            });\n        }\n\n        const result: Array<string> = [ ];\n        if (format !== \"sighash\") { result.push(\"event\"); }\n        result.push(this.name + joinParams(format, this.inputs));\n        if (format !== \"sighash\" && this.anonymous) { result.push(\"anonymous\"); }\n        return result.join(\" \");\n    }\n\n    /**\n     *  Return the topic hash for an event with %%name%% and %%params%%.\n     */\n    static getTopicHash(name: string, params?: Array<any>): string {\n        params = (params || []).map((p) => ParamType.from(p));\n        const fragment = new EventFragment(_guard, name, params, false);\n        return fragment.topicHash;\n    }\n\n    /**\n     *  Returns a new **EventFragment** for %%obj%%.\n     */\n    static from(obj: any): EventFragment {\n        if (EventFragment.isFragment(obj)) { return obj; }\n\n        if (typeof(obj) === \"string\") {\n            try {\n                return EventFragment.from(lex(obj));\n            } catch (error) {\n                assertArgument(false, \"invalid event fragment\", \"obj\", obj);\n            }\n\n        } else if (obj instanceof TokenString) {\n            const name = consumeName(\"event\", obj);\n            const inputs = consumeParams(obj, true);\n            const anonymous = !!consumeKeywords(obj, setify([ \"anonymous\" ])).has(\"anonymous\");\n            consumeEoi(obj);\n\n            return new EventFragment(_guard, name, inputs, anonymous);\n        }\n\n        return new EventFragment(_guard, obj.name,\n            obj.inputs ? obj.inputs.map((p: any) => ParamType.from(p, true)): [ ], !!obj.anonymous);\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is an\n     *  **EventFragment**.\n     */\n    static isFragment(value: any): value is EventFragment {\n        return (value && value[internal] === EventFragmentInternal);\n    }\n}\n\n/**\n *  A Fragment which represents a constructor.\n */\nexport class ConstructorFragment extends Fragment {\n\n    /**\n     *  Whether the constructor can receive an endowment.\n     */\n    readonly payable!: boolean;\n\n    /**\n     *  The recommended gas limit for deployment or ``null``.\n     */\n    readonly gas!: null | bigint;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, type: FragmentType, inputs: ReadonlyArray<ParamType>, payable: boolean, gas: null | bigint) {\n        super(guard, type, inputs);\n        Object.defineProperty(this, internal, { value: ConstructorFragmentInternal });\n        defineProperties<ConstructorFragment>(this, { payable, gas });\n    }\n\n    /**\n     *  Returns a string representation of this constructor as %%format%%.\n     */\n    format(format?: FormatType): string {\n        assert(format != null && format !== \"sighash\", \"cannot format a constructor for sighash\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"format(sighash)\" });\n\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: (this.payable ? \"payable\": \"undefined\"),\n                payable: this.payable,\n                gas: ((this.gas != null) ? this.gas: undefined),\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format)))\n            });\n        }\n\n        const result = [ `constructor${ joinParams(format, this.inputs) }` ];\n        if (this.payable) { result.push(\"payable\"); }\n        if (this.gas != null) { result.push(`@${ this.gas.toString() }`); }\n        return result.join(\" \");\n    }\n\n    /**\n     *  Returns a new **ConstructorFragment** for %%obj%%.\n     */\n    static from(obj: any): ConstructorFragment {\n        if (ConstructorFragment.isFragment(obj)) { return obj; }\n\n        if (typeof(obj) === \"string\") {\n            try {\n                return ConstructorFragment.from(lex(obj));\n            } catch (error) {\n                assertArgument(false, \"invalid constuctor fragment\", \"obj\", obj);\n            }\n\n        } else if (obj instanceof TokenString) {\n            consumeKeywords(obj, setify([ \"constructor\" ]));\n            const inputs = consumeParams(obj);\n            const payable = !!consumeKeywords(obj, KwVisibDeploy).has(\"payable\");\n            const gas = consumeGas(obj);\n            consumeEoi(obj);\n\n            return new ConstructorFragment(_guard, \"constructor\", inputs, payable, gas);\n        }\n\n        return new ConstructorFragment(_guard, \"constructor\",\n            obj.inputs ? obj.inputs.map(ParamType.from): [ ],\n            !!obj.payable, (obj.gas != null) ? obj.gas: null);\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is a\n     *  **ConstructorFragment**.\n     */\n    static isFragment(value: any): value is ConstructorFragment {\n        return (value && value[internal] === ConstructorFragmentInternal);\n    }\n}\n\n/**\n *  A Fragment which represents a method.\n */\nexport class FallbackFragment extends Fragment {\n\n    /**\n     *  If the function can be sent value during invocation.\n     */\n    readonly payable!: boolean;\n\n    constructor(guard: any, inputs: ReadonlyArray<ParamType>, payable: boolean) {\n        super(guard, \"fallback\", inputs);\n        Object.defineProperty(this, internal, { value: FallbackFragmentInternal });\n        defineProperties<FallbackFragment>(this, { payable });\n    }\n\n    /**\n     *  Returns a string representation of this fallback as %%format%%.\n     */\n    format(format?: FormatType): string {\n        const type = ((this.inputs.length === 0) ? \"receive\": \"fallback\");\n\n        if (format === \"json\") {\n            const stateMutability = (this.payable ? \"payable\": \"nonpayable\");\n            return JSON.stringify({ type, stateMutability });\n        }\n\n        return `${ type }()${ this.payable ? \" payable\": \"\" }`;\n    }\n\n    /**\n     *  Returns a new **FallbackFragment** for %%obj%%.\n     */\n    static from(obj: any): FallbackFragment {\n        if (FallbackFragment.isFragment(obj)) { return obj; }\n\n        if (typeof(obj) === \"string\") {\n            try {\n                return FallbackFragment.from(lex(obj));\n            } catch (error) {\n                assertArgument(false, \"invalid fallback fragment\", \"obj\", obj);\n            }\n\n        } else if (obj instanceof TokenString) {\n            const errorObj = obj.toString();\n\n            const topIsValid = obj.peekKeyword(setify([ \"fallback\", \"receive\" ]));\n            assertArgument(topIsValid, \"type must be fallback or receive\", \"obj\", errorObj);\n\n            const type = obj.popKeyword(setify([ \"fallback\", \"receive\" ]));\n\n            // receive()\n            if (type === \"receive\") {\n                const inputs = consumeParams(obj);\n                assertArgument(inputs.length === 0, `receive cannot have arguments`, \"obj.inputs\", inputs);\n                consumeKeywords(obj, setify([ \"payable\" ]));\n                consumeEoi(obj);\n                return new FallbackFragment(_guard, [ ], true);\n            }\n\n            // fallback() [payable]\n            // fallback(bytes) [payable] returns (bytes)\n            let inputs = consumeParams(obj);\n            if (inputs.length) {\n                assertArgument(inputs.length === 1 && inputs[0].type === \"bytes\",\n                    \"invalid fallback inputs\", \"obj.inputs\",\n                    inputs.map((i) => i.format(\"minimal\")).join(\", \"));\n            } else {\n                inputs = [ ParamType.from(\"bytes\") ];\n            }\n\n            const mutability = consumeMutability(obj);\n            assertArgument(mutability === \"nonpayable\" || mutability === \"payable\", \"fallback cannot be constants\", \"obj.stateMutability\", mutability);\n\n            if (consumeKeywords(obj, setify([ \"returns\" ])).has(\"returns\")) {\n                const outputs = consumeParams(obj);\n                assertArgument(outputs.length === 1 && outputs[0].type === \"bytes\",\n                    \"invalid fallback outputs\", \"obj.outputs\",\n                    outputs.map((i) => i.format(\"minimal\")).join(\", \"));\n            }\n\n            consumeEoi(obj);\n\n            return new FallbackFragment(_guard, inputs, mutability === \"payable\");\n        }\n\n        if (obj.type === \"receive\") {\n            return new FallbackFragment(_guard, [ ], true);\n        }\n\n        if (obj.type === \"fallback\") {\n            const inputs = [ ParamType.from(\"bytes\") ];\n            const payable = (obj.stateMutability === \"payable\");\n            return new FallbackFragment(_guard, inputs, payable);\n        }\n\n        assertArgument(false, \"invalid fallback description\", \"obj\", obj);\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is a\n     *  **FallbackFragment**.\n     */\n    static isFragment(value: any): value is FallbackFragment {\n        return (value && value[internal] === FallbackFragmentInternal);\n    }\n}\n\n\n/**\n *  A Fragment which represents a method.\n */\nexport class FunctionFragment extends NamedFragment {\n    /**\n     *  If the function is constant (e.g. ``pure`` or ``view`` functions).\n     */\n    readonly constant!: boolean;\n\n    /**\n     *  The returned types for the result of calling this function.\n     */\n    readonly outputs!: ReadonlyArray<ParamType>;\n\n    /**\n     *  The state mutability (e.g. ``payable``, ``nonpayable``, ``view``\n     *  or ``pure``)\n     */\n    readonly stateMutability!: \"payable\" | \"nonpayable\" | \"view\" | \"pure\";\n\n    /**\n     *  If the function can be sent value during invocation.\n     */\n    readonly payable!: boolean;\n\n    /**\n     *  The recommended gas limit to send when calling this function.\n     */\n    readonly gas!: null | bigint;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, name: string, stateMutability: \"payable\" | \"nonpayable\" | \"view\" | \"pure\", inputs: ReadonlyArray<ParamType>, outputs: ReadonlyArray<ParamType>, gas: null | bigint) {\n        super(guard, \"function\", name, inputs);\n        Object.defineProperty(this, internal, { value: FunctionFragmentInternal });\n        outputs = Object.freeze(outputs.slice());\n        const constant = (stateMutability === \"view\" || stateMutability === \"pure\");\n        const payable = (stateMutability === \"payable\");\n        defineProperties<FunctionFragment>(this, { constant, gas, outputs, payable, stateMutability });\n    }\n\n    /**\n     *  The Function selector.\n     */\n    get selector(): string {\n        return id(this.format(\"sighash\")).substring(0, 10);\n    }\n\n    /**\n     *  Returns a string representation of this function as %%format%%.\n     */\n    format(format?: FormatType): string {\n        if (format == null) { format = \"sighash\"; }\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability: undefined),\n                payable: this.payable,\n                gas: ((this.gas != null) ? this.gas: undefined),\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format))),\n                outputs: this.outputs.map((o) => JSON.parse(o.format(format))),\n            });\n        }\n\n        const result: Array<string> = [];\n\n        if (format !== \"sighash\") { result.push(\"function\"); }\n\n        result.push(this.name + joinParams(format, this.inputs));\n\n        if (format !== \"sighash\") {\n            if (this.stateMutability !== \"nonpayable\") {\n                result.push(this.stateMutability);\n            }\n\n            if (this.outputs && this.outputs.length) {\n                result.push(\"returns\");\n                result.push(joinParams(format, this.outputs));\n            }\n\n            if (this.gas != null) { result.push(`@${ this.gas.toString() }`); }\n        }\n        return result.join(\" \");\n    }\n\n    /**\n     *  Return the selector for a function with %%name%% and %%params%%.\n     */\n    static getSelector(name: string, params?: Array<any>): string {\n        params = (params || []).map((p) => ParamType.from(p));\n        const fragment = new FunctionFragment(_guard, name, \"view\", params, [ ], null);\n        return fragment.selector;\n    }\n\n    /**\n     *  Returns a new **FunctionFragment** for %%obj%%.\n     */\n    static from(obj: any): FunctionFragment {\n        if (FunctionFragment.isFragment(obj)) { return obj; }\n\n        if (typeof(obj) === \"string\") {\n            try {\n                return FunctionFragment.from(lex(obj));\n            } catch (error) {\n                assertArgument(false, \"invalid function fragment\", \"obj\", obj);\n            }\n\n        } else if (obj instanceof TokenString) {\n            const name = consumeName(\"function\", obj);\n            const inputs = consumeParams(obj);\n            const mutability = consumeMutability(obj);\n\n            let outputs: Array<ParamType> = [ ];\n            if (consumeKeywords(obj, setify([ \"returns\" ])).has(\"returns\")) {\n                outputs = consumeParams(obj);\n            }\n\n            const gas = consumeGas(obj);\n\n            consumeEoi(obj);\n\n            return new FunctionFragment(_guard, name, mutability, inputs, outputs, gas);\n        }\n\n        let stateMutability = obj.stateMutability;\n\n        // Use legacy Solidity ABI logic if stateMutability is missing\n        if (stateMutability == null) {\n            stateMutability = \"payable\";\n\n            if (typeof(obj.constant) === \"boolean\") {\n                stateMutability = \"view\";\n                if (!obj.constant) {\n                    stateMutability = \"payable\"\n                    if (typeof(obj.payable) === \"boolean\" && !obj.payable) {\n                        stateMutability = \"nonpayable\";\n                    }\n                }\n            } else if (typeof(obj.payable) === \"boolean\" && !obj.payable) {\n                stateMutability = \"nonpayable\";\n            }\n        }\n\n        // @TODO: verifyState for stateMutability (e.g. throw if\n        //        payable: false but stateMutability is \"nonpayable\")\n\n        return new FunctionFragment(_guard, obj.name, stateMutability,\n             obj.inputs ? obj.inputs.map(ParamType.from): [ ],\n             obj.outputs ? obj.outputs.map(ParamType.from): [ ],\n             (obj.gas != null) ? obj.gas: null);\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is a\n     *  **FunctionFragment**.\n     */\n    static isFragment(value: any): value is FunctionFragment {\n        return (value && value[internal] === FunctionFragmentInternal);\n    }\n}\n\n/**\n *  A Fragment which represents a structure.\n */\nexport class StructFragment extends NamedFragment {\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, name: string, inputs: ReadonlyArray<ParamType>) {\n        super(guard, \"struct\", name, inputs);\n        Object.defineProperty(this, internal, { value: StructFragmentInternal });\n    }\n\n    /**\n     *  Returns a string representation of this struct as %%format%%.\n     */\n    format(): string {\n        throw new Error(\"@TODO\");\n    }\n\n    /**\n     *  Returns a new **StructFragment** for %%obj%%.\n     */\n    static from(obj: any): StructFragment {\n        if (typeof(obj) === \"string\") {\n            try {\n                return StructFragment.from(lex(obj));\n            } catch (error) {\n                assertArgument(false, \"invalid struct fragment\", \"obj\", obj);\n            }\n\n        } else if (obj instanceof TokenString) {\n            const name = consumeName(\"struct\", obj);\n            const inputs = consumeParams(obj);\n            consumeEoi(obj);\n            return new StructFragment(_guard, name, inputs);\n        }\n\n        return new StructFragment(_guard, obj.name, obj.inputs ? obj.inputs.map(ParamType.from): [ ]);\n    }\n\n// @TODO: fix this return type\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is a\n     *  **StructFragment**.\n     */\n    static isFragment(value: any): value is FunctionFragment {\n        return (value && value[internal] === StructFragmentInternal);\n    }\n}\n\n","/**\n *  When sending values to or receiving values from a [[Contract]], the\n *  data is generally encoded using the [ABI standard](link-solc-abi).\n *\n *  The AbiCoder provides a utility to encode values to ABI data and\n *  decode values from ABI data.\n *\n *  Most of the time, developers should favour the [[Contract]] class,\n *  which further abstracts a lot of the finer details of ABI data.\n *\n *  @_section api/abi/abi-coder:ABI Encoding\n */\n\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\n\nimport { assertArgumentCount, assertArgument } from \"../utils/index.js\";\n\nimport { Coder, Reader, Result, Writer } from \"./coders/abstract-coder.js\";\nimport { AddressCoder } from \"./coders/address.js\";\nimport { ArrayCoder } from \"./coders/array.js\";\nimport { BooleanCoder } from \"./coders/boolean.js\";\nimport { BytesCoder } from \"./coders/bytes.js\";\nimport { FixedBytesCoder } from \"./coders/fixed-bytes.js\";\nimport { NullCoder } from \"./coders/null.js\";\nimport { NumberCoder } from \"./coders/number.js\";\nimport { StringCoder } from \"./coders/string.js\";\nimport { TupleCoder } from \"./coders/tuple.js\";\nimport { ParamType } from \"./fragments.js\";\n\nimport { getAddress } from \"../address/index.js\";\nimport { getBytes, hexlify, makeError } from \"../utils/index.js\";\n\nimport type {\n    BytesLike,\n    CallExceptionAction, CallExceptionError, CallExceptionTransaction\n} from \"../utils/index.js\";\n\n// https://docs.soliditylang.org/en/v0.8.17/control-structures.html\nconst PanicReasons: Map<number, string> = new Map();\nPanicReasons.set(0x00, \"GENERIC_PANIC\");\nPanicReasons.set(0x01, \"ASSERT_FALSE\");\nPanicReasons.set(0x11, \"OVERFLOW\");\nPanicReasons.set(0x12, \"DIVIDE_BY_ZERO\");\nPanicReasons.set(0x21, \"ENUM_RANGE_ERROR\");\nPanicReasons.set(0x22, \"BAD_STORAGE_DATA\");\nPanicReasons.set(0x31, \"STACK_UNDERFLOW\");\nPanicReasons.set(0x32, \"ARRAY_RANGE_ERROR\");\nPanicReasons.set(0x41, \"OUT_OF_MEMORY\");\nPanicReasons.set(0x51, \"UNINITIALIZED_FUNCTION_CALL\");\n\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\n\n\nlet defaultCoder: null | AbiCoder = null;\nlet defaultMaxInflation = 1024;\n\nfunction getBuiltinCallException(action: CallExceptionAction, tx: { to?: null | string, from?: null | string, data?: string }, data: null | BytesLike, abiCoder: AbiCoder): CallExceptionError {\n    let message = \"missing revert data\";\n\n    let reason: null | string = null;\n    const invocation = null;\n    let revert: null | { signature: string, name: string, args: Array<any> } = null;\n\n    if (data) {\n        message = \"execution reverted\";\n\n        const bytes = getBytes(data);\n        data = hexlify(data);\n\n        if (bytes.length === 0) {\n            message += \" (no data present; likely require(false) occurred\";\n            reason = \"require(false)\";\n\n        } else if (bytes.length % 32 !== 4) {\n            message += \" (could not decode reason; invalid data length)\";\n\n        } else if (hexlify(bytes.slice(0, 4)) === \"0x08c379a0\") {\n            // Error(string)\n            try {\n                reason = abiCoder.decode([ \"string\" ], bytes.slice(4))[0]\n                revert = {\n                    signature: \"Error(string)\",\n                    name: \"Error\",\n                    args: [ reason ]\n                };\n                message += `: ${ JSON.stringify(reason) }`;\n\n            } catch (error) {\n                message += \" (could not decode reason; invalid string data)\";\n            }\n\n        } else if (hexlify(bytes.slice(0, 4)) === \"0x4e487b71\") {\n            // Panic(uint256)\n            try {\n                const code = Number(abiCoder.decode([ \"uint256\" ], bytes.slice(4))[0]);\n                revert = {\n                    signature: \"Panic(uint256)\",\n                    name: \"Panic\",\n                    args: [ code ]\n                };\n                reason = `Panic due to ${ PanicReasons.get(code) || \"UNKNOWN\" }(${ code })`;\n                message += `: ${ reason }`;\n            } catch (error) {\n                message += \" (could not decode panic code)\";\n            }\n        } else {\n            message += \" (unknown custom error)\";\n        }\n    }\n\n    const transaction: CallExceptionTransaction = {\n        to: (tx.to ? getAddress(tx.to): null),\n        data: (tx.data || \"0x\")\n    };\n    if (tx.from) { transaction.from = getAddress(tx.from); }\n\n    return makeError(message, \"CALL_EXCEPTION\", {\n        action, data, reason, transaction, invocation, revert\n    });\n}\n\n/**\n *  The **AbiCoder** is a low-level class responsible for encoding JavaScript\n *  values into binary data and decoding binary data into JavaScript values.\n */\nexport class AbiCoder {\n\n    #getCoder(param: ParamType): Coder {\n        if (param.isArray()) {\n            return new ArrayCoder(this.#getCoder(param.arrayChildren), param.arrayLength, param.name);\n        }\n\n        if (param.isTuple()) {\n            return new TupleCoder(param.components.map((c) => this.#getCoder(c)), param.name);\n        }\n\n        switch (param.baseType) {\n            case \"address\":\n                return new AddressCoder(param.name);\n            case \"bool\":\n                return new BooleanCoder(param.name);\n            case \"string\":\n                return new StringCoder(param.name);\n            case \"bytes\":\n                return new BytesCoder(param.name);\n            case \"\":\n                return new NullCoder(param.name);\n        }\n\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            let size = parseInt(match[2] || \"256\");\n            assertArgument(size !== 0 && size <= 256 && (size % 8) === 0,\n                \"invalid \" + match[1] + \" bit length\", \"param\", param);\n            return new NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n        }\n\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            let size = parseInt(match[1]);\n            assertArgument(size !== 0 && size <= 32, \"invalid bytes length\", \"param\", param);\n            return new FixedBytesCoder(size, param.name);\n        }\n\n        assertArgument(false, \"invalid type\", \"type\", param.type);\n    }\n\n    /**\n     *  Get the default values for the given %%types%%.\n     *\n     *  For example, a ``uint`` is by default ``0`` and ``bool``\n     *  is by default ``false``.\n     */\n    getDefaultValue(types: ReadonlyArray<string | ParamType>): Result {\n        const coders: Array<Coder> = types.map((type) => this.#getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.defaultValue();\n    }\n\n    /**\n     *  Encode the %%values%% as the %%types%% into ABI data.\n     *\n     *  @returns DataHexstring\n     */\n    encode(types: ReadonlyArray<string | ParamType>, values: ReadonlyArray<any>): string {\n        assertArgumentCount(values.length, types.length, \"types/values length mismatch\");\n\n        const coders = types.map((type) => this.#getCoder(ParamType.from(type)));\n        const coder = (new TupleCoder(coders, \"_\"));\n\n        const writer = new Writer();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n\n    /**\n     *  Decode the ABI %%data%% as the %%types%% into values.\n     *\n     *  If %%loose%% decoding is enabled, then strict padding is\n     *  not enforced. Some older versions of Solidity incorrectly\n     *  padded event data emitted from ``external`` functions.\n     */\n    decode(types: ReadonlyArray<string | ParamType>, data: BytesLike, loose?: boolean): Result {\n        const coders: Array<Coder> = types.map((type) => this.#getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.decode(new Reader(data, loose, defaultMaxInflation));\n    }\n\n    static _setDefaultMaxInflation(value: number): void {\n        assertArgument(typeof(value) === \"number\" && Number.isInteger(value), \"invalid defaultMaxInflation factor\", \"value\", value);\n        defaultMaxInflation = value;\n    }\n\n    /**\n     *  Returns the shared singleton instance of a default [[AbiCoder]].\n     *\n     *  On the first call, the instance is created internally.\n     */\n    static defaultAbiCoder(): AbiCoder {\n        if (defaultCoder == null) {\n            defaultCoder = new AbiCoder();\n        }\n        return defaultCoder;\n    }\n\n    /**\n     *  Returns an ethers-compatible [[CallExceptionError]] Error for the given\n     *  result %%data%% for the [[CallExceptionAction]] %%action%% against\n     *  the Transaction %%tx%%.\n     */\n    static getBuiltinCallException(action: CallExceptionAction, tx: { to?: null | string, from?: null | string, data?: string }, data: null | BytesLike): CallExceptionError {\n        return getBuiltinCallException(action, tx, data, AbiCoder.defaultAbiCoder());\n    }\n}\n","import { assert, assertArgument } from \"../utils/index.js\";\n\nimport { getAddress } from \"./address.js\";\n\nimport type { Addressable, AddressLike, NameResolver } from \"./index.js\";\n\n\n/**\n *  Returns true if %%value%% is an object which implements the\n *  [[Addressable]] interface.\n *\n *  @example:\n *    // Wallets and AbstractSigner sub-classes\n *    isAddressable(Wallet.createRandom())\n *    //_result:\n *\n *    // Contracts\n *    contract = new Contract(\"dai.tokens.ethers.eth\", [ ], provider)\n *    isAddressable(contract)\n *    //_result:\n */\nexport function isAddressable(value: any): value is Addressable {\n    return (value && typeof(value.getAddress) === \"function\");\n}\n\n/**\n *  Returns true if %%value%% is a valid address.\n *\n *  @example:\n *    // Valid address\n *    isAddress(\"0x8ba1f109551bD432803012645Ac136ddd64DBA72\")\n *    //_result:\n *\n *    // Valid ICAP address\n *    isAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK36\")\n *    //_result:\n *\n *    // Invalid checksum\n *    isAddress(\"0x8Ba1f109551bD432803012645Ac136ddd64DBa72\")\n *    //_result:\n *\n *    // Invalid ICAP checksum\n *    isAddress(\"0x8Ba1f109551bD432803012645Ac136ddd64DBA72\")\n *    //_result:\n *\n *    // Not an address (an ENS name requires a provided and an\n *    // asynchronous API to access)\n *    isAddress(\"ricmoo.eth\")\n *    //_result:\n */\nexport function isAddress(value: any): value is string {\n    try {\n        getAddress(value);\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nasync function checkAddress(target: any, promise: Promise<null | string>): Promise<string> {\n    const result = await promise;\n    if (result == null || result === \"0x0000000000000000000000000000000000000000\") {\n        assert(typeof(target) !== \"string\", \"unconfigured name\", \"UNCONFIGURED_NAME\", { value: target });\n        assertArgument(false, \"invalid AddressLike value; did not resolve to a value address\", \"target\", target);\n    }\n    return getAddress(result);\n}\n\n/**\n *  Resolves to an address for the %%target%%, which may be any\n *  supported address type, an [[Addressable]] or a Promise which\n *  resolves to an address.\n *\n *  If an ENS name is provided, but that name has not been correctly\n *  configured a [[UnconfiguredNameError]] is thrown.\n *\n *  @example:\n *    addr = \"0x6B175474E89094C44Da98b954EedeAC495271d0F\"\n *\n *    // Addresses are return synchronously\n *    resolveAddress(addr, provider)\n *    //_result:\n *\n *    // Address promises are resolved asynchronously\n *    resolveAddress(Promise.resolve(addr))\n *    //_result:\n *\n *    // ENS names are resolved asynchronously\n *    resolveAddress(\"dai.tokens.ethers.eth\", provider)\n *    //_result:\n *\n *    // Addressable objects are resolved asynchronously\n *    contract = new Contract(addr, [ ])\n *    resolveAddress(contract, provider)\n *    //_result:\n *\n *    // Unconfigured ENS names reject\n *    resolveAddress(\"nothing-here.ricmoo.eth\", provider)\n *    //_error:\n *\n *    // ENS names require a NameResolver object passed in\n *    // (notice the provider was omitted)\n *    resolveAddress(\"nothing-here.ricmoo.eth\")\n *    //_error:\n */\nexport function resolveAddress(target: AddressLike, resolver?: null | NameResolver): string | Promise<string> {\n\n    if (typeof(target) === \"string\") {\n        if (target.match(/^0x[0-9a-f]{40}$/i)) { return getAddress(target); }\n\n        assert(resolver != null, \"ENS resolution requires a provider\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"resolveName\" });\n\n        return checkAddress(target, resolver.resolveName(target));\n\n    } else if (isAddressable(target)) {\n        return checkAddress(target, target.getAddress());\n\n    } else if (target && typeof(target.then) === \"function\") {\n        return checkAddress(target, target);\n    }\n\n    assertArgument(false, \"unsupported addressable value\", \"target\", target);\n}\n","//import { TypedDataDomain, TypedDataField } from \"@ethersproject/providerabstract-signer\";\nimport { getAddress } from \"../address/index.js\";\nimport { keccak256 } from \"../crypto/index.js\";\nimport { recoverAddress } from \"../transaction/index.js\";\nimport {\n    concat, defineProperties, getBigInt, getBytes, hexlify, isHexString, mask, toBeHex, toQuantity, toTwos, zeroPadValue,\n    assertArgument\n} from \"../utils/index.js\";\n\nimport { id } from \"./id.js\";\n\nimport type { SignatureLike } from \"../crypto/index.js\";\nimport type { BigNumberish, BytesLike } from \"../utils/index.js\";\n\n\nconst padding = new Uint8Array(32);\npadding.fill(0);\n\nconst BN__1 = BigInt(-1);\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_MAX_UINT256 = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\n// @TODO: in v7, verifyingContract should be an AddressLike and use resolveAddress\n\n/**\n *  The domain for an [[link-eip-712]] payload.\n */\nexport interface TypedDataDomain {\n    /**\n     *  The human-readable name of the signing domain.\n     */\n    name?: null | string;\n\n    /**\n     *  The major version of the signing domain.\n     */\n    version?: null | string;\n\n    /**\n     *  The chain ID of the signing domain.\n     */\n    chainId?: null | BigNumberish;\n\n    /**\n     *  The the address of the contract that will verify the signature.\n     */\n    verifyingContract?: null | string;\n\n    /**\n     *  A salt used for purposes decided by the specific domain.\n     */\n    salt?: null | BytesLike;\n};\n\n/**\n *  A specific field of a structured [[link-eip-712]] type.\n */\nexport interface TypedDataField {\n    /**\n     *  The field name.\n     */\n    name: string;\n\n    /**\n     *  The type of the field.\n     */\n    type: string;\n};\n\nfunction hexPadRight(value: BytesLike): string {\n    const bytes = getBytes(value);\n    const padOffset = bytes.length % 32\n    if (padOffset) {\n        return concat([ bytes, padding.slice(padOffset) ]);\n    }\n    return hexlify(bytes);\n}\n\nconst hexTrue = toBeHex(BN_1, 32);\nconst hexFalse = toBeHex(BN_0, 32);\n\nconst domainFieldTypes: Record<string, string> = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\n\nconst domainFieldNames: Array<string> = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\n\nfunction checkString(key: string): (value: any) => string {\n    return function (value: any){\n        assertArgument(typeof(value) === \"string\", `invalid domain value for ${ JSON.stringify(key) }`, `domain.${ key }`, value);\n        return value;\n    }\n}\n\nconst domainChecks: Record<string, (value: any) => any> = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function(_value: any) {\n        const value = getBigInt(_value, \"domain.chainId\");\n        assertArgument(value >= 0, \"invalid chain ID\", \"domain.chainId\", _value);\n        if (Number.isSafeInteger(value)) { return Number(value); }\n        return toQuantity(value);\n    },\n    verifyingContract: function(value: any) {\n        try {\n            return getAddress(value).toLowerCase();\n        } catch (error) { }\n        assertArgument(false, `invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function(value: any) {\n        const bytes = getBytes(value, \"domain.salt\");\n        assertArgument(bytes.length === 32, `invalid domain value \"salt\"`, \"domain.salt\", value);\n        return hexlify(bytes);\n    }\n}\n\nfunction getBaseEncoder(type: string): null | ((value: any) => string) {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n\n            const width = parseInt(match[2] || \"256\");\n            assertArgument(width % 8 === 0 && width !== 0 && width <= 256 && (match[2] == null || match[2] === String(width)), \"invalid numeric width\", \"type\", type);\n\n            const boundsUpper = mask(BN_MAX_UINT256, signed ? (width - 1): width);\n            const boundsLower = signed ? ((boundsUpper + BN_1) * BN__1): BN_0;\n\n            return function(_value: BigNumberish) {\n                const value = getBigInt(_value, \"value\");\n\n                assertArgument(value >= boundsLower && value <= boundsUpper, `value out-of-bounds for ${ type }`, \"value\", value);\n\n                return toBeHex(signed ? toTwos(value, 256): value, 32);\n            };\n        }\n    }\n\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            assertArgument(width !== 0 && width <= 32 && match[1] === String(width), \"invalid bytes width\", \"type\", type);\n\n            return function(value: BytesLike) {\n                const bytes = getBytes(value);\n                assertArgument(bytes.length === width, `invalid length for ${ type }`, \"value\", value);\n                return hexPadRight(value);\n            };\n        }\n    }\n\n    switch (type) {\n        case \"address\": return function(value: string) {\n            return zeroPadValue(getAddress(value), 32);\n        };\n        case \"bool\": return function(value: boolean) {\n            return ((!value) ? hexFalse: hexTrue);\n        };\n        case \"bytes\": return function(value: BytesLike) {\n            return keccak256(value);\n        };\n        case \"string\": return function(value: string) {\n            return id(value);\n        };\n    }\n\n    return null;\n}\n\nfunction encodeType(name: string, fields: Array<TypedDataField>): string {\n    return `${ name }(${ fields.map(({ name, type }) => (type + \" \" + name)).join(\",\") })`;\n}\n\n/**\n *  A **TypedDataEncode** prepares and encodes [[link-eip-712]] payloads\n *  for signed typed data.\n *\n *  This is useful for those that wish to compute various components of a\n *  typed data hash, primary types, or sub-components, but generally the\n *  higher level [[Signer-signTypedData]] is more useful.\n */\nexport class TypedDataEncoder {\n    /**\n     *  The primary type for the structured [[types]].\n     *\n     *  This is derived automatically from the [[types]], since no\n     *  recursion is possible, once the DAG for the types is consturcted\n     *  internally, the primary type must be the only remaining type with\n     *  no parent nodes.\n     */\n    readonly primaryType!: string;\n\n    readonly #types: string;\n\n    /**\n     *  The types.\n     */\n    get types(): Record<string, Array<TypedDataField>> {\n        return JSON.parse(this.#types);\n    }\n\n    readonly #fullTypes: Map<string, string>\n\n    readonly #encoderCache: Map<string, (value: any) => string>;\n\n    /**\n     *  Create a new **TypedDataEncoder** for %%types%%.\n     *\n     *  This performs all necessary checking that types are valid and\n     *  do not violate the [[link-eip-712]] structural constraints as\n     *  well as computes the [[primaryType]].\n     */\n    constructor(types: Record<string, Array<TypedDataField>>) {\n        this.#types = JSON.stringify(types);\n        this.#fullTypes = new Map();\n        this.#encoderCache = new Map();\n\n        // Link struct types to their direct child structs\n        const links: Map<string, Set<string>> = new Map();\n\n        // Link structs to structs which contain them as a child\n        const parents: Map<string, Array<string>> = new Map();\n\n        // Link all subtypes within a given struct\n        const subtypes: Map<string, Set<string>> = new Map();\n\n        Object.keys(types).forEach((type) => {\n            links.set(type, new Set());\n            parents.set(type, [ ]);\n            subtypes.set(type, new Set());\n        });\n\n        for (const name in types) {\n            const uniqueNames: Set<string> = new Set();\n\n            for (const field of types[name]) {\n\n                // Check each field has a unique name\n                assertArgument(!uniqueNames.has(field.name), `duplicate variable name ${ JSON.stringify(field.name) } in ${ JSON.stringify(name) }`, \"types\", types);\n                uniqueNames.add(field.name);\n\n                // Get the base type (drop any array specifiers)\n                const baseType = (<any>(field.type.match(/^([^\\x5b]*)(\\x5b|$)/)))[1] || null;\n                assertArgument(baseType !== name, `circular type reference to ${ JSON.stringify(baseType) }`, \"types\", types);\n\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) { continue; }\n\n                assertArgument(parents.has(baseType), `unknown type ${ JSON.stringify(baseType) }`, \"types\", types);\n\n                // Add linkage\n                (parents.get(baseType) as Array<string>).push(name);\n                (links.get(name) as Set<string>).add(baseType);\n            }\n        }\n\n        // Deduce the primary type\n        const primaryTypes = Array.from(parents.keys()).filter((n) => ((parents.get(n) as Array<string>).length === 0));\n        assertArgument(primaryTypes.length !== 0, \"missing primary type\", \"types\", types);\n        assertArgument(primaryTypes.length === 1, `ambiguous primary types or unused types: ${ primaryTypes.map((t) => (JSON.stringify(t))).join(\", \") }`, \"types\", types);\n\n        defineProperties<TypedDataEncoder>(this, { primaryType: primaryTypes[0] });\n\n        // Check for circular type references\n        function checkCircular(type: string, found: Set<string>) {\n            assertArgument(!found.has(type), `circular type reference to ${ JSON.stringify(type) }`, \"types\", types);\n\n            found.add(type);\n\n            for (const child of (links.get(type) as Set<string>)) {\n                if (!parents.has(child)) { continue; }\n\n                // Recursively check children\n                checkCircular(child, found);\n\n                // Mark all ancestors as having this decendant\n                for (const subtype of found) {\n                    (subtypes.get(subtype) as Set<string>).add(child);\n                }\n            }\n\n            found.delete(type);\n        }\n        checkCircular(this.primaryType, new Set());\n\n        // Compute each fully describe type\n        for (const [ name, set ] of subtypes) {\n            const st = Array.from(set);\n            st.sort();\n            this.#fullTypes.set(name, encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\"));\n        }\n    }\n\n    /**\n     *  Returnthe encoder for the specific %%type%%.\n     */\n    getEncoder(type: string): (value: any) => string {\n        let encoder = this.#encoderCache.get(type);\n        if (!encoder) {\n            encoder = this.#getEncoder(type);\n            this.#encoderCache.set(type, encoder);\n        }\n        return encoder;\n    }\n\n    #getEncoder(type: string): (value: any) => string {\n\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return encoder; }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            return (value: Array<any>) => {\n                assertArgument(!match[3] || parseInt(match[3]) === value.length, `array length mismatch; expected length ${ parseInt(match[3]) }`, \"value\", value);\n\n                let result = value.map(subEncoder);\n                if (this.#fullTypes.has(subtype)) {\n                    result = result.map(keccak256);\n                }\n\n                return keccak256(concat(result));\n            };\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this.#fullTypes.get(type) as string);\n            return (value: Record<string, any>) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this.#fullTypes.has(type)) { return keccak256(result); }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return concat(values);\n            }\n        }\n\n        assertArgument(false, `unknown type: ${ type }`, \"type\", type);\n    }\n\n    /**\n     *  Return the full type for %%name%%.\n     */\n    encodeType(name: string): string {\n        const result = this.#fullTypes.get(name);\n        assertArgument(result, `unknown type: ${ JSON.stringify(name) }`, \"name\", name);\n        return result;\n    }\n\n    /**\n     *  Return the encoded %%value%% for the %%type%%.\n     */\n    encodeData(type: string, value: any): string {\n        return this.getEncoder(type)(value);\n    }\n\n    /**\n     *  Returns the hash of %%value%% for the type of %%name%%.\n     */\n    hashStruct(name: string, value: Record<string, any>): string {\n        return keccak256(this.encodeData(name, value));\n    }\n\n    /**\n     *  Return the fulled encoded %%value%% for the [[types]].\n     */\n    encode(value: Record<string, any>): string {\n        return this.encodeData(this.primaryType, value);\n    }\n\n    /**\n     *  Return the hash of the fully encoded %%value%% for the [[types]].\n     */\n    hash(value: Record<string, any>): string {\n        return this.hashStruct(this.primaryType, value);\n    }\n\n    /**\n     *  @_ignore:\n     */\n    _visit(type: string, value: any, callback: (type: string, data: any) => any): any {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return callback(type, value); }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            assertArgument(!match[3] || parseInt(match[3]) === value.length, `array length mismatch; expected length ${ parseInt(match[3]) }`, \"value\", value);\n            return value.map((v: any) => this._visit(match[1], v, callback));\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, <Record<string, any>>{});\n        }\n\n        assertArgument(false, `unknown type: ${ type }`, \"type\", type);\n    }\n\n    /**\n     *  Call %%calback%% for each value in %%value%%, passing the type and\n     *  component within %%value%%.\n     *\n     *  This is useful for replacing addresses or other transformation that\n     *  may be desired on each component, based on its type.\n     */\n    visit(value: Record<string, any>, callback: (type: string, data: any) => any): any {\n        return this._visit(this.primaryType, value, callback);\n    }\n\n    /**\n     *  Create a new **TypedDataEncoder** for %%types%%.\n     */\n    static from(types: Record<string, Array<TypedDataField>>): TypedDataEncoder {\n        return new TypedDataEncoder(types);\n    }\n\n    /**\n     *  Return the primary type for %%types%%.\n     */\n    static getPrimaryType(types: Record<string, Array<TypedDataField>>): string {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n\n    /**\n     *  Return the hashed struct for %%value%% using %%types%% and %%name%%.\n     */\n    static hashStruct(name: string, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n\n    /**\n     *  Return the domain hash for %%domain%%.\n     */\n    static hashDomain(domain: TypedDataDomain): string {\n        const domainFields: Array<TypedDataField> = [ ];\n        for (const name in domain) {\n            if ((<Record<string, any>>domain)[name] == null) { continue; }\n            const type = domainFieldTypes[name];\n            assertArgument(type, `invalid typed-data domain key: ${ JSON.stringify(name) }`, \"domain\", domain);\n            domainFields.push({ name, type });\n        }\n\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n\n    /**\n     *  Return the fully encoded [[link-eip-712]] %%value%% for %%types%% with %%domain%%.\n     */\n    static encode(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return concat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n\n    /**\n     *  Return the hash of the fully encoded [[link-eip-712]] %%value%% for %%types%% with %%domain%%.\n     */\n    static hash(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n\n    // Replaces all address types with ENS names with their looked up address\n    /**\n     * Resolves to the value from resolving all addresses in %%value%% for\n     * %%types%% and the %%domain%%.\n     */\n    static async resolveNames(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, resolveName: (name: string) => Promise<string>): Promise<{ domain: TypedDataDomain, value: any }> {\n        // Make a copy to isolate it from the object passed in\n        domain = Object.assign({ }, domain);\n\n        // Allow passing null to ignore value\n        for (const key in domain) {\n            if ((<Record<string, any>>domain)[key] == null) {\n                delete (<Record<string, any>>domain)[key];\n            }\n        }\n\n        // Look up all ENS names\n        const ensCache: Record<string, string> = { };\n\n        // Do we need to look up the domain's verifyingContract?\n        if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n            ensCache[domain.verifyingContract] = \"0x\";\n        }\n\n        // We are going to use the encoder to visit all the base values\n        const encoder = TypedDataEncoder.from(types);\n\n        // Get a list of all the addresses\n        encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && !isHexString(value, 20)) {\n                ensCache[value] = \"0x\";\n            }\n            return value;\n        });\n\n        // Lookup each name\n        for (const name in ensCache) {\n            ensCache[name] = await resolveName(name);\n        }\n\n        // Replace the domain verifyingContract if needed\n        if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n            domain.verifyingContract = ensCache[domain.verifyingContract];\n        }\n\n        // Replace all ENS names with their address\n        value = encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && ensCache[value]) { return ensCache[value]; }\n            return value;\n        });\n\n        return { domain, value };\n    }\n\n    /**\n     *  Returns the JSON-encoded payload expected by nodes which implement\n     *  the JSON-RPC [[link-eip-712]] method.\n     */\n    static getPayload(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): any {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n\n        // Derive the EIP712Domain Struct reference type\n        const domainValues: Record<string, any> = { };\n        const domainTypes: Array<{ name: string, type:string }> = [ ];\n\n        domainFieldNames.forEach((name) => {\n            const value = (<any>domain)[name];\n            if (value == null) { return; }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n\n        const encoder = TypedDataEncoder.from(types);\n\n        const typesWithDomain = Object.assign({ }, types);\n        assertArgument(typesWithDomain.EIP712Domain == null, \"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n\n        typesWithDomain.EIP712Domain = domainTypes;\n\n        // Validate the data structures and types\n        encoder.encode(value);\n\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type: string, value: any) => {\n\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(getBytes(value));\n                }\n\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return getBigInt(value).toString();\n                }\n\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        assertArgument(typeof(value) === \"string\", \"invalid string\", \"value\", value);\n                        return value;\n                }\n\n                assertArgument(false, \"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n\n/**\n *  Compute the address used to sign the typed data for the %%signature%%.\n */\nexport function verifyTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, signature: SignatureLike): string {\n    return recoverAddress(TypedDataEncoder.hash(domain, types, value), signature);\n}\n","import { getAddress } from \"../address/index.js\";\nimport { assertArgument, isHexString } from \"../utils/index.js\";\n\nimport type { AccessList, AccessListish } from \"./index.js\";\n\n\nfunction accessSetify(addr: string, storageKeys: Array<string>): { address: string,storageKeys: Array<string> } {\n    return {\n        address: getAddress(addr),\n        storageKeys: storageKeys.map((storageKey, index) => {\n            assertArgument(isHexString(storageKey, 32), \"invalid slot\", `storageKeys[${ index }]`, storageKey);\n            return storageKey.toLowerCase();\n        })\n    };\n}\n\n/**\n *  Returns a [[AccessList]] from any ethers-supported access-list structure.\n */\nexport function accessListify(value: AccessListish): AccessList {\n    if (Array.isArray(value)) {\n        return (<Array<[ string, Array<string>] | { address: string, storageKeys: Array<string>}>>value).map((set, index) => {\n            if (Array.isArray(set)) {\n                assertArgument(set.length === 2, \"invalid slot set\", `value[${ index }]`, set);\n                return accessSetify(set[0], set[1])\n            }\n            assertArgument(set != null && typeof(set) === \"object\", \"invalid address-slot set\", \"value\", value);\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n\n    assertArgument(value != null && typeof(value) === \"object\", \"invalid access list\", \"value\", value);\n\n    const result: Array<{ address: string, storageKeys: Array<string> }> = Object.keys(value).map((addr) => {\n        const storageKeys: Record<string, true> = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, <Record<string, true>>{ });\n        return accessSetify(addr, Object.keys(storageKeys).sort())\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\n","import { assert } from \"./errors.js\";\n\nimport type {\n    FetchGetUrlFunc, FetchRequest, FetchCancelSignal, GetUrlResponse\n} from \"./fetch.js\";\n\n\ndeclare global {\n    class Headers {\n        constructor(values: Array<[ string, string ]>);\n        forEach(func: (v: string, k: string) => void): void;\n    }\n\n    class Response {\n        status: number;\n        statusText: string;\n        headers: Headers;\n        arrayBuffer(): Promise<ArrayBuffer>;\n    }\n\n    type FetchInit = {\n        method?: string,\n        headers?: Headers,\n        body?: Uint8Array\n    };\n\n    function fetch(url: string, init: FetchInit): Promise<Response>;\n}\n\n// @TODO: timeout is completely ignored; start a Promise.any with a reject?\n\nexport function createGetUrl(options?: Record<string, any>): FetchGetUrlFunc {\n\n    async function getUrl(req: FetchRequest, _signal?: FetchCancelSignal): Promise<GetUrlResponse> {\n        const protocol = req.url.split(\":\")[0].toLowerCase();\n\n        assert(protocol === \"http\" || protocol === \"https\", `unsupported protocol ${ protocol }`, \"UNSUPPORTED_OPERATION\", {\n            info: { protocol },\n            operation: \"request\"\n        });\n\n        assert(protocol === \"https\" || !req.credentials || req.allowInsecureAuthentication, \"insecure authorized connections unsupported\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"request\"\n        });\n\n        let signal: undefined | AbortSignal = undefined;\n        if (_signal) {\n            const controller = new AbortController();\n            signal = controller.signal;\n            _signal.addListener(() => { controller.abort(); });\n        }\n\n        const init = {\n            method: req.method,\n            headers: new Headers(Array.from(req)),\n            body: req.body || undefined,\n            signal\n        };\n\n        const resp = await fetch(req.url, init);\n\n        const headers: Record<string, string> = { };\n        resp.headers.forEach((value, key) => {\n            headers[key.toLowerCase()] = value;\n        });\n\n        const respBody = await resp.arrayBuffer();\n        const body = (respBody == null) ? null: new Uint8Array(respBody);\n\n        return {\n            statusCode: resp.status,\n            statusMessage: resp.statusText,\n            headers, body\n        };\n    }\n\n    return getUrl;\n}\n\n// @TODO: remove in v7; provided for backwards compat\nconst defaultGetUrl: FetchGetUrlFunc = createGetUrl({ });\n\nexport async function getUrl(req: FetchRequest, _signal?: FetchCancelSignal): Promise<GetUrlResponse> {\n    return defaultGetUrl(req, _signal);\n}\n\n","/**\n *  Fetching content from the web is environment-specific, so Ethers\n *  provides an abstraction that each environment can implement to provide\n *  this service.\n *\n *  On [Node.js](link-node), the ``http`` and ``https`` libs are used to\n *  create a request object, register event listeners and process data\n *  and populate the [[FetchResponse]].\n *\n *  In a browser, the [DOM fetch](link-js-fetch) is used, and the resulting\n *  ``Promise`` is waited on to retrieve the payload.\n *\n *  The [[FetchRequest]] is responsible for handling many common situations,\n *  such as redirects, server throttling, authentication, etc.\n *\n *  It also handles common gateways, such as IPFS and data URIs.\n *\n *  @_section api/utils/fetching:Fetching Web Content  [about-fetch]\n */\nimport { decodeBase64, encodeBase64 } from \"./base64.js\";\nimport { hexlify } from \"./data.js\";\nimport { assert, assertArgument } from \"./errors.js\";\nimport { defineProperties } from \"./properties.js\";\nimport { toUtf8Bytes, toUtf8String } from \"./utf8.js\";\n\nimport { createGetUrl } from \"./geturl.js\";\n\n/**\n *  An environment's implementation of ``getUrl`` must return this type.\n */\nexport type GetUrlResponse = {\n    statusCode: number,\n    statusMessage: string,\n    headers: Record<string, string>,\n    body: null | Uint8Array\n};\n\n/**\n *  This can be used to control how throttling is handled in\n *  [[FetchRequest-setThrottleParams]].\n */\nexport type FetchThrottleParams = {\n    maxAttempts?: number;\n    slotInterval?: number;\n};\n\n/**\n *  Called before any network request, allowing updated headers (e.g. Bearer tokens), etc.\n */\nexport type FetchPreflightFunc = (req: FetchRequest) => Promise<FetchRequest>;\n\n/**\n *  Called on the response, allowing client-based throttling logic or post-processing.\n */\nexport type FetchProcessFunc = (req: FetchRequest, resp: FetchResponse) => Promise<FetchResponse>;\n\n/**\n *  Called prior to each retry; return true to retry, false to abort.\n */\nexport type FetchRetryFunc = (req: FetchRequest, resp: FetchResponse, attempt: number) => Promise<boolean>;\n\n/**\n *  Called on Gateway URLs.\n */\nexport type FetchGatewayFunc = (url: string, signal?: FetchCancelSignal) => Promise<FetchRequest | FetchResponse>;\n\n/**\n *  Used to perform a fetch; use this to override the underlying network\n *  fetch layer. In NodeJS, the default uses the \"http\" and \"https\" libraries\n *  and in the browser ``fetch`` is used. If you wish to use Axios, this is\n *  how you would register it.\n */\nexport type FetchGetUrlFunc = (req: FetchRequest, signal?: FetchCancelSignal) => Promise<GetUrlResponse>;\n\n\nconst MAX_ATTEMPTS = 12;\nconst SLOT_INTERVAL = 250;\n\n// The global FetchGetUrlFunc implementation.\nlet defaultGetUrlFunc: FetchGetUrlFunc = createGetUrl();\n\nconst reData = new RegExp(\"^data:([^;:]*)?(;base64)?,(.*)$\", \"i\");\nconst reIpfs = new RegExp(\"^ipfs:/\\/(ipfs/)?(.*)$\", \"i\");\n\n// If locked, new Gateways cannot be added\nlet locked = false;\n\n// https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URLs\nasync function dataGatewayFunc(url: string, signal?: FetchCancelSignal): Promise<FetchResponse> {\n    try {\n        const match = url.match(reData);\n        if (!match) { throw new Error(\"invalid data\"); }\n        return new FetchResponse(200, \"OK\", {\n            \"content-type\": (match[1] || \"text/plain\"),\n        }, (match[2] ? decodeBase64(match[3]): unpercent(match[3])));\n    } catch (error) {\n        return new FetchResponse(599, \"BAD REQUEST (invalid data: URI)\", { }, null, new FetchRequest(url));\n    }\n}\n\n/**\n *  Returns a [[FetchGatewayFunc]] for fetching content from a standard\n *  IPFS gateway hosted at %%baseUrl%%.\n */\nfunction getIpfsGatewayFunc(baseUrl: string): FetchGatewayFunc {\n    async function gatewayIpfs(url: string, signal?: FetchCancelSignal): Promise<FetchRequest | FetchResponse> {\n        try {\n            const match = url.match(reIpfs);\n            if (!match) { throw new Error(\"invalid link\"); }\n            return new FetchRequest(`${ baseUrl }${ match[2] }`);\n        } catch (error) {\n            return new FetchResponse(599, \"BAD REQUEST (invalid IPFS URI)\", { }, null, new FetchRequest(url));\n        }\n    }\n\n    return gatewayIpfs;\n}\n\nconst Gateways: Record<string, FetchGatewayFunc> = {\n    \"data\": dataGatewayFunc,\n    \"ipfs\": getIpfsGatewayFunc(\"https:/\\/gateway.ipfs.io/ipfs/\")\n};\n\nconst fetchSignals: WeakMap<FetchRequest, () => void> = new WeakMap();\n\n/**\n *  @_ignore\n */\nexport class FetchCancelSignal {\n    #listeners: Array<() => void>;\n    #cancelled: boolean;\n\n    constructor(request: FetchRequest) {\n        this.#listeners = [ ];\n        this.#cancelled = false;\n\n        fetchSignals.set(request, () => {\n            if (this.#cancelled) { return; }\n            this.#cancelled = true;\n\n            for (const listener of this.#listeners) {\n                setTimeout(() => { listener(); }, 0);\n            }\n            this.#listeners = [ ];\n        });\n    }\n\n    addListener(listener: () => void): void {\n        assert(!this.#cancelled, \"singal already cancelled\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"fetchCancelSignal.addCancelListener\"\n        });\n        this.#listeners.push(listener);\n    }\n\n    get cancelled(): boolean { return this.#cancelled; }\n\n    checkSignal(): void {\n        assert(!this.cancelled, \"cancelled\", \"CANCELLED\", { });\n    }\n}\n\n// Check the signal, throwing if it is cancelled\nfunction checkSignal(signal?: FetchCancelSignal): FetchCancelSignal {\n    if (signal == null) { throw new Error(\"missing signal; should not happen\"); }\n    signal.checkSignal();\n    return signal;\n}\n\n/**\n *  Represents a request for a resource using a URI.\n *\n *  By default, the supported schemes are ``HTTP``, ``HTTPS``, ``data:``,\n *  and ``IPFS:``.\n *\n *  Additional schemes can be added globally using [[registerGateway]].\n *\n *  @example:\n *    req = new FetchRequest(\"https://www.ricmoo.com\")\n *    resp = await req.send()\n *    resp.body.length\n *    //_result:\n */\nexport class FetchRequest implements Iterable<[ key: string, value: string ]> {\n    #allowInsecure: boolean;\n    #gzip: boolean;\n    #headers: Record<string, string>;\n    #method: string;\n    #timeout: number;\n    #url: string;\n\n    #body?: Uint8Array;\n    #bodyType?: string;\n    #creds?: string;\n\n    // Hooks\n    #preflight?: null | FetchPreflightFunc;\n    #process?: null | FetchProcessFunc;\n    #retry?: null | FetchRetryFunc;\n\n    #signal?: FetchCancelSignal;\n\n    #throttle: Required<FetchThrottleParams>;\n\n    #getUrlFunc: null | FetchGetUrlFunc;\n\n    /**\n     *  The fetch URL to request.\n     */\n    get url(): string { return this.#url; }\n    set url(url: string) {\n        this.#url = String(url);\n    }\n\n    /**\n     *  The fetch body, if any, to send as the request body. //(default: null)//\n     *\n     *  When setting a body, the intrinsic ``Content-Type`` is automatically\n     *  set and will be used if **not overridden** by setting a custom\n     *  header.\n     *\n     *  If %%body%% is null, the body is cleared (along with the\n     *  intrinsic ``Content-Type``).\n     *\n     *  If %%body%% is a string, the intrinsic ``Content-Type`` is set to\n     *  ``text/plain``.\n     *\n     *  If %%body%% is a Uint8Array, the intrinsic ``Content-Type`` is set to\n     *  ``application/octet-stream``.\n     *\n     *  If %%body%% is any other object, the intrinsic ``Content-Type`` is\n     *  set to ``application/json``.\n     */\n    get body(): null | Uint8Array {\n        if (this.#body == null) { return null; }\n        return new Uint8Array(this.#body);\n    }\n    set body(body: null | string | Readonly<object> | Readonly<Uint8Array>) {\n        if (body == null) {\n            this.#body = undefined;\n            this.#bodyType = undefined;\n        } else if (typeof(body) === \"string\") {\n            this.#body = toUtf8Bytes(body);\n            this.#bodyType = \"text/plain\";\n        } else if (body instanceof Uint8Array) {\n            this.#body = body;\n            this.#bodyType = \"application/octet-stream\";\n        } else if (typeof(body) === \"object\") {\n            this.#body = toUtf8Bytes(JSON.stringify(body));\n            this.#bodyType = \"application/json\";\n        } else {\n            throw new Error(\"invalid body\");\n        }\n    }\n\n    /**\n     *  Returns true if the request has a body.\n     */\n    hasBody(): this is (FetchRequest & { body: Uint8Array }) {\n        return (this.#body != null);\n    }\n\n    /**\n     *  The HTTP method to use when requesting the URI. If no method\n     *  has been explicitly set, then ``GET`` is used if the body is\n     *  null and ``POST`` otherwise.\n     */\n    get method(): string {\n        if (this.#method) { return this.#method; }\n        if (this.hasBody()) { return \"POST\"; }\n        return \"GET\";\n    }\n    set method(method: null | string) {\n        if (method == null) { method = \"\"; }\n        this.#method = String(method).toUpperCase();\n    }\n\n    /**\n     *  The headers that will be used when requesting the URI. All\n     *  keys are lower-case.\n     *\n     *  This object is a copy, so any changes will **NOT** be reflected\n     *  in the ``FetchRequest``.\n     *\n     *  To set a header entry, use the ``setHeader`` method.\n     */\n    get headers(): Record<string, string> {\n        const headers = Object.assign({ }, this.#headers);\n\n        if (this.#creds) {\n            headers[\"authorization\"] = `Basic ${ encodeBase64(toUtf8Bytes(this.#creds)) }`;\n        };\n\n        if (this.allowGzip) {\n            headers[\"accept-encoding\"] = \"gzip\";\n        }\n\n        if (headers[\"content-type\"] == null && this.#bodyType) {\n            headers[\"content-type\"] = this.#bodyType;\n        }\n        if (this.body) { headers[\"content-length\"] = String(this.body.length); }\n\n        return headers;\n    }\n\n    /**\n     *  Get the header for %%key%%, ignoring case.\n     */\n    getHeader(key: string): string {\n        return this.headers[key.toLowerCase()];\n    }\n\n    /**\n     *  Set the header for %%key%% to %%value%%. All values are coerced\n     *  to a string.\n     */\n    setHeader(key: string, value: string | number): void {\n        this.#headers[String(key).toLowerCase()] = String(value);\n    }\n\n    /**\n     *  Clear all headers, resetting all intrinsic headers.\n     */\n    clearHeaders(): void {\n        this.#headers = { };\n    }\n\n    [Symbol.iterator](): Iterator<[ key: string, value: string ]> {\n        const headers = this.headers;\n        const keys = Object.keys(headers);\n        let index = 0;\n        return {\n            next: () => {\n                if (index < keys.length) {\n                    const key = keys[index++];\n                    return {\n                        value: [ key, headers[key] ], done: false\n                    }\n                }\n                return { value: undefined, done: true };\n            }\n        };\n    }\n\n    /**\n     *  The value that will be sent for the ``Authorization`` header.\n     *\n     *  To set the credentials, use the ``setCredentials`` method.\n     */\n    get credentials(): null | string {\n        return this.#creds || null;\n    }\n\n    /**\n     *  Sets an ``Authorization`` for %%username%% with %%password%%.\n     */\n    setCredentials(username: string, password: string): void {\n        assertArgument(!username.match(/:/), \"invalid basic authentication username\", \"username\", \"[REDACTED]\");\n        this.#creds = `${ username }:${ password }`;\n    }\n\n    /**\n     *  Enable and request gzip-encoded responses. The response will\n     *  automatically be decompressed. //(default: true)//\n     */\n    get allowGzip(): boolean {\n        return this.#gzip;\n    }\n    set allowGzip(value: boolean) {\n        this.#gzip = !!value;\n    }\n\n    /**\n     *  Allow ``Authentication`` credentials to be sent over insecure\n     *  channels. //(default: false)//\n     */\n    get allowInsecureAuthentication(): boolean {\n        return !!this.#allowInsecure;\n    }\n    set allowInsecureAuthentication(value: boolean) {\n        this.#allowInsecure = !!value;\n    }\n\n    /**\n     *  The timeout (in milliseconds) to wait for a complete response.\n     *  //(default: 5 minutes)//\n     */\n    get timeout(): number { return this.#timeout; }\n    set timeout(timeout: number) {\n        assertArgument(timeout >= 0, \"timeout must be non-zero\", \"timeout\", timeout);\n        this.#timeout = timeout;\n    }\n\n    /**\n     *  This function is called prior to each request, for example\n     *  during a redirection or retry in case of server throttling.\n     *\n     *  This offers an opportunity to populate headers or update\n     *  content before sending a request.\n     */\n    get preflightFunc(): null | FetchPreflightFunc {\n        return this.#preflight || null;\n    }\n    set preflightFunc(preflight: null | FetchPreflightFunc) {\n        this.#preflight = preflight;\n    }\n\n    /**\n     *  This function is called after each response, offering an\n     *  opportunity to provide client-level throttling or updating\n     *  response data.\n     *\n     *  Any error thrown in this causes the ``send()`` to throw.\n     *\n     *  To schedule a retry attempt (assuming the maximum retry limit\n     *  has not been reached), use [[response.throwThrottleError]].\n     */\n    get processFunc(): null | FetchProcessFunc {\n        return this.#process || null;\n    }\n    set processFunc(process: null | FetchProcessFunc) {\n        this.#process = process;\n    }\n\n    /**\n     *  This function is called on each retry attempt.\n     */\n    get retryFunc(): null | FetchRetryFunc {\n        return this.#retry || null;\n    }\n    set retryFunc(retry: null | FetchRetryFunc) {\n        this.#retry = retry;\n    }\n\n    /**\n     *  This function is called to fetch content from HTTP and\n     *  HTTPS URLs and is platform specific (e.g. nodejs vs\n     *  browsers).\n     *\n     *  This is by default the currently registered global getUrl\n     *  function, which can be changed using [[registerGetUrl]].\n     *  If this has been set, setting is to ``null`` will cause\n     *  this FetchRequest (and any future clones) to revert back to\n     *  using the currently registered global getUrl function.\n     *\n     *  Setting this is generally not necessary, but may be useful\n     *  for developers that wish to intercept requests or to\n     *  configurege a proxy or other agent.\n     */\n    get getUrlFunc(): FetchGetUrlFunc {\n        return this.#getUrlFunc || defaultGetUrlFunc;\n    }\n    set getUrlFunc(value: null | FetchGetUrlFunc) {\n        this.#getUrlFunc = value;\n    }\n\n    /**\n     *  Create a new FetchRequest instance with default values.\n     *\n     *  Once created, each property may be set before issuing a\n     *  ``.send()`` to make the request.\n     */\n    constructor(url: string) {\n        this.#url = String(url);\n\n        this.#allowInsecure = false;\n        this.#gzip = true;\n        this.#headers = { };\n        this.#method = \"\";\n        this.#timeout = 300000;\n\n        this.#throttle = {\n            slotInterval: SLOT_INTERVAL,\n            maxAttempts: MAX_ATTEMPTS\n        };\n\n        this.#getUrlFunc = null;\n    }\n\n    toString(): string {\n        return `<FetchRequest method=${ JSON.stringify(this.method) } url=${ JSON.stringify(this.url) } headers=${ JSON.stringify(this.headers) } body=${ this.#body ? hexlify(this.#body): \"null\" }>`;\n    }\n\n    /**\n     *  Update the throttle parameters used to determine maximum\n     *  attempts and exponential-backoff properties.\n     */\n    setThrottleParams(params: FetchThrottleParams): void {\n        if (params.slotInterval != null) {\n            this.#throttle.slotInterval = params.slotInterval;\n        }\n        if (params.maxAttempts != null) {\n            this.#throttle.maxAttempts = params.maxAttempts;\n        }\n    }\n\n    async #send(attempt: number, expires: number, delay: number, _request: FetchRequest, _response: FetchResponse): Promise<FetchResponse> {\n        if (attempt >= this.#throttle.maxAttempts) {\n            return _response.makeServerError(\"exceeded maximum retry limit\");\n        }\n\n        assert(getTime() <= expires, \"timeout\", \"TIMEOUT\", {\n            operation: \"request.send\", reason: \"timeout\", request: _request\n        });\n\n        if (delay > 0) { await wait(delay); }\n\n        let req = this.clone();\n        const scheme = (req.url.split(\":\")[0] || \"\").toLowerCase();\n\n        // Process any Gateways\n        if (scheme in Gateways) {\n            const result = await Gateways[scheme](req.url, checkSignal(_request.#signal));\n            if (result instanceof FetchResponse) {\n                let response = result;\n\n                if (this.processFunc) {\n                    checkSignal(_request.#signal);\n                    try {\n                        response = await this.processFunc(req, response);\n                    } catch (error: any) {\n\n                        // Something went wrong during processing; throw a 5xx server error\n                        if (error.throttle == null || typeof(error.stall) !== \"number\") {\n                            response.makeServerError(\"error in post-processing function\", error).assertOk();\n                        }\n\n                        // Ignore throttling\n                    }\n                }\n\n                return response;\n            }\n            req = result;\n        }\n\n        // We have a preflight function; update the request\n        if (this.preflightFunc) { req = await this.preflightFunc(req); }\n\n        const resp = await this.getUrlFunc(req, checkSignal(_request.#signal));\n        let response = new FetchResponse(resp.statusCode, resp.statusMessage, resp.headers, resp.body, _request);\n\n        if (response.statusCode === 301 || response.statusCode === 302) {\n\n            // Redirect\n            try {\n                const location = response.headers.location || \"\";\n                return req.redirect(location).#send(attempt + 1, expires, 0, _request, response);\n            } catch (error) { }\n\n            // Things won't get any better on another attempt; abort\n            return response;\n\n        } else if (response.statusCode === 429) {\n\n            // Throttle\n            if (this.retryFunc == null || (await this.retryFunc(req, response, attempt))) {\n                const retryAfter = response.headers[\"retry-after\"];\n                let delay = this.#throttle.slotInterval * Math.trunc(Math.random() * Math.pow(2, attempt));\n                if (typeof(retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                    delay = parseInt(retryAfter);\n                }\n                return req.clone().#send(attempt + 1, expires, delay, _request, response);\n            }\n        }\n\n        if (this.processFunc) {\n            checkSignal(_request.#signal);\n            try {\n                response = await this.processFunc(req, response);\n            } catch (error: any) {\n\n                // Something went wrong during processing; throw a 5xx server error\n                if (error.throttle == null || typeof(error.stall) !== \"number\") {\n                    response.makeServerError(\"error in post-processing function\", error).assertOk();\n                }\n\n                // Throttle\n                let delay = this.#throttle.slotInterval * Math.trunc(Math.random() * Math.pow(2, attempt));;\n                if (error.stall >= 0) { delay = error.stall; }\n\n                return req.clone().#send(attempt + 1, expires, delay, _request, response);\n            }\n        }\n\n        return response;\n    }\n\n    /**\n     *  Resolves to the response by sending the request.\n     */\n    send(): Promise<FetchResponse> {\n        assert(this.#signal == null, \"request already sent\", \"UNSUPPORTED_OPERATION\", { operation: \"fetchRequest.send\" });\n        this.#signal = new FetchCancelSignal(this);\n        return this.#send(0, getTime() + this.timeout, 0, this, new FetchResponse(0, \"\", { }, null, this));\n    }\n\n    /**\n     *  Cancels the inflight response, causing a ``CANCELLED``\n     *  error to be rejected from the [[send]].\n     */\n    cancel(): void {\n        assert(this.#signal != null, \"request has not been sent\", \"UNSUPPORTED_OPERATION\", { operation: \"fetchRequest.cancel\" });\n        const signal = fetchSignals.get(this);\n        if (!signal) { throw new Error(\"missing signal; should not happen\"); }\n        signal();\n    }\n\n    /**\n     *  Returns a new [[FetchRequest]] that represents the redirection\n     *  to %%location%%.\n     */\n    redirect(location: string): FetchRequest {\n        // Redirection; for now we only support absolute locations\n        const current = this.url.split(\":\")[0].toLowerCase();\n        const target = location.split(\":\")[0].toLowerCase();\n\n        // Don't allow redirecting:\n        // - non-GET requests\n        // - downgrading the security (e.g. https => http)\n        // - to non-HTTP (or non-HTTPS) protocols [this could be relaxed?]\n        assert(this.method === \"GET\" && (current !== \"https\" || target !== \"http\") && location.match(/^https?:/), `unsupported redirect`, \"UNSUPPORTED_OPERATION\", {\n            operation: `redirect(${ this.method } ${ JSON.stringify(this.url) } => ${ JSON.stringify(location) })`\n        });\n\n        // Create a copy of this request, with a new URL\n        const req = new FetchRequest(location);\n        req.method = \"GET\";\n        req.allowGzip = this.allowGzip;\n        req.timeout = this.timeout;\n        req.#headers = Object.assign({ }, this.#headers);\n        if (this.#body) { req.#body = new Uint8Array(this.#body); }\n        req.#bodyType = this.#bodyType;\n\n        // Do not forward credentials unless on the same domain; only absolute\n        //req.allowInsecure = false;\n        // paths are currently supported; may want a way to specify to forward?\n        //setStore(req.#props, \"creds\", getStore(this.#pros, \"creds\"));\n\n        return req;\n    }\n\n    /**\n     *  Create a new copy of this request.\n     */\n    clone(): FetchRequest {\n        const clone = new FetchRequest(this.url);\n\n        // Preserve \"default method\" (i.e. null)\n        clone.#method = this.#method;\n\n        // Preserve \"default body\" with type, copying the Uint8Array is present\n        if (this.#body) { clone.#body = this.#body; }\n        clone.#bodyType = this.#bodyType;\n\n        // Preserve \"default headers\"\n        clone.#headers = Object.assign({ }, this.#headers);\n\n        // Credentials is readonly, so we copy internally\n        clone.#creds = this.#creds;\n\n        if (this.allowGzip) { clone.allowGzip = true; }\n\n        clone.timeout = this.timeout;\n        if (this.allowInsecureAuthentication) { clone.allowInsecureAuthentication = true; }\n\n        clone.#preflight = this.#preflight;\n        clone.#process = this.#process;\n        clone.#retry = this.#retry;\n\n        clone.#getUrlFunc = this.#getUrlFunc;\n\n        return clone;\n    }\n\n    /**\n     *  Locks all static configuration for gateways and FetchGetUrlFunc\n     *  registration.\n     */\n    static lockConfig(): void {\n        locked = true;\n    }\n\n    /**\n     *  Get the current Gateway function for %%scheme%%.\n     */\n    static getGateway(scheme: string): null | FetchGatewayFunc {\n        return Gateways[scheme.toLowerCase()] || null;\n    }\n\n    /**\n     *  Use the %%func%% when fetching URIs using %%scheme%%.\n     *\n     *  This method affects all requests globally.\n     *\n     *  If [[lockConfig]] has been called, no change is made and this\n     *  throws.\n     */\n    static registerGateway(scheme: string, func: FetchGatewayFunc): void {\n        scheme = scheme.toLowerCase();\n        if (scheme === \"http\" || scheme === \"https\") {\n            throw new Error(`cannot intercept ${ scheme }; use registerGetUrl`);\n        }\n        if (locked) { throw new Error(\"gateways locked\"); }\n        Gateways[scheme] = func;\n    }\n\n    /**\n     *  Use %%getUrl%% when fetching URIs over HTTP and HTTPS requests.\n     *\n     *  This method affects all requests globally.\n     *\n     *  If [[lockConfig]] has been called, no change is made and this\n     *  throws.\n     */\n    static registerGetUrl(getUrl: FetchGetUrlFunc): void {\n        if (locked) { throw new Error(\"gateways locked\"); }\n        defaultGetUrlFunc = getUrl;\n    }\n\n    /**\n     *  Creates a getUrl function that fetches content from HTTP and\n     *  HTTPS URLs.\n     *\n     *  The available %%options%% are dependent on the platform\n     *  implementation of the default getUrl function.\n     *\n     *  This is not generally something that is needed, but is useful\n     *  when trying to customize simple behaviour when fetching HTTP\n     *  content.\n     */\n    static createGetUrlFunc(options?: Record<string, any>): FetchGetUrlFunc {\n        return createGetUrl(options);\n    }\n\n    /**\n     *  Creates a function that can \"fetch\" data URIs.\n     *\n     *  Note that this is automatically done internally to support\n     *  data URIs, so it is not necessary to register it.\n     *\n     *  This is not generally something that is needed, but may\n     *  be useful in a wrapper to perfom custom data URI functionality.\n     */\n    static createDataGateway(): FetchGatewayFunc {\n        return dataGatewayFunc;\n    }\n\n    /**\n     *  Creates a function that will fetch IPFS (unvalidated) from\n     *  a custom gateway baseUrl.\n     *\n     *  The default IPFS gateway used internally is\n     *  ``\"https:/\\/gateway.ipfs.io/ipfs/\"``.\n     */\n    static createIpfsGatewayFunc(baseUrl: string): FetchGatewayFunc {\n        return getIpfsGatewayFunc(baseUrl);\n    }\n}\n\n\ninterface ThrottleError extends Error {\n    stall: number;\n    throttle: true;\n};\n\n/**\n *  The response for a FetchRequest.\n */\nexport class FetchResponse implements Iterable<[ key: string, value: string ]> {\n    #statusCode: number;\n    #statusMessage: string;\n    #headers: Record<string, string>;\n    #body: null | Readonly<Uint8Array>;\n    #request: null | FetchRequest;\n\n    #error: { error?: Error, message: string };\n\n    toString(): string {\n        return `<FetchResponse status=${ this.statusCode } body=${ this.#body ? hexlify(this.#body): \"null\" }>`;\n    }\n\n    /**\n     *  The response status code.\n     */\n    get statusCode(): number { return this.#statusCode; }\n\n    /**\n     *  The response status message.\n     */\n    get statusMessage(): string { return this.#statusMessage; }\n\n    /**\n     *  The response headers. All keys are lower-case.\n     */\n    get headers(): Record<string, string> { return Object.assign({ }, this.#headers); }\n\n    /**\n     *  The response body, or ``null`` if there was no body.\n     */\n    get body(): null | Readonly<Uint8Array> {\n        return (this.#body == null) ? null: new Uint8Array(this.#body);\n    }\n\n    /**\n     *  The response body as a UTF-8 encoded string, or the empty\n     *  string (i.e. ``\"\"``) if there was no body.\n     *\n     *  An error is thrown if the body is invalid UTF-8 data.\n     */\n    get bodyText(): string {\n        try {\n            return (this.#body == null) ? \"\": toUtf8String(this.#body);\n        } catch (error) {\n            assert(false, \"response body is not valid UTF-8 data\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"bodyText\", info: { response: this }\n            });\n        }\n    }\n\n    /**\n     *  The response body, decoded as JSON.\n     *\n     *  An error is thrown if the body is invalid JSON-encoded data\n     *  or if there was no body.\n     */\n    get bodyJson(): any {\n        try {\n            return JSON.parse(this.bodyText);\n        } catch (error) {\n            assert(false, \"response body is not valid JSON\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"bodyJson\", info: { response: this }\n            });\n        }\n    }\n\n    [Symbol.iterator](): Iterator<[ key: string, value: string ]> {\n        const headers = this.headers;\n        const keys = Object.keys(headers);\n        let index = 0;\n        return {\n            next: () => {\n                if (index < keys.length) {\n                    const key = keys[index++];\n                    return {\n                        value: [ key, headers[key] ], done: false\n                    }\n                }\n                return { value: undefined, done: true };\n            }\n        };\n    }\n\n    constructor(statusCode: number, statusMessage: string, headers: Readonly<Record<string, string>>, body: null | Uint8Array, request?: FetchRequest) {\n        this.#statusCode = statusCode;\n        this.#statusMessage = statusMessage;\n        this.#headers = Object.keys(headers).reduce((accum, k) => {\n            accum[k.toLowerCase()] = String(headers[k]);\n            return accum;\n        }, <Record<string, string>>{ });\n        this.#body = ((body == null) ? null: new Uint8Array(body));\n        this.#request = (request || null);\n\n        this.#error = { message: \"\" };\n    }\n\n    /**\n     *  Return a Response with matching headers and body, but with\n     *  an error status code (i.e. 599) and %%message%% with an\n     *  optional %%error%%.\n     */\n    makeServerError(message?: string, error?: Error): FetchResponse {\n        let statusMessage: string;\n        if (!message) {\n            message = `${ this.statusCode } ${ this.statusMessage }`;\n            statusMessage = `CLIENT ESCALATED SERVER ERROR (${ message })`;\n        } else {\n            statusMessage = `CLIENT ESCALATED SERVER ERROR (${ this.statusCode } ${ this.statusMessage }; ${ message })`;\n        }\n        const response = new FetchResponse(599, statusMessage, this.headers,\n            this.body, this.#request || undefined);\n        response.#error = { message, error };\n        return response;\n    }\n\n    /**\n     *  If called within a [request.processFunc](FetchRequest-processFunc)\n     *  call, causes the request to retry as if throttled for %%stall%%\n     *  milliseconds.\n     */\n    throwThrottleError(message?: string, stall?: number): never {\n        if (stall == null) {\n            stall = -1;\n        } else {\n            assertArgument(Number.isInteger(stall) && stall >= 0, \"invalid stall timeout\", \"stall\", stall);\n        }\n\n        const error = new Error(message || \"throttling requests\");\n\n        defineProperties(<ThrottleError>error, { stall, throttle: true });\n\n        throw error;\n    }\n\n    /**\n     *  Get the header value for %%key%%, ignoring case.\n     */\n    getHeader(key: string): string {\n        return this.headers[key.toLowerCase()];\n    }\n\n    /**\n     *  Returns true if the response has a body.\n     */\n    hasBody(): this is (FetchResponse & { body: Uint8Array }) {\n        return (this.#body != null);\n    }\n\n    /**\n     *  The request made for this response.\n     */\n    get request(): null | FetchRequest { return this.#request; }\n\n    /**\n     *  Returns true if this response was a success statusCode.\n     */\n    ok(): boolean {\n        return (this.#error.message === \"\" && this.statusCode >= 200 && this.statusCode < 300);\n    }\n\n    /**\n     *  Throws a ``SERVER_ERROR`` if this response is not ok.\n     */\n    assertOk(): void {\n        if (this.ok()) { return; }\n        let { message, error } = this.#error;\n        if (message === \"\") {\n            message = `server response ${ this.statusCode } ${ this.statusMessage }`;\n        }\n        assert(false, message, \"SERVER_ERROR\", {\n            request: (this.request || \"unknown request\"), response: this, error\n        });\n    }\n}\n\n\nfunction getTime(): number { return (new Date()).getTime(); }\n\nfunction unpercent(value: string): Uint8Array {\n    return toUtf8Bytes(value.replace(/%([0-9a-f][0-9a-f])/gi, (all, code) => {\n        return String.fromCharCode(parseInt(code, 16));\n    }));\n}\n\nfunction wait(delay: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, delay));\n}\n","\n// utils/base64-browser\n\nimport { getBytes } from \"./data.js\";\n\nimport type { BytesLike } from \"./data.js\";\n\n\nexport function decodeBase64(textData: string): Uint8Array {\n    textData = atob(textData);\n    const data = new Uint8Array(textData.length);\n    for (let i = 0; i < textData.length; i++) {\n        data[i] = textData.charCodeAt(i);\n    }\n    return getBytes(data);\n}\n\nexport function encodeBase64(_data: BytesLike): string {\n    const data = getBytes(_data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n","\n/**\n *  A constant for the zero address.\n *\n *  (**i.e.** ``\"0x0000000000000000000000000000000000000000\"``)\n */\nexport const ZeroAddress: string = \"0x0000000000000000000000000000000000000000\";\n\n","/**\n *  The Interface class is a low-level class that accepts an\n *  ABI and provides all the necessary functionality to encode\n *  and decode paramaters to and results from methods, events\n *  and errors.\n *\n *  It also provides several convenience methods to automatically\n *  search and find matching transactions and events to parse them.\n *\n *  @_subsection api/abi:Interfaces  [interfaces]\n */\n\nimport { keccak256 } from \"../crypto/index.js\"\nimport { id } from \"../hash/index.js\"\nimport {\n    concat, dataSlice, getBigInt, getBytes, getBytesCopy,\n    hexlify, zeroPadBytes, zeroPadValue, isHexString, defineProperties,\n    assertArgument, toBeHex, assert\n} from \"../utils/index.js\";\n\nimport { AbiCoder } from \"./abi-coder.js\";\nimport { checkResultErrors, Result } from \"./coders/abstract-coder.js\";\nimport {\n    ConstructorFragment, ErrorFragment, EventFragment, FallbackFragment,\n    Fragment, FunctionFragment, ParamType\n} from \"./fragments.js\";\nimport { Typed } from \"./typed.js\";\n\nimport type { BigNumberish, BytesLike, CallExceptionError, CallExceptionTransaction } from \"../utils/index.js\";\n\nimport type { JsonFragment } from \"./fragments.js\";\n\n\nexport { checkResultErrors, Result };\n\n/**\n *  When using the [[Interface-parseLog]] to automatically match a Log to its event\n *  for parsing, a **LogDescription** is returned.\n */\nexport class LogDescription {\n    /**\n     *  The matching fragment for the ``topic0``.\n     */\n    readonly fragment!: EventFragment;\n\n    /**\n     *  The name of the Event.\n     */\n    readonly name!: string;\n\n    /**\n     *  The full Event signature.\n     */\n    readonly signature!: string;\n\n    /**\n     *  The topic hash for the Event.\n     */\n    readonly topic!: string;\n\n    /**\n     *  The arguments passed into the Event with ``emit``.\n     */\n    readonly args!: Result\n\n    /**\n     *  @_ignore:\n     */\n    constructor(fragment: EventFragment, topic: string, args: Result) {\n        const name = fragment.name, signature = fragment.format();\n        defineProperties<LogDescription>(this, {\n            fragment, name, signature, topic, args\n        });\n    }\n}\n\n/**\n *  When using the [[Interface-parseTransaction]] to automatically match\n *  a transaction data to its function for parsing,\n *  a **TransactionDescription** is returned.\n */\nexport class TransactionDescription {\n    /**\n     *  The matching fragment from the transaction ``data``.\n     */\n    readonly fragment!: FunctionFragment;\n\n    /**\n     *  The name of the Function from the transaction ``data``.\n     */\n    readonly name!: string;\n\n    /**\n     *  The arguments passed to the Function from the transaction ``data``.\n     */\n    readonly args!: Result;\n\n    /**\n     *  The full Function signature from the transaction ``data``.\n     */\n    readonly signature!: string;\n\n    /**\n     *  The selector for the Function from the transaction ``data``.\n     */\n    readonly selector!: string;\n\n    /**\n     *  The ``value`` (in wei) from the transaction.\n     */\n    readonly value!: bigint;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(fragment: FunctionFragment, selector: string, args: Result, value: bigint) {\n        const name = fragment.name, signature = fragment.format();\n        defineProperties<TransactionDescription>(this, {\n            fragment, name, args, signature, selector, value\n        });\n    }\n}\n\n/**\n *  When using the [[Interface-parseError]] to automatically match an\n *  error for a call result for parsing, an **ErrorDescription** is returned.\n */\nexport class ErrorDescription {\n    /**\n     *  The matching fragment.\n     */\n    readonly fragment!: ErrorFragment;\n\n    /**\n     *  The name of the Error.\n     */\n    readonly name!: string;\n\n    /**\n     *  The arguments passed to the Error with ``revert``.\n     */\n    readonly args!: Result;\n\n    /**\n     *  The full Error signature.\n     */\n    readonly signature!: string;\n\n    /**\n     *  The selector for the Error.\n     */\n    readonly selector!: string;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(fragment: ErrorFragment, selector: string, args: Result) {\n        const name = fragment.name, signature = fragment.format();\n        defineProperties<ErrorDescription>(this, {\n            fragment, name, args, signature, selector\n        });\n    }\n}\n\n/**\n *  An **Indexed** is used as a value when a value that does not\n *  fit within a topic (i.e. not a fixed-length, 32-byte type). It\n *  is the ``keccak256`` of the value, and used for types such as\n *  arrays, tuples, bytes and strings.\n */\nexport class Indexed {\n    /**\n     *  The ``keccak256`` of the value logged.\n     */\n    readonly hash!: null | string;\n\n    /**\n     *  @_ignore:\n     */\n    readonly _isIndexed!: boolean;\n\n    /**\n     *  Returns ``true`` if %%value%% is an **Indexed**.\n     *\n     *  This provides a Type Guard for property access.\n     */\n    static isIndexed(value: any): value is Indexed {\n        return !!(value && value._isIndexed);\n    }\n\n    /**\n     *  @_ignore:\n     */\n    constructor(hash: null | string) {\n        defineProperties<Indexed>(this, { hash, _isIndexed: true })\n    }\n}\n\ntype ErrorInfo = {\n    signature: string,\n    inputs: Array<string>,\n    name: string,\n    reason: (...args: Array<any>) => string;\n};\n\n// https://docs.soliditylang.org/en/v0.8.13/control-structures.html?highlight=panic#panic-via-assert-and-error-via-require\nconst PanicReasons: Record<string, string> = {\n    \"0\": \"generic panic\",\n    \"1\": \"assert(false)\",\n    \"17\": \"arithmetic overflow\",\n    \"18\": \"division or modulo by zero\",\n    \"33\": \"enum overflow\",\n    \"34\": \"invalid encoded storage byte array accessed\",\n    \"49\": \"out-of-bounds array access; popping on an empty array\",\n    \"50\": \"out-of-bounds access of an array or bytesN\",\n    \"65\": \"out of memory\",\n    \"81\": \"uninitialized function\",\n}\n\nconst BuiltinErrors: Record<string, ErrorInfo> = {\n    \"0x08c379a0\": {\n        signature: \"Error(string)\",\n        name: \"Error\",\n        inputs: [ \"string\" ],\n        reason: (message: string) => {\n            return `reverted with reason string ${ JSON.stringify(message) }`;\n        }\n    },\n    \"0x4e487b71\": {\n        signature: \"Panic(uint256)\",\n        name: \"Panic\",\n        inputs: [ \"uint256\" ],\n        reason: (code: bigint) => {\n            let reason = \"unknown panic code\";\n            if (code >= 0 && code <= 0xff && PanicReasons[code.toString()]) {\n                reason = PanicReasons[code.toString()];\n            }\n            return `reverted with panic code 0x${ code.toString(16) } (${ reason })`;\n        }\n    }\n}\n\n/*\nfunction wrapAccessError(property: string, error: Error): Error {\n    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${ property }`);\n    (<any>wrap).error = error;\n    return wrap;\n}\n*/\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\n\n/**\n *  An **InterfaceAbi** may be any supported ABI format.\n *\n *  A string is expected to be a JSON string, which will be parsed\n *  using ``JSON.parse``. This means that the value **must** be a valid\n *  JSON string, with no stray commas, etc.\n *\n *  An array may contain any combination of:\n *  - Human-Readable fragments\n *  - Parsed JSON fragment\n *  - [[Fragment]] instances\n *\n *  A **Human-Readable Fragment** is a string which resembles a Solidity\n *  signature and is introduced in [this blog entry](link-ricmoo-humanreadableabi).\n *  For example, ``function balanceOf(address) view returns (uint)``.\n *\n *  A **Parsed JSON Fragment** is a JavaScript Object desribed in the\n *  [Solidity documentation](link-solc-jsonabi).\n */\nexport type InterfaceAbi = string | ReadonlyArray<Fragment | JsonFragment | string>;\n\n/**\n *  An Interface abstracts many of the low-level details for\n *  encoding and decoding the data on the blockchain.\n *\n *  An ABI provides information on how to encode data to send to\n *  a Contract, how to decode the results and events and how to\n *  interpret revert errors.\n *\n *  The ABI can be specified by [any supported format](InterfaceAbi).\n */\nexport class Interface {\n\n    /**\n     *  All the Contract ABI members (i.e. methods, events, errors, etc).\n     */\n    readonly fragments!: ReadonlyArray<Fragment>;\n\n    /**\n     *  The Contract constructor.\n     */\n    readonly deploy!: ConstructorFragment;\n\n    /**\n     *  The Fallback method, if any.\n     */\n    readonly fallback!: null | FallbackFragment;\n\n    /**\n     *  If receiving ether is supported.\n     */\n    readonly receive!: boolean;\n\n    #errors: Map<string, ErrorFragment>;\n    #events: Map<string, EventFragment>;\n    #functions: Map<string, FunctionFragment>;\n//    #structs: Map<string, StructFragment>;\n\n    #abiCoder: AbiCoder;\n\n    /**\n     *  Create a new Interface for the %%fragments%%.\n     */\n    constructor(fragments: InterfaceAbi) {\n        let abi: ReadonlyArray<Fragment | JsonFragment | string> = [ ];\n        if (typeof(fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        } else {\n            abi = fragments;\n        }\n\n        this.#functions = new Map();\n        this.#errors = new Map();\n        this.#events = new Map();\n//        this.#structs = new Map();\n\n\n        const frags: Array<Fragment> = [ ];\n        for (const a of abi) {\n            try {\n                frags.push(Fragment.from(a));\n            } catch (error) {\n                console.log(\"EE\", error);\n            }\n        }\n\n        defineProperties<Interface>(this, {\n            fragments: Object.freeze(frags)\n        });\n\n        let fallback: null | FallbackFragment = null;\n        let receive = false;\n\n        this.#abiCoder = this.getAbiCoder();\n\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment, index) => {\n            let bucket: Map<string, Fragment>;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        console.log(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    defineProperties<Interface>(this, { deploy: <ConstructorFragment>fragment });\n                    return;\n\n                case \"fallback\":\n                    if (fragment.inputs.length === 0) {\n                        receive = true;\n                    } else {\n                        assertArgument(!fallback || (<FallbackFragment>fragment).payable !== fallback.payable,\n                            \"conflicting fallback fragments\", `fragments[${ index }]`, fragment);\n                        fallback = <FallbackFragment>fragment;\n                        receive = fallback.payable;\n                    }\n                    return;\n\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.#functions;\n                    break;\n\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.#events;\n                    break;\n\n                case \"error\":\n                    bucket = this.#errors;\n                    break;\n\n                default:\n                    return;\n            }\n\n            // Two identical entries; ignore it\n            const signature = fragment.format();\n            if (bucket.has(signature)) { return; }\n\n            bucket.set(signature, fragment);\n        });\n\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineProperties<Interface>(this, {\n                deploy: ConstructorFragment.from(\"constructor()\")\n            });\n        }\n\n        defineProperties<Interface>(this, { fallback, receive });\n    }\n\n    /**\n     *  Returns the entire Human-Readable ABI, as an array of\n     *  signatures, optionally as %%minimal%% strings, which\n     *  removes parameter names and unneceesary spaces.\n     */\n    format(minimal?: boolean): Array<string> {\n        const format = (minimal ? \"minimal\": \"full\");\n        const abi = this.fragments.map((f) => f.format(format));\n        return abi;\n    }\n\n    /**\n     *  Return the JSON-encoded ABI. This is the format Solidiy\n     *  returns.\n     */\n    formatJson(): string {\n        const abi = this.fragments.map((f) => f.format(\"json\"));\n\n        // We need to re-bundle the JSON fragments a bit\n        return JSON.stringify(abi.map((j) => JSON.parse(j)));\n    }\n\n    /**\n     *  The ABI coder that will be used to encode and decode binary\n     *  data.\n     */\n    getAbiCoder(): AbiCoder {\n        return AbiCoder.defaultAbiCoder();\n    }\n\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    #getFunction(key: string, values: null | Array<any | Typed>, forceUnique: boolean): null | FunctionFragment {\n\n        // Selector\n        if (isHexString(key)) {\n            const selector = key.toLowerCase();\n            for (const fragment of this.#functions.values()) {\n                if (selector === fragment.selector) { return fragment; }\n            }\n            return null;\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf(\"(\") === -1) {\n            const matching: Array<FunctionFragment> = [ ];\n            for (const [ name, fragment ] of this.#functions) {\n                if (name.split(\"(\"/* fix:) */)[0] === key) { matching.push(fragment); }\n            }\n\n            if (values) {\n                const lastValue = (values.length > 0) ? values[values.length - 1]: null;\n\n                let valueLength = values.length;\n                let allowOptions = true;\n                if (Typed.isTyped(lastValue) && lastValue.type === \"overrides\") {\n                    allowOptions = false;\n                    valueLength--;\n                }\n\n                // Remove all matches that don't have a compatible length. The args\n                // may contain an overrides, so the match may have n or n - 1 parameters\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs.length;\n                    if (inputs !== valueLength && (!allowOptions || inputs !== valueLength - 1)) {\n                        matching.splice(i, 1);\n                    }\n                }\n\n                // Remove all matches that don't match the Typed signature\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs;\n                    for (let j = 0; j < values.length; j++) {\n                        // Not a typed value\n                        if (!Typed.isTyped(values[j])) { continue; }\n\n                        // We are past the inputs\n                        if (j >= inputs.length) {\n                            if (values[j].type === \"overrides\") { continue; }\n                            matching.splice(i, 1);\n                            break;\n                        }\n\n                        // Make sure the value type matches the input type\n                        if (values[j].type !== inputs[j].baseType) {\n                            matching.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            }\n\n            // We found a single matching signature with an overrides, but the\n            // last value is something that cannot possibly be an options\n            if (matching.length === 1 && values && values.length !== matching[0].inputs.length) {\n                const lastArg = values[values.length - 1];\n                if (lastArg == null || Array.isArray(lastArg) || typeof(lastArg) !== \"object\") {\n                    matching.splice(0, 1);\n                }\n            }\n\n            if (matching.length === 0) { return null; }\n\n            if (matching.length > 1 && forceUnique) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(\", \");\n                assertArgument(false, `ambiguous function description (i.e. matches ${ matchStr })`, \"key\", key);\n            }\n\n            return matching[0];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.#functions.get(FunctionFragment.from(key).format());\n        if (result) { return result; }\n\n        return null;\n    }\n\n    /**\n     *  Get the function name for %%key%%, which may be a function selector,\n     *  function name or function signature that belongs to the ABI.\n     */\n    getFunctionName(key: string): string {\n        const fragment = this.#getFunction(key, null, false);\n        assertArgument(fragment, \"no matching function\", \"key\", key);\n        return fragment.name;\n    }\n\n    /**\n     *  Returns true if %%key%% (a function selector, function name or\n     *  function signature) is present in the ABI.\n     *\n     *  In the case of a function name, the name may be ambiguous, so\n     *  accessing the [[FunctionFragment]] may require refinement.\n     */\n    hasFunction(key: string): boolean {\n        return !!this.#getFunction(key, null, false);\n    }\n\n    /**\n     *  Get the [[FunctionFragment]] for %%key%%, which may be a function\n     *  selector, function name or function signature that belongs to the ABI.\n     *\n     *  If %%values%% is provided, it will use the Typed API to handle\n     *  ambiguous cases where multiple functions match by name.\n     *\n     *  If the %%key%% and %%values%% do not refine to a single function in\n     *  the ABI, this will throw.\n     */\n    getFunction(key: string, values?: Array<any | Typed>): null | FunctionFragment {\n        return this.#getFunction(key, values || null, true);\n    }\n\n    /**\n     *  Iterate over all functions, calling %%callback%%, sorted by their name.\n     */\n    forEachFunction(callback: (func: FunctionFragment, index: number) => void): void {\n        const names = Array.from(this.#functions.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback(<FunctionFragment>(this.#functions.get(name)), i);\n        }\n    }\n\n\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    #getEvent(key: string, values: null | Array<null | any | Typed>, forceUnique: boolean): null | EventFragment {\n\n        // EventTopic\n        if (isHexString(key)) {\n            const eventTopic = key.toLowerCase();\n            for (const fragment of this.#events.values()) {\n                if (eventTopic === fragment.topicHash) { return fragment; }\n            }\n            return null;\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf(\"(\") === -1) {\n            const matching: Array<EventFragment> = [ ];\n            for (const [ name, fragment ] of this.#events) {\n                if (name.split(\"(\"/* fix:) */)[0] === key) { matching.push(fragment); }\n            }\n\n            if (values) {\n                // Remove all matches that don't have a compatible length.\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    if (matching[i].inputs.length < values.length) {\n                        matching.splice(i, 1);\n                    }\n                }\n\n                // Remove all matches that don't match the Typed signature\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs;\n                    for (let j = 0; j < values.length; j++) {\n                        // Not a typed value\n                        if (!Typed.isTyped(values[j])) { continue; }\n\n                        // Make sure the value type matches the input type\n                        if (values[j].type !== inputs[j].baseType) {\n                            matching.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            }\n\n            if (matching.length === 0) { return null; }\n\n            if (matching.length > 1 && forceUnique) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(\", \");\n                assertArgument(false, `ambiguous event description (i.e. matches ${ matchStr })`, \"key\", key);\n            }\n\n            return matching[0];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.#events.get(EventFragment.from(key).format());\n        if (result) { return result; }\n\n        return null;\n    }\n\n    /**\n     *  Get the event name for %%key%%, which may be a topic hash,\n     *  event name or event signature that belongs to the ABI.\n     */\n    getEventName(key: string): string {\n        const fragment = this.#getEvent(key, null, false);\n        assertArgument(fragment, \"no matching event\", \"key\", key);\n\n        return fragment.name;\n    }\n\n    /**\n     *  Returns true if %%key%% (an event topic hash, event name or\n     *  event signature) is present in the ABI.\n     *\n     *  In the case of an event name, the name may be ambiguous, so\n     *  accessing the [[EventFragment]] may require refinement.\n     */\n    hasEvent(key: string): boolean {\n        return !!this.#getEvent(key, null, false);\n    }\n\n    /**\n     *  Get the [[EventFragment]] for %%key%%, which may be a topic hash,\n     *  event name or event signature that belongs to the ABI.\n     *\n     *  If %%values%% is provided, it will use the Typed API to handle\n     *  ambiguous cases where multiple events match by name.\n     *\n     *  If the %%key%% and %%values%% do not refine to a single event in\n     *  the ABI, this will throw.\n     */\n    getEvent(key: string, values?: Array<any | Typed>): null | EventFragment {\n        return this.#getEvent(key, values || null, true)\n    }\n\n    /**\n     *  Iterate over all events, calling %%callback%%, sorted by their name.\n     */\n    forEachEvent(callback: (func: EventFragment, index: number) => void): void {\n        const names = Array.from(this.#events.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback(<EventFragment>(this.#events.get(name)), i);\n        }\n    }\n\n    /**\n     *  Get the [[ErrorFragment]] for %%key%%, which may be an error\n     *  selector, error name or error signature that belongs to the ABI.\n     *\n     *  If %%values%% is provided, it will use the Typed API to handle\n     *  ambiguous cases where multiple errors match by name.\n     *\n     *  If the %%key%% and %%values%% do not refine to a single error in\n     *  the ABI, this will throw.\n     */\n    getError(key: string, values?: Array<any | Typed>): null | ErrorFragment {\n        if (isHexString(key)) {\n            const selector = key.toLowerCase();\n\n            if (BuiltinErrors[selector]) {\n                return ErrorFragment.from(BuiltinErrors[selector].signature);\n            }\n\n            for (const fragment of this.#errors.values()) {\n                if (selector === fragment.selector) { return fragment; }\n            }\n\n            return null;\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf(\"(\") === -1) {\n            const matching: Array<ErrorFragment> = [ ];\n            for (const [ name, fragment ] of this.#errors) {\n                if (name.split(\"(\"/* fix:) */)[0] === key) { matching.push(fragment); }\n            }\n\n            if (matching.length === 0) {\n                if (key === \"Error\") { return ErrorFragment.from(\"error Error(string)\"); }\n                if (key === \"Panic\") { return ErrorFragment.from(\"error Panic(uint256)\"); }\n                return null;\n            } else if (matching.length > 1) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(\", \");\n                assertArgument(false, `ambiguous error description (i.e. ${ matchStr })`, \"name\", key);\n            }\n\n            return matching[0];\n        }\n\n        // Normalize the signature and lookup the function\n        key = ErrorFragment.from(key).format()\n        if (key === \"Error(string)\") { return ErrorFragment.from(\"error Error(string)\"); }\n        if (key === \"Panic(uint256)\") { return ErrorFragment.from(\"error Panic(uint256)\"); }\n\n        const result = this.#errors.get(key);\n        if (result) { return result; }\n\n        return null;\n    }\n\n    /**\n     *  Iterate over all errors, calling %%callback%%, sorted by their name.\n     */\n    forEachError(callback: (func: ErrorFragment, index: number) => void): void {\n        const names = Array.from(this.#errors.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback(<ErrorFragment>(this.#errors.get(name)), i);\n        }\n    }\n\n    // Get the 4-byte selector used by Solidity to identify a function\n        /*\n    getSelector(fragment: ErrorFragment | FunctionFragment): string {\n        if (typeof(fragment) === \"string\") {\n            const matches: Array<Fragment> = [ ];\n\n            try { matches.push(this.getFunction(fragment)); } catch (error) { }\n            try { matches.push(this.getError(<string>fragment)); } catch (_) { }\n\n            if (matches.length === 0) {\n                logger.throwArgumentError(\"unknown fragment\", \"key\", fragment);\n            } else if (matches.length > 1) {\n                logger.throwArgumentError(\"ambiguous fragment matches function and error\", \"key\", fragment);\n            }\n\n            fragment = matches[0];\n        }\n\n        return dataSlice(id(fragment.format()), 0, 4);\n    }\n        */\n\n    // Get the 32-byte topic hash used by Solidity to identify an event\n    /*\n    getEventTopic(fragment: EventFragment): string {\n        //if (typeof(fragment) === \"string\") { fragment = this.getEvent(eventFragment); }\n        return id(fragment.format());\n    }\n    */\n\n\n    _decodeParams(params: ReadonlyArray<ParamType>, data: BytesLike): Result {\n        return this.#abiCoder.decode(params, data)\n    }\n\n    _encodeParams(params: ReadonlyArray<ParamType>, values: ReadonlyArray<any>): string {\n        return this.#abiCoder.encode(params, values)\n    }\n\n    /**\n     *  Encodes a ``tx.data`` object for deploying the Contract with\n     *  the %%values%% as the constructor arguments.\n     */\n    encodeDeploy(values?: ReadonlyArray<any>): string {\n        return this._encodeParams(this.deploy.inputs, values || [ ]);\n    }\n\n    /**\n     *  Decodes the result %%data%% (e.g. from an ``eth_call``) for the\n     *  specified error (see [[getError]] for valid values for\n     *  %%key%%).\n     *\n     *  Most developers should prefer the [[parseCallResult]] method instead,\n     *  which will automatically detect a ``CALL_EXCEPTION`` and throw the\n     *  corresponding error.\n     */\n    decodeErrorResult(fragment: ErrorFragment | string, data: BytesLike): Result {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getError(fragment);\n            assertArgument(f, \"unknown error\", \"fragment\", fragment);\n            fragment = f;\n        }\n\n        assertArgument(dataSlice(data, 0, 4) === fragment.selector,\n            `data signature does not match error ${ fragment.name }.`, \"data\", data);\n\n        return this._decodeParams(fragment.inputs, dataSlice(data, 4));\n    }\n\n    /**\n     *  Encodes the transaction revert data for a call result that\n     *  reverted from the the Contract with the sepcified %%error%%\n     *  (see [[getError]] for valid values for %%fragment%%) with the %%values%%.\n     *\n     *  This is generally not used by most developers, unless trying to mock\n     *  a result from a Contract.\n     */\n    encodeErrorResult(fragment: ErrorFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getError(fragment);\n            assertArgument(f, \"unknown error\", \"fragment\", fragment);\n            fragment = f;\n        }\n\n        return concat([\n            fragment.selector,\n            this._encodeParams(fragment.inputs, values || [ ])\n        ]);\n    }\n\n    /**\n     *  Decodes the %%data%% from a transaction ``tx.data`` for\n     *  the function specified (see [[getFunction]] for valid values\n     *  for %%fragment%%).\n     *\n     *  Most developers should prefer the [[parseTransaction]] method\n     *  instead, which will automatically detect the fragment.\n     */\n    decodeFunctionData(fragment: FunctionFragment | string, data: BytesLike): Result {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n        }\n\n        assertArgument(dataSlice(data, 0, 4) === fragment.selector,\n            `data signature does not match function ${ fragment.name }.`, \"data\", data);\n\n        return this._decodeParams(fragment.inputs, dataSlice(data, 4));\n    }\n\n    /**\n     *  Encodes the ``tx.data`` for a transaction that calls the function\n     *  specified (see [[getFunction]] for valid values for %%fragment%%) with\n     *  the %%values%%.\n     */\n    encodeFunctionData(fragment: FunctionFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n        }\n\n        return concat([\n            fragment.selector,\n            this._encodeParams(fragment.inputs, values || [ ])\n        ]);\n    }\n\n    /**\n     *  Decodes the result %%data%% (e.g. from an ``eth_call``) for the\n     *  specified function (see [[getFunction]] for valid values for\n     *  %%key%%).\n     *\n     *  Most developers should prefer the [[parseCallResult]] method instead,\n     *  which will automatically detect a ``CALL_EXCEPTION`` and throw the\n     *  corresponding error.\n     */\n    decodeFunctionResult(fragment: FunctionFragment | string, data: BytesLike): Result {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n        }\n\n        let message = \"invalid length for result data\";\n\n        const bytes = getBytesCopy(data);\n        if ((bytes.length % 32) === 0) {\n            try {\n                return this.#abiCoder.decode(fragment.outputs, bytes);\n            } catch (error) {\n                message = \"could not decode result data\";\n            }\n        }\n\n        // Call returned data with no error, but the data is junk\n        assert(false, message, \"BAD_DATA\", {\n            value: hexlify(bytes),\n            info: { method: fragment.name, signature: fragment.format() }\n        });\n    }\n\n    makeError(_data: BytesLike, tx: CallExceptionTransaction): CallExceptionError {\n        const data = getBytes(_data, \"data\");\n\n        const error = AbiCoder.getBuiltinCallException(\"call\", tx, data);\n\n        // Not a built-in error; try finding a custom error\n        const customPrefix = \"execution reverted (unknown custom error)\";\n        if (error.message.startsWith(customPrefix)) {\n            const selector = hexlify(data.slice(0, 4));\n\n            const ef = this.getError(selector);\n            if (ef) {\n                try {\n                    const args = this.#abiCoder.decode(ef.inputs, data.slice(4));\n                    error.revert = {\n                        name: ef.name, signature: ef.format(), args\n                    };\n                    error.reason = error.revert.signature;\n                    error.message = `execution reverted: ${ error.reason }`\n                 } catch (e) {\n                    error.message = `execution reverted (coult not decode custom error)`\n                }\n            }\n        }\n\n        // Add the invocation, if available\n        const parsed = this.parseTransaction(tx);\n        if (parsed) {\n            error.invocation = {\n                method: parsed.name,\n                signature: parsed.signature,\n                args: parsed.args\n            };\n        }\n\n        return error;\n    }\n\n    /**\n     *  Encodes the result data (e.g. from an ``eth_call``) for the\n     *  specified function (see [[getFunction]] for valid values\n     *  for %%fragment%%) with %%values%%.\n     *\n     *  This is generally not used by most developers, unless trying to mock\n     *  a result from a Contract.\n     */\n    encodeFunctionResult(fragment: FunctionFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n        }\n        return hexlify(this.#abiCoder.encode(fragment.outputs, values || [ ]));\n    }\n/*\n    spelunk(inputs: Array<ParamType>, values: ReadonlyArray<any>, processfunc: (type: string, value: any) => Promise<any>): Promise<Array<any>> {\n        const promises: Array<Promise<>> = [ ];\n        const process = function(type: ParamType, value: any): any {\n            if (type.baseType === \"array\") {\n                return descend(type.child\n            }\n            if (type. === \"address\") {\n            }\n        };\n\n        const descend = function (inputs: Array<ParamType>, values: ReadonlyArray<any>) {\n            if (inputs.length !== values.length) { throw new Error(\"length mismatch\"); }\n            \n        };\n\n        const result: Array<any> = [ ];\n        values.forEach((value, index) => {\n            if (value == null) {\n                topics.push(null);\n            } else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            } else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            } else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n    }\n*/\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(fragment: EventFragment | string, values: ReadonlyArray<any>): Array<null | string | Array<string>> {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getEvent(fragment);\n            assertArgument(f, \"unknown event\", \"eventFragment\", fragment);\n            fragment = f;\n        }\n\n        assert(values.length <= fragment.inputs.length, `too many arguments for ${ fragment.format() }`,\n            \"UNEXPECTED_ARGUMENT\", { count: values.length, expectedCount: fragment.inputs.length })\n\n        const topics: Array<null | string | Array<string>> = [];\n        if (!fragment.anonymous) { topics.push(fragment.topicHash); }\n\n        // @TODO: Use the coders for this; to properly support tuples, etc.\n        const encodeTopic = (param: ParamType, value: any): string => {\n            if (param.type === \"string\") {\n                 return id(value);\n            } else if (param.type === \"bytes\") {\n                 return keccak256(hexlify(value));\n            }\n\n            if (param.type === \"bool\" && typeof(value) === \"boolean\") {\n                value = (value ? \"0x01\": \"0x00\");\n            } else if (param.type.match(/^u?int/)) {\n                value = toBeHex(value);  // @TODO: Should this toTwos??\n            } else if (param.type.match(/^bytes/)) {\n                value = zeroPadBytes(value, 32);\n            } else if (param.type === \"address\") {\n                // Check addresses are valid\n                this.#abiCoder.encode( [ \"address\" ], [ value ]);\n            }\n\n            return zeroPadValue(hexlify(value), 32);\n        };\n\n        values.forEach((value, index) => {\n\n            const param = (<EventFragment>fragment).inputs[index];\n\n            if (!param.indexed) {\n                assertArgument(value == null,\n                    \"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                return;\n            }\n\n            if (value == null) {\n                topics.push(null);\n            } else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                assertArgument(false, \"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            } else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            } else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n\n        return topics;\n    }\n\n    encodeEventLog(fragment: EventFragment | string, values: ReadonlyArray<any>): { data: string, topics: Array<string> } {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getEvent(fragment);\n            assertArgument(f, \"unknown event\", \"eventFragment\", fragment);\n            fragment = f;\n        }\n\n        const topics: Array<string> = [ ];\n\n        const dataTypes: Array<ParamType> = [ ];\n        const dataValues: Array<string> = [ ];\n\n        if (!fragment.anonymous) {\n            topics.push(fragment.topicHash);\n        }\n\n        assertArgument(values.length === fragment.inputs.length,\n            \"event arguments/values mismatch\", \"values\", values);\n\n        fragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push(id(value))\n                } else if (param.type === \"bytes\") {\n                    topics.push(keccak256(value))\n                } else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TODO\n                    throw new Error(\"not implemented\");\n                } else {\n                    topics.push(this.#abiCoder.encode([ param.type] , [ value ]));\n                }\n            } else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n\n        return {\n            data: this.#abiCoder.encode(dataTypes , dataValues),\n            topics: topics\n        };\n    }\n\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(fragment: EventFragment | string, data: BytesLike, topics?: ReadonlyArray<string>): Result {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getEvent(fragment);\n            assertArgument(f, \"unknown event\", \"eventFragment\", fragment);\n            fragment = f;\n        }\n\n        if (topics != null && !fragment.anonymous) {\n            const eventTopic = fragment.topicHash;\n            assertArgument(isHexString(topics[0], 32) && topics[0].toLowerCase() === eventTopic,\n                \"fragment/topic mismatch\", \"topics[0]\", topics[0]);\n            topics = topics.slice(1);\n        }\n\n        const indexed: Array<ParamType> = [];\n        const nonIndexed: Array<ParamType> = [];\n        const dynamic: Array<boolean> = [];\n\n        fragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(ParamType.from({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                } else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            } else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n\n        const resultIndexed = (topics != null) ? this.#abiCoder.decode(indexed, concat(topics)): null;\n        const resultNonIndexed = this.#abiCoder.decode(nonIndexed, data, true);\n\n        //const result: (Array<any> & { [ key: string ]: any }) = [ ];\n        const values: Array<any> = [ ];\n        const keys: Array<null | string> = [ ];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        fragment.inputs.forEach((param, index) => {\n            let value: null | Indexed | Error = null;\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    value = new Indexed(null);\n\n                } else if (dynamic[index]) {\n                    value = new Indexed(resultIndexed[indexedIndex++]);\n\n                } else {\n                    try {\n                        value = resultIndexed[indexedIndex++];\n                    } catch (error: any) {\n                        value = error;\n                    }\n                }\n            } else {\n                try {\n                    value = resultNonIndexed[nonIndexedIndex++];\n                } catch (error: any) {\n                    value = error;\n                }\n            }\n\n            values.push(value);\n            keys.push(param.name || null);\n        });\n\n        return Result.fromItems(values, keys);\n    }\n\n    /**\n     *  Parses a transaction, finding the matching function and extracts\n     *  the parameter values along with other useful function details.\n     *\n     *  If the matching function cannot be found, return null.\n     */\n    parseTransaction(tx: { data: string, value?: BigNumberish }): null | TransactionDescription {\n        const data = getBytes(tx.data, \"tx.data\");\n        const value = getBigInt((tx.value != null) ? tx.value: 0, \"tx.value\");\n\n        const fragment = this.getFunction(hexlify(data.slice(0, 4)));\n\n        if (!fragment) { return null; }\n\n        const args = this.#abiCoder.decode(fragment.inputs, data.slice(4));\n        return new TransactionDescription(fragment, fragment.selector, args, value);\n    }\n\n    parseCallResult(data: BytesLike): Result {\n        throw new Error(\"@TODO\");\n    }\n\n    /**\n     *  Parses a receipt log, finding the matching event and extracts\n     *  the parameter values along with other useful event details.\n     *\n     *  If the matching event cannot be found, returns null.\n     */\n    parseLog(log: { topics: Array<string>, data: string}): null | LogDescription {\n        const fragment = this.getEvent(log.topics[0]);\n\n        if (!fragment || fragment.anonymous) { return null; }\n\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe just a fragment?\n\n\n       return new LogDescription(fragment, fragment.topicHash, this.decodeEventLog(fragment, log.data, log.topics));\n    }\n\n    /**\n     *  Parses a revert data, finding the matching error and extracts\n     *  the parameter values along with other useful error details.\n     *\n     *  If the matching error cannot be found, returns null.\n     */\n    parseError(data: BytesLike): null | ErrorDescription {\n        const hexData = hexlify(data);\n\n        const fragment = this.getError(dataSlice(hexData, 0, 4));\n\n        if (!fragment) { return null; }\n\n        const args = this.#abiCoder.decode(fragment.inputs, dataSlice(hexData, 4));\n        return new ErrorDescription(fragment, fragment.selector, args);\n    }\n\n    /**\n     *  Creates a new [[Interface]] from the ABI %%value%%.\n     *\n     *  The %%value%% may be provided as an existing [[Interface]] object,\n     *  a JSON-encoded ABI or any Human-Readable ABI format.\n     */\n    static from(value: InterfaceAbi | Interface): Interface {\n        // Already an Interface, which is immutable\n        if (value instanceof Interface) { return value; }\n\n        // JSON\n        if (typeof(value) === \"string\") { return new Interface(JSON.parse(value)); }\n\n        // Maybe an interface from an older version, or from a symlinked copy\n        if (typeof((<any>value).format) === \"function\") {\n            return new Interface((<any>value).format(\"json\"));\n        }\n\n        // Array of fragments\n        return new Interface(value);\n    }\n}\n","//import { resolveAddress } from \"@ethersproject/address\";\nimport {\n    defineProperties, getBigInt, getNumber, hexlify, resolveProperties,\n    assert, assertArgument, isError, makeError\n} from \"../utils/index.js\";\nimport { accessListify } from \"../transaction/index.js\";\n\nimport type { AddressLike, NameResolver } from \"../address/index.js\";\nimport type { BigNumberish, EventEmitterable } from \"../utils/index.js\";\nimport type { Signature } from \"../crypto/index.js\";\nimport type { AccessList, AccessListish, TransactionLike } from \"../transaction/index.js\";\n\nimport type { ContractRunner } from \"./contracts.js\";\nimport type { Network } from \"./network.js\";\n\n\nconst BN_0 = BigInt(0);\n\n/**\n *  A **BlockTag** specifies a specific block.\n *\n *  **numeric value** - specifies the block height, where\n *  the genesis block is block 0; many operations accept a negative\n *  value which indicates the block number should be deducted from\n *  the most recent block. A numeric value may be a ``number``, ``bigint``,\n *  or a decimal of hex string.\n *\n *  **blockhash** - specifies a specific block by its blockhash; this allows\n *  potentially orphaned blocks to be specifed, without ambiguity, but many\n *  backends do not support this for some operations.\n */\nexport type BlockTag = BigNumberish | string;\n\nimport {\n    BlockParams, LogParams, TransactionReceiptParams,\n    TransactionResponseParams\n} from \"./formatting.js\";\n\n// -----------------------\n\nfunction getValue<T>(value: undefined | null | T): null | T {\n    if (value == null) { return null; }\n    return value;\n}\n\nfunction toJson(value: null | bigint): null | string {\n    if (value == null) { return null; }\n    return value.toString();\n}\n\n// @TODO? <T extends FeeData = { }> implements Required<T>\n\n/**\n *  A **FeeData** wraps all the fee-related values associated with\n *  the network.\n */\nexport class FeeData {\n    /**\n     *  The gas price for legacy networks.\n     */\n    readonly gasPrice!: null | bigint;\n\n    /**\n     *  The maximum fee to pay per gas.\n     *\n     *  The base fee per gas is defined by the network and based on\n     *  congestion, increasing the cost during times of heavy load\n     *  and lowering when less busy.\n     *\n     *  The actual fee per gas will be the base fee for the block\n     *  and the priority fee, up to the max fee per gas.\n     *\n     *  This will be ``null`` on legacy networks (i.e. [pre-EIP-1559](link-eip-1559))\n     */\n    readonly maxFeePerGas!: null | bigint;\n\n    /**\n     *  The additional amout to pay per gas to encourage a validator\n     *  to include the transaction.\n     *\n     *  The purpose of this is to compensate the validator for the\n     *  adjusted risk for including a given transaction.\n     *\n     *  This will be ``null`` on legacy networks (i.e. [pre-EIP-1559](link-eip-1559))\n     */\n    readonly maxPriorityFeePerGas!: null | bigint;\n\n    /**\n     *  Creates a new FeeData for %%gasPrice%%, %%maxFeePerGas%% and\n     *  %%maxPriorityFeePerGas%%.\n     */\n    constructor(gasPrice?: null | bigint, maxFeePerGas?: null | bigint, maxPriorityFeePerGas?: null | bigint) {\n        defineProperties<FeeData>(this, {\n            gasPrice: getValue(gasPrice),\n            maxFeePerGas: getValue(maxFeePerGas),\n            maxPriorityFeePerGas: getValue(maxPriorityFeePerGas)\n        });\n    }\n\n    /**\n     *  Returns a JSON-friendly value.\n     */\n    toJSON(): any {\n        const {\n            gasPrice, maxFeePerGas, maxPriorityFeePerGas\n        } = this;\n        return {\n            _type: \"FeeData\",\n            gasPrice: toJson(gasPrice),\n            maxFeePerGas: toJson(maxFeePerGas),\n            maxPriorityFeePerGas: toJson(maxPriorityFeePerGas),\n        };\n    }\n}\n\n\n/**\n *  A **TransactionRequest** is a transactions with potentially various\n *  properties not defined, or with less strict types for its values.\n *\n *  This is used to pass to various operations, which will internally\n *  coerce any types and populate any necessary values.\n */\nexport interface TransactionRequest {\n    /**\n     *  The transaction type.\n     */\n    type?: null | number;\n\n    /**\n     *  The target of the transaction.\n     */\n    to?: null | AddressLike;\n\n    /**\n     *  The sender of the transaction.\n     */\n    from?: null | AddressLike;\n\n    /**\n     *  The nonce of the transaction, used to prevent replay attacks.\n     */\n    nonce?: null | number;\n\n    /**\n     *  The maximum amount of gas to allow this transaction to consime.\n     */\n    gasLimit?: null | BigNumberish;\n\n    /**\n     *  The gas price to use for legacy transactions or transactions on\n     *  legacy networks.\n     *\n     *  Most of the time the ``max*FeePerGas`` is preferred.\n     */\n    gasPrice?: null | BigNumberish;\n\n    /**\n     *  The [[link-eip-1559]] maximum priority fee to pay per gas.\n     */\n    maxPriorityFeePerGas?: null | BigNumberish;\n\n    /**\n     *  The [[link-eip-1559]] maximum total fee to pay per gas. The actual\n     *  value used is protocol enforced to be the block's base fee.\n     */\n    maxFeePerGas?: null | BigNumberish;\n\n    /**\n     *  The transaction data.\n     */\n    data?: null | string;\n\n    /**\n     *  The transaction value (in wei).\n     */\n    value?: null | BigNumberish;\n\n    /**\n     *  The chain ID for the network this transaction is valid on.\n     */\n    chainId?: null | BigNumberish;\n\n    /**\n     *  The [[link-eip-2930]] access list. Storage slots included in the access\n     *  list are //warmed// by pre-loading them, so their initial cost to\n     *  fetch is guaranteed, but then each additional access is cheaper.\n     */\n    accessList?: null | AccessListish;\n\n    /**\n     *  A custom object, which can be passed along for network-specific\n     *  values.\n     */\n    customData?: any;\n\n    // Only meaningful when used for call\n\n    /**\n     *  When using ``call`` or ``estimateGas``, this allows a specific\n     *  block to be queried. Many backends do not support this and when\n     *  unsupported errors are silently squelched and ``\"latest\"`` is used. \n     */\n    blockTag?: BlockTag;\n\n    /**\n     *  When using ``call``, this enables CCIP-read, which permits the\n     *  provider to be redirected to web-based content during execution,\n     *  which is then further validated by the contract.\n     *\n     *  There are potential security implications allowing CCIP-read, as\n     *  it could be used to expose the IP address or user activity during\n     *  the fetch to unexpected parties.\n     */\n    enableCcipRead?: boolean;\n\n    // Todo?\n    //gasMultiplier?: number;\n};\n\n/**\n *  A **PreparedTransactionRequest** is identical to a [[TransactionRequest]]\n *  except all the property types are strictly enforced.\n */\nexport interface PreparedTransactionRequest {\n    /**\n     *  The transaction type.\n     */\n    type?: number;\n\n\n    /**\n     *  The target of the transaction.\n     */\n    to?: AddressLike;\n\n    /**\n     *  The sender of the transaction.\n     */\n    from?: AddressLike;\n\n    /**\n     *  The nonce of the transaction, used to prevent replay attacks.\n     */\n\n    nonce?: number;\n\n    /**\n     *  The maximum amount of gas to allow this transaction to consime.\n     */\n    gasLimit?: bigint;\n\n    /**\n     *  The gas price to use for legacy transactions or transactions on\n     *  legacy networks.\n     *\n     *  Most of the time the ``max*FeePerGas`` is preferred.\n     */\n    gasPrice?: bigint;\n\n    /**\n     *  The [[link-eip-1559]] maximum priority fee to pay per gas.\n     */\n    maxPriorityFeePerGas?: bigint;\n\n    /**\n     *  The [[link-eip-1559]] maximum total fee to pay per gas. The actual\n     *  value used is protocol enforced to be the block's base fee.\n     */\n    maxFeePerGas?: bigint;\n\n    /**\n     *  The transaction data.\n     */\n    data?: string;\n\n\n    /**\n     *  The transaction value (in wei).\n     */\n    value?: bigint;\n\n    /**\n     *  The chain ID for the network this transaction is valid on.\n     */\n    chainId?: bigint;\n\n    /**\n     *  The [[link-eip-2930]] access list. Storage slots included in the access\n     *  list are //warmed// by pre-loading them, so their initial cost to\n     *  fetch is guaranteed, but then each additional access is cheaper.\n     */\n    accessList?: AccessList;\n\n    /**\n     *  A custom object, which can be passed along for network-specific\n     *  values.\n     */\n    customData?: any;\n\n\n\n    /**\n     *  When using ``call`` or ``estimateGas``, this allows a specific\n     *  block to be queried. Many backends do not support this and when\n     *  unsupported errors are silently squelched and ``\"latest\"`` is used. \n     */\n    blockTag?: BlockTag;\n\n    /**\n     *  When using ``call``, this enables CCIP-read, which permits the\n     *  provider to be redirected to web-based content during execution,\n     *  which is then further validated by the contract.\n     *\n     *  There are potential security implications allowing CCIP-read, as\n     *  it could be used to expose the IP address or user activity during\n     *  the fetch to unexpected parties.\n     */\n    enableCcipRead?: boolean;\n}\n\n/**\n *  Returns a copy of %%req%% with all properties coerced to their strict\n *  types.\n */\nexport function copyRequest(req: TransactionRequest): PreparedTransactionRequest {\n    const result: any = { };\n\n    // These could be addresses, ENS names or Addressables\n    if (req.to) { result.to = req.to; }\n    if (req.from) { result.from = req.from; }\n\n    if (req.data) { result.data = hexlify(req.data); }\n\n    const bigIntKeys = \"chainId,gasLimit,gasPrice,maxFeePerGas,maxPriorityFeePerGas,value\".split(/,/);\n    for (const key of bigIntKeys) {\n        if (!(key in req) || (<any>req)[key] == null) { continue; }\n        result[key] = getBigInt((<any>req)[key], `request.${ key }`);\n    }\n\n    const numberKeys = \"type,nonce\".split(/,/);\n    for (const key of numberKeys) {\n        if (!(key in req) || (<any>req)[key] == null) { continue; }\n        result[key] = getNumber((<any>req)[key], `request.${ key }`);\n    }\n\n    if (req.accessList) {\n        result.accessList = accessListify(req.accessList);\n    }\n\n    if (\"blockTag\" in req) { result.blockTag = req.blockTag; }\n\n    if (\"enableCcipRead\" in req) {\n        result.enableCcipRead = !!req.enableCcipRead\n    }\n\n    if (\"customData\" in req) {\n        result.customData = req.customData;\n    }\n\n    return result;\n}\n\n//////////////////////\n// Block\n\n/**\n *  An Interface to indicate a [[Block]] has been included in the\n *  blockchain. This asserts a Type Guard that necessary properties\n *  are non-null.\n *\n *  Before a block is included, it is a //pending// block.\n */\nexport interface MinedBlock extends Block {\n    /**\n     *  The block number also known as the block height.\n     */\n    readonly number: number;\n\n    /**\n     *  The block hash.\n     */\n    readonly hash: string;\n\n    /**\n     *  The block timestamp, in seconds from epoch.\n     */\n    readonly timestamp: number;\n\n    /**\n     *  The block date, created from the [[timestamp]].\n     */\n    readonly date: Date;\n\n    /**\n     *  The miner of the block, also known as the ``author`` or\n     *  block ``producer``.\n     */\n    readonly miner: string;\n}\n\n/**\n *  A **Block** represents the data associated with a full block on\n *  Ethereum.\n */\nexport class Block implements BlockParams, Iterable<string> {\n\n    /**\n     *  The provider connected to the block used to fetch additional details\n     *  if necessary.\n     */\n    readonly provider!: Provider;\n\n    /**\n     *  The block number, sometimes called the block height. This is a\n     *  sequential number that is one higher than the parent block.\n     */\n    readonly number!: number;\n\n    /**\n     *  The block hash.\n     *\n     *  This hash includes all properties, so can be safely used to identify\n     *  an exact set of block properties.\n     */\n    readonly hash!: null | string;\n\n    /**\n     *  The timestamp for this block, which is the number of seconds since\n     *  epoch that this block was included.\n     */\n    readonly timestamp!: number;\n\n    /**\n     *  The block hash of the parent block.\n     */\n    readonly parentHash!: string;\n\n    /**\n     *  The nonce.\n     *\n     *  On legacy networks, this is the random number inserted which\n     *  permitted the difficulty target to be reached.\n     */\n    readonly nonce!: string;\n\n    /**\n     *  The difficulty target.\n     *\n     *  On legacy networks, this is the proof-of-work target required\n     *  for a block to meet the protocol rules to be included.\n     *\n     *  On modern networks, this is a random number arrived at using\n     *  randao.  @TODO: Find links?\n     */\n    readonly difficulty!: bigint;\n\n\n    /**\n     *  The total gas limit for this block.\n     */\n    readonly gasLimit!: bigint;\n\n    /**\n     *  The total gas used in this block.\n     */\n    readonly gasUsed!: bigint;\n\n    /**\n     *  The miner coinbase address, wihch receives any subsidies for\n     *  including this block.\n     */\n    readonly miner!: string;\n\n    /**\n     *  Any extra data the validator wished to include.\n     */\n    readonly extraData!: string;\n\n    /**\n     *  The base fee per gas that all transactions in this block were\n     *  charged.\n     *\n     *  This adjusts after each block, depending on how congested the network\n     *  is.\n     */\n    readonly baseFeePerGas!: null | bigint;\n\n    readonly #transactions: Array<string | TransactionResponse>;\n\n    /**\n     *  Create a new **Block** object.\n     *\n     *  This should generally not be necessary as the unless implementing a\n     *  low-level library.\n     */\n    constructor(block: BlockParams, provider: Provider) {\n\n        this.#transactions = block.transactions.map((tx) => {\n            if (typeof(tx) !== \"string\") {\n                return new TransactionResponse(tx, provider);\n            }\n            return tx;\n        });\n\n        defineProperties<Block>(this, {\n            provider,\n\n            hash: getValue(block.hash),\n\n            number: block.number,\n            timestamp: block.timestamp,\n\n            parentHash: block.parentHash,\n\n            nonce: block.nonce,\n            difficulty: block.difficulty,\n\n            gasLimit: block.gasLimit,\n            gasUsed: block.gasUsed,\n            miner: block.miner,\n            extraData: block.extraData,\n\n            baseFeePerGas: getValue(block.baseFeePerGas)\n        });\n    }\n\n    /**\n     *  Returns the list of transaction hashes, in the order\n     *  they were executed within the block.\n     */\n    get transactions(): ReadonlyArray<string> {\n        return this.#transactions.map((tx) => {\n            if (typeof(tx) === \"string\") { return tx; }\n            return tx.hash;\n        });\n    }\n\n    /**\n     *  Returns the complete transactions, in the order they\n     *  were executed within the block.\n     *\n     *  This is only available for blocks which prefetched\n     *  transactions, by passing ``true`` to %%prefetchTxs%%\n     *  into [[Provider-getBlock]].\n     */\n    get prefetchedTransactions(): Array<TransactionResponse> {\n        const txs = this.#transactions.slice();\n\n        // Doesn't matter...\n        if (txs.length === 0) { return [ ]; }\n\n        // Make sure we prefetched the transactions\n        assert(typeof(txs[0]) === \"object\", \"transactions were not prefetched with block request\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"transactionResponses()\"\n        });\n\n        return <Array<TransactionResponse>>txs;\n    }\n\n    /**\n     *  Returns a JSON-friendly value.\n     */\n    toJSON(): any {\n        const {\n            baseFeePerGas, difficulty, extraData, gasLimit, gasUsed, hash,\n            miner, nonce, number, parentHash, timestamp, transactions\n        } = this;\n\n        return {\n            _type: \"Block\",\n            baseFeePerGas: toJson(baseFeePerGas),\n            difficulty: toJson(difficulty),\n            extraData,\n            gasLimit: toJson(gasLimit),\n            gasUsed: toJson(gasUsed),\n            hash, miner, nonce, number, parentHash, timestamp,\n            transactions,\n        };\n    }\n\n    [Symbol.iterator](): Iterator<string> {\n        let index = 0;\n        const txs = this.transactions;\n        return {\n            next: () => {\n                if (index < this.length) {\n                    return {\n                        value: txs[index++], done: false\n                    }\n                }\n                return { value: undefined, done: true };\n            }\n        };\n    }\n\n    /**\n     *  The number of transactions in this block.\n     */\n    get length(): number { return this.#transactions.length; }\n\n    /**\n     *  The [[link-js-date]] this block was included at.\n     */\n    get date(): null | Date {\n        if (this.timestamp == null) { return null; }\n        return new Date(this.timestamp * 1000);\n    }\n\n    /**\n     *  Get the transaction at %%indexe%% within this block.\n     */\n    async getTransaction(indexOrHash: number | string): Promise<TransactionResponse> {\n        // Find the internal value by its index or hash\n        let tx: string | TransactionResponse | undefined = undefined;\n        if (typeof(indexOrHash) === \"number\") {\n            tx = this.#transactions[indexOrHash];\n\n        } else {\n            const hash = indexOrHash.toLowerCase();\n            for (const v of this.#transactions) {\n                if (typeof(v) === \"string\") {\n                    if (v !== hash) { continue; }\n                    tx = v;\n                    break;\n                } else {\n                    if (v.hash === hash) { continue; }\n                    tx = v;\n                    break;\n                }\n            }\n        }\n        if (tx == null) { throw new Error(\"no such tx\"); }\n\n        if (typeof(tx) === \"string\") {\n            return <TransactionResponse>(await this.provider.getTransaction(tx));\n        } else {\n            return tx;\n        }\n    }\n\n    /**\n     *  If a **Block** was fetched with a request to include the transactions\n     *  this will allow synchronous access to those transactions.\n     *\n     *  If the transactions were not prefetched, this will throw.\n     */\n    getPrefetchedTransaction(indexOrHash: number | string): TransactionResponse {\n        const txs = this.prefetchedTransactions;\n        if (typeof(indexOrHash) === \"number\") {\n            return txs[indexOrHash];\n        }\n\n        indexOrHash = indexOrHash.toLowerCase();\n        for (const tx of txs) {\n            if (tx.hash === indexOrHash) { return tx; }\n        }\n\n        assertArgument(false, \"no matching transaction\", \"indexOrHash\", indexOrHash);\n    }\n\n    /**\n     *  Returns true if this block been mined. This provides a type guard\n     *  for all properties on a [[MinedBlock]].\n     */\n    isMined(): this is MinedBlock { return !!this.hash; }\n\n    /**\n     *  Returns true if this block is an [[link-eip-2930]] block.\n     */\n    isLondon(): this is (Block & { baseFeePerGas: bigint }) {\n        return !!this.baseFeePerGas;\n    }\n\n    /**\n     *  @_ignore:\n     */\n    orphanedEvent(): OrphanFilter {\n        if (!this.isMined()) { throw new Error(\"\"); }\n        return createOrphanedBlockFilter(this);\n    }\n}\n\n//////////////////////\n// Log\n\n/**\n *  A **Log** in Ethereum represents an event that has been included in a\n *  transaction using the ``LOG*`` opcodes, which are most commonly used by\n *  Solidity's emit for announcing events.\n */\nexport class Log implements LogParams {\n\n    /**\n     *  The provider connected to the log used to fetch additional details\n     *  if necessary.\n     */\n    readonly provider: Provider;\n\n    /**\n     *  The transaction hash of the transaction this log occurred in. Use the\n     *  [[Log-getTransaction]] to get the [[TransactionResponse]].\n     */\n    readonly transactionHash!: string;\n\n    /**\n     *  The block hash of the block this log occurred in. Use the\n     *  [[Log-getBlock]] to get the [[Block]].\n     */\n    readonly blockHash!: string;\n\n    /**\n     *  The block number of the block this log occurred in. It is preferred\n     *  to use the [[Block-hash]] when fetching the related [[Block]],\n     *  since in the case of an orphaned block, the block at that height may\n     *  have changed.\n     */\n    readonly blockNumber!: number;\n\n    /**\n     *  If the **Log** represents a block that was removed due to an orphaned\n     *  block, this will be true.\n     *\n     *  This can only happen within an orphan event listener.\n     */\n    readonly removed!: boolean;\n\n    /**\n     *  The address of the contract that emitted this log.\n     */\n    readonly address!: string;\n\n    /**\n     *  The data included in this log when it was emitted.\n     */\n    readonly data!: string;\n\n    /**\n     *  The indexed topics included in this log when it was emitted.\n     *\n     *  All topics are included in the bloom filters, so they can be\n     *  efficiently filtered using the [[Provider-getLogs]] method.\n     */\n    readonly topics!: ReadonlyArray<string>;\n\n    /**\n     *  The index within the block this log occurred at. This is generally\n     *  not useful to developers, but can be used with the various roots\n     *  to proof inclusion within a block.\n     */\n    readonly index!: number;\n\n    /**\n     *  The index within the transaction of this log.\n     */\n    readonly transactionIndex!: number;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(log: LogParams, provider: Provider) {\n        this.provider = provider;\n\n        const topics = Object.freeze(log.topics.slice());\n        defineProperties<Log>(this, {\n            transactionHash: log.transactionHash,\n            blockHash: log.blockHash,\n            blockNumber: log.blockNumber,\n\n            removed: log.removed,\n\n            address: log.address,\n            data: log.data,\n\n            topics,\n\n            index: log.index,\n            transactionIndex: log.transactionIndex,\n        });\n    }\n\n    /**\n     *  Returns a JSON-compatible object.\n     */\n    toJSON(): any {\n        const {\n            address, blockHash, blockNumber, data, index,\n            removed, topics, transactionHash, transactionIndex\n        } = this;\n\n        return {\n            _type: \"log\",\n            address, blockHash, blockNumber, data, index,\n            removed, topics, transactionHash, transactionIndex\n        };\n    }\n\n    /**\n     *  Returns the block that this log occurred in.\n     */\n    async getBlock(): Promise<Block> {\n        const block = await this.provider.getBlock(this.blockHash);\n        assert(!!block, \"failed to find transaction\", \"UNKNOWN_ERROR\", { });\n        return block;\n    }\n\n    /**\n     *  Returns the transaction that this log occurred in.\n     */\n    async getTransaction(): Promise<TransactionResponse> {\n        const tx = await this.provider.getTransaction(this.transactionHash);\n        assert(!!tx, \"failed to find transaction\", \"UNKNOWN_ERROR\", { });\n        return tx;\n    }\n\n    /**\n     *  Returns the transaction receipt fot the transaction that this\n     *  log occurred in.\n     */\n    async getTransactionReceipt(): Promise<TransactionReceipt> {\n        const receipt = await this.provider.getTransactionReceipt(this.transactionHash);\n        assert(!!receipt, \"failed to find transaction receipt\", \"UNKNOWN_ERROR\", { });\n        return receipt;\n    }\n\n    /**\n     *  @_ignore:\n     */\n    removedEvent(): OrphanFilter {\n        return createRemovedLogFilter(this);\n    }\n}\n\n//////////////////////\n// Transaction Receipt\n\n/*\nexport interface LegacyTransactionReceipt {\n    byzantium: false;\n    status: null;\n    root: string;\n}\n\nexport interface ByzantiumTransactionReceipt {\n    byzantium: true;\n    status: number;\n    root: null;\n}\n*/\n\n/**\n *  A **TransactionReceipt** includes additional information about a\n *  transaction that is only available after it has been mined.\n */\nexport class TransactionReceipt implements TransactionReceiptParams, Iterable<Log> {\n    /**\n     *  The provider connected to the log used to fetch additional details\n     *  if necessary.\n     */\n    readonly provider!: Provider;\n\n    /**\n     *  The address the transaction was sent to.\n     */\n    readonly to!: null | string;\n\n    /**\n     *  The sender of the transaction.\n     */\n    readonly from!: string;\n\n    /**\n     *  The address of the contract if the transaction was directly\n     *  responsible for deploying one.\n     *\n     *  This is non-null **only** if the ``to`` is empty and the ``data``\n     *  was successfully executed as initcode.\n     */\n    readonly contractAddress!: null | string;\n\n    /**\n     *  The transaction hash.\n     */\n    readonly hash!: string;\n\n    /**\n     *  The index of this transaction within the block transactions.\n     */\n    readonly index!: number;\n\n    /**\n     *  The block hash of the [[Block]] this transaction was included in.\n     */\n    readonly blockHash!: string;\n\n    /**\n     *  The block number of the [[Block]] this transaction was included in.\n     */\n    readonly blockNumber!: number;\n\n    /**\n     *  The bloom filter bytes that represent all logs that occurred within\n     *  this transaction. This is generally not useful for most developers,\n     *  but can be used to validate the included logs.\n     */\n    readonly logsBloom!: string;\n\n    /**\n     *  The actual amount of gas used by this transaction.\n     *\n     *  When creating a transaction, the amount of gas that will be used can\n     *  only be approximated, but the sender must pay the gas fee for the\n     *  entire gas limit. After the transaction, the difference is refunded.\n     */\n    readonly gasUsed!: bigint;\n\n    /**\n     *  The amount of gas used by all transactions within the block for this\n     *  and all transactions with a lower ``index``.\n     *\n     *  This is generally not useful for developers but can be used to\n     *  validate certain aspects of execution.\n     */\n    readonly cumulativeGasUsed!: bigint;\n\n    /**\n     *  The actual gas price used during execution.\n     *\n     *  Due to the complexity of [[link-eip-1559]] this value can only\n     *  be caluclated after the transaction has been mined, snce the base\n     *  fee is protocol-enforced.\n     */\n    readonly gasPrice!: bigint;\n\n    /**\n     *  The [[link-eip-2718]] transaction type.\n     */\n    readonly type!: number;\n    //readonly byzantium!: boolean;\n\n    /**\n     *  The status of this transaction, indicating success (i.e. ``1``) or\n     *  a revert (i.e. ``0``).\n     *\n     *  This is available in post-byzantium blocks, but some backends may\n     *  backfill this value.\n     */\n    readonly status!: null | number;\n\n    /**\n     *  The root hash of this transaction.\n     *\n     *  This is no present and was only included in pre-byzantium blocks, but\n     *  could be used to validate certain parts of the receipt.\n     */\n    readonly root!: null | string;\n\n    readonly #logs: ReadonlyArray<Log>;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(tx: TransactionReceiptParams, provider: Provider) {\n        this.#logs = Object.freeze(tx.logs.map((log) => {\n            return new Log(log, provider);\n        }));\n\n        let gasPrice = BN_0;\n        if (tx.effectiveGasPrice != null) {\n            gasPrice = tx.effectiveGasPrice;\n        } else if (tx.gasPrice != null) {\n            gasPrice = tx.gasPrice;\n        }\n\n        defineProperties<TransactionReceipt>(this, {\n            provider,\n\n            to: tx.to,\n            from: tx.from,\n            contractAddress: tx.contractAddress,\n\n            hash: tx.hash,\n            index: tx.index,\n\n            blockHash: tx.blockHash,\n            blockNumber: tx.blockNumber,\n\n            logsBloom: tx.logsBloom,\n\n            gasUsed: tx.gasUsed,\n            cumulativeGasUsed: tx.cumulativeGasUsed,\n            gasPrice,\n\n            type: tx.type,\n            //byzantium: tx.byzantium,\n            status: tx.status,\n            root: tx.root\n        });\n    }\n\n    /**\n     *  The logs for this transaction.\n     */\n    get logs(): ReadonlyArray<Log> { return this.#logs; }\n\n    /**\n     *  Returns a JSON-compatible representation.\n     */\n    toJSON(): any {\n        const {\n            to, from, contractAddress, hash, index, blockHash, blockNumber, logsBloom,\n            logs, //byzantium, \n            status, root\n        } = this;\n\n        return {\n            _type: \"TransactionReceipt\",\n            blockHash, blockNumber,\n            //byzantium, \n            contractAddress,\n            cumulativeGasUsed: toJson(this.cumulativeGasUsed),\n            from,\n            gasPrice: toJson(this.gasPrice),\n            gasUsed: toJson(this.gasUsed),\n            hash, index, logs, logsBloom, root, status, to\n        };\n    }\n\n    /**\n     *  @_ignore:\n     */\n    get length(): number { return this.logs.length; }\n\n    [Symbol.iterator](): Iterator<Log> {\n        let index = 0;\n        return {\n            next: () => {\n                if (index < this.length) {\n                    return { value: this.logs[index++], done: false }\n                }\n                return { value: undefined, done: true };\n            }\n        };\n    }\n\n    /**\n     *  The total fee for this transaction, in wei.\n     */\n    get fee(): bigint {\n        return this.gasUsed * this.gasPrice;\n    }\n\n    /**\n     *  Resolves to the block this transaction occurred in.\n     */\n    async getBlock(): Promise<Block> {\n        const block = await this.provider.getBlock(this.blockHash);\n        if (block == null) { throw new Error(\"TODO\"); }\n        return block;\n    }\n\n    /**\n     *  Resolves to the transaction this transaction occurred in.\n     */\n    async getTransaction(): Promise<TransactionResponse> {\n        const tx = await this.provider.getTransaction(this.hash);\n        if (tx == null) { throw new Error(\"TODO\"); }\n        return tx;\n    }\n\n    /**\n     *  Resolves to the return value of the execution of this transaction.\n     *\n     *  Support for this feature is limited, as it requires an archive node\n     *  with the ``debug_`` or ``trace_`` API enabled.\n     */\n    async getResult(): Promise<string> {\n        return <string>(await this.provider.getTransactionResult(this.hash));\n    }\n\n    /**\n     *  Resolves to the number of confirmations this transaction has.\n     */\n    async confirmations(): Promise<number> {\n        return (await this.provider.getBlockNumber()) - this.blockNumber + 1;\n    }\n\n    /**\n     *  @_ignore:\n     */\n    removedEvent(): OrphanFilter {\n        return createRemovedTransactionFilter(this);\n    }\n\n    /**\n     *  @_ignore:\n     */\n    reorderedEvent(other?: TransactionResponse): OrphanFilter {\n        assert(!other || other.isMined(), \"unmined 'other' transction cannot be orphaned\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"reorderedEvent(other)\" });\n        return createReorderedTransactionFilter(this, other);\n    }\n}\n\n\n//////////////////////\n// Transaction Response\n\n/**\n *  A **MinedTransactionResponse** is an interface representing a\n *  transaction which has been mined and allows for a type guard for its\n *  property values being defined.\n */\nexport interface MinedTransactionResponse extends TransactionResponse {\n    /**\n     *  The block number this transaction occurred in.\n     */\n    blockNumber: number;\n\n    /**\n     *  The block hash this transaction occurred in.\n     */\n    blockHash: string;\n\n    /**\n     *  The date this transaction occurred on.\n     */\n    date: Date;\n}\n\n\n/**\n *  A **TransactionResponse** includes all properties about a transaction\n *  that was sent to the network, which may or may not be included in a\n *  block.\n *\n *  The [[TransactionResponse-isMined]] can be used to check if the\n *  transaction has been mined as well as type guard that the otherwise\n *  possibly ``null`` properties are defined.\n */\nexport class TransactionResponse implements TransactionLike<string>, TransactionResponseParams {\n    /**\n     *  The provider this is connected to, which will influence how its\n     *  methods will resolve its async inspection methods.\n     */\n    readonly provider: Provider;\n\n    /**\n     *  The block number of the block that this transaction was included in.\n     *\n     *  This is ``null`` for pending transactions.\n     */\n    readonly blockNumber: null | number;\n\n    /**\n     *  The blockHash of the block that this transaction was included in.\n     *\n     *  This is ``null`` for pending transactions.\n     */\n    readonly blockHash: null | string;\n\n    /**\n     *  The index within the block that this transaction resides at.\n     */\n    readonly index!: number;\n\n    /**\n     *  The transaction hash.\n     */\n    readonly hash!: string;\n\n    /**\n     *  The [[link-eip-2718]] transaction envelope type. This is\n     *  ``0`` for legacy transactions types.\n     */\n    readonly type!: number;\n\n    /**\n     *  The receiver of this transaction.\n     *\n     *  If ``null``, then the transaction is an initcode transaction.\n     *  This means the result of executing the [[data]] will be deployed\n     *  as a new contract on chain (assuming it does not revert) and the\n     *  address may be computed using [[getCreateAddress]].\n     */\n    readonly to!: null | string;\n\n    /**\n     *  The sender of this transaction. It is implicitly computed\n     *  from the transaction pre-image hash (as the digest) and the\n     *  [[signature]] using ecrecover.\n     */\n    readonly from!: string;\n\n    /**\n     *  The nonce, which is used to prevent replay attacks and offer\n     *  a method to ensure transactions from a given sender are explicitly\n     *  ordered.\n     *\n     *  When sending a transaction, this must be equal to the number of\n     *  transactions ever sent by [[from]].\n     */\n    readonly nonce!: number;\n\n    /**\n     *  The maximum units of gas this transaction can consume. If execution\n     *  exceeds this, the entries transaction is reverted and the sender\n     *  is charged for the full amount, despite not state changes being made.\n     */\n    readonly gasLimit!: bigint;\n\n    /**\n     *  The gas price can have various values, depending on the network.\n     *\n     *  In modern networks, for transactions that are included this is\n     *  the //effective gas price// (the fee per gas that was actually\n     *  charged), while for transactions that have not been included yet\n     *  is the [[maxFeePerGas]].\n     *\n     *  For legacy transactions, or transactions on legacy networks, this\n     *  is the fee that will be charged per unit of gas the transaction\n     *  consumes.\n     */\n    readonly gasPrice!: bigint;\n\n    /**\n     *  The maximum priority fee (per unit of gas) to allow a\n     *  validator to charge the sender. This is inclusive of the\n     *  [[maxFeeFeePerGas]].\n     */\n    readonly maxPriorityFeePerGas!: null | bigint;\n\n    /**\n     *  The maximum fee (per unit of gas) to allow this transaction\n     *  to charge the sender.\n     */\n    readonly maxFeePerGas!: null | bigint;\n\n    /**\n     *  The data.\n     */\n    readonly data!: string;\n\n    /**\n     *  The value, in wei. Use [[formatEther]] to format this value\n     *  as ether.\n     */\n    readonly value!: bigint;\n\n    /**\n     *  The chain ID.\n     */\n    readonly chainId!: bigint;\n\n    /**\n     *  The signature.\n     */\n    readonly signature!: Signature;\n\n    /**\n     *  The [[link-eip-2930]] access list for transaction types that\n     *  support it, otherwise ``null``.\n     */\n    readonly accessList!: null | AccessList;\n\n    #startBlock: number;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(tx: TransactionResponseParams, provider: Provider) {\n        this.provider = provider;\n\n        this.blockNumber = (tx.blockNumber != null) ? tx.blockNumber: null;\n        this.blockHash = (tx.blockHash != null) ? tx.blockHash: null;\n\n        this.hash = tx.hash;\n        this.index = tx.index;\n\n        this.type = tx.type;\n\n        this.from = tx.from;\n        this.to = tx.to || null;\n\n        this.gasLimit = tx.gasLimit;\n        this.nonce = tx.nonce;\n        this.data = tx.data;\n        this.value = tx.value;\n\n        this.gasPrice = tx.gasPrice;\n        this.maxPriorityFeePerGas = (tx.maxPriorityFeePerGas != null) ? tx.maxPriorityFeePerGas: null;\n        this.maxFeePerGas = (tx.maxFeePerGas != null) ? tx.maxFeePerGas: null;\n\n        this.chainId = tx.chainId;\n        this.signature = tx.signature;\n\n        this.accessList = (tx.accessList != null) ? tx.accessList: null;\n\n        this.#startBlock = -1;\n    }\n\n    /**\n     *  Returns a JSON-compatible representation of this transaction.\n     */\n    toJSON(): any {\n        const {\n            blockNumber, blockHash, index, hash, type, to, from, nonce,\n            data, signature, accessList\n        } = this;\n\n        return {\n            _type: \"TransactionReceipt\",\n            accessList, blockNumber, blockHash,\n            chainId: toJson(this.chainId),\n            data, from,\n            gasLimit: toJson(this.gasLimit),\n            gasPrice: toJson(this.gasPrice),\n            hash,\n            maxFeePerGas: toJson(this.maxFeePerGas),\n            maxPriorityFeePerGas: toJson(this.maxPriorityFeePerGas),\n            nonce, signature, to, index, type,\n            value: toJson(this.value),\n        };\n    }\n\n    /**\n     *  Resolves to the Block that this transaction was included in.\n     *\n     *  This will return null if the transaction has not been included yet.\n     */\n    async getBlock(): Promise<null | Block> {\n        let blockNumber = this.blockNumber;\n        if (blockNumber == null) {\n            const tx = await this.getTransaction();\n            if (tx) { blockNumber = tx.blockNumber; }\n        }\n        if (blockNumber == null) { return null; }\n        const block = this.provider.getBlock(blockNumber);\n        if (block == null) { throw new Error(\"TODO\"); }\n        return block;\n    }\n\n    /**\n     *  Resolves to this transaction being re-requested from the\n     *  provider. This can be used if you have an unmined transaction\n     *  and wish to get an up-to-date populated instance.\n     */\n    async getTransaction(): Promise<null | TransactionResponse> {\n        return this.provider.getTransaction(this.hash);\n    }\n\n    /**\n     *  Resolve to the number of confirmations this transaction has.\n     */\n    async confirmations(): Promise<number> {\n        if (this.blockNumber == null) {\n            const { tx, blockNumber } = await resolveProperties({\n                tx: this.getTransaction(),\n                blockNumber: this.provider.getBlockNumber()\n            });\n\n            // Not mined yet...\n            if (tx == null || tx.blockNumber == null) { return 0; }\n\n            return blockNumber - tx.blockNumber + 1;\n        }\n\n        const blockNumber = await this.provider.getBlockNumber();\n        return blockNumber - this.blockNumber + 1;\n    }\n\n    /**\n     *  Resolves once this transaction has been mined and has\n     *  %%confirms%% blocks including it (default: ``1``) with an\n     *  optional %%timeout%%.\n     *\n     *  This can resolve to ``null`` only if %%confirms%% is ``0``\n     *  and the transaction has not been mined, otherwise this will\n     *  wait until enough confirmations have completed.\n     */\n    async wait(_confirms?: number, _timeout?: number): Promise<null | TransactionReceipt> {\n        const confirms = (_confirms == null) ? 1: _confirms;\n        const timeout = (_timeout == null) ? 0: _timeout;\n\n        let startBlock = this.#startBlock\n        let nextScan = -1;\n        let stopScanning = (startBlock === -1) ? true: false;\n        const checkReplacement = async () => {\n            // Get the current transaction count for this sender\n            if (stopScanning) { return null; }\n            const { blockNumber, nonce } = await resolveProperties({\n                blockNumber: this.provider.getBlockNumber(),\n                nonce: this.provider.getTransactionCount(this.from)\n            });\n\n            // No transaction or our nonce has not been mined yet; but we\n            // can start scanning later when we do start\n            if (nonce < this.nonce) {\n                startBlock = blockNumber;\n                return;\n            }\n\n            // We were mined; no replacement\n            if (stopScanning) { return null; }\n            const mined = await this.getTransaction();\n            if (mined && mined.blockNumber != null) { return; }\n\n            // We were replaced; start scanning for that transaction\n\n            // Starting to scan; look back a few extra blocks for safety\n            if (nextScan === -1) {\n                nextScan = startBlock - 3;\n                if (nextScan < this.#startBlock) { nextScan = this.#startBlock; }\n            }\n\n            while (nextScan <= blockNumber) {\n                // Get the next block to scan\n                if (stopScanning) { return null; }\n                const block = await this.provider.getBlock(nextScan, true);\n\n                // This should not happen; but we'll try again shortly\n                if (block == null) { return; }\n\n                // We were mined; no replacement\n                for (const hash of block) {\n                    if (hash === this.hash) { return; }\n                }\n\n                // Search for the transaction that replaced us\n                for (let i = 0; i < block.length; i++) {\n                    const tx: TransactionResponse = await block.getTransaction(i);\n\n                    if (tx.from === this.from && tx.nonce === this.nonce) {\n                        // Get the receipt\n                        if (stopScanning) { return null; }\n                        const receipt = await this.provider.getTransactionReceipt(tx.hash);\n\n                        // This should not happen; but we'll try again shortly\n                        if (receipt == null) { return; }\n\n                        // We will retry this on the next block (this case could be optimized)\n                        if ((blockNumber - receipt.blockNumber + 1) < confirms) { return; }\n\n                        // The reason we were replaced\n                        let reason: \"replaced\" | \"repriced\" | \"cancelled\" = \"replaced\";\n                        if (tx.data === this.data && tx.to === this.to && tx.value === this.value) {\n                            reason = \"repriced\";\n                        } else  if (tx.data === \"0x\" && tx.from === tx.to && tx.value === BN_0) {\n                            reason = \"cancelled\"\n                        }\n\n                        assert(false, \"transaction was replaced\", \"TRANSACTION_REPLACED\", {\n                            cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                            reason,\n                            replacement: tx.replaceableTransaction(startBlock),\n                            hash: tx.hash,\n                            receipt\n                        });\n                    }\n                }\n\n                nextScan++;\n            }\n            return;\n        };\n\n        const checkReceipt = (receipt: null | TransactionReceipt) => {\n            if (receipt == null || receipt.status !== 0) { return receipt; }\n            assert(false, \"transaction execution reverted\", \"CALL_EXCEPTION\", {\n                action: \"sendTransaction\",\n                data: null, reason: null, invocation: null, revert: null,\n                transaction: {\n                    to: receipt.to,\n                    from: receipt.from,\n                    data: \"\" // @TODO: in v7, split out sendTransaction properties\n                }, receipt\n            });\n        };\n\n        const receipt = await this.provider.getTransactionReceipt(this.hash);\n\n        if (confirms === 0) { return checkReceipt(receipt); }\n\n        if (receipt) {\n            if ((await receipt.confirmations()) >= confirms) {\n                return checkReceipt(receipt);\n            }\n\n        } else {\n            // Check for a replacement; throws if a replacement was found\n            await checkReplacement();\n\n            // Allow null only when the confirms is 0\n            if (confirms === 0) { return null; }\n        }\n\n        const waiter = new Promise((resolve, reject) => {\n            // List of things to cancel when we have a result (one way or the other)\n            const cancellers: Array<() => void> = [ ];\n            const cancel = () => { cancellers.forEach((c) => c()); };\n\n            // On cancel, stop scanning for replacements\n            cancellers.push(() => { stopScanning = true; });\n\n            // Set up any timeout requested\n            if (timeout > 0) {\n                const timer = setTimeout(() => {\n                    cancel();\n                    reject(makeError(\"wait for transaction timeout\", \"TIMEOUT\"));\n                }, timeout);\n                cancellers.push(() => { clearTimeout(timer); });\n            }\n\n            const txListener = async (receipt: TransactionReceipt) => {\n                // Done; return it!\n                if ((await receipt.confirmations()) >= confirms) {\n                    cancel();\n                    try {\n                        resolve(checkReceipt(receipt));\n                    } catch (error) { reject(error); }\n                }\n            };\n            cancellers.push(() => { this.provider.off(this.hash, txListener); });\n            this.provider.on(this.hash, txListener);\n            // We support replacement detection; start checking\n            if (startBlock >= 0) {\n                const replaceListener = async () => {\n                    try {\n                        // Check for a replacement; this throws only if one is found\n                        await checkReplacement();\n\n                    } catch (error) {\n                        // We were replaced (with enough confirms); re-throw the error\n                        if (isError(error, \"TRANSACTION_REPLACED\")) {\n                            cancel();\n                            reject(error);\n                            return;\n                        }\n                    }\n\n                    // Rescheudle a check on the next block\n                    if (!stopScanning) {\n                        this.provider.once(\"block\", replaceListener);\n                    }\n                };\n                cancellers.push(() => { this.provider.off(\"block\", replaceListener); });\n                this.provider.once(\"block\", replaceListener);\n            }\n        });\n\n        return await <Promise<TransactionReceipt>>waiter;\n    }\n\n    /**\n     *  Returns ``true`` if this transaction has been included.\n     *\n     *  This is effective only as of the time the TransactionResponse\n     *  was instantiated. To get up-to-date information, use\n     *  [[getTransaction]].\n     *\n     *  This provides a Type Guard that this transaction will have\n     *  non-null property values for properties that are null for\n     *  unmined transactions.\n     */\n    isMined(): this is MinedTransactionResponse {\n        return (this.blockHash != null);\n    }\n\n    /**\n     *  Returns true if the transaction is a legacy (i.e. ``type == 0``)\n     *  transaction.\n     *\n     *  This provides a Type Guard that this transaction will have\n     *  the ``null``-ness for hardfork-specific properties set correctly.\n     */\n    isLegacy(): this is (TransactionResponse & { accessList: null, maxFeePerGas: null, maxPriorityFeePerGas: null }) {\n        return (this.type === 0)\n    }\n\n    /**\n     *  Returns true if the transaction is a Berlin (i.e. ``type == 1``)\n     *  transaction. See [[link-eip-2070]].\n     *\n     *  This provides a Type Guard that this transaction will have\n     *  the ``null``-ness for hardfork-specific properties set correctly.\n     */\n    isBerlin(): this is (TransactionResponse & { accessList: AccessList, maxFeePerGas: null, maxPriorityFeePerGas: null }) {\n        return (this.type === 1);\n    }\n\n    /**\n     *  Returns true if the transaction is a London (i.e. ``type == 2``)\n     *  transaction. See [[link-eip-1559]].\n     *\n     *  This provides a Type Guard that this transaction will have\n     *  the ``null``-ness for hardfork-specific properties set correctly.\n     */\n    isLondon(): this is (TransactionResponse & { accessList: AccessList, maxFeePerGas: bigint, maxPriorityFeePerGas: bigint }){\n        return (this.type === 2);\n    }\n\n    /**\n     *  Returns a filter which can be used to listen for orphan events\n     *  that evict this transaction.\n     */\n    removedEvent(): OrphanFilter {\n        assert(this.isMined(), \"unmined transaction canot be orphaned\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"removeEvent()\" });\n        return createRemovedTransactionFilter(this);\n    }\n\n    /**\n     *  Returns a filter which can be used to listen for orphan events\n     *  that re-order this event against %%other%%.\n     */\n    reorderedEvent(other?: TransactionResponse): OrphanFilter {\n        assert(this.isMined(), \"unmined transaction canot be orphaned\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"removeEvent()\" });\n\n        assert(!other || other.isMined(), \"unmined 'other' transaction canot be orphaned\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"removeEvent()\" });\n\n        return createReorderedTransactionFilter(this, other);\n    }\n\n    /**\n     *  Returns a new TransactionResponse instance which has the ability to\n     *  detect (and throw an error) if the transaction is replaced, which\n     *  will begin scanning at %%startBlock%%.\n     *\n     *  This should generally not be used by developers and is intended\n     *  primarily for internal use. Setting an incorrect %%startBlock%% can\n     *  have devastating performance consequences if used incorrectly.\n     */\n    replaceableTransaction(startBlock: number): TransactionResponse {\n        assertArgument(Number.isInteger(startBlock) && startBlock >= 0, \"invalid startBlock\", \"startBlock\", startBlock);\n        const tx = new TransactionResponse(this, this.provider);\n        tx.#startBlock = startBlock;\n        return tx;\n    }\n}\n\n\n//////////////////////\n// OrphanFilter\n\n/**\n *  An Orphan Filter allows detecting when an orphan block has\n *  resulted in dropping a block or transaction or has resulted\n *  in transactions changing order.\n *\n *  Not currently fully supported.\n */\nexport type OrphanFilter = {\n    orphan: \"drop-block\",\n    hash: string,\n    number: number\n} | {\n    orphan: \"drop-transaction\",\n    tx: { hash: string, blockHash: string, blockNumber: number },\n    other?: { hash: string, blockHash: string, blockNumber: number }\n} | {\n    orphan: \"reorder-transaction\",\n    tx: { hash: string, blockHash: string, blockNumber: number },\n    other?: { hash: string, blockHash: string, blockNumber: number }\n} | {\n    orphan: \"drop-log\",\n    log: {\n        transactionHash: string,\n        blockHash: string,\n        blockNumber: number,\n        address: string,\n        data: string,\n        topics: ReadonlyArray<string>,\n        index: number\n    }\n};\n\nfunction createOrphanedBlockFilter(block: { hash: string, number: number }): OrphanFilter {\n    return { orphan: \"drop-block\", hash: block.hash, number: block.number };\n}\n\nfunction createReorderedTransactionFilter(tx: { hash: string, blockHash: string, blockNumber: number }, other?: { hash: string, blockHash: string, blockNumber: number }): OrphanFilter {\n    return { orphan: \"reorder-transaction\", tx, other };\n}\n\nfunction createRemovedTransactionFilter(tx: { hash: string, blockHash: string, blockNumber: number }): OrphanFilter {\n    return { orphan: \"drop-transaction\", tx };\n}\n\nfunction createRemovedLogFilter(log: { blockHash: string, transactionHash: string, blockNumber: number, address: string, data: string, topics: ReadonlyArray<string>, index: number }): OrphanFilter {\n    return { orphan: \"drop-log\", log: {\n        transactionHash: log.transactionHash,\n        blockHash: log.blockHash,\n        blockNumber: log.blockNumber,\n        address: log.address,\n        data: log.data,\n        topics: Object.freeze(log.topics.slice()),\n        index: log.index\n    } };\n}\n\n//////////////////////\n// EventFilter\n\n/**\n *  A **TopicFilter** provides a struture to define bloom-filter\n *  queries.\n *\n *  Each field that is ``null`` matches **any** value, a field that is\n *  a ``string`` must match exactly that value and and ``array`` is\n *  effectively an ``OR``-ed set, where any one of those values must\n *  match.\n */\nexport type TopicFilter = Array<null | string | Array<string>>;\n\n// @TODO:\n//export type DeferableTopicFilter = Array<null | string | Promise<string> | Array<string | Promise<string>>>;\n\n/**\n *  An **EventFilter** allows efficiently filtering logs (also known as\n *  events) using bloom filters included within blocks.\n */\nexport interface EventFilter {\n    address?: AddressLike | Array<AddressLike>;\n    topics?: TopicFilter;\n}\n\n/**\n *  A **Filter** allows searching a specific range of blocks for mathcing\n *  logs.\n */\nexport interface Filter extends EventFilter {\n\n    /**\n     *  The start block for the filter (inclusive).\n     */\n    fromBlock?: BlockTag;\n\n    /**\n     *  The end block for the filter (inclusive).\n     */\n    toBlock?: BlockTag;\n}\n\n/**\n *  A **FilterByBlockHash** allows searching a specific block for mathcing\n *  logs.\n */\nexport interface FilterByBlockHash extends EventFilter {\n    /**\n     *  The blockhash of the specific block for the filter.\n     */\n    blockHash?: string;\n}\n\n\n//////////////////////\n// ProviderEvent\n\n/**\n *  A **ProviderEvent** provides the types of events that can be subscribed\n *  to on a [[Provider]].\n *\n *  Each provider may include additional possible events it supports, but\n *  the most commonly supported are:\n *\n *  **``\"block\"``** - calls the listener with the current block number on each\n *  new block.\n *\n *  **``\"error\"``** - calls the listener on each async error that occurs during\n *  the event loop, with the error.\n *\n *  **``\"debug\"``** - calls the listener on debug events, which can be used to\n *  troubleshoot network errors, provider problems, etc.\n *\n *  **``transaction hash``** - calls the listener on each block after the\n *  transaction has been mined; generally ``.once`` is more appropriate for\n *  this event.\n *\n *  **``Array``** - calls the listener on each log that matches the filter.\n *\n *  [[EventFilter]] - calls the listener with each matching log\n */\nexport type ProviderEvent = string | Array<string | Array<string>> | EventFilter | OrphanFilter;\n\n\n//////////////////////\n// Provider\n\n/**\n *  A **Provider** is the primary method to interact with the read-only\n *  content on Ethereum.\n *\n *  It allows access to details about accounts, blocks and transactions\n *  and the ability to query event logs and simulate contract execution.\n *\n *  Account data includes the [balance](getBalance),\n *  [transaction count](getTransactionCount), [code](getCode) and\n *  [state trie storage](getStorage).\n *\n *  Simulating execution can be used to [call](call),\n *  [estimate gas](estimateGas) and\n *  [get transaction results](getTransactionResult).\n *\n *  The [[broadcastTransaction]] is the only method which allows updating\n *  the blockchain, but it is usually accessed by a [[Signer]], since a\n *  private key must be used to sign the transaction before it can be\n *  broadcast.\n */\nexport interface Provider extends ContractRunner, EventEmitterable<ProviderEvent>, NameResolver {\n\n    /**\n     *  The provider iteself.\n     *\n     *  This is part of the necessary API for executing a contract, as\n     *  it provides a common property on any [[ContractRunner]] that\n     *  can be used to access the read-only portion of the runner.\n     */\n    provider: this;\n\n    /**\n     *  Shutdown any resources this provider is using. No additional\n     *  calls should be made to this provider after calling this.\n     */\n    destroy(): void;\n\n    ////////////////////\n    // State\n\n    /**\n     *  Get the current block number.\n     */\n    getBlockNumber(): Promise<number>;\n\n    /**\n     *  Get the connected [[Network]].\n     */\n    getNetwork(): Promise<Network>;\n\n    /**\n     *  Get the best guess at the recommended [[FeeData]].\n     */\n    getFeeData(): Promise<FeeData>;\n\n\n    ////////////////////\n    // Account\n\n    /**\n     *  Get the account balance (in wei) of %%address%%. If %%blockTag%%\n     *  is specified and the node supports archive access for that\n     *  %%blockTag%%, the balance is as of that [[BlockTag]].\n     *\n     *  @note On nodes without archive access enabled, the %%blockTag%% may be\n     *        **silently ignored** by the node, which may cause issues if relied on.\n     */\n    getBalance(address: AddressLike, blockTag?: BlockTag): Promise<bigint>;\n\n    /**\n     *  Get the number of transactions ever sent for %%address%%, which\n     *  is used as the ``nonce`` when sending a transaction. If\n     *  %%blockTag%% is specified and the node supports archive access\n     *  for that %%blockTag%%, the transaction count is as of that\n     *  [[BlockTag]].\n     *\n     *  @note On nodes without archive access enabled, the %%blockTag%% may be\n     *        **silently ignored** by the node, which may cause issues if relied on.\n     */\n    getTransactionCount(address: AddressLike, blockTag?: BlockTag): Promise<number>;\n\n    /**\n     *  Get the bytecode for %%address%%.\n     *\n     *  @note On nodes without archive access enabled, the %%blockTag%% may be\n     *        **silently ignored** by the node, which may cause issues if relied on.\n     */\n    getCode(address: AddressLike, blockTag?: BlockTag): Promise<string>\n\n    /**\n     *  Get the storage slot value for %%address%% at slot %%position%%.\n     *\n     *  @note On nodes without archive access enabled, the %%blockTag%% may be\n     *        **silently ignored** by the node, which may cause issues if relied on.\n     */\n    getStorage(address: AddressLike, position: BigNumberish, blockTag?: BlockTag): Promise<string>\n\n\n    ////////////////////\n    // Execution\n\n    /**\n     *  Estimates the amount of gas required to executre %%tx%%.\n     */\n    estimateGas(tx: TransactionRequest): Promise<bigint>;\n\n    /**\n     *  Simulate the execution of %%tx%%. If the call reverts, it will\n     *  throw a [[CallExceptionError]] which includes the revert data.\n     */\n    call(tx: TransactionRequest): Promise<string>\n\n    /**\n     *  Broadcasts the %%signedTx%% to the network, adding it to the\n     *  memory pool of any node for which the transaction meets the\n     *  rebroadcast requirements.\n     */\n    broadcastTransaction(signedTx: string): Promise<TransactionResponse>;\n\n\n    ////////////////////\n    // Queries\n\n    /**\n     *  Resolves to the block for %%blockHashOrBlockTag%%.\n     *\n     *  If %%prefetchTxs%%, and the backend supports including transactions\n     *  with block requests, all transactions will be included and the\n     *  [[Block]] object will not need to make remote calls for getting\n     *  transactions.\n     */\n    getBlock(blockHashOrBlockTag: BlockTag | string, prefetchTxs?: boolean): Promise<null | Block>;\n\n    /**\n     *  Resolves to the transaction for %%hash%%.\n     *\n     *  If the transaction is unknown or on pruning nodes which\n     *  discard old transactions this resolves to ``null``.\n     */\n    getTransaction(hash: string): Promise<null | TransactionResponse>;\n\n    /**\n     *  Resolves to the transaction receipt for %%hash%%, if mined.\n     *\n     *  If the transaction has not been mined, is unknown or on\n     *  pruning nodes which discard old transactions this resolves to\n     *  ``null``.\n     */\n    getTransactionReceipt(hash: string): Promise<null | TransactionReceipt>;\n\n    /**\n     *  Resolves to the result returned by the executions of %%hash%%.\n     *\n     *  This is only supported on nodes with archive access and with\n     *  the necessary debug APIs enabled.\n     */\n    getTransactionResult(hash: string): Promise<null | string>;\n\n\n    ////////////////////\n    // Bloom-filter Queries\n\n    /**\n     *  Resolves to the list of Logs that match %%filter%%\n     */\n    getLogs(filter: Filter | FilterByBlockHash): Promise<Array<Log>>;\n\n\n    ////////////////////\n    // ENS\n\n    /**\n     *  Resolves to the address configured for the %%ensName%% or\n     *  ``null`` if unconfigured.\n     */\n    resolveName(ensName: string): Promise<null | string>;\n\n    /**\n     *  Resolves to the ENS name associated for the %%address%% or\n     *  ``null`` if the //primary name// is not configured.\n     *\n     *  Users must perform additional steps to configure a //primary name//,\n     *  which is not currently common.\n     */\n    lookupAddress(address: string): Promise<null | string>;\n\n    /**\n     *  Waits until the transaction %%hash%% is mined and has %%confirms%%\n     *  confirmations.\n     */\n    waitForTransaction(hash: string, confirms?: number, timeout?: number): Promise<null | TransactionReceipt>;\n\n    /**\n     *  Resolves to the block at %%blockTag%% once it has been mined.\n     *\n     *  This can be useful for waiting some number of blocks by using\n     *  the ``currentBlockNumber + N``.\n     */\n    waitForBlock(blockTag?: BlockTag): Promise<Block>;\n}\n","/**\n *  Events allow for applications to use the observer pattern, which\n *  allows subscribing and publishing events, outside the normal\n *  execution paths.\n *\n *  @_section api/utils/events:Events  [about-events]\n */\nimport { defineProperties } from \"./properties.js\";\n\n/**\n *  A callback function called when a an event is triggered.\n */\nexport type Listener = (...args: Array<any>) => void;\n\n/**\n *  An **EventEmitterable** behaves similar to an EventEmitter\n *  except provides async access to its methods.\n *\n *  An EventEmitter implements the observer pattern.\n */\nexport interface EventEmitterable<T> {\n    /**\n     *  Registers a %%listener%% that is called whenever the\n     *  %%event%% occurs until unregistered.\n     */\n    on(event: T, listener: Listener): Promise<this>;\n\n    /**\n     *  Registers a %%listener%% that is called the next time\n     *  %%event%% occurs.\n     */\n    once(event: T, listener: Listener): Promise<this>;\n\n    /**\n     *  Triggers each listener for %%event%% with the %%args%%.\n     */\n    emit(event: T, ...args: Array<any>): Promise<boolean>;\n\n    /**\n     *  Resolves to the number of listeners for %%event%%.\n     */\n    listenerCount(event?: T): Promise<number>;\n\n    /**\n     *  Resolves to the listeners for %%event%%.\n     */\n    listeners(event?: T): Promise<Array<Listener>>;\n\n    /**\n     *  Unregister the %%listener%% for %%event%%. If %%listener%%\n     *  is unspecified, all listeners are unregistered.\n     */\n    off(event: T, listener?: Listener): Promise<this>;\n\n    /**\n     *  Unregister all listeners for %%event%%.\n     */\n    removeAllListeners(event?: T): Promise<this>;\n\n    /**\n     *  Alias for [[on]].\n     */\n    addListener(event: T, listener: Listener): Promise<this>;\n\n    /**\n     *  Alias for [[off]].\n     */\n    removeListener(event: T, listener: Listener): Promise<this>;\n}\n\n/**\n *  When an [[EventEmitterable]] triggers a [[Listener]], the\n *  callback always ahas one additional argument passed, which is\n *  an **EventPayload**.\n */\nexport class EventPayload<T> {\n    /**\n     *  The event filter.\n     */\n    readonly filter!: T;\n\n    /**\n     *  The **EventEmitterable**.\n     */\n    readonly emitter!: EventEmitterable<T>;\n\n    readonly #listener: null | Listener;\n\n    /**\n     *  Create a new **EventPayload** for %%emitter%% with\n     *  the %%listener%% and for %%filter%%.\n     */\n    constructor(emitter: EventEmitterable<T>, listener: null | Listener, filter: T) {\n        this.#listener = listener;\n        defineProperties<EventPayload<any>>(this, { emitter, filter });\n    }\n\n    /**\n     *  Unregister the triggered listener for future events.\n     */\n    async removeListener(): Promise<void> {\n        if (this.#listener == null) { return; }\n        await this.emitter.off(this.filter, this.#listener);\n    }\n}\n","// import from provider.ts instead of index.ts to prevent circular dep\n// from EtherscanProvider\nimport {\n    Block, Log, TransactionReceipt, TransactionResponse\n} from \"../providers/provider.js\";\nimport { defineProperties, EventPayload } from \"../utils/index.js\";\n\nimport type { EventFragment, Interface, Result } from \"../abi/index.js\";\nimport type { Listener } from \"../utils/index.js\";\nimport type {\n    Provider\n} from \"../providers/index.js\";\n\nimport type { BaseContract } from \"./contract.js\";\nimport type { ContractEventName } from \"./types.js\";\n\n/**\n *  An **EventLog** contains additional properties parsed from the [[Log]].\n */\nexport class EventLog extends Log {\n    /**\n     *  The Contract Interface.\n     */\n    readonly interface!: Interface;\n\n    /**\n     *  The matching event.\n     */\n    readonly fragment!: EventFragment;\n\n    /**\n     *  The parsed arguments passed to the event by ``emit``.\n     */\n    readonly args!: Result;\n\n    /**\n     * @_ignore:\n     */\n    constructor(log: Log, iface: Interface, fragment: EventFragment) {\n        super(log, log.provider);\n        const args = iface.decodeEventLog(fragment, log.data, log.topics);\n        defineProperties<EventLog>(this, { args, fragment, interface: iface });\n    }\n\n    /**\n     *  The name of the event.\n     */\n    get eventName(): string { return this.fragment.name; }\n\n    /**\n     *  The signature of the event.\n     */\n    get eventSignature(): string { return this.fragment.format(); }\n}\n\n/**\n *  An **EventLog** contains additional properties parsed from the [[Log]].\n */\nexport class UndecodedEventLog extends Log {\n\n    /**\n     *  The error encounted when trying to decode the log.\n     */\n    readonly error!: Error;\n\n    /**\n     * @_ignore:\n     */\n    constructor(log: Log, error: Error) {\n        super(log, log.provider);\n        defineProperties<UndecodedEventLog>(this, { error });\n    }\n}\n\n/**\n *  A **ContractTransactionReceipt** includes the parsed logs from a\n *  [[TransactionReceipt]].\n */\nexport class ContractTransactionReceipt extends TransactionReceipt {\n    readonly #iface: Interface;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(iface: Interface, provider: Provider, tx: TransactionReceipt) {\n        super(tx, provider);\n        this.#iface = iface;\n    }\n\n    /**\n     *  The parsed logs for any [[Log]] which has a matching event in the\n     *  Contract ABI.\n     */\n    get logs(): Array<EventLog | Log> {\n        return super.logs.map((log) => {\n            const fragment = log.topics.length ? this.#iface.getEvent(log.topics[0]): null;\n            if (fragment) {\n                try {\n                    return new EventLog(log, this.#iface, fragment)\n                } catch (error: any) {\n                    return new UndecodedEventLog(log, error);\n                }\n            }\n\n            return log;\n        });\n    }\n\n}\n\n/**\n *  A **ContractTransactionResponse** will return a\n *  [[ContractTransactionReceipt]] when waited on.\n */\nexport class ContractTransactionResponse extends TransactionResponse {\n    readonly #iface: Interface;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(iface: Interface, provider: Provider, tx: TransactionResponse) {\n        super(tx, provider);\n        this.#iface = iface;\n    }\n\n    /**\n     *  Resolves once this transaction has been mined and has\n     *  %%confirms%% blocks including it (default: ``1``) with an\n     *  optional %%timeout%%.\n     *\n     *  This can resolve to ``null`` only if %%confirms%% is ``0``\n     *  and the transaction has not been mined, otherwise this will\n     *  wait until enough confirmations have completed.\n     */\n    async wait(confirms?: number): Promise<null | ContractTransactionReceipt> {\n        const receipt = await super.wait(confirms);\n        if (receipt == null) { return null; }\n        return new ContractTransactionReceipt(this.#iface, this.provider, receipt);\n    }\n}\n\n/**\n *  A **ContractUnknownEventPayload** is included as the last parameter to\n *  Contract Events when the event does not match any events in the ABI.\n */\nexport  class ContractUnknownEventPayload extends EventPayload<ContractEventName> {\n    /**\n     *  The log with no matching events.\n     */\n    readonly log!: Log;\n\n    /**\n     *  @_event:\n     */\n    constructor(contract: BaseContract, listener: null | Listener, filter: ContractEventName, log: Log) {\n        super(contract, listener, filter);\n        defineProperties<ContractUnknownEventPayload>(this, { log });\n    }\n\n    /**\n     *  Resolves to the block the event occured in.\n     */\n    async getBlock(): Promise<Block> {\n        return await this.log.getBlock();\n    }\n\n    /**\n     *  Resolves to the transaction the event occured in.\n     */\n    async getTransaction(): Promise<TransactionResponse> {\n        return await this.log.getTransaction();\n    }\n\n    /**\n     *  Resolves to the transaction receipt the event occured in.\n     */\n    async getTransactionReceipt(): Promise<TransactionReceipt> {\n        return await this.log.getTransactionReceipt();\n    }\n}\n\n/**\n *  A **ContractEventPayload** is included as the last parameter to\n *  Contract Events when the event is known.\n */\nexport class ContractEventPayload extends ContractUnknownEventPayload {\n\n    /**\n     *  The matching event.\n     */\n    declare readonly fragment: EventFragment;\n\n    /**\n     *  The log, with parsed properties.\n     */\n    declare readonly log: EventLog;\n\n    /**\n     *  The parsed arguments passed to the event by ``emit``.\n     */\n    declare readonly args: Result;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(contract: BaseContract, listener: null | Listener, filter: ContractEventName, fragment: EventFragment, _log: Log) {\n        super(contract, listener, filter, new EventLog(_log, contract.interface, fragment));\n        const args = contract.interface.decodeEventLog(fragment, this.log.data, this.log.topics);\n        defineProperties<ContractEventPayload>(this, { args, fragment });\n    }\n\n    /**\n     *  The event name.\n     */\n    get eventName(): string {\n        return this.fragment.name;\n    }\n\n    /**\n     *  The event signature.\n     */\n    get eventSignature(): string {\n        return this.fragment.format();\n    }\n}\n","import { Interface, Typed } from \"../abi/index.js\";\nimport { isAddressable, resolveAddress } from \"../address/index.js\";\n// import from provider.ts instead of index.ts to prevent circular dep\n// from EtherscanProvider\nimport { copyRequest, Log, TransactionResponse } from \"../providers/provider.js\";\nimport {\n    defineProperties, getBigInt, isCallException, isHexString, resolveProperties,\n    isError, makeError, assert, assertArgument\n} from \"../utils/index.js\";\n\nimport {\n    ContractEventPayload, ContractUnknownEventPayload,\n    ContractTransactionResponse,\n    EventLog, UndecodedEventLog\n} from \"./wrappers.js\";\n\nimport type { EventFragment, FunctionFragment, InterfaceAbi, ParamType, Result } from \"../abi/index.js\";\nimport type { Addressable, NameResolver } from \"../address/index.js\";\nimport type { EventEmitterable, Listener } from \"../utils/index.js\";\nimport type {\n    BlockTag, ContractRunner, Provider, TransactionRequest, TopicFilter\n} from \"../providers/index.js\";\n\nimport type {\n    BaseContractMethod,\n    ContractEventName,\n    ContractInterface,\n    ContractMethodArgs,\n    ContractMethod,\n    ContractEventArgs,\n    ContractEvent,\n    ContractTransaction,\n    DeferredTopicFilter,\n    WrappedFallback\n} from \"./types.js\";\n\nconst BN_0 = BigInt(0);\n\ninterface ContractRunnerCaller extends ContractRunner {\n    call: (tx: TransactionRequest) => Promise<string>;\n}\n\ninterface ContractRunnerEstimater extends ContractRunner {\n    estimateGas: (tx: TransactionRequest) => Promise<bigint>;\n}\n\ninterface ContractRunnerSender extends ContractRunner {\n    sendTransaction: (tx: TransactionRequest) => Promise<TransactionResponse>;\n}\n\ninterface ContractRunnerResolver extends ContractRunner {\n    resolveName: (name: string | Addressable) => Promise<null | string>;\n}\n\nfunction canCall(value: any): value is ContractRunnerCaller {\n    return (value && typeof(value.call) === \"function\");\n}\n\nfunction canEstimate(value: any): value is ContractRunnerEstimater {\n    return (value && typeof(value.estimateGas) === \"function\");\n}\n\nfunction canResolve(value: any): value is ContractRunnerResolver {\n    return (value && typeof(value.resolveName) === \"function\");\n}\n\nfunction canSend(value: any): value is ContractRunnerSender {\n    return (value && typeof(value.sendTransaction) === \"function\");\n}\n\nfunction getResolver(value: any): undefined | NameResolver {\n    if (value != null) {\n        if (canResolve(value)) { return value; }\n        if (value.provider) { return value.provider; }\n    }\n    return undefined;\n}\n\nclass PreparedTopicFilter implements DeferredTopicFilter {\n    #filter: Promise<TopicFilter>;\n    readonly fragment!: EventFragment;\n\n    constructor(contract: BaseContract, fragment: EventFragment, args: Array<any>) {\n        defineProperties<PreparedTopicFilter>(this, { fragment });\n        if (fragment.inputs.length < args.length) {\n            throw new Error(\"too many arguments\");\n        }\n\n        // Recursively descend into args and resolve any addresses\n        const runner = getRunner(contract.runner, \"resolveName\");\n        const resolver = canResolve(runner) ? runner: null;\n        this.#filter = (async function() {\n            const resolvedArgs = await Promise.all(fragment.inputs.map((param, index) => {\n                const arg = args[index];\n                if (arg == null) { return null; }\n\n                return param.walkAsync(args[index], (type, value) => {\n                    if (type === \"address\") {\n                        if (Array.isArray(value)) {\n                            return Promise.all(value.map((v) => resolveAddress(v, resolver)));\n                        }\n                        return resolveAddress(value, resolver);\n                    }\n                    return value;\n                });\n            }));\n\n            return contract.interface.encodeFilterTopics(fragment, resolvedArgs);\n        })();\n    }\n\n    getTopicFilter(): Promise<TopicFilter> {\n        return this.#filter;\n    }\n}\n\n\n// A = Arguments passed in as a tuple\n// R = The result type of the call (i.e. if only one return type,\n//     the qualified type, otherwise Result)\n// D = The type the default call will return (i.e. R for view/pure,\n//     TransactionResponse otherwise)\n//export interface ContractMethod<A extends Array<any> = Array<any>, R = any, D extends R | ContractTransactionResponse = ContractTransactionResponse> {\n\nfunction getRunner<T extends ContractRunner>(value: any, feature: keyof ContractRunner): null | T {\n    if (value == null) { return null; }\n    if (typeof(value[feature]) === \"function\") { return value; }\n    if (value.provider && typeof(value.provider[feature]) === \"function\") {\n        return value.provider;\n    }\n    return null;\n}\n\nfunction getProvider(value: null | ContractRunner): null | Provider {\n    if (value == null) { return null; }\n    return value.provider || null;\n}\n\n/**\n *  @_ignore:\n */\nexport async function copyOverrides<O extends string = \"data\" | \"to\">(arg: any, allowed?: Array<string>): Promise<Omit<ContractTransaction, O>> {\n\n    // Make sure the overrides passed in are a valid overrides object\n    const _overrides = Typed.dereference(arg, \"overrides\");\n    assertArgument(typeof(_overrides) === \"object\", \"invalid overrides parameter\", \"overrides\", arg);\n\n    // Create a shallow copy (we'll deep-ify anything needed during normalizing)\n    const overrides = copyRequest(_overrides);\n\n    assertArgument(overrides.to == null || (allowed || [ ]).indexOf(\"to\") >= 0,\n      \"cannot override to\", \"overrides.to\", overrides.to);\n    assertArgument(overrides.data == null || (allowed || [ ]).indexOf(\"data\") >= 0,\n      \"cannot override data\", \"overrides.data\", overrides.data);\n\n    // Resolve any from\n    if (overrides.from) { overrides.from = overrides.from; }\n\n    return <Omit<ContractTransaction, O>>overrides;\n}\n\n/**\n *  @_ignore:\n */\nexport async function resolveArgs(_runner: null | ContractRunner, inputs: ReadonlyArray<ParamType>, args: Array<any>): Promise<Array<any>> {\n    // Recursively descend into args and resolve any addresses\n    const runner = getRunner(_runner, \"resolveName\");\n    const resolver = canResolve(runner) ? runner: null;\n    return await Promise.all(inputs.map((param, index) => {\n        return param.walkAsync(args[index], (type, value) => {\n            value = Typed.dereference(value, type);\n            if (type === \"address\") { return resolveAddress(value, resolver); }\n            return value;\n        });\n    }));\n}\n\nfunction buildWrappedFallback(contract: BaseContract): WrappedFallback {\n\n    const populateTransaction = async function(overrides?: Omit<TransactionRequest, \"to\">): Promise<ContractTransaction> {\n        // If an overrides was passed in, copy it and normalize the values\n\n        const tx: ContractTransaction = <any>(await copyOverrides<\"data\">(overrides, [ \"data\" ]));\n        tx.to = await contract.getAddress();\n\n        if (tx.from) {\n            tx.from = await resolveAddress(tx.from, getResolver(contract.runner));\n        }\n\n        const iface = contract.interface;\n\n        const noValue = (getBigInt((tx.value || BN_0), \"overrides.value\") === BN_0);\n        const noData = ((tx.data || \"0x\") === \"0x\");\n\n        if (iface.fallback && !iface.fallback.payable && iface.receive && !noData && !noValue) {\n            assertArgument(false, \"cannot send data to receive or send value to non-payable fallback\", \"overrides\", overrides);\n        }\n\n        assertArgument(iface.fallback || noData,\n          \"cannot send data to receive-only contract\", \"overrides.data\", tx.data);\n\n        // Only allow payable contracts to set non-zero value\n        const payable = iface.receive || (iface.fallback && iface.fallback.payable);\n        assertArgument(payable || noValue,\n          \"cannot send value to non-payable fallback\", \"overrides.value\", tx.value);\n\n        // Only allow fallback contracts to set non-empty data\n        assertArgument(iface.fallback || noData,\n          \"cannot send data to receive-only contract\", \"overrides.data\", tx.data);\n\n        return tx;\n    }\n\n    const staticCall = async function(overrides?: Omit<TransactionRequest, \"to\">): Promise<string> {\n        const runner = getRunner(contract.runner, \"call\");\n        assert(canCall(runner), \"contract runner does not support calling\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"call\" });\n\n        const tx = await populateTransaction(overrides);\n\n        try {\n            return await runner.call(tx);\n        } catch (error: any) {\n            if (isCallException(error) && error.data) {\n                throw contract.interface.makeError(error.data, tx);\n            }\n            throw error;\n        }\n    }\n\n    const send = async function(overrides?: Omit<TransactionRequest, \"to\">): Promise<ContractTransactionResponse> {\n        const runner = contract.runner;\n        assert(canSend(runner), \"contract runner does not support sending transactions\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"sendTransaction\" });\n\n        const tx = await runner.sendTransaction(await populateTransaction(overrides));\n        const provider = getProvider(contract.runner);\n        // @TODO: the provider can be null; make a custom dummy provider that will throw a\n        // meaningful error\n        return new ContractTransactionResponse(contract.interface, <Provider>provider, tx);\n    }\n\n    const estimateGas = async function(overrides?: Omit<TransactionRequest, \"to\">): Promise<bigint> {\n        const runner = getRunner(contract.runner, \"estimateGas\");\n        assert(canEstimate(runner), \"contract runner does not support gas estimation\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"estimateGas\" });\n\n        return await runner.estimateGas(await populateTransaction(overrides));\n    }\n\n    const method = async (overrides?: Omit<TransactionRequest, \"to\">) => {\n        return await send(overrides);\n    };\n\n    defineProperties<any>(method, {\n        _contract: contract,\n\n        estimateGas,\n        populateTransaction,\n        send, staticCall\n    });\n\n    return <WrappedFallback>method;\n}\n\nfunction buildWrappedMethod<A extends Array<any> = Array<any>, R = any, D extends R | ContractTransactionResponse = ContractTransactionResponse>(contract: BaseContract, key: string): BaseContractMethod<A, R, D> {\n\n    const getFragment = function(...args: ContractMethodArgs<A>): FunctionFragment {\n        const fragment = contract.interface.getFunction(key, args);\n        assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"fragment\",\n            info: { key, args }\n        });\n        return fragment;\n    }\n\n    const populateTransaction = async function(...args: ContractMethodArgs<A>): Promise<ContractTransaction> {\n        const fragment = getFragment(...args);\n\n        // If an overrides was passed in, copy it and normalize the values\n        let overrides: Omit<ContractTransaction, \"data\" | \"to\"> = { };\n        if (fragment.inputs.length + 1 === args.length) {\n            overrides = await copyOverrides(args.pop());\n\n            if (overrides.from) {\n                overrides.from = await resolveAddress(overrides.from, getResolver(contract.runner));\n            }\n        }\n\n        if (fragment.inputs.length !== args.length) {\n            throw new Error(\"internal error: fragment inputs doesn't match arguments; should not happen\");\n        }\n\n        const resolvedArgs = await resolveArgs(contract.runner, fragment.inputs, args);\n\n        return Object.assign({ }, overrides, await resolveProperties({\n            to: contract.getAddress(),\n            data: contract.interface.encodeFunctionData(fragment, resolvedArgs)\n        }));\n    }\n\n    const staticCall = async function(...args: ContractMethodArgs<A>): Promise<R> {\n        const result = await staticCallResult(...args);\n        if (result.length === 1) { return result[0]; }\n        return <R><unknown>result;\n    }\n\n    const send = async function(...args: ContractMethodArgs<A>): Promise<ContractTransactionResponse> {\n        const runner = contract.runner;\n        assert(canSend(runner), \"contract runner does not support sending transactions\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"sendTransaction\" });\n\n        const tx = await runner.sendTransaction(await populateTransaction(...args));\n        const provider = getProvider(contract.runner);\n        // @TODO: the provider can be null; make a custom dummy provider that will throw a\n        // meaningful error\n        return new ContractTransactionResponse(contract.interface, <Provider>provider, tx);\n    }\n\n    const estimateGas = async function(...args: ContractMethodArgs<A>): Promise<bigint> {\n        const runner = getRunner(contract.runner, \"estimateGas\");\n        assert(canEstimate(runner), \"contract runner does not support gas estimation\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"estimateGas\" });\n\n        return await runner.estimateGas(await populateTransaction(...args));\n    }\n\n    const staticCallResult = async function(...args: ContractMethodArgs<A>): Promise<Result> {\n        const runner = getRunner(contract.runner, \"call\");\n        assert(canCall(runner), \"contract runner does not support calling\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"call\" });\n\n        const tx = await populateTransaction(...args);\n\n        let result = \"0x\";\n        try {\n            result = await runner.call(tx);\n        } catch (error: any) {\n            if (isCallException(error) && error.data) {\n                throw contract.interface.makeError(error.data, tx);\n            }\n            throw error;\n        }\n\n        const fragment = getFragment(...args);\n        return contract.interface.decodeFunctionResult(fragment, result);\n    };\n\n    const method = async (...args: ContractMethodArgs<A>) => {\n        const fragment = getFragment(...args);\n        if (fragment.constant) { return await staticCall(...args); }\n        return await send(...args);\n    };\n\n    defineProperties<any>(method, {\n        name: contract.interface.getFunctionName(key),\n        _contract: contract, _key: key,\n\n        getFragment,\n\n        estimateGas,\n        populateTransaction,\n        send, staticCall, staticCallResult,\n    });\n\n    // Only works on non-ambiguous keys (refined fragment is always non-ambiguous)\n    Object.defineProperty(method, \"fragment\", {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n            const fragment = contract.interface.getFunction(key);\n            assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"fragment\",\n                info: { key }\n            });\n            return fragment;\n        }\n    });\n\n    return <BaseContractMethod<A, R, D>>method;\n}\n\nfunction buildWrappedEvent<A extends Array<any> = Array<any>>(contract: BaseContract, key: string): ContractEvent<A> {\n\n    const getFragment = function(...args: ContractEventArgs<A>): EventFragment {\n        const fragment = contract.interface.getEvent(key, args);\n\n        assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"fragment\",\n            info: { key, args }\n        });\n\n        return fragment;\n    }\n\n    const method = function(...args: ContractMethodArgs<A>): PreparedTopicFilter {\n        return new PreparedTopicFilter(contract, getFragment(...args), args);\n    };\n\n    defineProperties<any>(method, {\n        name: contract.interface.getEventName(key),\n        _contract: contract, _key: key,\n\n        getFragment\n    });\n\n    // Only works on non-ambiguous keys (refined fragment is always non-ambiguous)\n    Object.defineProperty(method, \"fragment\", {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n            const fragment = contract.interface.getEvent(key);\n\n            assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"fragment\",\n                info: { key }\n            });\n\n            return fragment;\n        }\n    });\n\n    return <ContractEvent<A>><unknown>method;\n}\n\ntype Sub = {\n    tag: string;\n    listeners: Array<{ listener: Listener, once: boolean }>,\n    start: () => void;\n    stop: () => void;\n};\n\n\n// The combination of TypeScrype, Private Fields and Proxies makes\n// the world go boom; so we hide variables with some trickery keeping\n// a symbol attached to each BaseContract which its sub-class (even\n// via a Proxy) can reach and use to look up its internal values.\n\nconst internal = Symbol.for(\"_ethersInternal_contract\");\ntype Internal = {\n    addrPromise: Promise<string>;\n    addr: null | string;\n\n    deployTx: null | ContractTransactionResponse;\n\n    subs: Map<string, Sub>;\n};\n\nconst internalValues: WeakMap<BaseContract, Internal> = new WeakMap();\n\nfunction setInternal(contract: BaseContract, values: Internal): void {\n    internalValues.set(contract[internal], values);\n}\n\nfunction getInternal(contract: BaseContract): Internal {\n    return internalValues.get(contract[internal]) as Internal;\n}\n\nfunction isDeferred(value: any): value is DeferredTopicFilter {\n    return (value && typeof(value) === \"object\" && (\"getTopicFilter\" in value) &&\n      (typeof(value.getTopicFilter) === \"function\") && value.fragment);\n}\n\nasync function getSubInfo(contract: BaseContract, event: ContractEventName): Promise<{ fragment: null | EventFragment, tag: string, topics: TopicFilter }> {\n    let topics: Array<null | string | Array<string>>;\n    let fragment: null | EventFragment = null;\n\n    // Convert named events to topicHash and get the fragment for\n    // events which need deconstructing.\n\n    if (Array.isArray(event)) {\n        const topicHashify = function(name: string): string {\n            if (isHexString(name, 32)) { return name; }\n            const fragment = contract.interface.getEvent(name);\n            assertArgument(fragment, \"unknown fragment\", \"name\", name);\n            return fragment.topicHash;\n        }\n\n        // Array of Topics and Names; e.g. `[ \"0x1234...89ab\", \"Transfer(address)\" ]`\n        topics = event.map((e) => {\n            if (e == null) { return null; }\n            if (Array.isArray(e)) { return e.map(topicHashify); }\n            return topicHashify(e);\n        });\n\n    } else if (event === \"*\") {\n        topics = [ null ];\n\n    } else if (typeof(event) === \"string\") {\n        if (isHexString(event, 32)) {\n            // Topic Hash\n            topics = [ event ];\n        } else {\n           // Name or Signature; e.g. `\"Transfer\", `\"Transfer(address)\"`\n            fragment = contract.interface.getEvent(event);\n            assertArgument(fragment, \"unknown fragment\", \"event\", event);\n            topics = [ fragment.topicHash ];\n        }\n\n    } else if (isDeferred(event)) {\n        // Deferred Topic Filter; e.g. `contract.filter.Transfer(from)`\n        topics = await event.getTopicFilter();\n\n    } else if (\"fragment\" in event) {\n        // ContractEvent; e.g. `contract.filter.Transfer`\n        fragment = event.fragment;\n        topics = [ fragment.topicHash ];\n\n    } else {\n        assertArgument(false, \"unknown event name\", \"event\", event);\n    }\n\n    // Normalize topics and sort TopicSets\n    topics = topics.map((t) => {\n        if (t == null) { return null; }\n        if (Array.isArray(t)) {\n            const items = Array.from(new Set(t.map((t) => t.toLowerCase())).values());\n            if (items.length === 1) { return items[0]; }\n            items.sort();\n            return items;\n        }\n        return t.toLowerCase();\n    });\n\n    const tag = topics.map((t) => {\n        if (t == null) { return \"null\"; }\n        if (Array.isArray(t)) { return t.join(\"|\"); }\n        return t;\n    }).join(\"&\");\n\n    return { fragment, tag, topics }\n}\n\nasync function hasSub(contract: BaseContract, event: ContractEventName): Promise<null | Sub> {\n    const { subs } = getInternal(contract);\n    return subs.get((await getSubInfo(contract, event)).tag) || null;\n}\n\nasync function getSub(contract: BaseContract, operation: string, event: ContractEventName): Promise<Sub> {\n    // Make sure our runner can actually subscribe to events\n    const provider = getProvider(contract.runner);\n    assert(provider, \"contract runner does not support subscribing\",\n        \"UNSUPPORTED_OPERATION\", { operation });\n\n    const { fragment, tag, topics } = await getSubInfo(contract, event);\n\n    const { addr, subs } = getInternal(contract);\n\n    let sub = subs.get(tag);\n    if (!sub) {\n        const address: string | Addressable = (addr ? addr: contract);\n        const filter = { address, topics };\n        const listener = (log: Log) => {\n            let foundFragment = fragment;\n            if (foundFragment == null) {\n                try {\n                    foundFragment = contract.interface.getEvent(log.topics[0]);\n                } catch (error) { }\n            }\n\n            // If fragment is null, we do not deconstruct the args to emit\n\n            if (foundFragment) {\n                const _foundFragment = foundFragment;\n                const args = fragment ? contract.interface.decodeEventLog(fragment, log.data, log.topics): [ ];\n                emit(contract, event, args, (listener: null | Listener) => {\n                    return new ContractEventPayload(contract, listener, event, _foundFragment, log);\n                });\n            } else {\n                emit(contract, event, [ ], (listener: null | Listener) => {\n                    return new ContractUnknownEventPayload(contract, listener, event, log);\n                });\n            }\n        };\n\n        let starting: Array<Promise<any>> = [ ];\n        const start = () => {\n            if (starting.length) { return; }\n            starting.push(provider.on(filter, listener));\n        };\n\n        const stop = async () => {\n            if (starting.length == 0) { return; }\n\n            let started = starting;\n            starting = [ ];\n            await Promise.all(started);\n            provider.off(filter, listener);\n        };\n\n        sub = { tag, listeners: [ ], start, stop };\n        subs.set(tag, sub);\n    }\n    return sub;\n}\n\n// We use this to ensure one emit resolves before firing the next to\n// ensure correct ordering (note this cannot throw and just adds the\n// notice to the event queu using setTimeout).\nlet lastEmit: Promise<any> = Promise.resolve();\n\ntype PayloadFunc = (listener: null | Listener) => ContractUnknownEventPayload;\n\nasync function _emit(contract: BaseContract, event: ContractEventName, args: Array<any>, payloadFunc: null | PayloadFunc): Promise<boolean> {\n    await lastEmit;\n\n    const sub = await hasSub(contract, event);\n    if (!sub) { return false; }\n\n    const count = sub.listeners.length;\n    sub.listeners = sub.listeners.filter(({ listener, once }) => {\n        const passArgs = Array.from(args);\n        if (payloadFunc) {\n            passArgs.push(payloadFunc(once ? null: listener));\n        }\n        try {\n            listener.call(contract, ...passArgs);\n        } catch (error) { }\n        return !once;\n    });\n\n    if (sub.listeners.length === 0) {\n        sub.stop();\n        getInternal(contract).subs.delete(sub.tag);\n    }\n\n    return (count > 0);\n}\n\nasync function emit(contract: BaseContract, event: ContractEventName, args: Array<any>, payloadFunc: null | PayloadFunc): Promise<boolean> {\n    try {\n        await lastEmit;\n    } catch (error) { }\n\n    const resultPromise = _emit(contract, event, args, payloadFunc);\n    lastEmit = resultPromise;\n    return await resultPromise;\n}\n\nconst passProperties = [ \"then\" ];\nexport class BaseContract implements Addressable, EventEmitterable<ContractEventName> {\n    /**\n     *  The target to connect to.\n     *\n     *  This can be an address, ENS name or any [[Addressable]], such as\n     *  another contract. To get the resovled address, use the ``getAddress``\n     *  method.\n     */\n    readonly target!: string | Addressable;\n\n    /**\n     *  The contract Interface.\n     */\n    readonly interface!: Interface;\n\n    /**\n     *  The connected runner. This is generally a [[Provider]] or a\n     *  [[Signer]], which dictates what operations are supported.\n     *\n     *  For example, a **Contract** connected to a [[Provider]] may\n     *  only execute read-only operations.\n     */\n    readonly runner!: null | ContractRunner;\n\n    /**\n     *  All the Events available on this contract.\n     */\n    readonly filters!: Record<string, ContractEvent>;\n\n    /**\n     *  @_ignore:\n     */\n    readonly [internal]: any;\n\n    /**\n     *  The fallback or receive function if any.\n     */\n    readonly fallback!: null | WrappedFallback;\n\n    /**\n     *  Creates a new contract connected to %%target%% with the %%abi%% and\n     *  optionally connected to a %%runner%% to perform operations on behalf\n     *  of.\n     */\n    constructor(target: string | Addressable, abi: Interface | InterfaceAbi, runner?: null | ContractRunner, _deployTx?: null | TransactionResponse) {\n        assertArgument(typeof(target) === \"string\" || isAddressable(target),\n            \"invalid value for Contract target\", \"target\", target);\n\n        if (runner == null) { runner = null; }\n        const iface = Interface.from(abi);\n        defineProperties<BaseContract>(this, { target, runner, interface: iface });\n\n        Object.defineProperty(this, internal, { value: { } });\n\n        let addrPromise;\n        let addr: null | string = null;\n\n        let deployTx: null | ContractTransactionResponse = null;\n        if (_deployTx) {\n            const provider = getProvider(runner);\n            // @TODO: the provider can be null; make a custom dummy provider that will throw a\n            // meaningful error\n            deployTx = new ContractTransactionResponse(this.interface, <Provider>provider, _deployTx);\n        }\n\n        let subs = new Map();\n\n        // Resolve the target as the address\n        if (typeof(target) === \"string\") {\n            if (isHexString(target)) {\n                addr = target;\n                addrPromise = Promise.resolve(target);\n\n            } else {\n                const resolver = getRunner(runner, \"resolveName\");\n                if (!canResolve(resolver)) {\n                    throw makeError(\"contract runner does not support name resolution\", \"UNSUPPORTED_OPERATION\", {\n                        operation: \"resolveName\"\n                    });\n                }\n\n                addrPromise = resolver.resolveName(target).then((addr) => {\n                    if (addr == null) {\n                        throw makeError(\"an ENS name used for a contract target must be correctly configured\", \"UNCONFIGURED_NAME\", {\n                            value: target\n                        });\n                    }\n                    getInternal(this).addr = addr;\n                    return addr;\n                });\n            }\n        } else {\n            addrPromise = target.getAddress().then((addr) => {\n                if (addr == null) { throw new Error(\"TODO\"); }\n                getInternal(this).addr = addr;\n                return addr;\n            });\n        }\n\n        // Set our private values\n        setInternal(this, { addrPromise, addr, deployTx, subs });\n\n        // Add the event filters\n        const filters = new Proxy({ }, {\n            get: (target, prop, receiver) => {\n                // Pass important checks (like `then` for Promise) through\n                if (typeof(prop) === \"symbol\" || passProperties.indexOf(prop) >= 0) {\n                    return Reflect.get(target, prop, receiver);\n                }\n\n                try {\n                    return this.getEvent(prop);\n                } catch (error) {\n                    if (!isError(error, \"INVALID_ARGUMENT\") || error.argument !== \"key\") {\n                        throw error;\n                    }\n                }\n\n                return undefined;\n            },\n            has: (target, prop) => {\n                // Pass important checks (like `then` for Promise) through\n                if (passProperties.indexOf(<string>prop) >= 0) {\n                    return Reflect.has(target, prop);\n                }\n\n                return Reflect.has(target, prop) || this.interface.hasEvent(String(prop));\n            }\n        });\n        defineProperties<BaseContract>(this, { filters });\n\n        defineProperties<BaseContract>(this, {\n            fallback: ((iface.receive || iface.fallback) ? (buildWrappedFallback(this)): null)\n        });\n\n        // Return a Proxy that will respond to functions\n        return new Proxy(this, {\n            get: (target, prop, receiver) => {\n                if (typeof(prop) === \"symbol\" || prop in target || passProperties.indexOf(prop) >= 0) {\n                    return Reflect.get(target, prop, receiver);\n                }\n\n                // Undefined properties should return undefined\n                try {\n                    return target.getFunction(prop);\n                } catch (error) {\n                    if (!isError(error, \"INVALID_ARGUMENT\") || error.argument !== \"key\") {\n                        throw error;\n                    }\n                }\n\n                return undefined;\n            },\n            has: (target, prop) => {\n                if (typeof(prop) === \"symbol\" || prop in target || passProperties.indexOf(prop) >= 0) {\n                    return Reflect.has(target, prop);\n                }\n\n                return target.interface.hasFunction(prop);\n            }\n        });\n\n    }\n\n    /**\n     *  Return a new Contract instance with the same target and ABI, but\n     *  a different %%runner%%.\n     */\n    connect(runner: null | ContractRunner): BaseContract {\n        return new BaseContract(this.target, this.interface, runner);\n    }\n\n    /**\n     *  Return a new Contract instance with the same ABI and runner, but\n     *  a different %%target%%.\n     */\n    attach(target: string | Addressable): BaseContract {\n        return new BaseContract(target, this.interface, this.runner);\n    }\n\n    /**\n     *  Return the resolved address of this Contract.\n     */\n    async getAddress(): Promise<string> { return await getInternal(this).addrPromise; }\n\n    /**\n     *  Return the deployed bytecode or null if no bytecode is found.\n     */\n    async getDeployedCode(): Promise<null | string> {\n        const provider = getProvider(this.runner);\n        assert(provider, \"runner does not support .provider\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"getDeployedCode\" });\n\n        const code = await provider.getCode(await this.getAddress());\n        if (code === \"0x\") { return null; }\n        return code;\n    }\n\n    /**\n     *  Resolve to this Contract once the bytecode has been deployed, or\n     *  resolve immediately if already deployed.\n     */\n    async waitForDeployment(): Promise<this> {\n        // We have the deployement transaction; just use that (throws if deployement fails)\n        const deployTx = this.deploymentTransaction();\n        if (deployTx) {\n            await deployTx.wait();\n            return this;\n        }\n\n        // Check for code\n        const code = await this.getDeployedCode();\n        if (code != null) { return this; }\n\n        // Make sure we can subscribe to a provider event\n        const provider = getProvider(this.runner);\n        assert(provider != null, \"contract runner does not support .provider\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"waitForDeployment\" });\n\n        return new Promise((resolve, reject) => {\n            const checkCode = async () => {\n                try {\n                    const code = await this.getDeployedCode();\n                    if (code != null) { return resolve(this); }\n                    provider.once(\"block\", checkCode);\n                } catch (error) {\n                    reject(error);\n                }\n            };\n            checkCode();\n        });\n    }\n\n    /**\n     *  Return the transaction used to deploy this contract.\n     *\n     *  This is only available if this instance was returned from a\n     *  [[ContractFactory]].\n     */\n    deploymentTransaction(): null | ContractTransactionResponse {\n        return getInternal(this).deployTx;\n    }\n\n    /**\n     *  Return the function for a given name. This is useful when a contract\n     *  method name conflicts with a JavaScript name such as ``prototype`` or\n     *  when using a Contract programatically.\n     */\n    getFunction<T extends ContractMethod = ContractMethod>(key: string | FunctionFragment): T {\n        if (typeof(key) !== \"string\") { key = key.format(); }\n        const func = buildWrappedMethod(this, key);\n        return <T>func;\n    }\n\n    /**\n     *  Return the event for a given name. This is useful when a contract\n     *  event name conflicts with a JavaScript name such as ``prototype`` or\n     *  when using a Contract programatically.\n     */\n    getEvent(key: string | EventFragment): ContractEvent {\n        if (typeof(key) !== \"string\") { key = key.format(); }\n        return buildWrappedEvent(this, key);\n    }\n\n    /**\n     *  @_ignore:\n     */\n    async queryTransaction(hash: string): Promise<Array<EventLog>> {\n        throw new Error(\"@TODO\");\n    }\n\n    /*\n    // @TODO: this is a non-backwards compatible change, but will be added\n    //        in v7 and in a potential SmartContract class in an upcoming\n    //        v6 release\n    async getTransactionReceipt(hash: string): Promise<null | ContractTransactionReceipt> {\n        const provider = getProvider(this.runner);\n        assert(provider, \"contract runner does not have a provider\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"queryTransaction\" });\n\n        const receipt = await provider.getTransactionReceipt(hash);\n        if (receipt == null) { return null; }\n\n        return new ContractTransactionReceipt(this.interface, provider, receipt);\n    }\n    */\n\n    /**\n     *  Provide historic access to event data for %%event%% in the range\n     *  %%fromBlock%% (default: ``0``) to %%toBlock%% (default: ``\"latest\"``)\n     *  inclusive.\n     */\n    async queryFilter(event: ContractEventName, fromBlock?: BlockTag, toBlock?: BlockTag): Promise<Array<EventLog | Log>> {\n        if (fromBlock == null) { fromBlock = 0; }\n        if (toBlock == null) { toBlock = \"latest\"; }\n        const { addr, addrPromise } = getInternal(this);\n        const address = (addr ? addr: (await addrPromise));\n        const { fragment, topics } = await getSubInfo(this, event);\n        const filter = { address, topics, fromBlock, toBlock };\n\n        const provider = getProvider(this.runner);\n        assert(provider, \"contract runner does not have a provider\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"queryFilter\" });\n\n        return (await provider.getLogs(filter)).map((log) => {\n            let foundFragment = fragment;\n            if (foundFragment == null) {\n                try {\n                    foundFragment = this.interface.getEvent(log.topics[0]);\n                } catch (error) { }\n            }\n\n            if (foundFragment) {\n                try {\n                    return new EventLog(log, this.interface, foundFragment);\n                } catch (error: any) {\n                    return new UndecodedEventLog(log, error);\n                }\n            }\n\n            return new Log(log, provider);\n        });\n    }\n\n    /**\n     *  Add an event %%listener%% for the %%event%%.\n     */\n    async on(event: ContractEventName, listener: Listener): Promise<this> {\n        const sub = await getSub(this, \"on\", event);\n        sub.listeners.push({ listener, once: false });\n        sub.start();\n        return this;\n    }\n\n    /**\n     *  Add an event %%listener%% for the %%event%%, but remove the listener\n     *  after it is fired once.\n     */\n    async once(event: ContractEventName, listener: Listener): Promise<this> {\n        const sub = await getSub(this, \"once\", event);\n        sub.listeners.push({ listener, once: true });\n        sub.start();\n        return this;\n    }\n\n    /**\n     *  Emit an %%event%% calling all listeners with %%args%%.\n     *\n     *  Resolves to ``true`` if any listeners were called.\n     */\n    async emit(event: ContractEventName, ...args: Array<any>): Promise<boolean> {\n        return await emit(this, event, args, null);\n    }\n\n    /**\n     *  Resolves to the number of listeners of %%event%% or the total number\n     *  of listeners if unspecified.\n     */\n    async listenerCount(event?: ContractEventName): Promise<number> {\n        if (event) {\n            const sub = await hasSub(this, event);\n            if (!sub) { return 0; }\n            return sub.listeners.length;\n        }\n\n        const { subs } = getInternal(this);\n\n        let total = 0;\n        for (const { listeners } of subs.values()) {\n            total += listeners.length;\n        }\n        return total;\n    }\n\n    /**\n     *  Resolves to the listeners subscribed to %%event%% or all listeners\n     *  if unspecified.\n     */\n    async listeners(event?: ContractEventName): Promise<Array<Listener>> {\n        if (event) {\n            const sub = await hasSub(this, event);\n            if (!sub) { return [ ]; }\n            return sub.listeners.map(({ listener }) => listener);\n        }\n\n        const { subs } = getInternal(this);\n\n        let result: Array<Listener> = [ ];\n        for (const { listeners } of subs.values()) {\n            result = result.concat(listeners.map(({ listener }) => listener));\n        }\n        return result;\n    }\n\n    /**\n     *  Remove the %%listener%% from the listeners for %%event%% or remove\n     *  all listeners if unspecified.\n     */\n    async off(event: ContractEventName, listener?: Listener): Promise<this> {\n        const sub = await hasSub(this, event);\n        if (!sub) { return this; }\n\n        if (listener) {\n            const index = sub.listeners.map(({ listener }) => listener).indexOf(listener);\n            if (index >= 0) { sub.listeners.splice(index, 1); }\n        }\n\n        if (listener == null || sub.listeners.length === 0) {\n            sub.stop();\n            getInternal(this).subs.delete(sub.tag);\n        }\n\n        return this;\n    }\n\n    /**\n     *  Remove all the listeners for %%event%% or remove all listeners if\n     *  unspecified.\n     */\n    async removeAllListeners(event?: ContractEventName): Promise<this> {\n        if (event) {\n            const sub = await hasSub(this, event);\n            if (!sub) { return this; }\n            sub.stop();\n            getInternal(this).subs.delete(sub.tag);\n        } else {\n            const { subs } = getInternal(this);\n            for (const { tag, stop } of subs.values()) {\n                stop();\n                subs.delete(tag);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     *  Alias for [on].\n     */\n    async addListener(event: ContractEventName, listener: Listener): Promise<this> {\n        return await this.on(event, listener);\n    }\n\n    /**\n     *  Alias for [off].\n     */\n    async removeListener(event: ContractEventName, listener: Listener): Promise<this> {\n        return await this.off(event, listener);\n    }\n\n    /**\n     *  Create a new Class for the %%abi%%.\n     */\n    static buildClass<T = ContractInterface>(abi: Interface | InterfaceAbi): new (target: string, runner?: null | ContractRunner) => BaseContract & Omit<T, keyof BaseContract> {\n        class CustomContract extends BaseContract {\n            constructor(address: string, runner: null | ContractRunner = null) {\n                super(address, abi, runner);\n            }\n        }\n        return CustomContract as any;\n    };\n\n    /**\n     *  Create a new BaseContract with a specified Interface.\n     */\n    static from<T = ContractInterface>(target: string, abi: Interface | InterfaceAbi, runner?: null | ContractRunner): BaseContract & Omit<T, keyof BaseContract> {\n        if (runner == null) { runner = null; }\n        const contract = new this(target, abi, runner );\n        return contract as any;\n    }\n}\n\nfunction _ContractBase(): new (target: string, abi: Interface | InterfaceAbi, runner?: null | ContractRunner) => BaseContract & Omit<ContractInterface, keyof BaseContract> {\n    return BaseContract as any;\n}\n\n/**\n *  A [[BaseContract]] with no type guards on its methods or events.\n */\nexport class Contract extends _ContractBase() { }\n","// created 2023-09-12T22:05:14.211Z\n// compressed base64-encoded blob for include-ens data\n// source: https://github.com/adraffy/ens-normalize.js/blob/main/src/make.js\n// see: https://github.com/adraffy/ens-normalize.js#security\n// SHA-256: 0565ed049b9cf1614bb9e11ba7d8ac6a6fb96c893253d890f7e2b2884b9ded32\nvar COMPRESSED$1 = '';\nconst FENCED = new Map([[8217,\"apostrophe\"],[8260,\"fraction slash\"],[12539,\"middle dot\"]]);\nconst NSM_MAX = 4;\n\nfunction decode_arithmetic(bytes) {\r\n\tlet pos = 0;\r\n\tfunction u16() { return (bytes[pos++] << 8) | bytes[pos++]; }\r\n\t\r\n\t// decode the frequency table\r\n\tlet symbol_count = u16();\r\n\tlet total = 1;\r\n\tlet acc = [0, 1]; // first symbol has frequency 1\r\n\tfor (let i = 1; i < symbol_count; i++) {\r\n\t\tacc.push(total += u16());\r\n\t}\r\n\r\n\t// skip the sized-payload that the last 3 symbols index into\r\n\tlet skip = u16();\r\n\tlet pos_payload = pos;\r\n\tpos += skip;\r\n\r\n\tlet read_width = 0;\r\n\tlet read_buffer = 0; \r\n\tfunction read_bit() {\r\n\t\tif (read_width == 0) {\r\n\t\t\t// this will read beyond end of buffer\r\n\t\t\t// but (undefined|0) => zero pad\r\n\t\t\tread_buffer = (read_buffer << 8) | bytes[pos++];\r\n\t\t\tread_width = 8;\r\n\t\t}\r\n\t\treturn (read_buffer >> --read_width) & 1;\r\n\t}\r\n\r\n\tconst N = 31;\r\n\tconst FULL = 2**N;\r\n\tconst HALF = FULL >>> 1;\r\n\tconst QRTR = HALF >> 1;\r\n\tconst MASK = FULL - 1;\r\n\r\n\t// fill register\r\n\tlet register = 0;\r\n\tfor (let i = 0; i < N; i++) register = (register << 1) | read_bit();\r\n\r\n\tlet symbols = [];\r\n\tlet low = 0;\r\n\tlet range = FULL; // treat like a float\r\n\twhile (true) {\r\n\t\tlet value = Math.floor((((register - low + 1) * total) - 1) / range);\r\n\t\tlet start = 0;\r\n\t\tlet end = symbol_count;\r\n\t\twhile (end - start > 1) { // binary search\r\n\t\t\tlet mid = (start + end) >>> 1;\r\n\t\t\tif (value < acc[mid]) {\r\n\t\t\t\tend = mid;\r\n\t\t\t} else {\r\n\t\t\t\tstart = mid;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (start == 0) break; // first symbol is end mark\r\n\t\tsymbols.push(start);\r\n\t\tlet a = low + Math.floor(range * acc[start]   / total);\r\n\t\tlet b = low + Math.floor(range * acc[start+1] / total) - 1;\r\n\t\twhile (((a ^ b) & HALF) == 0) {\r\n\t\t\tregister = (register << 1) & MASK | read_bit();\r\n\t\t\ta = (a << 1) & MASK;\r\n\t\t\tb = (b << 1) & MASK | 1;\r\n\t\t}\r\n\t\twhile (a & ~b & QRTR) {\r\n\t\t\tregister = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();\r\n\t\t\ta = (a << 1) ^ HALF;\r\n\t\t\tb = ((b ^ HALF) << 1) | HALF | 1;\r\n\t\t}\r\n\t\tlow = a;\r\n\t\trange = 1 + b - a;\r\n\t}\r\n\tlet offset = symbol_count - 4;\r\n\treturn symbols.map(x => { // index into payload\r\n\t\tswitch (x - offset) {\r\n\t\t\tcase 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);\r\n\t\t\tcase 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);\r\n\t\t\tcase 1: return offset + bytes[pos_payload++];\r\n\t\t\tdefault: return x - 1;\r\n\t\t}\r\n\t});\r\n}\t\r\n\r\n// returns an iterator which returns the next symbol\r\nfunction read_payload(v) {\r\n\tlet pos = 0;\r\n\treturn () => v[pos++];\r\n}\r\nfunction read_compressed_payload(s) {\r\n\treturn read_payload(decode_arithmetic(unsafe_atob(s)));\r\n}\r\n\r\n// unsafe in the sense:\r\n// expected well-formed Base64 w/o padding \r\n// 20220922: added for https://github.com/adraffy/ens-normalize.js/issues/4\r\nfunction unsafe_atob(s) {\r\n\tlet lookup = [];\r\n\t[...'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'].forEach((c, i) => lookup[c.charCodeAt(0)] = i);\r\n\tlet n = s.length;\r\n\tlet ret = new Uint8Array((6 * n) >> 3);\r\n\tfor (let i = 0, pos = 0, width = 0, carry = 0; i < n; i++) {\r\n\t\tcarry = (carry << 6) | lookup[s.charCodeAt(i)];\r\n\t\twidth += 6;\r\n\t\tif (width >= 8) {\r\n\t\t\tret[pos++] = (carry >> (width -= 8));\r\n\t\t}\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\n// eg. [0,1,2,3...] => [0,-1,1,-2,...]\r\nfunction signed(i) { \r\n\treturn (i & 1) ? (~i >> 1) : (i >> 1);\r\n}\r\n\r\nfunction read_deltas(n, next) {\r\n\tlet v = Array(n);\r\n\tfor (let i = 0, x = 0; i < n; i++) v[i] = x += signed(next());\r\n\treturn v;\r\n}\r\n\r\n// [123][5] => [0 3] [1 1] [0 0]\r\nfunction read_sorted(next, prev = 0) {\r\n\tlet ret = [];\r\n\twhile (true) {\r\n\t\tlet x = next();\r\n\t\tlet n = next();\r\n\t\tif (!n) break;\r\n\t\tprev += x;\r\n\t\tfor (let i = 0; i < n; i++) {\r\n\t\t\tret.push(prev + i);\r\n\t\t}\r\n\t\tprev += n + 1;\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction read_sorted_arrays(next) {\r\n\treturn read_array_while(() => { \r\n\t\tlet v = read_sorted(next);\r\n\t\tif (v.length) return v;\r\n\t});\r\n}\r\n\r\n// returns map of x => ys\r\nfunction read_mapped(next) {\r\n\tlet ret = [];\r\n\twhile (true) {\r\n\t\tlet w = next();\r\n\t\tif (w == 0) break;\r\n\t\tret.push(read_linear_table(w, next));\r\n\t}\r\n\twhile (true) {\r\n\t\tlet w = next() - 1;\r\n\t\tif (w < 0) break;\r\n\t\tret.push(read_replacement_table(w, next));\r\n\t}\r\n\treturn ret.flat();\r\n}\r\n\r\n// read until next is falsy\r\n// return array of read values\r\nfunction read_array_while(next) {\r\n\tlet v = [];\r\n\twhile (true) {\r\n\t\tlet x = next(v.length);\r\n\t\tif (!x) break;\r\n\t\tv.push(x);\r\n\t}\r\n\treturn v;\r\n}\r\n\r\n// read w columns of length n\r\n// return as n rows of length w\r\nfunction read_transposed(n, w, next) {\r\n\tlet m = Array(n).fill().map(() => []);\r\n\tfor (let i = 0; i < w; i++) {\r\n\t\tread_deltas(n, next).forEach((x, j) => m[j].push(x));\r\n\t}\r\n\treturn m;\r\n}\r\n \r\n// returns [[x, ys], [x+dx, ys+dy], [x+2*dx, ys+2*dy], ...]\r\n// where dx/dy = steps, n = run size, w = length of y\r\nfunction read_linear_table(w, next) {\r\n\tlet dx = 1 + next();\r\n\tlet dy = next();\r\n\tlet vN = read_array_while(next);\r\n\tlet m = read_transposed(vN.length, 1+w, next);\r\n\treturn m.flatMap((v, i) => {\r\n\t\tlet [x, ...ys] = v;\r\n\t\treturn Array(vN[i]).fill().map((_, j) => {\r\n\t\t\tlet j_dy = j * dy;\r\n\t\t\treturn [x + j * dx, ys.map(y => y + j_dy)];\r\n\t\t});\r\n\t});\r\n}\r\n\r\n// return [[x, ys...], ...]\r\n// where w = length of y\r\nfunction read_replacement_table(w, next) { \r\n\tlet n = 1 + next();\r\n\tlet m = read_transposed(n, 1+w, next);\r\n\treturn m.map(v => [v[0], v.slice(1)]);\r\n}\r\n\r\n\r\nfunction read_trie(next) {\r\n\tlet ret = [];\r\n\tlet sorted = read_sorted(next); \r\n\texpand(decode([]), []);\r\n\treturn ret; // not sorted\r\n\tfunction decode(Q) { // characters that lead into this node\r\n\t\tlet S = next(); // state: valid, save, check\r\n\t\tlet B = read_array_while(() => { // buckets leading to new nodes\r\n\t\t\tlet cps = read_sorted(next).map(i => sorted[i]);\r\n\t\t\tif (cps.length) return decode(cps);\r\n\t\t});\r\n\t\treturn {S, B, Q};\r\n\t}\r\n\tfunction expand({S, B}, cps, saved) {\r\n\t\tif (S & 4 && saved === cps[cps.length-1]) return;\r\n\t\tif (S & 2) saved = cps[cps.length-1];\r\n\t\tif (S & 1) ret.push(cps); \r\n\t\tfor (let br of B) {\r\n\t\t\tfor (let cp of br.Q) {\r\n\t\t\t\texpand(br, [...cps, cp], saved);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\n\nfunction hex_cp(cp) {\r\n\treturn cp.toString(16).toUpperCase().padStart(2, '0');\r\n}\r\n\r\nfunction quote_cp(cp) {\r\n\treturn `{${hex_cp(cp)}}`; // raffy convention: like \"\\u{X}\" w/o the \"\\u\"\r\n}\r\n\r\n/*\r\nexport function explode_cp(s) {\r\n\treturn [...s].map(c => c.codePointAt(0));\r\n}\r\n*/\r\nfunction explode_cp(s) { // this is about 2x faster\r\n\tlet cps = [];\r\n\tfor (let pos = 0, len = s.length; pos < len; ) {\r\n\t\tlet cp = s.codePointAt(pos);\r\n\t\tpos += cp < 0x10000 ? 1 : 2;\r\n\t\tcps.push(cp);\r\n\t}\r\n\treturn cps;\r\n}\r\n\r\nfunction str_from_cps(cps) {\r\n\tconst chunk = 4096;\r\n\tlet len = cps.length;\r\n\tif (len < chunk) return String.fromCodePoint(...cps);\r\n\tlet buf = [];\r\n\tfor (let i = 0; i < len; ) {\r\n\t\tbuf.push(String.fromCodePoint(...cps.slice(i, i += chunk)));\r\n\t}\r\n\treturn buf.join('');\r\n}\r\n\r\nfunction compare_arrays(a, b) {\r\n\tlet n = a.length;\r\n\tlet c = n - b.length;\r\n\tfor (let i = 0; c == 0 && i < n; i++) c = a[i] - b[i];\r\n\treturn c;\r\n}\n\n// created 2023-09-12T22:05:14.211Z\n// compressed base64-encoded blob for include-nf data\n// source: https://github.com/adraffy/ens-normalize.js/blob/main/src/make.js\n// see: https://github.com/adraffy/ens-normalize.js#security\n// SHA-256: a974b6f8541fc29d919bc85118af0a44015851fab5343f8679cb31be2bdb209e\nvar COMPRESSED = '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';\n\n// https://unicode.org/reports/tr15/\r\n// for reference implementation\r\n// see: /derive/nf.js\r\n\r\n\r\n// algorithmic hangul\r\n// https://www.unicode.org/versions/Unicode15.0.0/ch03.pdf (page 144)\r\nconst S0 = 0xAC00;\r\nconst L0 = 0x1100;\r\nconst V0 = 0x1161;\r\nconst T0 = 0x11A7;\r\nconst L_COUNT = 19;\r\nconst V_COUNT = 21;\r\nconst T_COUNT = 28;\r\nconst N_COUNT = V_COUNT * T_COUNT;\r\nconst S_COUNT = L_COUNT * N_COUNT;\r\nconst S1 = S0 + S_COUNT;\r\nconst L1 = L0 + L_COUNT;\r\nconst V1 = V0 + V_COUNT;\r\nconst T1 = T0 + T_COUNT;\r\n\r\nfunction unpack_cc(packed) {\r\n\treturn (packed >> 24) & 0xFF;\r\n}\r\nfunction unpack_cp(packed) {\r\n\treturn packed & 0xFFFFFF;\r\n}\r\n\r\nlet SHIFTED_RANK, EXCLUSIONS, DECOMP, RECOMP;\r\n\r\nfunction init$1() {\r\n\t//console.time('nf');\r\n\tlet r = read_compressed_payload(COMPRESSED);\r\n\tSHIFTED_RANK = new Map(read_sorted_arrays(r).flatMap((v, i) => v.map(x => [x, (i+1) << 24]))); // pre-shifted\r\n\tEXCLUSIONS = new Set(read_sorted(r));\r\n\tDECOMP = new Map();\r\n\tRECOMP = new Map();\r\n\tfor (let [cp, cps] of read_mapped(r)) {\r\n\t\tif (!EXCLUSIONS.has(cp) && cps.length == 2) {\r\n\t\t\tlet [a, b] = cps;\r\n\t\t\tlet bucket = RECOMP.get(a);\r\n\t\t\tif (!bucket) {\r\n\t\t\t\tbucket = new Map();\r\n\t\t\t\tRECOMP.set(a, bucket);\r\n\t\t\t}\r\n\t\t\tbucket.set(b, cp);\r\n\t\t}\r\n\t\tDECOMP.set(cp, cps.reverse()); // stored reversed\r\n\t}\r\n\t//console.timeEnd('nf');\r\n\t// 20230905: 11ms\r\n}\r\n\r\nfunction is_hangul(cp) {\r\n\treturn cp >= S0 && cp < S1;\r\n}\r\n\r\nfunction compose_pair(a, b) {\r\n\tif (a >= L0 && a < L1 && b >= V0 && b < V1) {\r\n\t\treturn S0 + (a - L0) * N_COUNT + (b - V0) * T_COUNT;\r\n\t} else if (is_hangul(a) && b > T0 && b < T1 && (a - S0) % T_COUNT == 0) {\r\n\t\treturn a + (b - T0);\r\n\t} else {\r\n\t\tlet recomp = RECOMP.get(a);\r\n\t\tif (recomp) {\r\n\t\t\trecomp = recomp.get(b);\r\n\t\t\tif (recomp) {\r\n\t\t\t\treturn recomp;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n}\r\n\r\nfunction decomposed(cps) {\r\n\tif (!SHIFTED_RANK) init$1();\r\n\tlet ret = [];\r\n\tlet buf = [];\r\n\tlet check_order = false;\r\n\tfunction add(cp) {\r\n\t\tlet cc = SHIFTED_RANK.get(cp);\r\n\t\tif (cc) {\r\n\t\t\tcheck_order = true;\r\n\t\t\tcp |= cc;\r\n\t\t}\r\n\t\tret.push(cp);\r\n\t}\r\n\tfor (let cp of cps) {\r\n\t\twhile (true) {\r\n\t\t\tif (cp < 0x80) {\r\n\t\t\t\tret.push(cp);\r\n\t\t\t} else if (is_hangul(cp)) {\r\n\t\t\t\tlet s_index = cp - S0;\r\n\t\t\t\tlet l_index = s_index / N_COUNT | 0;\r\n\t\t\t\tlet v_index = (s_index % N_COUNT) / T_COUNT | 0;\r\n\t\t\t\tlet t_index = s_index % T_COUNT;\r\n\t\t\t\tadd(L0 + l_index);\r\n\t\t\t\tadd(V0 + v_index);\r\n\t\t\t\tif (t_index > 0) add(T0 + t_index);\r\n\t\t\t} else {\r\n\t\t\t\tlet mapped = DECOMP.get(cp);\r\n\t\t\t\tif (mapped) {\r\n\t\t\t\t\tbuf.push(...mapped);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tadd(cp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!buf.length) break;\r\n\t\t\tcp = buf.pop();\r\n\t\t}\r\n\t}\r\n\tif (check_order && ret.length > 1) {\r\n\t\tlet prev_cc = unpack_cc(ret[0]);\r\n\t\tfor (let i = 1; i < ret.length; i++) {\r\n\t\t\tlet cc = unpack_cc(ret[i]);\r\n\t\t\tif (cc == 0 || prev_cc <= cc) {\r\n\t\t\t\tprev_cc = cc;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tlet j = i-1;\r\n\t\t\twhile (true) {\r\n\t\t\t\tlet tmp = ret[j+1];\r\n\t\t\t\tret[j+1] = ret[j];\r\n\t\t\t\tret[j] = tmp;\r\n\t\t\t\tif (!j) break;\r\n\t\t\t\tprev_cc = unpack_cc(ret[--j]);\r\n\t\t\t\tif (prev_cc <= cc) break;\r\n\t\t\t}\r\n\t\t\tprev_cc = unpack_cc(ret[i]);\r\n\t\t}\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction composed_from_decomposed(v) {\r\n\tlet ret = [];\r\n\tlet stack = [];\r\n\tlet prev_cp = -1;\r\n\tlet prev_cc = 0;\r\n\tfor (let packed of v) {\r\n\t\tlet cc = unpack_cc(packed);\r\n\t\tlet cp = unpack_cp(packed);\r\n\t\tif (prev_cp == -1) {\r\n\t\t\tif (cc == 0) {\r\n\t\t\t\tprev_cp = cp;\r\n\t\t\t} else {\r\n\t\t\t\tret.push(cp);\r\n\t\t\t}\r\n\t\t} else if (prev_cc > 0 && prev_cc >= cc) {\r\n\t\t\tif (cc == 0) {\r\n\t\t\t\tret.push(prev_cp, ...stack);\r\n\t\t\t\tstack.length = 0;\r\n\t\t\t\tprev_cp = cp;\r\n\t\t\t} else {\r\n\t\t\t\tstack.push(cp);\r\n\t\t\t}\r\n\t\t\tprev_cc = cc;\r\n\t\t} else {\r\n\t\t\tlet composed = compose_pair(prev_cp, cp);\r\n\t\t\tif (composed >= 0) {\r\n\t\t\t\tprev_cp = composed;\r\n\t\t\t} else if (prev_cc == 0 && cc == 0) {\r\n\t\t\t\tret.push(prev_cp);\r\n\t\t\t\tprev_cp = cp;\r\n\t\t\t} else {\r\n\t\t\t\tstack.push(cp);\r\n\t\t\t\tprev_cc = cc;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (prev_cp >= 0) {\r\n\t\tret.push(prev_cp, ...stack);\t\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\n// note: cps can be iterable\r\nfunction nfd(cps) {\r\n\treturn decomposed(cps).map(unpack_cp);\r\n}\r\nfunction nfc(cps) {\r\n\treturn composed_from_decomposed(decomposed(cps));\r\n}\n\nconst HYPHEN = 0x2D;\r\nconst STOP = 0x2E;\r\nconst STOP_CH = '.';\r\nconst FE0F = 0xFE0F;\r\nconst UNIQUE_PH = 1;\r\n\r\n// 20230913: replace [...v] with Array_from(v) to avoid large spreads\r\nconst Array_from = x => Array.from(x); // Array.from.bind(Array);\r\n\r\nfunction group_has_cp(g, cp) {\r\n\t// 20230913: keep primary and secondary distinct instead of creating valid union\r\n\treturn g.P.has(cp) || g.Q.has(cp);\r\n}\r\n\r\nclass Emoji extends Array {\r\n\tget is_emoji() { return true; } // free tagging system\r\n}\r\n\r\nlet MAPPED, IGNORED, CM, NSM, ESCAPE, NFC_CHECK, GROUPS, WHOLE_VALID, WHOLE_MAP, VALID, EMOJI_LIST, EMOJI_ROOT;\r\n\r\nfunction init() {\r\n\tif (MAPPED) return;\r\n\t\r\n\tlet r = read_compressed_payload(COMPRESSED$1);\r\n\tconst read_sorted_array = () => read_sorted(r);\r\n\tconst read_sorted_set = () => new Set(read_sorted_array());\r\n\r\n\tMAPPED = new Map(read_mapped(r)); \r\n\tIGNORED = read_sorted_set(); // ignored characters are not valid, so just read raw codepoints\r\n\r\n\t/*\r\n\t// direct include from payload is smaller than the decompression code\r\n\tconst FENCED = new Map(read_array_while(() => {\r\n\t\tlet cp = r();\r\n\t\tif (cp) return [cp, read_str(r())];\r\n\t}));\r\n\t*/\r\n\t// 20230217: we still need all CM for proper error formatting\r\n\t// but norm only needs NSM subset that are potentially-valid\r\n\tCM = read_sorted_array();\r\n\tNSM = new Set(read_sorted_array().map(i => CM[i]));\r\n\tCM = new Set(CM);\r\n\t\r\n\tESCAPE = read_sorted_set(); // characters that should not be printed\r\n\tNFC_CHECK = read_sorted_set(); // only needed to illustrate ens_tokenize() transformations\r\n\r\n\tlet chunks = read_sorted_arrays(r);\r\n\tlet unrestricted = r();\r\n\tconst read_chunked = () => new Set(read_sorted_array().flatMap(i => chunks[i]).concat(read_sorted_array()));\r\n\tGROUPS = read_array_while(i => {\r\n\t\t// minifier property mangling seems unsafe\r\n\t\t// so these are manually renamed to single chars\r\n\t\tlet N = read_array_while(r).map(x => x+0x60);\r\n\t\tif (N.length) {\r\n\t\t\tlet R = i >= unrestricted; // first arent restricted\r\n\t\t\tN[0] -= 32; // capitalize\r\n\t\t\tN = str_from_cps(N);\r\n\t\t\tif (R) N=`Restricted[${N}]`;\r\n\t\t\tlet P = read_chunked(); // primary\r\n\t\t\tlet Q = read_chunked(); // secondary\r\n\t\t\tlet M = !r(); // not-whitelisted, check for NSM\r\n\t\t\t// *** this code currently isn't needed ***\r\n\t\t\t/*\r\n\t\t\tlet V = [...P, ...Q].sort((a, b) => a-b); // derive: sorted valid\r\n\t\t\tlet M = r()-1; // number of combining mark\r\n\t\t\tif (M < 0) { // whitelisted\r\n\t\t\t\tM = new Map(read_array_while(() => {\r\n\t\t\t\t\tlet i = r();\r\n\t\t\t\t\tif (i) return [V[i-1], read_array_while(() => {\r\n\t\t\t\t\t\tlet v = read_array_while(r);\r\n\t\t\t\t\t\tif (v.length) return v.map(x => x-1);\r\n\t\t\t\t\t})];\r\n\t\t\t\t}));\r\n\t\t\t}*/\r\n\t\t\treturn {N, P, Q, M, R};\r\n\t\t}\r\n\t});\r\n\r\n\t// decode compressed wholes\r\n\tWHOLE_VALID = read_sorted_set();\r\n\tWHOLE_MAP = new Map();\r\n\tlet wholes = read_sorted_array().concat(Array_from(WHOLE_VALID)).sort((a, b) => a-b); // must be sorted\r\n\twholes.forEach((cp, i) => {\r\n\t\tlet d = r(); \r\n\t\tlet w = wholes[i] = d ? wholes[i-d] : {V: [], M: new Map()};\r\n\t\tw.V.push(cp); // add to member set\r\n\t\tif (!WHOLE_VALID.has(cp)) {\r\n\t\t\tWHOLE_MAP.set(cp, w);  // register with whole map\r\n\t\t}\r\n\t});\r\n\r\n\t// compute confusable-extent complements\r\n\tfor (let {V, M} of new Set(WHOLE_MAP.values())) {\r\n\t\t// connect all groups that have each whole character\r\n\t\tlet recs = [];\r\n\t\tfor (let cp of V) {\r\n\t\t\tlet gs = GROUPS.filter(g => group_has_cp(g, cp));\r\n\t\t\tlet rec = recs.find(({G}) => gs.some(g => G.has(g)));\r\n\t\t\tif (!rec) {\r\n\t\t\t\trec = {G: new Set(), V: []};\r\n\t\t\t\trecs.push(rec);\r\n\t\t\t}\r\n\t\t\trec.V.push(cp);\r\n\t\t\tgs.forEach(g => rec.G.add(g));\r\n\t\t}\r\n\t\t// per character cache groups which are not a member of the extent\r\n\t\tlet union = recs.flatMap(x => Array_from(x.G));\r\n\t\tfor (let {G, V} of recs) {\r\n\t\t\tlet complement = new Set(union.filter(g => !G.has(g)));\r\n\t\t\tfor (let cp of V) {\r\n\t\t\t\tM.set(cp, complement);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// compute valid set\r\n\tlet union = new Set(); // exists in 1+ groups\r\n\tlet multi = new Set(); // exists in 2+ groups\r\n\tconst add_to_union = cp => union.has(cp) ? multi.add(cp) : union.add(cp);\r\n\tfor (let g of GROUPS) {\r\n\t\tfor (let cp of g.P) add_to_union(cp);\r\n\t\tfor (let cp of g.Q) add_to_union(cp);\r\n\t}\r\n\t// dual purpose WHOLE_MAP: return placeholder if unique non-confusable\r\n\tfor (let cp of union) {\r\n\t\tif (!WHOLE_MAP.has(cp) && !multi.has(cp)) {\r\n\t\t\tWHOLE_MAP.set(cp, UNIQUE_PH);\r\n\t\t}\r\n\t}\r\n\tVALID = new Set(Array_from(union).concat(Array_from(nfd(union)))); // possibly valid\r\n\r\n\t// decode emoji\r\n\t// 20230719: emoji are now fully-expanded to avoid quirk logic \r\n\tEMOJI_LIST = read_trie(r).map(v => Emoji.from(v)).sort(compare_arrays);\r\n\tEMOJI_ROOT = new Map(); // this has approx 7K nodes (2+ per emoji)\r\n\tfor (let cps of EMOJI_LIST) {\r\n\t\t// 20230719: change to *slightly* stricter algorithm which disallows \r\n\t\t// insertion of misplaced FE0F in emoji sequences (matching ENSIP-15)\r\n\t\t// example: beautified [A B] (eg. flag emoji) \r\n\t\t//  before: allow: [A FE0F B], error: [A FE0F FE0F B] \r\n\t\t//   after: error: both\r\n\t\t// note: this code now matches ENSNormalize.{cs,java} logic\r\n\t\tlet prev = [EMOJI_ROOT];\r\n\t\tfor (let cp of cps) {\r\n\t\t\tlet next = prev.map(node => {\r\n\t\t\t\tlet child = node.get(cp);\r\n\t\t\t\tif (!child) {\r\n\t\t\t\t\t// should this be object? \r\n\t\t\t\t\t// (most have 1-2 items, few have many)\r\n\t\t\t\t\t// 20230719: no, v8 default map is 4?\r\n\t\t\t\t\tchild = new Map();\r\n\t\t\t\t\tnode.set(cp, child);\r\n\t\t\t\t}\r\n\t\t\t\treturn child;\r\n\t\t\t});\r\n\t\t\tif (cp === FE0F) {\r\n\t\t\t\tprev.push(...next); // less than 20 elements\r\n\t\t\t} else {\r\n\t\t\t\tprev = next;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let x of prev) {\r\n\t\t\tx.V = cps;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// if escaped: {HEX}\r\n//       else: \"x\" {HEX}\r\nfunction quoted_cp(cp) {\r\n\treturn (should_escape(cp) ? '' : `${bidi_qq(safe_str_from_cps([cp]))} `) + quote_cp(cp);\r\n}\r\n\r\n// 20230211: some messages can be mixed-directional and result in spillover\r\n// use 200E after a quoted string to force the remainder of a string from \r\n// acquring the direction of the quote\r\n// https://www.w3.org/International/questions/qa-bidi-unicode-controls#exceptions\r\nfunction bidi_qq(s) {\r\n\treturn `\"${s}\"\\u200E`; // strong LTR\r\n}\r\n\r\nfunction check_label_extension(cps) {\r\n\tif (cps.length >= 4 && cps[2] == HYPHEN && cps[3] == HYPHEN) {\r\n\t\tthrow new Error(`invalid label extension: \"${str_from_cps(cps.slice(0, 4))}\"`);\r\n\t}\r\n}\r\nfunction check_leading_underscore(cps) {\r\n\tconst UNDERSCORE = 0x5F;\r\n\tfor (let i = cps.lastIndexOf(UNDERSCORE); i > 0; ) {\r\n\t\tif (cps[--i] !== UNDERSCORE) {\r\n\t\t\tthrow new Error('underscore allowed only at start');\r\n\t\t}\r\n\t}\r\n}\r\n// check that a fenced cp is not leading, trailing, or touching another fenced cp\r\nfunction check_fenced(cps) {\r\n\tlet cp = cps[0];\r\n\tlet prev = FENCED.get(cp);\r\n\tif (prev) throw error_placement(`leading ${prev}`);\r\n\tlet n = cps.length;\r\n\tlet last = -1; // prevents trailing from throwing\r\n\tfor (let i = 1; i < n; i++) {\r\n\t\tcp = cps[i];\r\n\t\tlet match = FENCED.get(cp);\r\n\t\tif (match) {\r\n\t\t\t// since cps[0] isn't fenced, cps[1] cannot throw\r\n\t\t\tif (last == i) throw error_placement(`${prev} + ${match}`);\r\n\t\t\tlast = i + 1;\r\n\t\t\tprev = match;\r\n\t\t}\r\n\t}\r\n\tif (last == n) throw error_placement(`trailing ${prev}`);\r\n}\r\n\r\n// create a safe to print string \r\n// invisibles are escaped\r\n// leading cm uses placeholder\r\n// quoter(cp) => string, eg. 3000 => \"{3000}\"\r\n// note: in html, you'd call this function then replace [<>&] with entities\r\nfunction safe_str_from_cps(cps, quoter = quote_cp) {\r\n\t//if (Number.isInteger(cps)) cps = [cps];\r\n\t//if (!Array.isArray(cps)) throw new TypeError(`expected codepoints`);\r\n\tlet buf = [];\r\n\tif (is_combining_mark(cps[0])) buf.push('◌');\r\n\tlet prev = 0;\r\n\tlet n = cps.length;\r\n\tfor (let i = 0; i < n; i++) {\r\n\t\tlet cp = cps[i];\r\n\t\tif (should_escape(cp)) {\r\n\t\t\tbuf.push(str_from_cps(cps.slice(prev, i)));\r\n\t\t\tbuf.push(quoter(cp));\r\n\t\t\tprev = i + 1;\r\n\t\t}\r\n\t}\r\n\tbuf.push(str_from_cps(cps.slice(prev, n)));\r\n\treturn buf.join('');\r\n}\r\n\r\n// note: set(s) cannot be exposed because they can be modified\r\n// note: Object.freeze() doesn't work\r\nfunction is_combining_mark(cp) {\r\n\tinit();\r\n\treturn CM.has(cp);\r\n}\r\nfunction should_escape(cp) {\r\n\tinit();\r\n\treturn ESCAPE.has(cp);\r\n}\r\n\r\n// return all supported emoji as fully-qualified emoji \r\n// ordered by length then lexicographic \r\nfunction ens_emoji() {\r\n\tinit();\r\n\treturn EMOJI_LIST.map(x => x.slice()); // emoji are exposed so copy\r\n}\r\n\r\nfunction ens_normalize_fragment(frag, decompose) {\r\n\tinit();\r\n\tlet nf = decompose ? nfd : nfc;\r\n\treturn frag.split(STOP_CH).map(label => str_from_cps(tokens_from_str(explode_cp(label), nf, filter_fe0f).flat())).join(STOP_CH);\r\n}\r\n\r\nfunction ens_normalize(name) {\r\n\treturn flatten(split(name, nfc, filter_fe0f));\r\n}\r\n\r\nfunction ens_beautify(name) {\r\n\tlet labels = split(name, nfc, x => x); // emoji not exposed\r\n\tfor (let {type, output, error} of labels) {\r\n\t\tif (error) break; // flatten will throw\r\n\r\n\t\t// replace leading/trailing hyphen\r\n\t\t// 20230121: consider beautifing all or leading/trailing hyphen to unicode variant\r\n\t\t// not exactly the same in every font, but very similar: \"-\" vs \"‐\"\r\n\t\t/*\r\n\t\tconst UNICODE_HYPHEN = 0x2010;\r\n\t\t// maybe this should replace all for visual consistancy?\r\n\t\t// `node tools/reg-count.js regex ^-\\{2,\\}` => 592\r\n\t\t//for (let i = 0; i < output.length; i++) if (output[i] == 0x2D) output[i] = 0x2010;\r\n\t\tif (output[0] == HYPHEN) output[0] = UNICODE_HYPHEN;\r\n\t\tlet end = output.length-1;\r\n\t\tif (output[end] == HYPHEN) output[end] = UNICODE_HYPHEN;\r\n\t\t*/\r\n\t\t// 20230123: WHATWG URL uses \"CheckHyphens\" false\r\n\t\t// https://url.spec.whatwg.org/#idna\r\n\r\n\t\t// update ethereum symbol\r\n\t\t// ξ => Ξ if not greek\r\n\t\tif (type !== 'Greek') { \r\n\t\t\tlet prev = 0;\r\n\t\t\twhile (true) {\r\n\t\t\t\tlet next = output.indexOf(0x3BE, prev);\r\n\t\t\t\tif (next < 0) break;\r\n\t\t\t\toutput[next] = 0x39E; \r\n\t\t\t\tprev = next + 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 20221213: fixes bidi subdomain issue, but breaks invariant (200E is disallowed)\r\n\t\t// could be fixed with special case for: 2D (.) + 200E (LTR)\r\n\t\t// https://discuss.ens.domains/t/bidi-label-ordering-spoof/15824\r\n\t\t//output.splice(0, 0, 0x200E);\r\n\t}\r\n\treturn flatten(labels);\r\n}\r\n\r\nfunction ens_split(name, preserve_emoji) {\r\n\treturn split(name, nfc, preserve_emoji ? x => x.slice() : filter_fe0f); // emoji are exposed so copy\r\n}\r\n\r\nfunction split(name, nf, ef) {\r\n\tif (!name) return []; // 20230719: empty name allowance\r\n\tinit();\r\n\tlet offset = 0;\r\n\t// https://unicode.org/reports/tr46/#Validity_Criteria\r\n\t// 4.) \"The label must not contain a U+002E ( . ) FULL STOP.\"\r\n\treturn name.split(STOP_CH).map(label => {\r\n\t\tlet input = explode_cp(label);\r\n\t\tlet info = {\r\n\t\t\tinput,\r\n\t\t\toffset, // codepoint, not substring!\r\n\t\t};\r\n\t\toffset += input.length + 1; // + stop\r\n\t\ttry {\r\n\t\t\t// 1.) \"The label must be in Unicode Normalization Form NFC\"\r\n\t\t\tlet tokens = info.tokens = tokens_from_str(input, nf, ef);\r\n\t\t\tlet token_count = tokens.length;\r\n\t\t\tlet type;\r\n\t\t\tif (!token_count) { // the label was effectively empty (could of had ignored characters)\r\n\t\t\t\t//norm = [];\r\n\t\t\t\t//type = 'None'; // use this instead of next match, \"ASCII\"\r\n\t\t\t\t// 20230120: change to strict\r\n\t\t\t\t// https://discuss.ens.domains/t/ens-name-normalization-2nd/14564/59\r\n\t\t\t\tthrow new Error(`empty label`);\r\n\t\t\t} \r\n\t\t\tlet norm = info.output = tokens.flat();\r\n\t\t\tcheck_leading_underscore(norm);\r\n\t\t\tlet emoji = info.emoji = token_count > 1 || tokens[0].is_emoji; // same as: tokens.some(x => x.is_emoji);\r\n\t\t\tif (!emoji && norm.every(cp => cp < 0x80)) { // special case for ascii\r\n\t\t\t\t// 20230123: matches matches WHATWG, see note 3.3\r\n\t\t\t\tcheck_label_extension(norm); // only needed for ascii\r\n\t\t\t\t// cant have fenced\r\n\t\t\t\t// cant have cm\r\n\t\t\t\t// cant have wholes\r\n\t\t\t\t// see derive: \"Fastpath ASCII\"\r\n\t\t\t\ttype = 'ASCII';\r\n\t\t\t} else {\r\n\t\t\t\tlet chars = tokens.flatMap(x => x.is_emoji ? [] : x); // all of the nfc tokens concat together\r\n\t\t\t\tif (!chars.length) { // theres no text, just emoji\r\n\t\t\t\t\ttype = 'Emoji';\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 5.) \"The label must not begin with a combining mark, that is: General_Category=Mark.\"\r\n\t\t\t\t\tif (CM.has(norm[0])) throw error_placement('leading combining mark');\r\n\t\t\t\t\tfor (let i = 1; i < token_count; i++) { // we've already checked the first token\r\n\t\t\t\t\t\tlet cps = tokens[i];\r\n\t\t\t\t\t\tif (!cps.is_emoji && CM.has(cps[0])) { // every text token has emoji neighbors, eg. EtEEEtEt...\r\n\t\t\t\t\t\t\t// bidi_qq() not needed since emoji is LTR and cps is a CM\r\n\t\t\t\t\t\t\tthrow error_placement(`emoji + combining mark: \"${str_from_cps(tokens[i-1])} + ${safe_str_from_cps([cps[0]])}\"`); \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcheck_fenced(norm);\r\n\t\t\t\t\tlet unique = Array_from(new Set(chars));\r\n\t\t\t\t\tlet [g] = determine_group(unique); // take the first match\r\n\t\t\t\t\t// see derive: \"Matching Groups have Same CM Style\"\r\n\t\t\t\t\t// alternative: could form a hybrid type: Latin/Japanese/...\t\r\n\t\t\t\t\tcheck_group(g, chars); // need text in order\r\n\t\t\t\t\tcheck_whole(g, unique); // only need unique text (order would be required for multiple-char confusables)\r\n\t\t\t\t\ttype = g.N;\r\n\t\t\t\t\t// 20230121: consider exposing restricted flag\r\n\t\t\t\t\t// it's simpler to just check for 'Restricted'\r\n\t\t\t\t\t// or even better: type.endsWith(']')\r\n\t\t\t\t\t//if (g.R) info.restricted = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tinfo.type = type;\r\n\t\t} catch (err) {\r\n\t\t\tinfo.error = err; // use full error object\r\n\t\t}\r\n\t\treturn info;\r\n\t});\r\n}\r\n\r\nfunction check_whole(group, unique) {\r\n\tlet maker;\r\n\tlet shared = [];\r\n\tfor (let cp of unique) {\r\n\t\tlet whole = WHOLE_MAP.get(cp);\r\n\t\tif (whole === UNIQUE_PH) return; // unique, non-confusable\r\n\t\tif (whole) {\r\n\t\t\tlet set = whole.M.get(cp); // groups which have a character that look-like this character\r\n\t\t\tmaker = maker ? maker.filter(g => set.has(g)) : Array_from(set);\r\n\t\t\tif (!maker.length) return; // confusable intersection is empty\r\n\t\t} else {\r\n\t\t\tshared.push(cp); \r\n\t\t}\r\n\t}\r\n\tif (maker) {\r\n\t\t// we have 1+ confusable\r\n\t\t// check if any of the remaining groups\r\n\t\t// contain the shared characters too\r\n\t\tfor (let g of maker) {\r\n\t\t\tif (shared.every(cp => group_has_cp(g, cp))) {\r\n\t\t\t\tthrow new Error(`whole-script confusable: ${group.N}/${g.N}`);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// assumption: unique.size > 0\r\n// returns list of matching groups\r\nfunction determine_group(unique) {\r\n\tlet groups = GROUPS;\r\n\tfor (let cp of unique) {\r\n\t\t// note: we need to dodge CM that are whitelisted\r\n\t\t// but that code isn't currently necessary\r\n\t\tlet gs = groups.filter(g => group_has_cp(g, cp));\r\n\t\tif (!gs.length) {\r\n\t\t\tif (!GROUPS.some(g => group_has_cp(g, cp))) { \r\n\t\t\t\t// the character was composed of valid parts\r\n\t\t\t\t// but it's NFC form is invalid\r\n\t\t\t\t// 20230716: change to more exact statement, see: ENSNormalize.{cs,java}\r\n\t\t\t\t// note: this doesn't have to be a composition\r\n\t\t\t\t// 20230720: change to full check\r\n\t\t\t\tthrow error_disallowed(cp); // this should be rare\r\n\t\t\t} else {\r\n\t\t\t\t// there is no group that contains all these characters\r\n\t\t\t\t// throw using the highest priority group that matched\r\n\t\t\t\t// https://www.unicode.org/reports/tr39/#mixed_script_confusables\r\n\t\t\t\tthrow error_group_member(groups[0], cp);\r\n\t\t\t}\r\n\t\t}\r\n\t\tgroups = gs;\r\n\t\tif (gs.length == 1) break; // there is only one group left\r\n\t}\r\n\t// there are at least 1 group(s) with all of these characters\r\n\treturn groups;\r\n}\r\n\r\n// throw on first error\r\nfunction flatten(split) {\r\n\treturn split.map(({input, error, output}) => {\r\n\t\tif (error) {\r\n\t\t\t// don't print label again if just a single label\r\n\t\t\tlet msg = error.message;\r\n\t\t\t// bidi_qq() only necessary if msg is digits\r\n\t\t\tthrow new Error(split.length == 1 ? msg : `Invalid label ${bidi_qq(safe_str_from_cps(input))}: ${msg}`); \r\n\t\t}\r\n\t\treturn str_from_cps(output);\r\n\t}).join(STOP_CH);\r\n}\r\n\r\nfunction error_disallowed(cp) {\r\n\t// TODO: add cp to error?\r\n\treturn new Error(`disallowed character: ${quoted_cp(cp)}`); \r\n}\r\nfunction error_group_member(g, cp) {\r\n\tlet quoted = quoted_cp(cp);\r\n\tlet gg = GROUPS.find(g => g.P.has(cp)); // only check primary\r\n\tif (gg) {\r\n\t\tquoted = `${gg.N} ${quoted}`;\r\n\t}\r\n\treturn new Error(`illegal mixture: ${g.N} + ${quoted}`);\r\n}\r\nfunction error_placement(where) {\r\n\treturn new Error(`illegal placement: ${where}`);\r\n}\r\n\r\n// assumption: cps.length > 0\r\n// assumption: cps[0] isn't a CM\r\n// assumption: the previous character isn't an emoji\r\nfunction check_group(g, cps) {\r\n\tfor (let cp of cps) {\r\n\t\tif (!group_has_cp(g, cp)) {\r\n\t\t\t// for whitelisted scripts, this will throw illegal mixture on invalid cm, eg. \"e{300}{300}\"\r\n\t\t\t// at the moment, it's unnecessary to introduce an extra error type\r\n\t\t\t// until there exists a whitelisted multi-character\r\n\t\t\t//   eg. if (M < 0 && is_combining_mark(cp)) { ... }\r\n\t\t\t// there are 3 cases:\r\n\t\t\t//   1. illegal cm for wrong group => mixture error\r\n\t\t\t//   2. illegal cm for same group => cm error\r\n\t\t\t//       requires set of whitelist cm per group: \r\n\t\t\t//        eg. new Set([...g.P, ...g.Q].flatMap(nfc).filter(cp => CM.has(cp)))\r\n\t\t\t//   3. wrong group => mixture error\r\n\t\t\tthrow error_group_member(g, cp);\r\n\t\t}\r\n\t}\r\n\t//if (M >= 0) { // we have a known fixed cm count\r\n\tif (g.M) { // we need to check for NSM\r\n\t\tlet decomposed = nfd(cps);\r\n\t\tfor (let i = 1, e = decomposed.length; i < e; i++) { // see: assumption\r\n\t\t\t// 20230210: bugfix: using cps instead of decomposed h/t Carbon225\r\n\t\t\t/*\r\n\t\t\tif (CM.has(decomposed[i])) {\r\n\t\t\t\tlet j = i + 1;\r\n\t\t\t\twhile (j < e && CM.has(decomposed[j])) j++;\r\n\t\t\t\tif (j - i > M) {\r\n\t\t\t\t\tthrow new Error(`too many combining marks: ${g.N} ${bidi_qq(str_from_cps(decomposed.slice(i-1, j)))} (${j-i}/${M})`);\r\n\t\t\t\t}\r\n\t\t\t\ti = j;\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\t// 20230217: switch to NSM counting\r\n\t\t\t// https://www.unicode.org/reports/tr39/#Optional_Detection\r\n\t\t\tif (NSM.has(decomposed[i])) {\r\n\t\t\t\tlet j = i + 1;\r\n\t\t\t\tfor (let cp; j < e && NSM.has(cp = decomposed[j]); j++) {\r\n\t\t\t\t\t// a. Forbid sequences of the same nonspacing mark.\r\n\t\t\t\t\tfor (let k = i; k < j; k++) { // O(n^2) but n < 100\r\n\t\t\t\t\t\tif (decomposed[k] == cp) {\r\n\t\t\t\t\t\t\tthrow new Error(`duplicate non-spacing marks: ${quoted_cp(cp)}`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// parse to end so we have full nsm count\r\n\t\t\t\t// b. Forbid sequences of more than 4 nonspacing marks (gc=Mn or gc=Me).\r\n\t\t\t\tif (j - i > NSM_MAX) {\r\n\t\t\t\t\t// note: this slice starts with a base char or spacing-mark cm\r\n\t\t\t\t\tthrow new Error(`excessive non-spacing marks: ${bidi_qq(safe_str_from_cps(decomposed.slice(i-1, j)))} (${j-i}/${NSM_MAX})`);\r\n\t\t\t\t}\r\n\t\t\t\ti = j;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// *** this code currently isn't needed ***\r\n\t/*\r\n\tlet cm_whitelist = M instanceof Map;\r\n\tfor (let i = 0, e = cps.length; i < e; ) {\r\n\t\tlet cp = cps[i++];\r\n\t\tlet seqs = cm_whitelist && M.get(cp);\r\n\t\tif (seqs) { \r\n\t\t\t// list of codepoints that can follow\r\n\t\t\t// if this exists, this will always be 1+\r\n\t\t\tlet j = i;\r\n\t\t\twhile (j < e && CM.has(cps[j])) j++;\r\n\t\t\tlet cms = cps.slice(i, j);\r\n\t\t\tlet match = seqs.find(seq => !compare_arrays(seq, cms));\r\n\t\t\tif (!match) throw new Error(`disallowed combining mark sequence: \"${safe_str_from_cps([cp, ...cms])}\"`);\r\n\t\t\ti = j;\r\n\t\t} else if (!V.has(cp)) {\r\n\t\t\t// https://www.unicode.org/reports/tr39/#mixed_script_confusables\r\n\t\t\tlet quoted = quoted_cp(cp);\r\n\t\t\tfor (let cp of cps) {\r\n\t\t\t\tlet u = UNIQUE.get(cp);\r\n\t\t\t\tif (u && u !== g) {\r\n\t\t\t\t\t// if both scripts are restricted this error is confusing\r\n\t\t\t\t\t// because we don't differentiate RestrictedA from RestrictedB \r\n\t\t\t\t\tif (!u.R) quoted = `${quoted} is ${u.N}`;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthrow new Error(`disallowed ${g.N} character: ${quoted}`);\r\n\t\t\t//throw new Error(`disallowed character: ${quoted} (expected ${g.N})`);\r\n\t\t\t//throw new Error(`${g.N} does not allow: ${quoted}`);\r\n\t\t}\r\n\t}\r\n\tif (!cm_whitelist) {\r\n\t\tlet decomposed = nfd(cps);\r\n\t\tfor (let i = 1, e = decomposed.length; i < e; i++) { // we know it can't be cm leading\r\n\t\t\tif (CM.has(decomposed[i])) {\r\n\t\t\t\tlet j = i + 1;\r\n\t\t\t\twhile (j < e && CM.has(decomposed[j])) j++;\r\n\t\t\t\tif (j - i > M) {\r\n\t\t\t\t\tthrow new Error(`too many combining marks: \"${str_from_cps(decomposed.slice(i-1, j))}\" (${j-i}/${M})`);\r\n\t\t\t\t}\r\n\t\t\t\ti = j;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t*/\r\n}\r\n\r\n// given a list of codepoints\r\n// returns a list of lists, where emoji are a fully-qualified (as Array subclass)\r\n// eg. explode_cp(\"abc💩d\") => [[61, 62, 63], Emoji[1F4A9, FE0F], [64]]\r\n// 20230818: rename for 'process' name collision h/t Javarome\r\n// https://github.com/adraffy/ens-normalize.js/issues/23\r\nfunction tokens_from_str(input, nf, ef) {\r\n\tlet ret = [];\r\n\tlet chars = [];\r\n\tinput = input.slice().reverse(); // flip so we can pop\r\n\twhile (input.length) {\r\n\t\tlet emoji = consume_emoji_reversed(input);\r\n\t\tif (emoji) {\r\n\t\t\tif (chars.length) {\r\n\t\t\t\tret.push(nf(chars));\r\n\t\t\t\tchars = [];\r\n\t\t\t}\r\n\t\t\tret.push(ef(emoji));\r\n\t\t} else {\r\n\t\t\tlet cp = input.pop();\r\n\t\t\tif (VALID.has(cp)) {\r\n\t\t\t\tchars.push(cp);\r\n\t\t\t} else {\r\n\t\t\t\tlet cps = MAPPED.get(cp);\r\n\t\t\t\tif (cps) {\r\n\t\t\t\t\tchars.push(...cps); // less than 10 elements\r\n\t\t\t\t} else if (!IGNORED.has(cp)) {\r\n\t\t\t\t\t// 20230912: unicode 15.1 changed the order of processing such that\r\n\t\t\t\t\t// disallowed parts are only rejected after NFC\r\n\t\t\t\t\t// https://unicode.org/reports/tr46/#Validity_Criteria\r\n\t\t\t\t\t// this doesn't impact normalization as of today\r\n\t\t\t\t\t// technically, this error can be removed as the group logic will apply similar logic\r\n\t\t\t\t\t// however the error type might be less clear\r\n\t\t\t\t\tthrow error_disallowed(cp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (chars.length) {\r\n\t\tret.push(nf(chars));\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction filter_fe0f(cps) {\r\n\treturn cps.filter(cp => cp != FE0F);\r\n}\r\n\r\n// given array of codepoints\r\n// returns the longest valid emoji sequence (or undefined if no match)\r\n// *MUTATES* the supplied array\r\n// disallows interleaved ignored characters\r\n// fills (optional) eaten array with matched codepoints\r\nfunction consume_emoji_reversed(cps, eaten) {\r\n\tlet node = EMOJI_ROOT;\r\n\tlet emoji;\r\n\tlet pos = cps.length;\r\n\twhile (pos) {\r\n\t\tnode = node.get(cps[--pos]);\r\n\t\tif (!node) break;\r\n\t\tlet {V} = node;\r\n\t\tif (V) { // this is a valid emoji (so far)\r\n\t\t\temoji = V;\r\n\t\t\tif (eaten) eaten.push(...cps.slice(pos).reverse()); // (optional) copy input, used for ens_tokenize()\r\n\t\t\tcps.length = pos; // truncate\r\n\t\t}\r\n\t}\r\n\treturn emoji;\r\n}\r\n\r\n// ************************************************************\r\n// tokenizer \r\n\r\nconst TY_VALID = 'valid';\r\nconst TY_MAPPED = 'mapped';\r\nconst TY_IGNORED = 'ignored';\r\nconst TY_DISALLOWED = 'disallowed';\r\nconst TY_EMOJI = 'emoji';\r\nconst TY_NFC = 'nfc';\r\nconst TY_STOP = 'stop';\r\n\r\nfunction ens_tokenize(name, {\r\n\tnf = true, // collapse unnormalized runs into a single token\r\n} = {}) {\r\n\tinit();\r\n\tlet input = explode_cp(name).reverse();\r\n\tlet eaten = [];\r\n\tlet tokens = [];\r\n\twhile (input.length) {\r\n\t\tlet emoji = consume_emoji_reversed(input, eaten);\r\n\t\tif (emoji) {\r\n\t\t\ttokens.push({\r\n\t\t\t\ttype: TY_EMOJI,\r\n\t\t\t\temoji: emoji.slice(), // copy emoji\r\n\t\t\t\tinput: eaten,\r\n\t\t\t\tcps: filter_fe0f(emoji)\r\n\t\t\t});\r\n\t\t\teaten = []; // reset buffer\r\n\t\t} else {\r\n\t\t\tlet cp = input.pop();\r\n\t\t\tif (cp == STOP) {\r\n\t\t\t\ttokens.push({type: TY_STOP, cp});\r\n\t\t\t} else if (VALID.has(cp)) {\r\n\t\t\t\ttokens.push({type: TY_VALID, cps: [cp]});\r\n\t\t\t} else if (IGNORED.has(cp)) {\r\n\t\t\t\ttokens.push({type: TY_IGNORED, cp});\r\n\t\t\t} else {\r\n\t\t\t\tlet cps = MAPPED.get(cp);\r\n\t\t\t\tif (cps) {\r\n\t\t\t\t\ttokens.push({type: TY_MAPPED, cp, cps: cps.slice()});\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttokens.push({type: TY_DISALLOWED, cp});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (nf) {\r\n\t\tfor (let i = 0, start = -1; i < tokens.length; i++) {\r\n\t\t\tlet token = tokens[i];\r\n\t\t\tif (is_valid_or_mapped(token.type)) {\r\n\t\t\t\tif (requires_check(token.cps)) { // normalization might be needed\r\n\t\t\t\t\tlet end = i + 1;\r\n\t\t\t\t\tfor (let pos = end; pos < tokens.length; pos++) { // find adjacent text\r\n\t\t\t\t\t\tlet {type, cps} = tokens[pos];\r\n\t\t\t\t\t\tif (is_valid_or_mapped(type)) {\r\n\t\t\t\t\t\t\tif (!requires_check(cps)) break;\r\n\t\t\t\t\t\t\tend = pos + 1;\r\n\t\t\t\t\t\t} else if (type !== TY_IGNORED) { // || type !== TY_DISALLOWED) { \r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (start < 0) start = i;\r\n\t\t\t\t\tlet slice = tokens.slice(start, end);\r\n\t\t\t\t\tlet cps0 = slice.flatMap(x => is_valid_or_mapped(x.type) ? x.cps : []); // strip junk tokens\r\n\t\t\t\t\tlet cps = nfc(cps0);\r\n\t\t\t\t\tif (compare_arrays(cps, cps0)) { // bundle into an nfc token\r\n\t\t\t\t\t\ttokens.splice(start, end - start, {\r\n\t\t\t\t\t\t\ttype: TY_NFC, \r\n\t\t\t\t\t\t\tinput: cps0, // there are 3 states: tokens0 ==(process)=> input ==(nfc)=> tokens/cps\r\n\t\t\t\t\t\t\tcps, \r\n\t\t\t\t\t\t\ttokens0: collapse_valid_tokens(slice),\r\n\t\t\t\t\t\t\ttokens: ens_tokenize(str_from_cps(cps), {nf: false})\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\ti = start;\r\n\t\t\t\t\t} else { \r\n\t\t\t\t\t\ti = end - 1; // skip to end of slice\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstart = -1; // reset\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstart = i; // remember last\r\n\t\t\t\t}\r\n\t\t\t} else if (token.type !== TY_IGNORED) { // 20221024: is this correct?\r\n\t\t\t\tstart = -1; // reset\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn collapse_valid_tokens(tokens);\r\n}\r\n\r\nfunction is_valid_or_mapped(type) {\r\n\treturn type == TY_VALID || type == TY_MAPPED;\r\n}\r\n\r\nfunction requires_check(cps) {\r\n\treturn cps.some(cp => NFC_CHECK.has(cp));\r\n}\r\n\r\nfunction collapse_valid_tokens(tokens) {\r\n\tfor (let i = 0; i < tokens.length; i++) {\r\n\t\tif (tokens[i].type == TY_VALID) {\r\n\t\t\tlet j = i + 1;\r\n\t\t\twhile (j < tokens.length && tokens[j].type == TY_VALID) j++;\r\n\t\t\ttokens.splice(i, j - i, {type: TY_VALID, cps: tokens.slice(i, j).flatMap(x => x.cps)});\r\n\t\t}\r\n\t}\r\n\treturn tokens;\r\n}\n\nexport { ens_beautify, ens_emoji, ens_normalize, ens_normalize_fragment, ens_split, ens_tokenize, is_combining_mark, nfc, nfd, safe_str_from_cps, should_escape };\n","\nimport { keccak256 } from \"../crypto/index.js\";\nimport {\n    concat, hexlify, assertArgument, toUtf8Bytes\n} from \"../utils/index.js\";\n\n\nimport { ens_normalize } from \"@adraffy/ens-normalize\";\n\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\n\nfunction checkComponent(comp: Uint8Array): Uint8Array {\n    assertArgument(comp.length !== 0, \"invalid ENS name; empty component\", \"comp\", comp)\n    return comp;\n}\n\nfunction ensNameSplit(name: string): Array<Uint8Array> {\n    const bytes = toUtf8Bytes(ensNormalize(name));\n    const comps: Array<Uint8Array> = [ ];\n\n    if (name.length === 0) { return comps; }\n\n    let last = 0;\n    for (let i = 0; i < bytes.length; i++) {\n        const d = bytes[i];\n\n        // A separator (i.e. \".\"); copy this component\n        if (d === 0x2e) {\n            comps.push(checkComponent(bytes.slice(last, i)));\n            last = i + 1;\n        }\n    }\n\n    // There was a stray separator at the end of the name\n    assertArgument(last < bytes.length, \"invalid ENS name; empty component\", \"name\", name);\n\n    comps.push(checkComponent(bytes.slice(last)));\n    return comps;\n}\n\n/**\n *  Returns the ENS %%name%% normalized.\n */\nexport function ensNormalize(name: string): string {\n    try {\n        if (name.length === 0) { throw new Error(\"empty label\"); }\n        return ens_normalize(name);\n    } catch (error: any) {\n        assertArgument(false, `invalid ENS name (${ error.message })`, \"name\", name);\n    }\n}\n\n/**\n *  Returns ``true`` if %%name%% is a valid ENS name.\n */\nexport function isValidName(name: string): name is string {\n    try {\n        return (ensNameSplit(name).length !== 0);\n    } catch (error) { }\n    return false;\n}\n\n/**\n *  Returns the [[link-namehash]] for %%name%%.\n */\nexport function namehash(name: string): string {\n    assertArgument(typeof(name) === \"string\", \"invalid ENS name; not a string\", \"name\", name);\n\n    assertArgument(name.length, `invalid ENS name (empty label)`, \"name\", name);\n\n    let result: string | Uint8Array = Zeros;\n\n    const comps = ensNameSplit(name);\n    while (comps.length) {\n        result = keccak256(concat([ result, keccak256(<Uint8Array>(comps.pop()))] ));\n    }\n\n    return hexlify(result);\n}\n\n/**\n *  Returns the DNS encoded %%name%%.\n *\n *  This is used for various parts of ENS name resolution, such\n *  as the wildcard resolution.\n */\nexport function dnsEncode(name: string): string {\n    return hexlify(concat(ensNameSplit(name).map((comp) => {\n        // DNS does not allow components over 63 bytes in length\n        if (comp.length > 63) {\n            throw new Error(\"invalid DNS encoded entry; length exceeds 63 bytes\");\n        }\n\n        const bytes = new Uint8Array(comp.length + 1);\n        bytes.set(comp, 1);\n        bytes[0] = bytes.length - 1;\n        return bytes;\n\n    }))) + \"00\";\n}\n","/**\n *  A constant for the zero hash.\n *\n *  (**i.e.** ``\"0x0000000000000000000000000000000000000000000000000000000000000000\"``)\n */\nexport const ZeroHash: string = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n\n","\nimport { ZeroHash } from \"../constants/index.js\";\nimport {\n    concat, dataLength, getBigInt, getBytes, getNumber, hexlify,\n    toBeArray, isHexString, zeroPadValue,\n    assertArgument, assertPrivate\n} from \"../utils/index.js\";\n\nimport type {\n    BigNumberish, BytesLike, Numeric\n} from \"../utils/index.js\";\n\n\n// Constants\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_2 = BigInt(2);\nconst BN_27 = BigInt(27);\nconst BN_28 = BigInt(28);\nconst BN_35 = BigInt(35);\n\n\nconst _guard = { };\n\n// @TODO: Allow Uint8Array\n\n/**\n *  A SignatureLike\n *\n *  @_docloc: api/crypto:Signing\n */\nexport type SignatureLike = Signature | string | {\n    r: string;\n    s: string;\n    v: BigNumberish;\n    yParity?: 0 | 1;\n    yParityAndS?: string;\n} | {\n    r: string;\n    yParityAndS: string;\n    yParity?: 0 | 1;\n    s?: string;\n    v?: number;\n} | {\n    r: string;\n    s: string;\n    yParity: 0 | 1;\n    v?: BigNumberish;\n    yParityAndS?: string;\n};\n\nfunction toUint256(value: BigNumberish): string {\n    return zeroPadValue(toBeArray(value), 32);\n}\n\n/**\n *  A Signature  @TODO\n *\n *\n *  @_docloc: api/crypto:Signing\n */\nexport class Signature {\n    #r: string;\n    #s: string;\n    #v: 27 | 28;\n    #networkV: null | bigint;\n\n    /**\n     *  The ``r`` value for a signautre.\n     *\n     *  This represents the ``x`` coordinate of a \"reference\" or\n     *  challenge point, from which the ``y`` can be computed.\n     */\n    get r(): string { return this.#r; }\n    set r(value: BytesLike) {\n        assertArgument(dataLength(value) === 32, \"invalid r\", \"value\", value);\n        this.#r = hexlify(value);\n    }\n\n    /**\n     *  The ``s`` value for a signature.\n     */\n    get s(): string { return this.#s; }\n    set s(_value: BytesLike) {\n        assertArgument(dataLength(_value) === 32, \"invalid s\", \"value\", _value);\n        const value = hexlify(_value);\n        assertArgument(parseInt(value.substring(0, 3)) < 8, \"non-canonical s\", \"value\", value);\n        this.#s = value;\n    }\n\n    /**\n     *  The ``v`` value for a signature.\n     *\n     *  Since a given ``x`` value for ``r`` has two possible values for\n     *  its correspondin ``y``, the ``v`` indicates which of the two ``y``\n     *  values to use.\n     *\n     *  It is normalized to the values ``27`` or ``28`` for legacy\n     *  purposes.\n     */\n    get v(): 27 | 28 { return this.#v; }\n    set v(value: BigNumberish) {\n        const v = getNumber(value, \"value\");\n        assertArgument(v === 27 || v === 28, \"invalid v\", \"v\", value);\n        this.#v = v;\n    }\n\n    /**\n     *  The EIP-155 ``v`` for legacy transactions. For non-legacy\n     *  transactions, this value is ``null``.\n     */\n    get networkV(): null | bigint { return this.#networkV; }\n\n    /**\n     *  The chain ID for EIP-155 legacy transactions. For non-legacy\n     *  transactions, this value is ``null``.\n     */\n    get legacyChainId(): null | bigint {\n        const v = this.networkV;\n        if (v == null) { return null; }\n        return Signature.getChainId(v);\n    }\n\n    /**\n     *  The ``yParity`` for the signature.\n     *\n     *  See ``v`` for more details on how this value is used.\n     */\n    get yParity(): 0 | 1 {\n        return (this.v === 27) ? 0: 1;\n    }\n\n    /**\n     *  The [[link-eip-2098]] compact representation of the ``yParity``\n     *  and ``s`` compacted into a single ``bytes32``.\n     */\n    get yParityAndS(): string {\n        // The EIP-2098 compact representation\n        const yParityAndS = getBytes(this.s);\n        if (this.yParity) { yParityAndS[0] |= 0x80; }\n        return hexlify(yParityAndS);\n    }\n\n    /**\n     *  The [[link-eip-2098]] compact representation.\n     */\n    get compactSerialized(): string {\n        return concat([ this.r, this.yParityAndS ]);\n    }\n\n    /**\n     *  The serialized representation.\n     */\n    get serialized(): string {\n        return concat([ this.r, this.s, (this.yParity ? \"0x1c\": \"0x1b\") ]);\n    }\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, r: string, s: string, v: 27 | 28) {\n        assertPrivate(guard, _guard, \"Signature\");\n        this.#r = r;\n        this.#s = s;\n        this.#v = v;\n        this.#networkV = null;\n    }\n\n    [Symbol.for('nodejs.util.inspect.custom')](): string {\n        return `Signature { r: \"${ this.r }\", s: \"${ this.s }\", yParity: ${ this.yParity }, networkV: ${ this.networkV } }`;\n    }\n\n    /**\n     *  Returns a new identical [[Signature]].\n     */\n    clone(): Signature {\n        const clone = new Signature(_guard, this.r, this.s, this.v);\n        if (this.networkV) { clone.#networkV = this.networkV; }\n        return clone;\n    }\n\n    /**\n     *  Returns a representation that is compatible with ``JSON.stringify``.\n     */\n    toJSON(): any {\n        const networkV = this.networkV;\n        return {\n            _type: \"signature\",\n            networkV: ((networkV != null) ? networkV.toString(): null),\n            r: this.r, s: this.s, v: this.v,\n        };\n    }\n\n    /**\n     *  Compute the chain ID from the ``v`` in a legacy EIP-155 transactions.\n     *\n     *  @example:\n     *    Signature.getChainId(45)\n     *    //_result:\n     *\n     *    Signature.getChainId(46)\n     *    //_result:\n     */\n    static getChainId(v: BigNumberish): bigint {\n        const bv = getBigInt(v, \"v\");\n\n        // The v is not an EIP-155 v, so it is the unspecified chain ID\n        if ((bv == BN_27) || (bv == BN_28)) { return BN_0; }\n\n        // Bad value for an EIP-155 v\n        assertArgument(bv >= BN_35, \"invalid EIP-155 v\", \"v\", v);\n\n        return (bv - BN_35) / BN_2;\n    }\n\n    /**\n     *  Compute the ``v`` for a chain ID for a legacy EIP-155 transactions.\n     *\n     *  Legacy transactions which use [[link-eip-155]] hijack the ``v``\n     *  property to include the chain ID.\n     *\n     *  @example:\n     *    Signature.getChainIdV(5, 27)\n     *    //_result:\n     *\n     *    Signature.getChainIdV(5, 28)\n     *    //_result:\n     *\n     */\n    static getChainIdV(chainId: BigNumberish, v: 27 | 28): bigint {\n        return (getBigInt(chainId) * BN_2) + BigInt(35 + v - 27);\n    }\n\n    /**\n     *  Compute the normalized legacy transaction ``v`` from a ``yParirty``,\n     *  a legacy transaction ``v`` or a legacy [[link-eip-155]] transaction.\n     *\n     *  @example:\n     *    // The values 0 and 1 imply v is actually yParity\n     *    Signature.getNormalizedV(0)\n     *    //_result:\n     *\n     *    // Legacy non-EIP-1559 transaction (i.e. 27 or 28)\n     *    Signature.getNormalizedV(27)\n     *    //_result:\n     *\n     *    // Legacy EIP-155 transaction (i.e. >= 35)\n     *    Signature.getNormalizedV(46)\n     *    //_result:\n     *\n     *    // Invalid values throw\n     *    Signature.getNormalizedV(5)\n     *    //_error:\n     */\n    static getNormalizedV(v: BigNumberish): 27 | 28 {\n        const bv = getBigInt(v);\n\n        if (bv === BN_0 || bv === BN_27) { return 27; }\n        if (bv === BN_1 || bv === BN_28) { return 28; }\n\n        assertArgument(bv >= BN_35, \"invalid v\", \"v\", v);\n\n        // Otherwise, EIP-155 v means odd is 27 and even is 28\n        return (bv & BN_1) ? 27: 28;\n    }\n\n    /**\n     *  Creates a new [[Signature]].\n     *\n     *  If no %%sig%% is provided, a new [[Signature]] is created\n     *  with default values.\n     *\n     *  If %%sig%% is a string, it is parsed.\n     */\n    static from(sig?: SignatureLike): Signature {\n        function assertError(check: unknown, message: string): asserts check {\n            assertArgument(check, message, \"signature\", sig);\n        };\n\n        if (sig == null) {\n            return new Signature(_guard, ZeroHash, ZeroHash, 27);\n        }\n\n        if (typeof(sig) === \"string\") {\n            const bytes = getBytes(sig, \"signature\");\n            if (bytes.length === 64) {\n                const r = hexlify(bytes.slice(0, 32));\n                const s = bytes.slice(32, 64);\n                const v = (s[0] & 0x80) ? 28: 27;\n                s[0] &= 0x7f;\n                return new Signature(_guard, r, hexlify(s), v);\n            }\n\n            if (bytes.length === 65) {\n                const r = hexlify(bytes.slice(0, 32));\n                const s = bytes.slice(32, 64);\n                assertError((s[0] & 0x80) === 0, \"non-canonical s\");\n                const v = Signature.getNormalizedV(bytes[64]);\n                return new Signature(_guard, r, hexlify(s), v);\n            }\n\n            assertError(false, \"invalid raw signature length\");\n        }\n\n        if (sig instanceof Signature) { return sig.clone(); }\n\n        // Get r\n        const _r = sig.r;\n        assertError(_r != null, \"missing r\");\n        const r = toUint256(_r);\n\n        // Get s; by any means necessary (we check consistency below)\n        const s = (function(s?: string, yParityAndS?: string) {\n            if (s != null) { return toUint256(s); }\n\n            if (yParityAndS != null) {\n                assertError(isHexString(yParityAndS, 32), \"invalid yParityAndS\");\n                const bytes = getBytes(yParityAndS);\n                bytes[0] &= 0x7f;\n                return hexlify(bytes);\n            }\n\n            assertError(false, \"missing s\");\n        })(sig.s, sig.yParityAndS);\n        assertError((getBytes(s)[0] & 0x80) == 0, \"non-canonical s\");\n\n        // Get v; by any means necessary (we check consistency below)\n        const { networkV, v } = (function(_v?: BigNumberish, yParityAndS?: string, yParity?: Numeric): { networkV?: bigint, v: 27 | 28 } {\n            if (_v != null) {\n                const v = getBigInt(_v);\n                return {\n                    networkV: ((v >= BN_35) ? v: undefined),\n                    v: Signature.getNormalizedV(v)\n                };\n            }\n\n            if (yParityAndS != null) {\n                assertError(isHexString(yParityAndS, 32), \"invalid yParityAndS\");\n                return { v: ((getBytes(yParityAndS)[0] & 0x80) ? 28: 27) };\n            }\n\n            if (yParity != null) {\n                switch (getNumber(yParity, \"sig.yParity\")) {\n                    case 0: return { v: 27 };\n                    case 1: return { v: 28 };\n                }\n                assertError(false, \"invalid yParity\");\n            }\n\n            assertError(false, \"missing v\");\n        })(sig.v, sig.yParityAndS, sig.yParity);\n\n        const result = new Signature(_guard, r, s, v);\n        if (networkV) { result.#networkV =  networkV; }\n\n        // If multiple of v, yParity, yParityAndS we given, check they match\n        assertError(sig.yParity == null || getNumber(sig.yParity, \"sig.yParity\") === result.yParity, \"yParity mismatch\");\n        assertError(sig.yParityAndS == null || sig.yParityAndS === result.yParityAndS, \"yParityAndS mismatch\");\n\n        return result;\n    }\n}\n\n","import { exists, output } from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    exists(this);\n    output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\nexport type Hex = Uint8Array | string; // hex strings are accepted for simplicity\nexport type PrivKey = Hex | bigint; // bigints are accepted to ease learning curve\nexport type CHash = {\n  (message: Uint8Array | string): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array | string) => Uint8Array;\n\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = num.toString(16);\n  return hex.length & 1 ? `0${hex}` : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // Big Endian\n  return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n: number | bigint, len: number): Uint8Array {\n  return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n: number | bigint): Uint8Array {\n  return hexToBytes(numberToHexUnpadded(n));\n}\n\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title: string, hex: Hex, expectedLength?: number): Uint8Array {\n  let res: Uint8Array;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n    }\n  } else if (u8a(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(`${title} must be hex string or Uint8Array`);\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength)\n    throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n  return res;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\nexport function equalBytes(b1: Uint8Array, b2: Uint8Array) {\n  // We don't care about timing attacks here\n  if (b1.length !== b2.length) return false;\n  for (let i = 0; i < b1.length; i++) if (b1[i] !== b2[i]) return false;\n  return true;\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n// Bit operations\n\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n: bigint) {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n: bigint, pos: number) {\n  return (n >> BigInt(pos)) & _1n;\n}\n\n/**\n * Sets single bit at position.\n */\nexport const bitSet = (n: bigint, pos: number, value: boolean) => {\n  return n | ((value ? _1n : _0n) << BigInt(pos));\n};\n\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n: number) => (_2n << BigInt(n - 1)) - _1n;\n\n// DRBG\n\nconst u8n = (data?: any) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr: any) => Uint8Array.from(arr); // another shortcut\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b: Uint8Array[]) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n()) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\n// Validating curves and fields\n\nconst validatorFns = {\n  bigint: (val: any) => typeof val === 'bigint',\n  function: (val: any) => typeof val === 'function',\n  boolean: (val: any) => typeof val === 'boolean',\n  string: (val: any) => typeof val === 'string',\n  stringOrUint8Array: (val: any) => typeof val === 'string' || val instanceof Uint8Array,\n  isSafeInteger: (val: any) => Number.isSafeInteger(val),\n  array: (val: any) => Array.isArray(val),\n  field: (val: any, object: any) => (object as any).Fp.isValid(val),\n  hash: (val: any) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n} as const;\ntype Validator = keyof typeof validatorFns;\ntype ValMap<T extends Record<string, any>> = { [K in keyof T]?: Validator };\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\n\nexport function validateObject<T extends Record<string, any>>(\n  object: T,\n  validators: ValMap<T>,\n  optValidators: ValMap<T> = {}\n) {\n  const checkField = (fieldName: keyof T, type: Validator, isOptional: boolean) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function')\n      throw new Error(`Invalid validator \"${type}\", expected function`);\n\n    const val = object[fieldName as keyof typeof object];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\n        `Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`\n      );\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type!, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type!, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport {\n  bitMask,\n  numberToBytesBE,\n  numberToBytesLE,\n  bytesToNumberBE,\n  bytesToNumberLE,\n  ensureBytes,\n  validateObject,\n} from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n\n// Calculates a modulo b\nexport function mod(a: bigint, b: bigint): bigint {\n  const result = a % b;\n  return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num: bigint, power: bigint, modulo: bigint): bigint {\n  if (modulo <= _0n || power < _0n) throw new Error('Expected power/modulo > 0');\n  if (modulo === _1n) return _0n;\n  let res = _1n;\n  while (power > _0n) {\n    if (power & _1n) res = (res * num) % modulo;\n    num = (num * num) % modulo;\n    power >>= _1n;\n  }\n  return res;\n}\n\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x: bigint, power: bigint, modulo: bigint): bigint {\n  let res = x;\n  while (power-- > _0n) {\n    res *= res;\n    res %= modulo;\n  }\n  return res;\n}\n\n// Inverses number over modulo\nexport function invert(number: bigint, modulo: bigint): bigint {\n  if (number === _0n || modulo <= _0n) {\n    throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n  }\n  // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n  // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n  let a = mod(number, modulo);\n  let b = modulo;\n  // prettier-ignore\n  let x = _0n, y = _1n, u = _1n, v = _0n;\n  while (a !== _0n) {\n    // JIT applies optimization if those two lines follow each other\n    const q = b / a;\n    const r = b % a;\n    const m = x - u * q;\n    const n = y - v * q;\n    // prettier-ignore\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n  const gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P: bigint) {\n  // Legendre constant: used to calculate Legendre symbol (a | p),\n  // which denotes the value of a^((p-1)/2) (mod p).\n  // (a | p) ≡ 1    if a is a square (mod p)\n  // (a | p) ≡ -1   if a is not a square (mod p)\n  // (a | p) ≡ 0    if a ≡ 0 (mod p)\n  const legendreC = (P - _1n) / _2n;\n\n  let Q: bigint, S: number, Z: bigint;\n  // Step 1: By factoring out powers of 2 from p - 1,\n  // find q and s such that p - 1 = q*(2^s) with q odd\n  for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++);\n\n  // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n  for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++);\n\n  // Fast-path\n  if (S === 1) {\n    const p1div4 = (P + _1n) / _4n;\n    return function tonelliFast<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Slow-path\n  const Q1div2 = (Q + _1n) / _2n;\n  return function tonelliSlow<T>(Fp: IField<T>, n: T): T {\n    // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n    if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE)) throw new Error('Cannot find square root');\n    let r = S;\n    // TODO: will fail at Fp2/etc\n    let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n    let x = Fp.pow(n, Q1div2); // first guess at the square root\n    let b = Fp.pow(n, Q); // first guess at the fudge factor\n\n    while (!Fp.eql(b, Fp.ONE)) {\n      if (Fp.eql(b, Fp.ZERO)) return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n      // Find m such b^(2^m)==1\n      let m = 1;\n      for (let t2 = Fp.sqr(b); m < r; m++) {\n        if (Fp.eql(t2, Fp.ONE)) break;\n        t2 = Fp.sqr(t2); // t2 *= t2\n      }\n      // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n      const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n      g = Fp.sqr(ge); // g = ge * ge\n      x = Fp.mul(x, ge); // x *= ge\n      b = Fp.mul(b, g); // b *= g\n      r = m;\n    }\n    return x;\n  };\n}\n\nexport function FpSqrt(P: bigint) {\n  // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n  // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n\n  // P ≡ 3 (mod 4)\n  // √n = n^((P+1)/4)\n  if (P % _4n === _3n) {\n    // Not all roots possible!\n    // const ORDER =\n    //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n    // const NUM = 72057594037927816n;\n    const p1div4 = (P + _1n) / _4n;\n    return function sqrt3mod4<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      // Throw if root**2 != n\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n  if (P % _8n === _5n) {\n    const c1 = (P - _5n) / _8n;\n    return function sqrt5mod8<T>(Fp: IField<T>, n: T) {\n      const n2 = Fp.mul(n, _2n);\n      const v = Fp.pow(n2, c1);\n      const nv = Fp.mul(n, v);\n      const i = Fp.mul(Fp.mul(nv, _2n), v);\n      const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // P ≡ 9 (mod 16)\n  if (P % _16n === _9n) {\n    // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n    // Means we cannot use sqrt for constants at all!\n    //\n    // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n    // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n    // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n    // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n    // sqrt = (x) => {\n    //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n    //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n    //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n    //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n    //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n    //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n    //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n    //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n    //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n    //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n    // }\n  }\n\n  // Other cases: Tonelli-Shanks algorithm\n  return tonelliShanks(P);\n}\n\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num: bigint, modulo: bigint) => (mod(num, modulo) & _1n) === _1n;\n\n// Field is not always over prime: for example, Fp2 has ORDER(q)=p^m\nexport interface IField<T> {\n  ORDER: bigint;\n  BYTES: number;\n  BITS: number;\n  MASK: bigint;\n  ZERO: T;\n  ONE: T;\n  // 1-arg\n  create: (num: T) => T;\n  isValid: (num: T) => boolean;\n  is0: (num: T) => boolean;\n  neg(num: T): T;\n  inv(num: T): T;\n  sqrt(num: T): T;\n  sqr(num: T): T;\n  // 2-args\n  eql(lhs: T, rhs: T): boolean;\n  add(lhs: T, rhs: T): T;\n  sub(lhs: T, rhs: T): T;\n  mul(lhs: T, rhs: T | bigint): T;\n  pow(lhs: T, power: bigint): T;\n  div(lhs: T, rhs: T | bigint): T;\n  // N for NonNormalized (for now)\n  addN(lhs: T, rhs: T): T;\n  subN(lhs: T, rhs: T): T;\n  mulN(lhs: T, rhs: T | bigint): T;\n  sqrN(num: T): T;\n\n  // Optional\n  // Should be same as sgn0 function in\n  // [RFC9380](https://www.rfc-editor.org/rfc/rfc9380#section-4.1).\n  // NOTE: sgn0 is 'negative in LE', which is same as odd. And negative in LE is kinda strange definition anyway.\n  isOdd?(num: T): boolean; // Odd instead of even since we have it for Fp2\n  // legendre?(num: T): T;\n  pow(lhs: T, power: bigint): T;\n  invertBatch: (lst: T[]) => T[];\n  toBytes(num: T): Uint8Array;\n  fromBytes(bytes: Uint8Array): T;\n  // If c is False, CMOV returns a, otherwise it returns b.\n  cmov(a: T, b: T, c: boolean): T;\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n  'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n  'eql', 'add', 'sub', 'mul', 'pow', 'div',\n  'addN', 'subN', 'mulN', 'sqrN'\n] as const;\nexport function validateField<T>(field: IField<T>) {\n  const initial = {\n    ORDER: 'bigint',\n    MASK: 'bigint',\n    BYTES: 'isSafeInteger',\n    BITS: 'isSafeInteger',\n  } as Record<string, string>;\n  const opts = FIELD_FIELDS.reduce((map, val: string) => {\n    map[val] = 'function';\n    return map;\n  }, initial);\n  return validateObject(field, opts);\n}\n\n// Generic field functions\n\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow<T>(f: IField<T>, num: T, power: bigint): T {\n  // Should have same speed as pow for bigints\n  // TODO: benchmark!\n  if (power < _0n) throw new Error('Expected power > 0');\n  if (power === _0n) return f.ONE;\n  if (power === _1n) return num;\n  let p = f.ONE;\n  let d = num;\n  while (power > _0n) {\n    if (power & _1n) p = f.mul(p, d);\n    d = f.sqr(d);\n    power >>= _1n;\n  }\n  return p;\n}\n\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch<T>(f: IField<T>, nums: T[]): T[] {\n  const tmp = new Array(nums.length);\n  // Walk from first to last, multiply them by each other MOD p\n  const lastMultiplied = nums.reduce((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = acc;\n    return f.mul(acc, num);\n  }, f.ONE);\n  // Invert last element\n  const inverted = f.inv(lastMultiplied);\n  // Walk from last to first, multiply them by inverted each other MOD p\n  nums.reduceRight((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = f.mul(acc, tmp[i]);\n    return f.mul(acc, num);\n  }, inverted);\n  return tmp;\n}\n\nexport function FpDiv<T>(f: IField<T>, lhs: T, rhs: T | bigint): T {\n  return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare<T>(f: IField<T>) {\n  const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n  return (x: T): boolean => {\n    const p = f.pow(x, legendreConst);\n    return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n  };\n}\n\n// CURVE.n lengths\nexport function nLength(n: bigint, nBitLength?: number) {\n  // Bit size, byte size of CURVE.n\n  const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n  const nByteLength = Math.ceil(_nBitLength / 8);\n  return { nBitLength: _nBitLength, nByteLength };\n}\n\ntype FpField = IField<bigint> & Required<Pick<IField<bigint>, 'isOdd'>>;\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(\n  ORDER: bigint,\n  bitLen?: number,\n  isLE = false,\n  redef: Partial<IField<bigint>> = {}\n): Readonly<FpField> {\n  if (ORDER <= _0n) throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n  const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n  if (BYTES > 2048) throw new Error('Field lengths over 2048 bytes are not supported');\n  const sqrtP = FpSqrt(ORDER);\n  const f: Readonly<FpField> = Object.freeze({\n    ORDER,\n    BITS,\n    BYTES,\n    MASK: bitMask(BITS),\n    ZERO: _0n,\n    ONE: _1n,\n    create: (num) => mod(num, ORDER),\n    isValid: (num) => {\n      if (typeof num !== 'bigint')\n        throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n      return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n    },\n    is0: (num) => num === _0n,\n    isOdd: (num) => (num & _1n) === _1n,\n    neg: (num) => mod(-num, ORDER),\n    eql: (lhs, rhs) => lhs === rhs,\n\n    sqr: (num) => mod(num * num, ORDER),\n    add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n    sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n    mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n    pow: (num, power) => FpPow(f, num, power),\n    div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n\n    // Same as above, but doesn't normalize\n    sqrN: (num) => num * num,\n    addN: (lhs, rhs) => lhs + rhs,\n    subN: (lhs, rhs) => lhs - rhs,\n    mulN: (lhs, rhs) => lhs * rhs,\n\n    inv: (num) => invert(num, ORDER),\n    sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n    invertBatch: (lst) => FpInvertBatch(f, lst),\n    // TODO: do we really need constant cmov?\n    // We don't have const-time bigints anyway, so probably will be not very useful\n    cmov: (a, b, c) => (c ? b : a),\n    toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n    fromBytes: (bytes) => {\n      if (bytes.length !== BYTES)\n        throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n      return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n    },\n  } as FpField);\n  return Object.freeze(f);\n}\n\nexport function FpSqrtOdd<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? root : Fp.neg(root);\n}\n\nexport function FpSqrtEven<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(\n  hash: string | Uint8Array,\n  groupOrder: bigint,\n  isLE = false\n): bigint {\n  hash = ensureBytes('privateHash', hash);\n  const hashLen = hash.length;\n  const minLen = nLength(groupOrder).nByteLength + 8;\n  if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n    throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n  const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n  return mod(num, groupOrder - _1n) + _1n;\n}\n\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder: bigint): number {\n  if (typeof fieldOrder !== 'bigint') throw new Error('field order must be bigint');\n  const bitLength = fieldOrder.toString(2).length;\n  return Math.ceil(bitLength / 8);\n}\n\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder: bigint): number {\n  const length = getFieldBytesLength(fieldOrder);\n  return length + Math.ceil(length / 2);\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key: Uint8Array, fieldOrder: bigint, isLE = false): Uint8Array {\n  const len = key.length;\n  const fieldLen = getFieldBytesLength(fieldOrder);\n  const minLen = getMinHashLength(fieldOrder);\n  // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n  if (len < 16 || len < minLen || len > 1024)\n    throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n  const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n  // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n  const reduced = mod(num, fieldOrder - _1n) + _1n;\n  return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assertHash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assertExists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assertExists(this);\n    assertBytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { IField, validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n\nexport type AffinePoint<T> = {\n  x: T;\n  y: T;\n} & { z?: never; t?: never };\n\nexport interface Group<T extends Group<T>> {\n  double(): T;\n  negate(): T;\n  add(other: T): T;\n  subtract(other: T): T;\n  equals(other: T): boolean;\n  multiply(scalar: bigint): T;\n}\n\nexport type GroupConstructor<T> = {\n  BASE: T;\n  ZERO: T;\n};\nexport type Mapper<T> = (i: T[]) => T[];\n\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF<T extends Group<T>>(c: GroupConstructor<T>, bits: number) {\n  const constTimeNegate = (condition: boolean, item: T): T => {\n    const neg = item.negate();\n    return condition ? neg : item;\n  };\n  const opts = (W: number) => {\n    const windows = Math.ceil(bits / W) + 1; // +1, because\n    const windowSize = 2 ** (W - 1); // -1 because we skip zero\n    return { windows, windowSize };\n  };\n  return {\n    constTimeNegate,\n    // non-const time multiplication ladder\n    unsafeLadder(elm: T, n: bigint) {\n      let p = c.ZERO;\n      let d: T = elm;\n      while (n > _0n) {\n        if (n & _1n) p = p.add(d);\n        d = d.double();\n        n >>= _1n;\n      }\n      return p;\n    },\n\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n     * - 𝑊 is the window size\n     * - 𝑛 is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(elm: T, W: number): Group<T>[] {\n      const { windows, windowSize } = opts(W);\n      const points: T[] = [];\n      let p: T = elm;\n      let base = p;\n      for (let window = 0; window < windows; window++) {\n        base = p;\n        points.push(base);\n        // =1, because we skip zero\n        for (let i = 1; i < windowSize; i++) {\n          base = base.add(p);\n          points.push(base);\n        }\n        p = base.double();\n      }\n      return points;\n    },\n\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T } {\n      // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n      // But need to carefully remove other checks before wNAF. ORDER == bits here\n      const { windows, windowSize } = opts(W);\n\n      let p = c.ZERO;\n      let f = c.BASE;\n\n      const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n      const maxNumber = 2 ** W;\n      const shiftBy = BigInt(W);\n\n      for (let window = 0; window < windows; window++) {\n        const offset = window * windowSize;\n        // Extract W bits.\n        let wbits = Number(n & mask);\n\n        // Shift number by W bits.\n        n >>= shiftBy;\n\n        // If the bits are bigger than max size, we'll split those.\n        // +224 => 256 - 32\n        if (wbits > windowSize) {\n          wbits -= maxNumber;\n          n += _1n;\n        }\n\n        // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n        // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n        // there is negate now: it is possible that negated element from low value\n        // would be the same as high element, which will create carry into next window.\n        // It's not obvious how this can fail, but still worth investigating later.\n\n        // Check if we're onto Zero point.\n        // Add random point inside current window to f.\n        const offset1 = offset;\n        const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n        const cond1 = window % 2 !== 0;\n        const cond2 = wbits < 0;\n        if (wbits === 0) {\n          // The most important part for const-time getPublicKey\n          f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n        } else {\n          p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n        }\n      }\n      // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n      // Even if the variable is still unused, there are some checks which will\n      // throw an exception, so compiler needs to prove they won't happen, which is hard.\n      // At this point there is a way to F be infinity-point even if p is not,\n      // which makes it less const-time: around 1 bigint multiply.\n      return { p, f };\n    },\n\n    wNAFCached(P: T, precomputesMap: Map<T, T[]>, n: bigint, transform: Mapper<T>): { p: T; f: T } {\n      // @ts-ignore\n      const W: number = P._WINDOW_SIZE || 1;\n      // Calculate precomputes on a first run, reuse them after\n      let comp = precomputesMap.get(P);\n      if (!comp) {\n        comp = this.precomputeWindow(P, W) as T[];\n        if (W !== 1) {\n          precomputesMap.set(P, transform(comp));\n        }\n      }\n      return this.wNAF(W, comp, n);\n    },\n  };\n}\n\n// Generic BasicCurve interface: works even for polynomial fields (BLS): P, n, h would be ok.\n// Though generator can be different (Fp2 / Fp6 for BLS).\nexport type BasicCurve<T> = {\n  Fp: IField<T>; // Field over which we'll do calculations (Fp)\n  n: bigint; // Curve order, total count of valid points in the field\n  nBitLength?: number; // bit length of curve order\n  nByteLength?: number; // byte length of curve order\n  h: bigint; // cofactor. we can assign default=1, but users will just ignore it w/o validation\n  hEff?: bigint; // Number to multiply to clear cofactor\n  Gx: T; // base point X coordinate\n  Gy: T; // base point Y coordinate\n  allowInfinityPoint?: boolean; // bls12-381 requires it. ZERO point is valid, but invalid pubkey\n};\n\nexport function validateBasic<FP, T>(curve: BasicCurve<FP> & T) {\n  validateField(curve.Fp);\n  validateObject(\n    curve,\n    {\n      n: 'bigint',\n      h: 'bigint',\n      Gx: 'field',\n      Gy: 'field',\n    },\n    {\n      nBitLength: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n    }\n  );\n  // Set defaults\n  return Object.freeze({\n    ...nLength(curve.n, curve.nBitLength),\n    ...curve,\n    ...{ p: curve.Fp.ORDER },\n  } as const);\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { CHash, Hex, PrivKey, ensureBytes } from './utils.js';\nimport { Group, GroupConstructor, wNAF, BasicCurve, validateBasic, AffinePoint } from './curve.js';\n\nexport type { AffinePoint };\ntype HmacFnSync = (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array;\ntype EndomorphismOpts = {\n  beta: bigint;\n  splitScalar: (k: bigint) => { k1neg: boolean; k1: bigint; k2neg: boolean; k2: bigint };\n};\nexport type BasicWCurve<T> = BasicCurve<T> & {\n  // Params: a, b\n  a: T;\n  b: T;\n\n  // Optional params\n  allowedPrivateKeyLengths?: readonly number[]; // for P521\n  wrapPrivateKey?: boolean; // bls12-381 requires mod(n) instead of rejecting keys >= n\n  endo?: EndomorphismOpts; // Endomorphism options for Koblitz curves\n  // When a cofactor != 1, there can be an effective methods to:\n  // 1. Determine whether a point is torsion-free\n  isTorsionFree?: (c: ProjConstructor<T>, point: ProjPointType<T>) => boolean;\n  // 2. Clear torsion component\n  clearCofactor?: (c: ProjConstructor<T>, point: ProjPointType<T>) => ProjPointType<T>;\n};\n\ntype Entropy = Hex | true;\nexport type SignOpts = { lowS?: boolean; extraEntropy?: Entropy; prehash?: boolean };\nexport type VerOpts = { lowS?: boolean; prehash?: boolean };\n\n/**\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance of nominative types in TypeScript and interfaces only check for shape, so it's hard to create unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * TODO: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n */\n\n// Instance for 3d XYZ points\nexport interface ProjPointType<T> extends Group<ProjPointType<T>> {\n  readonly px: T;\n  readonly py: T;\n  readonly pz: T;\n  get x(): T;\n  get y(): T;\n  multiply(scalar: bigint): ProjPointType<T>;\n  toAffine(iz?: T): AffinePoint<T>;\n  isTorsionFree(): boolean;\n  clearCofactor(): ProjPointType<T>;\n  assertValidity(): void;\n  hasEvenY(): boolean;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n\n  multiplyUnsafe(scalar: bigint): ProjPointType<T>;\n  multiplyAndAddUnsafe(Q: ProjPointType<T>, a: bigint, b: bigint): ProjPointType<T> | undefined;\n  _setWindowSize(windowSize: number): void;\n}\n// Static methods for 3d XYZ points\nexport interface ProjConstructor<T> extends GroupConstructor<ProjPointType<T>> {\n  new (x: T, y: T, z: T): ProjPointType<T>;\n  fromAffine(p: AffinePoint<T>): ProjPointType<T>;\n  fromHex(hex: Hex): ProjPointType<T>;\n  fromPrivateKey(privateKey: PrivKey): ProjPointType<T>;\n  normalizeZ(points: ProjPointType<T>[]): ProjPointType<T>[];\n}\n\nexport type CurvePointsType<T> = BasicWCurve<T> & {\n  // Bytes\n  fromBytes?: (bytes: Uint8Array) => AffinePoint<T>;\n  toBytes?: (c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => Uint8Array;\n};\n\nfunction validatePointOpts<T>(curve: CurvePointsType<T>) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      a: 'field',\n      b: 'field',\n    },\n    {\n      allowedPrivateKeyLengths: 'array',\n      wrapPrivateKey: 'boolean',\n      isTorsionFree: 'function',\n      clearCofactor: 'function',\n      allowInfinityPoint: 'boolean',\n      fromBytes: 'function',\n      toBytes: 'function',\n    }\n  );\n  const { endo, Fp, a } = opts;\n  if (endo) {\n    if (!Fp.eql(a, Fp.ZERO)) {\n      throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n    }\n    if (\n      typeof endo !== 'object' ||\n      typeof endo.beta !== 'bigint' ||\n      typeof endo.splitScalar !== 'function'\n    ) {\n      throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n    }\n  }\n  return Object.freeze({ ...opts } as const);\n}\n\nexport type CurvePointsRes<T> = {\n  ProjectivePoint: ProjConstructor<T>;\n  normPrivateKeyToScalar: (key: PrivKey) => bigint;\n  weierstrassEquation: (x: T) => T;\n  isWithinCurveOrder: (num: bigint) => boolean;\n};\n\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n  // asn.1 DER encoding utils\n  Err: class DERErr extends Error {\n    constructor(m = '') {\n      super(m);\n    }\n  },\n  _parseInt(data: Uint8Array): { d: bigint; l: Uint8Array } {\n    const { Err: E } = DER;\n    if (data.length < 2 || data[0] !== 0x02) throw new E('Invalid signature integer tag');\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) throw new E('Invalid signature integer: wrong length');\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    if (res[0] & 0b10000000) throw new E('Invalid signature integer: negative');\n    if (res[0] === 0x00 && !(res[1] & 0b10000000))\n      throw new E('Invalid signature integer: unnecessary leading zero');\n    return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n  },\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint } {\n    // parse DER signature\n    const { Err: E } = DER;\n    const data = typeof hex === 'string' ? h2b(hex) : hex;\n    if (!(data instanceof Uint8Array)) throw new Error('ui8a expected');\n    let l = data.length;\n    if (l < 2 || data[0] != 0x30) throw new E('Invalid signature tag');\n    if (data[1] !== l - 2) throw new E('Invalid signature: incorrect length');\n    const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n    const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n    if (rBytesLeft.length) throw new E('Invalid signature: left bytes after parsing');\n    return { r, s };\n  },\n  hexFromSig(sig: { r: bigint; s: bigint }): string {\n    // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n    const slice = (s: string): string => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n    const h = (num: number | bigint) => {\n      const hex = num.toString(16);\n      return hex.length & 1 ? `0${hex}` : hex;\n    };\n    const s = slice(h(sig.s));\n    const r = slice(h(sig.r));\n    const shl = s.length / 2;\n    const rhl = r.length / 2;\n    const sl = h(shl);\n    const rl = h(rhl);\n    return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n  },\n};\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n\nexport function weierstrassPoints<T>(opts: CurvePointsType<T>) {\n  const CURVE = validatePointOpts(opts);\n  const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n\n  const toBytes =\n    CURVE.toBytes ||\n    ((_c: ProjConstructor<T>, point: ProjPointType<T>, _isCompressed: boolean) => {\n      const a = point.toAffine();\n      return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n    });\n  const fromBytes =\n    CURVE.fromBytes ||\n    ((bytes: Uint8Array) => {\n      // const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n      const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n      const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n      return { x, y };\n    });\n\n  /**\n   * y² = x³ + ax + b: Short weierstrass curve formula\n   * @returns y²\n   */\n  function weierstrassEquation(x: T): T {\n    const { a, b } = CURVE;\n    const x2 = Fp.sqr(x); // x * x\n    const x3 = Fp.mul(x2, x); // x2 * x\n    return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n  }\n  // Validate whether the passed curve params are valid.\n  // We check if curve equation works for generator point.\n  // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n  // ProjectivePoint class has not been initialized yet.\n  if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n    throw new Error('bad generator point: equation left != right');\n\n  // Valid group elements reside in range 1..n-1\n  function isWithinCurveOrder(num: bigint): boolean {\n    return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n  }\n  function assertGE(num: bigint) {\n    if (!isWithinCurveOrder(num)) throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n  }\n  // Validates if priv key is valid and converts it to bigint.\n  // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n  function normPrivateKeyToScalar(key: PrivKey): bigint {\n    const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n    if (lengths && typeof key !== 'bigint') {\n      if (key instanceof Uint8Array) key = ut.bytesToHex(key);\n      // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n      if (typeof key !== 'string' || !lengths.includes(key.length)) throw new Error('Invalid key');\n      key = key.padStart(nByteLength * 2, '0');\n    }\n    let num: bigint;\n    try {\n      num =\n        typeof key === 'bigint'\n          ? key\n          : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n    } catch (error) {\n      throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n    }\n    if (wrapPrivateKey) num = mod.mod(num, n); // disabled by default, enabled for BLS\n    assertGE(num); // num in range [1..N-1]\n    return num;\n  }\n\n  const pointPrecomputes = new Map<Point, Point[]>();\n  function assertPrjPoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ProjectivePoint expected');\n  }\n  /**\n   * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n   * Default Point works in 2d / affine coordinates: (x, y)\n   * We're doing calculations in projective, because its operations don't require costly inversion.\n   */\n  class Point implements ProjPointType<T> {\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    static readonly ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n\n    constructor(readonly px: T, readonly py: T, readonly pz: T) {\n      if (px == null || !Fp.isValid(px)) throw new Error('x required');\n      if (py == null || !Fp.isValid(py)) throw new Error('y required');\n      if (pz == null || !Fp.isValid(pz)) throw new Error('z required');\n    }\n\n    // Does not validate if the point is on-curve.\n    // Use fromHex instead, or call assertValidity() later.\n    static fromAffine(p: AffinePoint<T>): Point {\n      const { x, y } = p || {};\n      if (!p || !Fp.isValid(x) || !Fp.isValid(y)) throw new Error('invalid affine point');\n      if (p instanceof Point) throw new Error('projective point not allowed');\n      const is0 = (i: T) => Fp.eql(i, Fp.ZERO);\n      // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n      if (is0(x) && is0(y)) return Point.ZERO;\n      return new Point(x, y, Fp.ONE);\n    }\n\n    get x(): T {\n      return this.toAffine().x;\n    }\n    get y(): T {\n      return this.toAffine().y;\n    }\n\n    /**\n     * Takes a bunch of Projective Points but executes only one\n     * inversion on all of them. Inversion is very slow operation,\n     * so this improves performance massively.\n     * Optimization: converts a list of projective points to a list of identical points with Z=1.\n     */\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = Fp.invertBatch(points.map((p) => p.pz));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    /**\n     * Converts hash string or Uint8Array to Point.\n     * @param hex short/long ECDSA hex\n     */\n    static fromHex(hex: Hex): Point {\n      const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n      P.assertValidity();\n      return P;\n    }\n\n    // Multiplies generator point by privateKey.\n    static fromPrivateKey(privateKey: PrivKey) {\n      return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n    }\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    _WINDOW_SIZE?: number;\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n\n    // A point on curve is valid if it conforms to equation.\n    assertValidity(): void {\n      if (this.is0()) {\n        // (0, 1, 0) aka ZERO is invalid in most contexts.\n        // In BLS, ZERO can be serialized, so we allow it.\n        // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n        if (CURVE.allowInfinityPoint && !Fp.is0(this.py)) return;\n        throw new Error('bad point: ZERO');\n      }\n      // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n      const { x, y } = this.toAffine();\n      // Check if x, y are valid field elements\n      if (!Fp.isValid(x) || !Fp.isValid(y)) throw new Error('bad point: x or y not FE');\n      const left = Fp.sqr(y); // y²\n      const right = weierstrassEquation(x); // x³ + ax + b\n      if (!Fp.eql(left, right)) throw new Error('bad point: equation left != right');\n      if (!this.isTorsionFree()) throw new Error('bad point: not in prime-order subgroup');\n    }\n    hasEvenY(): boolean {\n      const { y } = this.toAffine();\n      if (Fp.isOdd) return !Fp.isOdd(y);\n      throw new Error(\"Field doesn't support isOdd\");\n    }\n\n    /**\n     * Compare one point to another.\n     */\n    equals(other: Point): boolean {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n      const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n      return U1 && U2;\n    }\n\n    /**\n     * Flips point to one corresponding to (x, -y) in Affine coordinates.\n     */\n    negate(): Point {\n      return new Point(this.px, Fp.neg(this.py), this.pz);\n    }\n\n    // Renes-Costello-Batina exception-free doubling formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 3\n    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n    double() {\n      const { a, b } = CURVE;\n      const b3 = Fp.mul(b, _3n);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      let t0 = Fp.mul(X1, X1); // step 1\n      let t1 = Fp.mul(Y1, Y1);\n      let t2 = Fp.mul(Z1, Z1);\n      let t3 = Fp.mul(X1, Y1);\n      t3 = Fp.add(t3, t3); // step 5\n      Z3 = Fp.mul(X1, Z1);\n      Z3 = Fp.add(Z3, Z3);\n      X3 = Fp.mul(a, Z3);\n      Y3 = Fp.mul(b3, t2);\n      Y3 = Fp.add(X3, Y3); // step 10\n      X3 = Fp.sub(t1, Y3);\n      Y3 = Fp.add(t1, Y3);\n      Y3 = Fp.mul(X3, Y3);\n      X3 = Fp.mul(t3, X3);\n      Z3 = Fp.mul(b3, Z3); // step 15\n      t2 = Fp.mul(a, t2);\n      t3 = Fp.sub(t0, t2);\n      t3 = Fp.mul(a, t3);\n      t3 = Fp.add(t3, Z3);\n      Z3 = Fp.add(t0, t0); // step 20\n      t0 = Fp.add(Z3, t0);\n      t0 = Fp.add(t0, t2);\n      t0 = Fp.mul(t0, t3);\n      Y3 = Fp.add(Y3, t0);\n      t2 = Fp.mul(Y1, Z1); // step 25\n      t2 = Fp.add(t2, t2);\n      t0 = Fp.mul(t2, t3);\n      X3 = Fp.sub(X3, t0);\n      Z3 = Fp.mul(t2, t1);\n      Z3 = Fp.add(Z3, Z3); // step 30\n      Z3 = Fp.add(Z3, Z3);\n      return new Point(X3, Y3, Z3);\n    }\n\n    // Renes-Costello-Batina exception-free addition formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 1\n    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n    add(other: Point): Point {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      const a = CURVE.a;\n      const b3 = Fp.mul(CURVE.b, _3n);\n      let t0 = Fp.mul(X1, X2); // step 1\n      let t1 = Fp.mul(Y1, Y2);\n      let t2 = Fp.mul(Z1, Z2);\n      let t3 = Fp.add(X1, Y1);\n      let t4 = Fp.add(X2, Y2); // step 5\n      t3 = Fp.mul(t3, t4);\n      t4 = Fp.add(t0, t1);\n      t3 = Fp.sub(t3, t4);\n      t4 = Fp.add(X1, Z1);\n      let t5 = Fp.add(X2, Z2); // step 10\n      t4 = Fp.mul(t4, t5);\n      t5 = Fp.add(t0, t2);\n      t4 = Fp.sub(t4, t5);\n      t5 = Fp.add(Y1, Z1);\n      X3 = Fp.add(Y2, Z2); // step 15\n      t5 = Fp.mul(t5, X3);\n      X3 = Fp.add(t1, t2);\n      t5 = Fp.sub(t5, X3);\n      Z3 = Fp.mul(a, t4);\n      X3 = Fp.mul(b3, t2); // step 20\n      Z3 = Fp.add(X3, Z3);\n      X3 = Fp.sub(t1, Z3);\n      Z3 = Fp.add(t1, Z3);\n      Y3 = Fp.mul(X3, Z3);\n      t1 = Fp.add(t0, t0); // step 25\n      t1 = Fp.add(t1, t0);\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.mul(b3, t4);\n      t1 = Fp.add(t1, t2);\n      t2 = Fp.sub(t0, t2); // step 30\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.add(t4, t2);\n      t0 = Fp.mul(t1, t4);\n      Y3 = Fp.add(Y3, t0);\n      t0 = Fp.mul(t5, t4); // step 35\n      X3 = Fp.mul(t3, X3);\n      X3 = Fp.sub(X3, t0);\n      t0 = Fp.mul(t3, t1);\n      Z3 = Fp.mul(t5, Z3);\n      Z3 = Fp.add(Z3, t0); // step 40\n      return new Point(X3, Y3, Z3);\n    }\n\n    subtract(other: Point) {\n      return this.add(other.negate());\n    }\n\n    private is0() {\n      return this.equals(Point.ZERO);\n    }\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, pointPrecomputes, n, (comp: Point[]) => {\n        const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n        return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n      });\n    }\n\n    /**\n     * Non-constant-time multiplication. Uses double-and-add algorithm.\n     * It's faster, but should only be used when you don't care about\n     * an exposed private key e.g. sig verification, which works over *public* keys.\n     */\n    multiplyUnsafe(n: bigint): Point {\n      const I = Point.ZERO;\n      if (n === _0n) return I;\n      assertGE(n); // Will throw on 0\n      if (n === _1n) return this;\n      const { endo } = CURVE;\n      if (!endo) return wnaf.unsafeLadder(this, n);\n\n      // Apply endomorphism\n      let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n      let k1p = I;\n      let k2p = I;\n      let d: Point = this;\n      while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n) k1p = k1p.add(d);\n        if (k2 & _1n) k2p = k2p.add(d);\n        d = d.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n      }\n      if (k1neg) k1p = k1p.negate();\n      if (k2neg) k2p = k2p.negate();\n      k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n      return k1p.add(k2p);\n    }\n\n    /**\n     * Constant time multiplication.\n     * Uses wNAF method. Windowed method may be 10% faster,\n     * but takes 2x longer to generate and consumes 2x memory.\n     * Uses precomputes when available.\n     * Uses endomorphism for Koblitz curves.\n     * @param scalar by which the point would be multiplied\n     * @returns New point\n     */\n    multiply(scalar: bigint): Point {\n      assertGE(scalar);\n      let n = scalar;\n      let point: Point, fake: Point; // Fake point is used to const-time mult\n      const { endo } = CURVE;\n      if (endo) {\n        const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let { p: k1p, f: f1p } = this.wNAF(k1);\n        let { p: k2p, f: f2p } = this.wNAF(k2);\n        k1p = wnaf.constTimeNegate(k1neg, k1p);\n        k2p = wnaf.constTimeNegate(k2neg, k2p);\n        k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n        point = k1p.add(k2p);\n        fake = f1p.add(f2p);\n      } else {\n        const { p, f } = this.wNAF(n);\n        point = p;\n        fake = f;\n      }\n      // Normalize `z` for both points, but return only real one\n      return Point.normalizeZ([point, fake])[0];\n    }\n\n    /**\n     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n     * Not using Strauss-Shamir trick: precomputation tables are faster.\n     * The trick could be useful if both P and Q are not G (not in our case).\n     * @returns non-zero affine point\n     */\n    multiplyAndAddUnsafe(Q: Point, a: bigint, b: bigint): Point | undefined {\n      const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n      const mul = (\n        P: Point,\n        a: bigint // Select faster multiply() method\n      ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n      const sum = mul(this, a).add(mul(Q, b));\n      return sum.is0() ? undefined : sum;\n    }\n\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) ∋ (x=x/z, y=y/z)\n    toAffine(iz?: T): AffinePoint<T> {\n      const { px: x, py: y, pz: z } = this;\n      const is0 = this.is0();\n      // If invZ was 0, we return zero point. However we still want to execute\n      // all operations, so we replace invZ with a random number, 1.\n      if (iz == null) iz = is0 ? Fp.ONE : Fp.inv(z);\n      const ax = Fp.mul(x, iz);\n      const ay = Fp.mul(y, iz);\n      const zz = Fp.mul(z, iz);\n      if (is0) return { x: Fp.ZERO, y: Fp.ZERO };\n      if (!Fp.eql(zz, Fp.ONE)) throw new Error('invZ was invalid');\n      return { x: ax, y: ay };\n    }\n    isTorsionFree(): boolean {\n      const { h: cofactor, isTorsionFree } = CURVE;\n      if (cofactor === _1n) return true; // No subgroups, always torsion-free\n      if (isTorsionFree) return isTorsionFree(Point, this);\n      throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n    }\n    clearCofactor(): Point {\n      const { h: cofactor, clearCofactor } = CURVE;\n      if (cofactor === _1n) return this; // Fast-path\n      if (clearCofactor) return clearCofactor(Point, this) as Point;\n      return this.multiplyUnsafe(CURVE.h);\n    }\n\n    toRawBytes(isCompressed = true): Uint8Array {\n      this.assertValidity();\n      return toBytes(Point, this, isCompressed);\n    }\n\n    toHex(isCompressed = true): string {\n      return ut.bytesToHex(this.toRawBytes(isCompressed));\n    }\n  }\n  const _bits = CURVE.nBitLength;\n  const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n  // Validate if generator point is on curve\n  return {\n    CURVE,\n    ProjectivePoint: Point as ProjConstructor<T>,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  };\n}\n\n// Instance\nexport interface SignatureType {\n  readonly r: bigint;\n  readonly s: bigint;\n  readonly recovery?: number;\n  assertValidity(): void;\n  addRecoveryBit(recovery: number): RecoveredSignatureType;\n  hasHighS(): boolean;\n  normalizeS(): SignatureType;\n  recoverPublicKey(msgHash: Hex): ProjPointType<bigint>;\n  toCompactRawBytes(): Uint8Array;\n  toCompactHex(): string;\n  // DER-encoded\n  toDERRawBytes(isCompressed?: boolean): Uint8Array;\n  toDERHex(isCompressed?: boolean): string;\n}\nexport type RecoveredSignatureType = SignatureType & {\n  readonly recovery: number;\n};\n// Static methods\nexport type SignatureConstructor = {\n  new (r: bigint, s: bigint): SignatureType;\n  fromCompact(hex: Hex): SignatureType;\n  fromDER(hex: Hex): SignatureType;\n};\ntype SignatureLike = { r: bigint; s: bigint };\n\nexport type PubKey = Hex | ProjPointType<bigint>;\n\nexport type CurveType = BasicWCurve<bigint> & {\n  hash: CHash; // CHash not FHash because we need outputLen for DRBG\n  hmac: HmacFnSync;\n  randomBytes: (bytesLength?: number) => Uint8Array;\n  lowS?: boolean;\n  bits2int?: (bytes: Uint8Array) => bigint;\n  bits2int_modN?: (bytes: Uint8Array) => bigint;\n};\n\nfunction validateOpts(curve: CurveType) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      hash: 'hash',\n      hmac: 'function',\n      randomBytes: 'function',\n    },\n    {\n      bits2int: 'function',\n      bits2int_modN: 'function',\n      lowS: 'boolean',\n    }\n  );\n  return Object.freeze({ lowS: true, ...opts } as const);\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: PrivKey, isCompressed?: boolean) => Uint8Array;\n  getSharedSecret: (privateA: PrivKey, publicB: Hex, isCompressed?: boolean) => Uint8Array;\n  sign: (msgHash: Hex, privKey: PrivKey, opts?: SignOpts) => RecoveredSignatureType;\n  verify: (signature: Hex | SignatureLike, msgHash: Hex, publicKey: Hex, opts?: VerOpts) => boolean;\n  ProjectivePoint: ProjConstructor<bigint>;\n  Signature: SignatureConstructor;\n  utils: {\n    normPrivateKeyToScalar: (key: PrivKey) => bigint;\n    isValidPrivateKey(privateKey: PrivKey): boolean;\n    randomPrivateKey: () => Uint8Array;\n    precompute: (windowSize?: number, point?: ProjPointType<bigint>) => ProjPointType<bigint>;\n  };\n};\n\nexport function weierstrass(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const { Fp, n: CURVE_ORDER } = CURVE;\n  const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n  const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n\n  function isValidFieldElement(num: bigint): boolean {\n    return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n  }\n  function modN(a: bigint) {\n    return mod.mod(a, CURVE_ORDER);\n  }\n  function invN(a: bigint) {\n    return mod.invert(a, CURVE_ORDER);\n  }\n\n  const {\n    ProjectivePoint: Point,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  } = weierstrassPoints({\n    ...CURVE,\n    toBytes(_c, point, isCompressed: boolean): Uint8Array {\n      const a = point.toAffine();\n      const x = Fp.toBytes(a.x);\n      const cat = ut.concatBytes;\n      if (isCompressed) {\n        return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n      } else {\n        return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n      }\n    },\n    fromBytes(bytes: Uint8Array) {\n      const len = bytes.length;\n      const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // this.assertValidity() is done inside of fromHex\n      if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n        const x = ut.bytesToNumberBE(tail);\n        if (!isValidFieldElement(x)) throw new Error('Point is not on curve');\n        const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n        let y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n        const isYOdd = (y & _1n) === _1n;\n        // ECDSA\n        const isHeadOdd = (head & 1) === 1;\n        if (isHeadOdd !== isYOdd) y = Fp.neg(y);\n        return { x, y };\n      } else if (len === uncompressedLen && head === 0x04) {\n        const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n        const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n        return { x, y };\n      } else {\n        throw new Error(\n          `Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`\n        );\n      }\n    },\n  });\n  const numToNByteStr = (num: bigint): string =>\n    ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n\n  function isBiggerThanHalfOrder(number: bigint) {\n    const HALF = CURVE_ORDER >> _1n;\n    return number > HALF;\n  }\n\n  function normalizeS(s: bigint) {\n    return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n  }\n  // slice bytes num\n  const slcNum = (b: Uint8Array, from: number, to: number) => ut.bytesToNumberBE(b.slice(from, to));\n\n  /**\n   * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n   */\n  class Signature implements SignatureType {\n    constructor(readonly r: bigint, readonly s: bigint, readonly recovery?: number) {\n      this.assertValidity();\n    }\n\n    // pair (bytes of r, bytes of s)\n    static fromCompact(hex: Hex) {\n      const l = CURVE.nByteLength;\n      hex = ensureBytes('compactSignature', hex, l * 2);\n      return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n    }\n\n    // DER encoded ECDSA signature\n    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n    static fromDER(hex: Hex) {\n      const { r, s } = DER.toSig(ensureBytes('DER', hex));\n      return new Signature(r, s);\n    }\n\n    assertValidity(): void {\n      // can use assertGE here\n      if (!isWithinCurveOrder(this.r)) throw new Error('r must be 0 < r < CURVE.n');\n      if (!isWithinCurveOrder(this.s)) throw new Error('s must be 0 < s < CURVE.n');\n    }\n\n    addRecoveryBit(recovery: number): RecoveredSignature {\n      return new Signature(this.r, this.s, recovery) as RecoveredSignature;\n    }\n\n    recoverPublicKey(msgHash: Hex): typeof Point.BASE {\n      const { r, s, recovery: rec } = this;\n      const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n      if (rec == null || ![0, 1, 2, 3].includes(rec)) throw new Error('recovery id invalid');\n      const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n      if (radj >= Fp.ORDER) throw new Error('recovery id 2 or 3 invalid');\n      const prefix = (rec & 1) === 0 ? '02' : '03';\n      const R = Point.fromHex(prefix + numToNByteStr(radj));\n      const ir = invN(radj); // r^-1\n      const u1 = modN(-h * ir); // -hr^-1\n      const u2 = modN(s * ir); // sr^-1\n      const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n      if (!Q) throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n      Q.assertValidity();\n      return Q;\n    }\n\n    // Signatures should be low-s, to prevent malleability.\n    hasHighS(): boolean {\n      return isBiggerThanHalfOrder(this.s);\n    }\n\n    normalizeS() {\n      return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n    }\n\n    // DER-encoded\n    toDERRawBytes() {\n      return ut.hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n      return DER.hexFromSig({ r: this.r, s: this.s });\n    }\n\n    // padded bytes of r, then padded bytes of s\n    toCompactRawBytes() {\n      return ut.hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n      return numToNByteStr(this.r) + numToNByteStr(this.s);\n    }\n  }\n  type RecoveredSignature = Signature & { recovery: number };\n\n  const utils = {\n    isValidPrivateKey(privateKey: PrivKey) {\n      try {\n        normPrivateKeyToScalar(privateKey);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    },\n    normPrivateKeyToScalar: normPrivateKeyToScalar,\n\n    /**\n     * Produces cryptographically secure private key from random of size\n     * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n     */\n    randomPrivateKey: (): Uint8Array => {\n      const length = mod.getMinHashLength(CURVE.n);\n      return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n    },\n\n    /**\n     * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n     * Allows to massively speed-up `point.multiply(scalar)`.\n     * @returns cached point\n     * @example\n     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n     * fast.multiply(privKey); // much faster ECDH now\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n      return point;\n    },\n  };\n\n  /**\n   * Computes public key for a private key. Checks for validity of the private key.\n   * @param privateKey private key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns Public key, full when isCompressed=false; short when isCompressed=true\n   */\n  function getPublicKey(privateKey: PrivKey, isCompressed = true): Uint8Array {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n  }\n\n  /**\n   * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n   */\n  function isProbPub(item: PrivKey | PubKey): boolean {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && (item as Hex).length;\n    if (arr) return len === compressedLen || len === uncompressedLen;\n    if (str) return len === 2 * compressedLen || len === 2 * uncompressedLen;\n    if (item instanceof Point) return true;\n    return false;\n  }\n\n  /**\n   * ECDH (Elliptic Curve Diffie Hellman).\n   * Computes shared public key from private key and public key.\n   * Checks: 1) private key validity 2) shared key is on-curve.\n   * Does NOT hash the result.\n   * @param privateA private key\n   * @param publicB different public key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns shared public key\n   */\n  function getSharedSecret(privateA: PrivKey, publicB: Hex, isCompressed = true): Uint8Array {\n    if (isProbPub(privateA)) throw new Error('first arg must be private key');\n    if (!isProbPub(publicB)) throw new Error('second arg must be public key');\n    const b = Point.fromHex(publicB); // check for being on-curve\n    return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n  }\n\n  // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n  // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n  // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n  // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n  const bits2int =\n    CURVE.bits2int ||\n    function (bytes: Uint8Array): bigint {\n      // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n      // for some cases, since bytes.length * 8 is not actual bitLength.\n      const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n      const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n      return delta > 0 ? num >> BigInt(delta) : num;\n    };\n  const bits2int_modN =\n    CURVE.bits2int_modN ||\n    function (bytes: Uint8Array): bigint {\n      return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n    };\n  // NOTE: pads output with zero as per spec\n  const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n  /**\n   * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n   */\n  function int2octets(num: bigint): Uint8Array {\n    if (typeof num !== 'bigint') throw new Error('bigint expected');\n    if (!(_0n <= num && num < ORDER_MASK))\n      throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n    // works with order, can have different size than numToField!\n    return ut.numberToBytesBE(num, CURVE.nByteLength);\n  }\n\n  // Steps A, D of RFC6979 3.2\n  // Creates RFC6979 seed; converts msg/privKey to numbers.\n  // Used only in sign, not in verify.\n  // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n  // Also it can be bigger for P224 + SHA256\n  function prepSig(msgHash: Hex, privateKey: PrivKey, opts = defaultSigOpts) {\n    if (['recovered', 'canonical'].some((k) => k in opts))\n      throw new Error('sign() legacy options not supported');\n    const { hash, randomBytes } = CURVE;\n    let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n    if (lowS == null) lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n    msgHash = ensureBytes('msgHash', msgHash);\n    if (prehash) msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n\n    // We can't later call bits2octets, since nested bits2int is broken for curves\n    // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n    // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n    const h1int = bits2int_modN(msgHash);\n    const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n    const seedArgs = [int2octets(d), int2octets(h1int)];\n    // extraEntropy. RFC6979 3.6: additional k' (optional).\n    if (ent != null) {\n      // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n      const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n      seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n    }\n    const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n    const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n    // Converts signature params into point w r/s, checks result for validity.\n    function k2sig(kBytes: Uint8Array): RecoveredSignature | undefined {\n      // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n      const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n      if (!isWithinCurveOrder(k)) return; // Important: all mod() calls here must be done over N\n      const ik = invN(k); // k^-1 mod n\n      const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n      const r = modN(q.x); // r = q.x mod n\n      if (r === _0n) return;\n      // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n      // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n      // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n      const s = modN(ik * modN(m + r * d)); // Not using blinding here\n      if (s === _0n) return;\n      let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n      let normS = s;\n      if (lowS && isBiggerThanHalfOrder(s)) {\n        normS = normalizeS(s); // if lowS was passed, ensure s is always\n        recovery ^= 1; // // in the bottom half of N\n      }\n      return new Signature(r, normS, recovery) as RecoveredSignature; // use normS, not s\n    }\n    return { seed, k2sig };\n  }\n  const defaultSigOpts: SignOpts = { lowS: CURVE.lowS, prehash: false };\n  const defaultVerOpts: VerOpts = { lowS: CURVE.lowS, prehash: false };\n\n  /**\n   * Signs message hash with a private key.\n   * ```\n   * sign(m, d, k) where\n   *   (x, y) = G × k\n   *   r = x mod n\n   *   s = (m + dr)/k mod n\n   * ```\n   * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n   * @param privKey private key\n   * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n   * @returns signature with recovery param\n   */\n  function sign(msgHash: Hex, privKey: PrivKey, opts = defaultSigOpts): RecoveredSignature {\n    const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n    const C = CURVE;\n    const drbg = ut.createHmacDrbg<RecoveredSignature>(C.hash.outputLen, C.nByteLength, C.hmac);\n    return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n  }\n\n  // Enable precomputes. Slows down first publicKey computation by 20ms.\n  Point.BASE._setWindowSize(8);\n  // utils.precompute(8, ProjectivePoint.BASE)\n\n  /**\n   * Verifies a signature against message hash and public key.\n   * Rejects lowS signatures by default: to override,\n   * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n   *\n   * ```\n   * verify(r, s, h, P) where\n   *   U1 = hs^-1 mod n\n   *   U2 = rs^-1 mod n\n   *   R = U1⋅G - U2⋅P\n   *   mod(R.x, n) == r\n   * ```\n   */\n  function verify(\n    signature: Hex | SignatureLike,\n    msgHash: Hex,\n    publicKey: Hex,\n    opts = defaultVerOpts\n  ): boolean {\n    const sg = signature;\n    msgHash = ensureBytes('msgHash', msgHash);\n    publicKey = ensureBytes('publicKey', publicKey);\n    if ('strict' in opts) throw new Error('options.strict was renamed to lowS');\n    const { lowS, prehash } = opts;\n\n    let _sig: Signature | undefined = undefined;\n    let P: ProjPointType<bigint>;\n    try {\n      if (typeof sg === 'string' || sg instanceof Uint8Array) {\n        // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n        // Since DER can also be 2*nByteLength bytes, we check for it first.\n        try {\n          _sig = Signature.fromDER(sg);\n        } catch (derError) {\n          if (!(derError instanceof DER.Err)) throw derError;\n          _sig = Signature.fromCompact(sg);\n        }\n      } else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n        const { r, s } = sg;\n        _sig = new Signature(r, s);\n      } else {\n        throw new Error('PARSE');\n      }\n      P = Point.fromHex(publicKey);\n    } catch (error) {\n      if ((error as Error).message === 'PARSE')\n        throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n      return false;\n    }\n    if (lowS && _sig.hasHighS()) return false;\n    if (prehash) msgHash = CURVE.hash(msgHash);\n    const { r, s } = _sig;\n    const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n    const is = invN(s); // s^-1\n    const u1 = modN(h * is); // u1 = hs^-1 mod n\n    const u2 = modN(r * is); // u2 = rs^-1 mod n\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n    if (!R) return false;\n    const v = modN(R.x);\n    return v === r;\n  }\n  return {\n    CURVE,\n    getPublicKey,\n    getSharedSecret,\n    sign,\n    verify,\n    ProjectivePoint: Point,\n    Signature,\n    utils,\n  };\n}\n\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio<T>(Fp: mod.IField<T>, Z: T) {\n  // Generic implementation\n  const q = Fp.ORDER;\n  let l = _0n;\n  for (let o = q - _1n; o % _2n === _0n; o /= _2n) l += _1n;\n  const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n  // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n  // 2n ** c1 == 2n << (c1-1)\n  const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n  const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n  const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n  const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n  const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n  const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n  const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n  const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n  let sqrtRatio = (u: T, v: T): { isValid: boolean; value: T } => {\n    let tv1 = c6; // 1. tv1 = c6\n    let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n    let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n    tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n    let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n    tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n    tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n    tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n    tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n    let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n    tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n    let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n    tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n    tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n    tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n    tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n    // 17. for i in (c1, c1 - 1, ..., 2):\n    for (let i = c1; i > _1n; i--) {\n      let tv5 = i - _2n; // 18.    tv5 = i - 2\n      tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n      let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n      const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n      tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n      tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n      tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n      tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n      tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n    }\n    return { isValid: isQR, value: tv3 };\n  };\n  if (Fp.ORDER % _4n === _3n) {\n    // sqrt_ratio_3mod4(u, v)\n    const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n    const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n    sqrtRatio = (u: T, v: T) => {\n      let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n      const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n      tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n      let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n      y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n      const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n      const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n      const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n      let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n      return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n    };\n  }\n  // No curves uses that\n  // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n  return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU<T>(\n  Fp: mod.IField<T>,\n  opts: {\n    A: T;\n    B: T;\n    Z: T;\n  }\n) {\n  mod.validateField(Fp);\n  if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n    throw new Error('mapToCurveSimpleSWU: invalid opts');\n  const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n  if (!Fp.isOdd) throw new Error('Fp.isOdd is not implemented!');\n  // Input: u, an element of F.\n  // Output: (x, y), a point on E.\n  return (u: T): { x: T; y: T } => {\n    // prettier-ignore\n    let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n    tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n    tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n    tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n    tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n    tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n    tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n    tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n    tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n    tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n    tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n    tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n    tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n    tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n    tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n    tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n    x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n    const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n    y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n    y = Fp.mul(y, value); // 20.   y = y * y1\n    x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n    y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n    const e1 = Fp.isOdd!(u) === Fp.isOdd!(y); // 23.  e1 = sgn0(u) == sgn0(y)\n    y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n    x = Fp.div(x, tv4); // 25.   x = x / tv4\n    return { x, y };\n  };\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass, CurveType } from './abstract/weierstrass.js';\nimport { CHash } from './abstract/utils.js';\n\n// connects noble-curves to noble-hashes\nexport function getHash(hash: CHash) {\n  return {\n    hash,\n    hmac: (key: Uint8Array, ...msgs: Uint8Array[]) => hmac(hash, key, concatBytes(...msgs)),\n    randomBytes,\n  };\n}\n// Same API as @noble/hashes, with ability to create curve with custom hash\ntype CurveDef = Readonly<Omit<CurveType, 'hash' | 'hmac' | 'randomBytes'>>;\nexport function createCurve(curveDef: CurveDef, defHash: CHash) {\n  const create = (hash: CHash) => weierstrass({ ...curveDef, ...getHash(hash) });\n  return Object.freeze({ ...create(defHash), create });\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { ProjPointType as PointType, mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport type { Hex, PrivKey } from './abstract/utils.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\n\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a: bigint, b: bigint) => (a + b / _2n) / b;\n\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y: bigint): bigint {\n  const P = secp256k1P;\n  // prettier-ignore\n  const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n  // prettier-ignore\n  const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n  const b2 = (y * y * y) % P; // x^3, 11\n  const b3 = (b2 * b2 * y) % P; // x^7\n  const b6 = (pow2(b3, _3n, P) * b3) % P;\n  const b9 = (pow2(b6, _3n, P) * b3) % P;\n  const b11 = (pow2(b9, _2n, P) * b2) % P;\n  const b22 = (pow2(b11, _11n, P) * b11) % P;\n  const b44 = (pow2(b22, _22n, P) * b22) % P;\n  const b88 = (pow2(b44, _44n, P) * b44) % P;\n  const b176 = (pow2(b88, _88n, P) * b88) % P;\n  const b220 = (pow2(b176, _44n, P) * b44) % P;\n  const b223 = (pow2(b220, _3n, P) * b3) % P;\n  const t1 = (pow2(b223, _23n, P) * b22) % P;\n  const t2 = (pow2(t1, _6n, P) * b2) % P;\n  const root = pow2(t2, _2n, P);\n  if (!Fp.eql(Fp.sqr(root), y)) throw new Error('Cannot find square root');\n  return root;\n}\n\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\n\nexport const secp256k1 = createCurve(\n  {\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n      beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n      splitScalar: (k: bigint) => {\n        const n = secp256k1N;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg) k1 = n - k1;\n        if (k2neg) k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n          throw new Error('splitScalar: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n      },\n    },\n  },\n  sha256\n);\n\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES: { [tag: string]: Uint8Array } = {};\nfunction taggedHash(tag: string, ...messages: Uint8Array[]): Uint8Array {\n  let tagP = TAGGED_HASH_PREFIXES[tag];\n  if (tagP === undefined) {\n    const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n    tagP = concatBytes(tagH, tagH);\n    TAGGED_HASH_PREFIXES[tag] = tagP;\n  }\n  return sha256(concatBytes(tagP, ...messages));\n}\n\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point: PointType<bigint>) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n: bigint) => numberToBytesBE(n, 32);\nconst modP = (x: bigint) => mod(x, secp256k1P);\nconst modN = (x: bigint) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q: PointType<bigint>, a: bigint, b: bigint) =>\n  Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv: PrivKey) {\n  let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n  let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n  const scalar = p.hasEvenY() ? d_ : modN(-d_);\n  return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x: bigint): PointType<bigint> {\n  if (!fe(x)) throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n  const xx = modP(x * x);\n  const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n  let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n  if (y % _2n !== _0n) y = modP(-y); // Return the unique point P such that x(P) = x and\n  const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n  p.assertValidity();\n  return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args: Uint8Array[]): bigint {\n  return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey: Hex): Uint8Array {\n  return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(\n  message: Hex,\n  privateKey: PrivKey,\n  auxRand: Hex = randomBytes(32)\n): Uint8Array {\n  const m = ensureBytes('message', message);\n  const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n  const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n  const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n  const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n  const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n  if (k_ === _0n) throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n  const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n  const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n  const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n  sig.set(rx, 0);\n  sig.set(numTo32b(modN(k + e * d)), 32);\n  // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n  if (!schnorrVerify(sig, m, px)) throw new Error('sign: Invalid signature produced');\n  return sig;\n}\n\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature: Hex, message: Hex, publicKey: Hex): boolean {\n  const sig = ensureBytes('signature', signature, 64);\n  const m = ensureBytes('message', message);\n  const pub = ensureBytes('publicKey', publicKey, 32);\n  try {\n    const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n    const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n    if (!fe(r)) return false;\n    const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n    if (!ge(s)) return false;\n    const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n    const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n    if (!R || !R.hasEvenY() || R.toAffine().x !== r) return false; // -eP == (n-e)P\n    return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n  } catch (error) {\n    return false;\n  }\n}\n\nexport const schnorr = /* @__PURE__ */ (() => ({\n  getPublicKey: schnorrGetPublicKey,\n  sign: schnorrSign,\n  verify: schnorrVerify,\n  utils: {\n    randomPrivateKey: secp256k1.utils.randomPrivateKey,\n    lift_x,\n    pointToBytes,\n    numberToBytesBE,\n    bytesToNumberBE,\n    taggedHash,\n    mod,\n  },\n}))();\n\nconst isoMap = /* @__PURE__ */ (() =>\n  isogenyMap(\n    Fp,\n    [\n      // xNum\n      [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n      ],\n      // xDen\n      [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n      // yNum\n      [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n      ],\n      // yDen\n      [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n    ].map((i) => i.map((j) => BigInt(j))) as [bigint[], bigint[], bigint[], bigint[]]\n  ))();\nconst mapSWU = /* @__PURE__ */ (() =>\n  mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n  }))();\nconst htf = /* @__PURE__ */ (() =>\n  createHasher(\n    secp256k1.ProjectivePoint,\n    (scalars: bigint[]) => {\n      const { x, y } = mapSWU(Fp.create(scalars[0]));\n      return isoMap(x, y);\n    },\n    {\n      DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n      encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n      p: Fp.ORDER,\n      m: 1,\n      k: 128,\n      expand: 'xmd',\n      hash: sha256,\n    }\n  ))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n","/**\n *  Add details about signing here.\n *\n *  @_subsection: api/crypto:Signing  [about-signing]\n */\n\nimport { secp256k1 } from \"@noble/curves/secp256k1\";\n\nimport {\n    concat, dataLength, getBytes, getBytesCopy, hexlify, toBeHex,\n    assertArgument\n} from \"../utils/index.js\";\n\nimport { Signature } from \"./signature.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\nimport type { SignatureLike } from \"./index.js\";\n\n\n/**\n *  A **SigningKey** provides high-level access to the elliptic curve\n *  cryptography (ECC) operations and key management.\n */\nexport class SigningKey {\n    #privateKey: string;\n\n    /**\n     *  Creates a new **SigningKey** for %%privateKey%%.\n     */\n    constructor(privateKey: BytesLike) {\n        assertArgument(dataLength(privateKey) === 32, \"invalid private key\", \"privateKey\", \"[REDACTED]\");\n        this.#privateKey = hexlify(privateKey);\n    }\n\n    /**\n     *  The private key.\n     */\n    get privateKey(): string { return this.#privateKey; }\n\n    /**\n     *  The uncompressed public key.\n     *\n     * This will always begin with the prefix ``0x04`` and be 132\n     * characters long (the ``0x`` prefix and 130 hexadecimal nibbles).\n     */\n    get publicKey(): string { return SigningKey.computePublicKey(this.#privateKey); }\n\n    /**\n     *  The compressed public key.\n     *\n     *  This will always begin with either the prefix ``0x02`` or ``0x03``\n     *  and be 68 characters long (the ``0x`` prefix and 33 hexadecimal\n     *  nibbles)\n     */\n    get compressedPublicKey(): string { return SigningKey.computePublicKey(this.#privateKey, true); }\n\n    /**\n     *  Return the signature of the signed %%digest%%.\n     */\n    sign(digest: BytesLike): Signature {\n        assertArgument(dataLength(digest) === 32, \"invalid digest length\", \"digest\", digest);\n\n        const sig = secp256k1.sign(getBytesCopy(digest), getBytesCopy(this.#privateKey), {\n            lowS: true\n        });\n\n        return Signature.from({\n            r: toBeHex(sig.r, 32),\n            s: toBeHex(sig.s, 32),\n            v: (sig.recovery ? 0x1c: 0x1b)\n        });\n    }\n\n    /**\n     *  Returns the [[link-wiki-ecdh]] shared secret between this\n     *  private key and the %%other%% key.\n     *\n     *  The %%other%% key may be any type of key, a raw public key,\n     *  a compressed/uncompressed pubic key or aprivate key.\n     *\n     *  Best practice is usually to use a cryptographic hash on the\n     *  returned value before using it as a symetric secret.\n     *\n     *  @example:\n     *    sign1 = new SigningKey(id(\"some-secret-1\"))\n     *    sign2 = new SigningKey(id(\"some-secret-2\"))\n     *\n     *    // Notice that privA.computeSharedSecret(pubB)...\n     *    sign1.computeSharedSecret(sign2.publicKey)\n     *    //_result:\n     *\n     *    // ...is equal to privB.computeSharedSecret(pubA).\n     *    sign2.computeSharedSecret(sign1.publicKey)\n     *    //_result:\n     */\n    computeSharedSecret(other: BytesLike): string {\n        const pubKey = SigningKey.computePublicKey(other);\n        return hexlify(secp256k1.getSharedSecret(getBytesCopy(this.#privateKey), getBytes(pubKey), false));\n    }\n\n    /**\n     *  Compute the public key for %%key%%, optionally %%compressed%%.\n     *\n     *  The %%key%% may be any type of key, a raw public key, a\n     *  compressed/uncompressed public key or private key.\n     *\n     *  @example:\n     *    sign = new SigningKey(id(\"some-secret\"));\n     *\n     *    // Compute the uncompressed public key for a private key\n     *    SigningKey.computePublicKey(sign.privateKey)\n     *    //_result:\n     *\n     *    // Compute the compressed public key for a private key\n     *    SigningKey.computePublicKey(sign.privateKey, true)\n     *    //_result:\n     *\n     *    // Compute the uncompressed public key\n     *    SigningKey.computePublicKey(sign.publicKey, false);\n     *    //_result:\n     *\n     *    // Compute the Compressed a public key\n     *    SigningKey.computePublicKey(sign.publicKey, true);\n     *    //_result:\n     */\n    static computePublicKey(key: BytesLike, compressed?: boolean): string {\n        let bytes = getBytes(key, \"key\");\n\n        // private key\n        if (bytes.length === 32) {\n            const pubKey = secp256k1.getPublicKey(bytes, !!compressed);\n            return hexlify(pubKey);\n        }\n\n        // raw public key; use uncompressed key with 0x04 prefix\n        if (bytes.length === 64) {\n            const pub = new Uint8Array(65);\n            pub[0] = 0x04;\n            pub.set(bytes, 1);\n            bytes = pub;\n        }\n\n        const point = secp256k1.ProjectivePoint.fromHex(bytes);\n        return hexlify(point.toRawBytes(compressed));\n    }\n\n    /**\n     *  Returns the public key for the private key which produced the\n     *  %%signature%% for the given %%digest%%.\n     *\n     *  @example:\n     *    key = new SigningKey(id(\"some-secret\"))\n     *    digest = id(\"hello world\")\n     *    sig = key.sign(digest)\n     *\n     *    // Notice the signer public key...\n     *    key.publicKey\n     *    //_result:\n     *\n     *    // ...is equal to the recovered public key\n     *    SigningKey.recoverPublicKey(digest, sig)\n     *    //_result:\n     *\n     */\n    static recoverPublicKey(digest: BytesLike, signature: SignatureLike): string {\n        assertArgument(dataLength(digest) === 32, \"invalid digest length\", \"digest\", digest);\n\n        const sig = Signature.from(signature);\n\n        let secpSig = secp256k1.Signature.fromCompact(getBytesCopy(concat([ sig.r, sig.s ])));\n        secpSig = secpSig.addRecoveryBit(sig.yParity);\n\n        const pubKey = secpSig.recoverPublicKey(getBytesCopy(digest));\n        assertArgument(pubKey != null, \"invalid signautre for digest\", \"signature\", signature);\n\n        return \"0x\" + pubKey.toHex(false);\n    }\n\n    /**\n     *  Returns the point resulting from adding the ellipic curve points\n     *  %%p0%% and %%p1%%.\n     *\n     *  This is not a common function most developers should require, but\n     *  can be useful for certain privacy-specific techniques.\n     *\n     *  For example, it is used by [[HDNodeWallet]] to compute child\n     *  addresses from parent public keys and chain codes.\n     */\n    static addPoints(p0: BytesLike, p1: BytesLike, compressed?: boolean): string {\n        const pub0 = secp256k1.ProjectivePoint.fromHex(SigningKey.computePublicKey(p0).substring(2));\n        const pub1 = secp256k1.ProjectivePoint.fromHex(SigningKey.computePublicKey(p1).substring(2));\n        return \"0x\" + pub0.add(pub1).toHex(!!compressed)\n    }\n}\n\n","//See: https://github.com/ethereum/wiki/wiki/RLP\n\nimport { hexlify } from \"./data.js\";\nimport { assert, assertArgument } from \"./errors.js\";\nimport { getBytes } from \"./data.js\";\n\nimport type { BytesLike, RlpStructuredData } from \"./index.js\";\n\n\nfunction hexlifyByte(value: number): string {\n    let result = value.toString(16);\n    while (result.length < 2) { result = \"0\" + result; }\n    return \"0x\" + result;\n}\n\nfunction unarrayifyInteger(data: Uint8Array, offset: number, length: number): number {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\n\ntype Decoded = {\n    result: any;\n    consumed: number;\n};\n\nfunction _decodeChildren(data: Uint8Array, offset: number, childOffset: number, length: number): Decoded {\n    const result: Array<any> = [];\n\n    while (childOffset < offset + 1 + length) {\n        const decoded = _decode(data, childOffset);\n\n        result.push(decoded.result);\n\n        childOffset += decoded.consumed;\n        assert(childOffset <= offset + 1 + length, \"child data too short\", \"BUFFER_OVERRUN\", {\n            buffer: data, length, offset\n        });\n    }\n\n    return {consumed: (1 + length), result: result};\n}\n\n// returns { consumed: number, result: Object }\nfunction _decode(data: Uint8Array, offset: number): { consumed: number, result: any } {\n    assert(data.length !== 0, \"data too short\", \"BUFFER_OVERRUN\", {\n        buffer: data, length: 0, offset: 1\n    });\n\n    const checkOffset = (offset: number) => {\n        assert(offset <= data.length, \"data short segment too short\", \"BUFFER_OVERRUN\", {\n            buffer: data, length: data.length, offset\n        });\n    };\n\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        const lengthLength = data[offset] - 0xf7;\n        checkOffset(offset + 1 + lengthLength);\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        checkOffset(offset + 1 + lengthLength + length);\n\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n\n    } else if (data[offset] >= 0xc0) {\n        const length = data[offset] - 0xc0;\n        checkOffset(offset + 1 + length);\n\n        return _decodeChildren(data, offset, offset + 1, length);\n\n    } else if (data[offset] >= 0xb8) {\n        const lengthLength = data[offset] - 0xb7;\n        checkOffset(offset + 1 + lengthLength);\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        checkOffset(offset + 1 + lengthLength + length);\n\n        const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result }\n\n    } else if (data[offset] >= 0x80) {\n        const length = data[offset] - 0x80;\n        checkOffset(offset + 1 + length);\n\n        const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result }\n    }\n\n    return { consumed: 1, result: hexlifyByte(data[offset]) };\n}\n\n/**\n *  Decodes %%data%% into the structured data it represents.\n */\nexport function decodeRlp(_data: BytesLike): RlpStructuredData {\n    const data = getBytes(_data, \"data\");\n    const decoded = _decode(data, 0);\n    assertArgument(decoded.consumed === data.length, \"unexpected junk after rlp payload\", \"data\", _data);\n    return decoded.result;\n}\n\n","//See: https://github.com/ethereum/wiki/wiki/RLP\n\nimport { getBytes } from \"./data.js\";\n\nimport type { RlpStructuredDataish } from \"./rlp.js\";\n\n\nfunction arrayifyInteger(value: number): Array<number> {\n    const result: Array<number> = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\n\nfunction _encode(object: Array<any> | string | Uint8Array): Array<number> {\n    if (Array.isArray(object)) {\n        let payload: Array<number> = [];\n        object.forEach(function(child) {\n            payload = payload.concat(_encode(child));\n        });\n\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length)\n            return payload;\n        }\n\n        const length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n\n        return length.concat(payload);\n\n    }\n\n    const data: Array<number> = Array.prototype.slice.call(getBytes(object, \"object\"));\n\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n\n    } else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n\n    const length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n\n    return length.concat(data);\n}\n\nconst nibbles = \"0123456789abcdef\";\n\n/**\n *  Encodes %%object%% as an RLP-encoded [[DataHexString]].\n */\nexport function encodeRlp(object: RlpStructuredDataish): string {\n    let result = \"0x\";\n    for (const v of _encode(object)) {\n        result += nibbles[v >> 4];\n        result += nibbles[v & 0xf];\n    }\n    return result;\n}\n","import { getAddress } from \"../address/index.js\";\nimport { keccak256, SigningKey } from \"../crypto/index.js\";\n\nimport type { SignatureLike } from \"../crypto/index.js\";\nimport type { BytesLike } from \"../utils/index.js\";\n\n/**\n *  Returns the address for the %%key%%.\n *\n *  The key may be any standard form of public key or a private key.\n */\nexport function computeAddress(key: string | SigningKey): string {\n    let pubkey: string;\n    if (typeof(key) === \"string\") {\n        pubkey = SigningKey.computePublicKey(key, false);\n    } else {\n        pubkey = key.publicKey;\n    }\n    return getAddress(keccak256(\"0x\" + pubkey.substring(4)).substring(26));\n}\n\n/**\n *  Returns the recovered address for the private key that was\n *  used to sign %%digest%% that resulted in %%signature%%.\n */\nexport function recoverAddress(digest: BytesLike, signature: SignatureLike): string {\n    return computeAddress(SigningKey.recoverPublicKey(digest, signature));\n}\n","\nimport { getAddress } from \"../address/index.js\";\nimport { keccak256, Signature, SigningKey } from \"../crypto/index.js\";\nimport {\n    concat, decodeRlp, encodeRlp, getBytes, getBigInt, getNumber, hexlify,\n    assert, assertArgument, toBeArray, zeroPadValue\n} from \"../utils/index.js\";\n\nimport { accessListify } from \"./accesslist.js\";\nimport { recoverAddress } from \"./address.js\";\n\nimport type { BigNumberish, BytesLike } from \"../utils/index.js\";\nimport type { SignatureLike } from \"../crypto/index.js\";\n\nimport type { AccessList, AccessListish } from \"./index.js\";\n\n\nconst BN_0 = BigInt(0);\nconst BN_2 = BigInt(2);\nconst BN_27 = BigInt(27)\nconst BN_28 = BigInt(28)\nconst BN_35 = BigInt(35);\nconst BN_MAX_UINT = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\n/**\n *  A **TransactionLike** is an object which is appropriate as a loose\n *  input for many operations which will populate missing properties of\n *  a transaction.\n */\nexport interface TransactionLike<A = string> {\n    /**\n     *  The type.\n     */\n    type?: null | number;\n\n    /**\n     *  The recipient address or ``null`` for an ``init`` transaction.\n     */\n    to?: null | A;\n\n    /**\n     *  The sender.\n     */\n    from?: null | A;\n\n    /**\n     *  The nonce.\n     */\n    nonce?: null | number;\n\n    /**\n     *  The maximum amount of gas that can be used.\n     */\n    gasLimit?: null | BigNumberish;\n\n    /**\n     *  The gas price for legacy and berlin transactions.\n     */\n    gasPrice?: null | BigNumberish;\n\n    /**\n     *  The maximum priority fee per gas for london transactions.\n     */\n    maxPriorityFeePerGas?: null | BigNumberish;\n\n    /**\n     *  The maximum total fee per gas for london transactions.\n     */\n    maxFeePerGas?: null | BigNumberish;\n\n    /**\n     *  The data.\n     */\n    data?: null | string;\n\n    /**\n     *  The value (in wei) to send.\n     */\n    value?: null | BigNumberish;\n\n    /**\n     *  The chain ID the transaction is valid on.\n     */\n    chainId?: null | BigNumberish;\n\n    /**\n     *  The transaction hash.\n     */\n    hash?: null | string;\n\n    /**\n     *  The signature provided by the sender.\n     */\n    signature?: null | SignatureLike;\n\n    /**\n     *  The access list for berlin and london transactions.\n     */\n    accessList?: null | AccessListish;\n}\n\nfunction handleAddress(value: string): null | string {\n    if (value === \"0x\") { return null; }\n    return getAddress(value);\n}\n\nfunction handleAccessList(value: any, param: string): AccessList {\n    try {\n        return accessListify(value);\n    } catch (error: any) {\n        assertArgument(false, error.message, param, value);\n    }\n}\n\nfunction handleNumber(_value: string, param: string): number {\n    if (_value === \"0x\") { return 0; }\n    return getNumber(_value, param);\n}\n\nfunction handleUint(_value: string, param: string): bigint {\n    if (_value === \"0x\") { return BN_0; }\n    const value = getBigInt(_value, param);\n    assertArgument(value <= BN_MAX_UINT, \"value exceeds uint size\", param, value);\n    return value;\n}\n\nfunction formatNumber(_value: BigNumberish, name: string): Uint8Array {\n    const value = getBigInt(_value, \"value\");\n    const result = toBeArray(value);\n    assertArgument(result.length <= 32, `value too large`, `tx.${ name }`, value);\n    return result;\n}\n\nfunction formatAccessList(value: AccessListish): Array<[ string, Array<string> ]> {\n    return accessListify(value).map((set) => [ set.address, set.storageKeys ]);\n}\n\nfunction _parseLegacy(data: Uint8Array): TransactionLike {\n    const fields: any = decodeRlp(data);\n\n    assertArgument(Array.isArray(fields) && (fields.length === 9 || fields.length === 6),\n        \"invalid field count for legacy transaction\", \"data\", data);\n\n    const tx: TransactionLike = {\n        type:     0,\n        nonce:    handleNumber(fields[0], \"nonce\"),\n        gasPrice: handleUint(fields[1], \"gasPrice\"),\n        gasLimit: handleUint(fields[2], \"gasLimit\"),\n        to:       handleAddress(fields[3]),\n        value:    handleUint(fields[4], \"value\"),\n        data:     hexlify(fields[5]),\n        chainId:  BN_0\n    };\n\n    // Legacy unsigned transaction\n    if (fields.length === 6) { return tx; }\n\n    const v = handleUint(fields[6], \"v\");\n    const r = handleUint(fields[7], \"r\");\n    const s = handleUint(fields[8], \"s\");\n\n    if (r === BN_0 && s === BN_0) {\n        // EIP-155 unsigned transaction\n        tx.chainId = v;\n\n    } else {\n\n        // Compute the EIP-155 chain ID (or 0 for legacy)\n        let chainId = (v - BN_35) / BN_2;\n        if (chainId < BN_0) { chainId = BN_0; }\n        tx.chainId = chainId\n\n        // Signed Legacy Transaction\n        assertArgument(chainId !== BN_0 || (v === BN_27 || v === BN_28), \"non-canonical legacy v\", \"v\", fields[6]);\n\n        tx.signature = Signature.from({\n            r: zeroPadValue(fields[7], 32),\n            s: zeroPadValue(fields[8], 32),\n            v\n        });\n\n        tx.hash = keccak256(data);\n    }\n\n    return tx;\n}\n\nfunction _serializeLegacy(tx: Transaction, sig?: Signature): string {\n    const fields: Array<any> = [\n        formatNumber(tx.nonce || 0, \"nonce\"),\n        formatNumber(tx.gasPrice || 0, \"gasPrice\"),\n        formatNumber(tx.gasLimit || 0, \"gasLimit\"),\n        ((tx.to != null) ? getAddress(tx.to): \"0x\"),\n        formatNumber(tx.value || 0, \"value\"),\n        (tx.data || \"0x\"),\n    ];\n\n    let chainId = BN_0;\n    if (tx.chainId != BN_0) {\n        // A chainId was provided; if non-zero we'll use EIP-155\n        chainId = getBigInt(tx.chainId, \"tx.chainId\");\n\n        // We have a chainId in the tx and an EIP-155 v in the signature,\n        // make sure they agree with each other\n        assertArgument(!sig || sig.networkV == null || sig.legacyChainId === chainId,\n             \"tx.chainId/sig.v mismatch\", \"sig\", sig);\n\n    } else if (tx.signature) {\n        // No explicit chainId, but EIP-155 have a derived implicit chainId\n        const legacy = tx.signature.legacyChainId;\n        if (legacy != null) { chainId = legacy; }\n    }\n\n    // Requesting an unsigned transaction\n    if (!sig) {\n        // We have an EIP-155 transaction (chainId was specified and non-zero)\n        if (chainId !== BN_0) {\n            fields.push(toBeArray(chainId));\n            fields.push(\"0x\");\n            fields.push(\"0x\");\n        }\n\n        return encodeRlp(fields);\n    }\n\n    // @TODO: We should probably check that tx.signature, chainId, and sig\n    //        match but that logic could break existing code, so schedule\n    //        this for the next major bump.\n\n    // Compute the EIP-155 v\n    let v = BigInt(27 + sig.yParity);\n    if (chainId !== BN_0) {\n        v = Signature.getChainIdV(chainId, sig.v);\n    } else if (BigInt(sig.v) !== v) {\n        assertArgument(false, \"tx.chainId/sig.v mismatch\", \"sig\", sig);\n    }\n\n    // Add the signature\n    fields.push(toBeArray(v));\n    fields.push(toBeArray(sig.r));\n    fields.push(toBeArray(sig.s));\n\n    return encodeRlp(fields);\n}\n\nfunction _parseEipSignature(tx: TransactionLike, fields: Array<string>): void {\n    let yParity: number;\n    try {\n        yParity = handleNumber(fields[0], \"yParity\");\n        if (yParity !== 0 && yParity !== 1) { throw new Error(\"bad yParity\"); }\n    } catch (error) {\n        assertArgument(false, \"invalid yParity\", \"yParity\", fields[0]);\n    }\n\n    const r = zeroPadValue(fields[1], 32);\n    const s = zeroPadValue(fields[2], 32);\n\n    const signature = Signature.from({ r, s, yParity });\n    tx.signature = signature;\n}\n\nfunction _parseEip1559(data: Uint8Array): TransactionLike {\n    const fields: any = decodeRlp(getBytes(data).slice(1));\n\n    assertArgument(Array.isArray(fields) && (fields.length === 9 || fields.length === 12),\n        \"invalid field count for transaction type: 2\", \"data\", hexlify(data));\n\n    const maxPriorityFeePerGas = handleUint(fields[2], \"maxPriorityFeePerGas\");\n    const maxFeePerGas = handleUint(fields[3], \"maxFeePerGas\");\n    const tx: TransactionLike = {\n        type:                  2,\n        chainId:               handleUint(fields[0], \"chainId\"),\n        nonce:                 handleNumber(fields[1], \"nonce\"),\n        maxPriorityFeePerGas:  maxPriorityFeePerGas,\n        maxFeePerGas:          maxFeePerGas,\n        gasPrice:              null,\n        gasLimit:              handleUint(fields[4], \"gasLimit\"),\n        to:                    handleAddress(fields[5]),\n        value:                 handleUint(fields[6], \"value\"),\n        data:                  hexlify(fields[7]),\n        accessList:            handleAccessList(fields[8], \"accessList\"),\n    };\n\n    // Unsigned EIP-1559 Transaction\n    if (fields.length === 9) { return tx; }\n\n    tx.hash = keccak256(data);\n\n    _parseEipSignature(tx, fields.slice(9));\n\n    return tx;\n}\n\nfunction _serializeEip1559(tx: TransactionLike, sig?: Signature): string {\n    const fields: Array<any> = [\n        formatNumber(tx.chainId || 0, \"chainId\"),\n        formatNumber(tx.nonce || 0, \"nonce\"),\n        formatNumber(tx.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(tx.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(tx.gasLimit || 0, \"gasLimit\"),\n        ((tx.to != null) ? getAddress(tx.to): \"0x\"),\n        formatNumber(tx.value || 0, \"value\"),\n        (tx.data || \"0x\"),\n        (formatAccessList(tx.accessList || []))\n    ];\n\n    if (sig) {\n        fields.push(formatNumber(sig.yParity, \"yParity\"));\n        fields.push(toBeArray(sig.r));\n        fields.push(toBeArray(sig.s));\n    }\n\n    return concat([ \"0x02\", encodeRlp(fields)]);\n}\n\nfunction _parseEip2930(data: Uint8Array): TransactionLike {\n    const fields: any = decodeRlp(getBytes(data).slice(1));\n\n    assertArgument(Array.isArray(fields) && (fields.length === 8 || fields.length === 11),\n        \"invalid field count for transaction type: 1\", \"data\", hexlify(data));\n\n    const tx: TransactionLike = {\n        type:       1,\n        chainId:    handleUint(fields[0], \"chainId\"),\n        nonce:      handleNumber(fields[1], \"nonce\"),\n        gasPrice:   handleUint(fields[2], \"gasPrice\"),\n        gasLimit:   handleUint(fields[3], \"gasLimit\"),\n        to:         handleAddress(fields[4]),\n        value:      handleUint(fields[5], \"value\"),\n        data:       hexlify(fields[6]),\n        accessList: handleAccessList(fields[7], \"accessList\")\n    };\n\n    // Unsigned EIP-2930 Transaction\n    if (fields.length === 8) { return tx; }\n\n    tx.hash = keccak256(data);\n\n    _parseEipSignature(tx, fields.slice(8));\n\n    return tx;\n}\n\nfunction _serializeEip2930(tx: TransactionLike, sig?: Signature): string {\n    const fields: any = [\n        formatNumber(tx.chainId || 0, \"chainId\"),\n        formatNumber(tx.nonce || 0, \"nonce\"),\n        formatNumber(tx.gasPrice || 0, \"gasPrice\"),\n        formatNumber(tx.gasLimit || 0, \"gasLimit\"),\n        ((tx.to != null) ? getAddress(tx.to): \"0x\"),\n        formatNumber(tx.value || 0, \"value\"),\n        (tx.data || \"0x\"),\n        (formatAccessList(tx.accessList || []))\n    ];\n\n    if (sig) {\n        fields.push(formatNumber(sig.yParity, \"recoveryParam\"));\n        fields.push(toBeArray(sig.r));\n        fields.push(toBeArray(sig.s));\n    }\n\n    return concat([ \"0x01\", encodeRlp(fields)]);\n}\n\n/**\n *  A **Transaction** describes an operation to be executed on\n *  Ethereum by an Externally Owned Account (EOA). It includes\n *  who (the [[to]] address), what (the [[data]]) and how much (the\n *  [[value]] in ether) the operation should entail.\n *\n *  @example:\n *    tx = new Transaction()\n *    //_result:\n *\n *    tx.data = \"0x1234\";\n *    //_result:\n */\nexport class Transaction implements TransactionLike<string> {\n    #type: null | number;\n    #to: null | string;\n    #data: string;\n    #nonce: number;\n    #gasLimit: bigint;\n    #gasPrice: null | bigint;\n    #maxPriorityFeePerGas: null | bigint;\n    #maxFeePerGas: null | bigint;\n    #value: bigint;\n    #chainId: bigint;\n    #sig: null | Signature;\n    #accessList: null | AccessList;\n\n    /**\n     *  The transaction type.\n     *\n     *  If null, the type will be automatically inferred based on\n     *  explicit properties.\n     */\n    get type(): null | number { return this.#type; }\n    set type(value: null | number | string) {\n        switch (value) {\n            case null:\n                this.#type = null;\n                break;\n            case 0: case \"legacy\":\n                this.#type = 0;\n                break;\n            case 1: case \"berlin\": case \"eip-2930\":\n                this.#type = 1;\n                break;\n            case 2: case \"london\": case \"eip-1559\":\n                this.#type = 2;\n                break;\n            default:\n                assertArgument(false, \"unsupported transaction type\", \"type\", value);\n        }\n    }\n\n    /**\n     *  The name of the transaction type.\n     */\n    get typeName(): null | string {\n        switch (this.type) {\n            case 0: return \"legacy\";\n            case 1: return \"eip-2930\";\n            case 2: return \"eip-1559\";\n        }\n\n        return null;\n    }\n\n    /**\n     *  The ``to`` address for the transaction or ``null`` if the\n     *  transaction is an ``init`` transaction.\n     */\n    get to(): null | string { return this.#to; }\n    set to(value: null | string) {\n        this.#to = (value == null) ? null: getAddress(value);\n    }\n\n    /**\n     *  The transaction nonce.\n     */\n    get nonce(): number { return this.#nonce; }\n    set nonce(value: BigNumberish) { this.#nonce = getNumber(value, \"value\"); }\n\n    /**\n     *  The gas limit.\n     */\n    get gasLimit(): bigint { return this.#gasLimit; }\n    set gasLimit(value: BigNumberish) { this.#gasLimit = getBigInt(value); }\n\n    /**\n     *  The gas price.\n     *\n     *  On legacy networks this defines the fee that will be paid. On\n     *  EIP-1559 networks, this should be ``null``.\n     */\n    get gasPrice(): null | bigint {\n        const value = this.#gasPrice;\n        if (value == null && (this.type === 0 || this.type === 1)) { return BN_0; }\n        return value;\n    }\n    set gasPrice(value: null | BigNumberish) {\n        this.#gasPrice = (value == null) ? null: getBigInt(value, \"gasPrice\");\n    }\n\n    /**\n     *  The maximum priority fee per unit of gas to pay. On legacy\n     *  networks this should be ``null``.\n     */\n    get maxPriorityFeePerGas(): null | bigint {\n        const value = this.#maxPriorityFeePerGas;\n        if (value == null) {\n            if (this.type === 2) { return BN_0; }\n            return null;\n        }\n        return value;\n    }\n    set maxPriorityFeePerGas(value: null | BigNumberish) {\n        this.#maxPriorityFeePerGas = (value == null) ? null: getBigInt(value, \"maxPriorityFeePerGas\");\n    }\n\n    /**\n     *  The maximum total fee per unit of gas to pay. On legacy\n     *  networks this should be ``null``.\n     */\n    get maxFeePerGas(): null | bigint {\n        const value = this.#maxFeePerGas;\n        if (value == null) {\n            if (this.type === 2) { return BN_0; }\n            return null;\n        }\n        return value;\n    }\n    set maxFeePerGas(value: null | BigNumberish) {\n        this.#maxFeePerGas = (value == null) ? null: getBigInt(value, \"maxFeePerGas\");\n    }\n\n    /**\n     *  The transaction data. For ``init`` transactions this is the\n     *  deployment code.\n     */\n    get data(): string { return this.#data; }\n    set data(value: BytesLike) { this.#data = hexlify(value); }\n\n    /**\n     *  The amount of ether (in wei) to send in this transactions.\n     */\n    get value(): bigint { return this.#value; }\n    set value(value: BigNumberish) {\n        this.#value = getBigInt(value, \"value\");\n    }\n\n    /**\n     *  The chain ID this transaction is valid on.\n     */\n    get chainId(): bigint { return this.#chainId; }\n    set chainId(value: BigNumberish) { this.#chainId = getBigInt(value); }\n\n    /**\n     *  If signed, the signature for this transaction.\n     */\n    get signature(): null | Signature { return this.#sig || null; }\n    set signature(value: null | SignatureLike) {\n        this.#sig = (value == null) ? null: Signature.from(value);\n    }\n\n    /**\n     *  The access list.\n     *\n     *  An access list permits discounted (but pre-paid) access to\n     *  bytecode and state variable access within contract execution.\n     */\n    get accessList(): null | AccessList {\n        const value = this.#accessList || null;\n        if (value == null) {\n            if (this.type === 1 || this.type === 2) { return [ ]; }\n            return null;\n        }\n        return value;\n    }\n    set accessList(value: null | AccessListish) {\n        this.#accessList = (value == null) ? null: accessListify(value);\n    }\n\n    /**\n     *  Creates a new Transaction with default values.\n     */\n    constructor() {\n        this.#type = null;\n        this.#to = null;\n        this.#nonce = 0;\n        this.#gasLimit = BigInt(0);\n        this.#gasPrice = null;\n        this.#maxPriorityFeePerGas = null;\n        this.#maxFeePerGas = null;\n        this.#data = \"0x\";\n        this.#value = BigInt(0);\n        this.#chainId = BigInt(0);\n        this.#sig = null;\n        this.#accessList = null;\n    }\n\n    /**\n     *  The transaction hash, if signed. Otherwise, ``null``.\n     */\n    get hash(): null | string {\n        if (this.signature == null) { return null; }\n        return keccak256(this.serialized);\n    }\n\n    /**\n     *  The pre-image hash of this transaction.\n     *\n     *  This is the digest that a [[Signer]] must sign to authorize\n     *  this transaction.\n     */\n    get unsignedHash(): string {\n        return keccak256(this.unsignedSerialized);\n    }\n\n    /**\n     *  The sending address, if signed. Otherwise, ``null``.\n     */\n    get from(): null | string {\n        if (this.signature == null) { return null; }\n        return recoverAddress(this.unsignedHash, this.signature);\n    }\n\n    /**\n     *  The public key of the sender, if signed. Otherwise, ``null``.\n     */\n    get fromPublicKey(): null | string {\n        if (this.signature == null) { return null; }\n        return SigningKey.recoverPublicKey(this.unsignedHash, this.signature);\n    }\n\n    /**\n     *  Returns true if signed.\n     *\n     *  This provides a Type Guard that properties requiring a signed\n     *  transaction are non-null.\n     */\n    isSigned(): this is (Transaction & { type: number, typeName: string, from: string, signature: Signature }) {\n    //isSigned(): this is SignedTransaction {\n        return this.signature != null;\n    }\n\n    /**\n     *  The serialized transaction.\n     *\n     *  This throws if the transaction is unsigned. For the pre-image,\n     *  use [[unsignedSerialized]].\n     */\n    get serialized(): string {\n        assert(this.signature != null, \"cannot serialize unsigned transaction; maybe you meant .unsignedSerialized\", \"UNSUPPORTED_OPERATION\", { operation: \".serialized\"});\n\n        switch (this.inferType()) {\n            case 0:\n                return _serializeLegacy(this, this.signature);\n            case 1:\n                return _serializeEip2930(this, this.signature);\n            case 2:\n                return _serializeEip1559(this, this.signature);\n        }\n\n        assert(false, \"unsupported transaction type\", \"UNSUPPORTED_OPERATION\", { operation: \".serialized\" });\n    }\n\n    /**\n     *  The transaction pre-image.\n     *\n     *  The hash of this is the digest which needs to be signed to\n     *  authorize this transaction.\n     */\n    get unsignedSerialized(): string {\n        switch (this.inferType()) {\n            case 0:\n                return _serializeLegacy(this);\n            case 1:\n                return _serializeEip2930(this);\n            case 2:\n                return _serializeEip1559(this);\n        }\n\n        assert(false, \"unsupported transaction type\", \"UNSUPPORTED_OPERATION\", { operation: \".unsignedSerialized\" });\n    }\n\n    /**\n     *  Return the most \"likely\" type; currently the highest\n     *  supported transaction type.\n     */\n    inferType(): number {\n        return <number>(this.inferTypes().pop());\n    }\n\n    /**\n     *  Validates the explicit properties and returns a list of compatible\n     *  transaction types.\n     */\n    inferTypes(): Array<number> {\n\n        // Checks that there are no conflicting properties set\n        const hasGasPrice = this.gasPrice != null;\n        const hasFee = (this.maxFeePerGas != null || this.maxPriorityFeePerGas != null);\n        const hasAccessList = (this.accessList != null);\n\n        //if (hasGasPrice && hasFee) {\n        //    throw new Error(\"transaction cannot have gasPrice and maxFeePerGas\");\n        //}\n\n        if (this.maxFeePerGas != null && this.maxPriorityFeePerGas != null) {\n            assert(this.maxFeePerGas >= this.maxPriorityFeePerGas, \"priorityFee cannot be more than maxFee\", \"BAD_DATA\", { value: this });\n        }\n\n        //if (this.type === 2 && hasGasPrice) {\n        //    throw new Error(\"eip-1559 transaction cannot have gasPrice\");\n        //}\n\n        assert(!hasFee || (this.type !== 0 && this.type !== 1), \"transaction type cannot have maxFeePerGas or maxPriorityFeePerGas\", \"BAD_DATA\", { value: this });\n        assert(this.type !== 0 || !hasAccessList, \"legacy transaction cannot have accessList\", \"BAD_DATA\", { value: this })\n\n        const types: Array<number> = [ ];\n\n        // Explicit type\n        if (this.type != null) {\n            types.push(this.type);\n\n        } else {\n            if (hasFee) {\n                types.push(2);\n            } else if (hasGasPrice) {\n                types.push(1);\n                if (!hasAccessList) { types.push(0); }\n            } else if (hasAccessList) {\n                types.push(1);\n                types.push(2);\n            } else {\n                types.push(0);\n                types.push(1);\n                types.push(2);\n            }\n        }\n\n        types.sort();\n\n        return types;\n    }\n\n    /**\n     *  Returns true if this transaction is a legacy transaction (i.e.\n     *  ``type === 0``).\n     *\n     *  This provides a Type Guard that the related properties are\n     *  non-null.\n     */\n    isLegacy(): this is (Transaction & { type: 0, gasPrice: bigint }) {\n        return (this.type === 0);\n    }\n\n    /**\n     *  Returns true if this transaction is berlin hardform transaction (i.e.\n     *  ``type === 1``).\n     *\n     *  This provides a Type Guard that the related properties are\n     *  non-null.\n     */\n    isBerlin(): this is (Transaction & { type: 1, gasPrice: bigint, accessList: AccessList }) {\n        return (this.type === 1);\n    }\n\n    /**\n     *  Returns true if this transaction is london hardform transaction (i.e.\n     *  ``type === 2``).\n     *\n     *  This provides a Type Guard that the related properties are\n     *  non-null.\n     */\n    isLondon(): this is (Transaction & { type: 2, accessList: AccessList, maxFeePerGas: bigint, maxPriorityFeePerGas: bigint}) {\n        return (this.type === 2);\n    }\n\n    /**\n     *  Create a copy of this transaciton.\n     */\n    clone(): Transaction {\n        return Transaction.from(this);\n    }\n\n    /**\n     *  Return a JSON-friendly object.\n     */\n    toJSON(): any {\n        const s = (v: null | bigint) => {\n            if (v == null) { return null; }\n            return v.toString();\n        };\n\n        return {\n            type: this.type,\n            to: this.to,\n//            from: this.from,\n            data: this.data,\n            nonce: this.nonce,\n            gasLimit: s(this.gasLimit),\n            gasPrice: s(this.gasPrice),\n            maxPriorityFeePerGas: s(this.maxPriorityFeePerGas),\n            maxFeePerGas: s(this.maxFeePerGas),\n            value: s(this.value),\n            chainId: s(this.chainId),\n            sig: this.signature ? this.signature.toJSON(): null,\n            accessList: this.accessList\n        };\n    }\n\n    /**\n     *  Create a **Transaction** from a serialized transaction or a\n     *  Transaction-like object.\n     */\n    static from(tx?: string | TransactionLike<string>): Transaction {\n        if (tx == null) { return new Transaction(); }\n\n        if (typeof(tx) === \"string\") {\n            const payload = getBytes(tx);\n\n            if (payload[0] >= 0x7f) { // @TODO: > vs >= ??\n                return Transaction.from(_parseLegacy(payload));\n            }\n\n            switch(payload[0]) {\n                case 1: return Transaction.from(_parseEip2930(payload));\n                case 2: return Transaction.from(_parseEip1559(payload));\n            }\n            assert(false, \"unsupported transaction type\", \"UNSUPPORTED_OPERATION\", { operation: \"from\" });\n        }\n\n        const result = new Transaction();\n        if (tx.type != null) { result.type = tx.type; }\n        if (tx.to != null) { result.to = tx.to; }\n        if (tx.nonce != null) { result.nonce = tx.nonce; }\n        if (tx.gasLimit != null) { result.gasLimit = tx.gasLimit; }\n        if (tx.gasPrice != null) { result.gasPrice = tx.gasPrice; }\n        if (tx.maxPriorityFeePerGas != null) { result.maxPriorityFeePerGas = tx.maxPriorityFeePerGas; }\n        if (tx.maxFeePerGas != null) { result.maxFeePerGas = tx.maxFeePerGas; }\n        if (tx.data != null) { result.data = tx.data; }\n        if (tx.value != null) { result.value = tx.value; }\n        if (tx.chainId != null) { result.chainId = tx.chainId; }\n        if (tx.signature != null) { result.signature = Signature.from(tx.signature); }\n        if (tx.accessList != null) { result.accessList = tx.accessList; }\n\n        if (tx.hash != null) {\n            assertArgument(result.isSigned(), \"unsigned transaction cannot define hash\", \"tx\", tx);\n            assertArgument(result.hash === tx.hash, \"hash mismatch\", \"tx\", tx);\n        }\n\n        if (tx.from != null) {\n            assertArgument(result.isSigned(), \"unsigned transaction cannot define from\", \"tx\", tx);\n            assertArgument(result.from.toLowerCase() === (tx.from || \"\").toLowerCase(), \"from mismatch\", \"tx\", tx);\n        }\n\n        return result;\n    }\n}\n","import classCheckPrivateStaticAccess from \"./classCheckPrivateStaticAccess.js\";\nexport default function _classStaticPrivateMethodGet(receiver, classConstructor, method) {\n  classCheckPrivateStaticAccess(receiver, classConstructor);\n  return method;\n}","export default function _classCheckPrivateStaticAccess(receiver, classConstructor) {\n  if (receiver !== classConstructor) {\n    throw new TypeError(\"Private static access of wrong provenance\");\n  }\n}","/**\n *  The [Base58 Encoding](link-base58) scheme allows a **numeric** value\n *  to be encoded as a compact string using a radix of 58 using only\n *  alpha-numeric characters. Confusingly similar characters are omitted\n *  (i.e. ``\"l0O\"``).\n *\n *  Note that Base58 encodes a **numeric** value, not arbitrary bytes,\n *  since any zero-bytes on the left would get removed. To mitigate this\n *  issue most schemes that use Base58 choose specific high-order values\n *  to ensure non-zero prefixes.\n *\n *  @_subsection: api/utils:Base58 Encoding [about-base58]\n */\n\nimport { getBytes } from \"./data.js\";\nimport { assertArgument } from \"./errors.js\";\nimport { toBigInt } from \"./maths.js\";\n\nimport type { BytesLike } from \"./index.js\";\n\n\nconst Alphabet = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\nlet Lookup: null | Record<string, bigint> = null;\n\nfunction getAlpha(letter: string): bigint {\n    if (Lookup == null) {\n        Lookup = { };\n        for (let i = 0; i < Alphabet.length; i++) {\n            Lookup[Alphabet[i]] = BigInt(i);\n        }\n    }\n    const result = Lookup[letter];\n    assertArgument(result != null, `invalid base58 value`, \"letter\", letter);\n    return result;\n}\n\n\nconst BN_0 = BigInt(0);\nconst BN_58 = BigInt(58);\n\n/**\n *  Encode %%value%% as a Base58-encoded string.\n */\nexport function encodeBase58(_value: BytesLike): string {\n    const bytes = getBytes(_value);\n\n    let value = toBigInt(bytes);\n    let result = \"\";\n    while (value) {\n        result = Alphabet[Number(value % BN_58)] + result;\n        value /= BN_58;\n    }\n\n    // Account for leading padding zeros\n    for (let i = 0; i < bytes.length; i++) {\n        if (bytes[i]) { break; }\n        result = Alphabet[0] + result;\n    }\n\n    return result;\n}\n\n/**\n *  Decode the Base58-encoded %%value%%.\n */\nexport function decodeBase58(value: string): bigint {\n    let result = BN_0;\n    for (let i = 0; i < value.length; i++) {\n        result *= BN_58;\n        result += getAlpha(value[i]);\n    }\n    return result;\n}\n","/**\n *  ENS is a service which allows easy-to-remember names to map to\n *  network addresses.\n *\n *  @_section: api/providers/ens-resolver:ENS Resolver  [about-ens-rsolver]\n */\n\nimport { getAddress } from \"../address/index.js\";\nimport { ZeroAddress } from \"../constants/index.js\";\nimport { Contract } from \"../contract/index.js\";\nimport { dnsEncode, namehash } from \"../hash/index.js\";\nimport {\n    hexlify, isHexString, toBeHex,\n    defineProperties, encodeBase58,\n    assert, assertArgument, isError,\n    FetchRequest\n} from \"../utils/index.js\";\n\nimport type { FunctionFragment } from \"../abi/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\nimport type { AbstractProvider, AbstractProviderPlugin } from \"./abstract-provider.js\";\nimport type { EnsPlugin } from \"./plugins-network.js\";\nimport type { Provider } from \"./provider.js\";\n\n// @TODO: This should use the fetch-data:ipfs gateway\n// Trim off the ipfs:// prefix and return the default gateway URL\nfunction getIpfsLink(link: string): string {\n    if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n        link = link.substring(12);\n    } else if (link.match(/^ipfs:\\/\\//i)) {\n        link = link.substring(7);\n    } else {\n        assertArgument(false, \"unsupported IPFS format\", \"link\", link);\n    }\n\n    return `https:/\\/gateway.ipfs.io/ipfs/${ link }`;\n}\n\n/**\n *  The type of data found during a steip during avatar resolution.\n */\nexport type AvatarLinkageType = \"name\" | \"avatar\" | \"!avatar\" | \"url\" | \"data\" | \"ipfs\" |\n    \"erc721\" | \"erc1155\" | \"!erc721-caip\" | \"!erc1155-caip\" |\n    \"!owner\" | \"owner\" | \"!balance\" | \"balance\" |\n    \"metadata-url-base\" | \"metadata-url-expanded\" | \"metadata-url\" | \"!metadata-url\" |\n    \"!metadata\" | \"metadata\" |\n    \"!imageUrl\" | \"imageUrl-ipfs\" | \"imageUrl\" | \"!imageUrl-ipfs\";\n\n/**\n *  An individual record for each step during avatar resolution.\n */\nexport interface AvatarLinkage {\n    /**\n     *  The type of linkage.\n     */\n    type: AvatarLinkageType;\n\n    /**\n     *  The linkage value.\n     */\n    value: string;\n};\n\n/**\n *  When resolving an avatar for an ENS name, there are many\n *  steps involved, fetching metadata, validating results, et cetera.\n *\n *  Some applications may wish to analyse this data, or use this data\n *  to diagnose promblems, so an **AvatarResult** provides details of\n *  each completed step during avatar resolution.\n */\nexport interface AvatarResult {\n    /**\n     *  How the [[url]] was arrived at, resolving the many steps required\n     *  for an avatar URL.\n     */\n    linkage: Array<AvatarLinkage>;\n\n    /**\n     *  The avatar URL or null if the avatar was not set, or there was\n     *  an issue during validation (such as the address not owning the\n     *  avatar or a metadata error).\n     */\n    url: null | string;\n};\n\n/**\n *  A provider plugin super-class for processing multicoin address types.\n */\nexport abstract class MulticoinProviderPlugin implements AbstractProviderPlugin {\n    /**\n     *  The name.\n     */\n    readonly name!: string;\n\n    /**\n     *  Creates a new **MulticoinProviderPluing** for %%name%%.\n     */\n    constructor(name: string) {\n        defineProperties<MulticoinProviderPlugin>(this, { name });\n    }\n\n    connect(proivder: Provider): MulticoinProviderPlugin {\n        return this;\n    }\n\n    /**\n     *  Returns ``true`` if %%coinType%% is supported by this plugin.\n     */\n    supportsCoinType(coinType: number): boolean {\n        return false;\n    }\n\n    /**\n     *  Resovles to the encoded %%address%% for %%coinType%%.\n     */\n    async encodeAddress(coinType: number, address: string): Promise<string> {\n        throw new Error(\"unsupported coin\");\n    }\n\n    /**\n     *  Resovles to the decoded %%data%% for %%coinType%%.\n     */\n    async decodeAddress(coinType: number, data: BytesLike): Promise<string> {\n        throw new Error(\"unsupported coin\");\n    }\n}\n\nconst BasicMulticoinPluginId = \"org.ethers.plugins.provider.BasicMulticoin\";\n\n/**\n *  A **BasicMulticoinProviderPlugin** provides service for common\n *  coin types, which do not require additional libraries to encode or\n *  decode.\n */\nexport class BasicMulticoinProviderPlugin extends MulticoinProviderPlugin {\n    /**\n     *  Creates a new **BasicMulticoinProviderPlugin**.\n     */\n    constructor() {\n        super(BasicMulticoinPluginId);\n    }\n}\n\nconst matcherIpfs = new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\");\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    matcherIpfs,\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\n\n/**\n *  A connected object to a resolved ENS name resolver, which can be\n *  used to query additional details.\n */\nexport class EnsResolver {\n    /**\n     *  The connected provider.\n     */\n    provider!: AbstractProvider;\n\n    /**\n     *  The address of the resolver.\n     */\n    address!: string;\n\n    /**\n     *  The name this resolver was resolved against.\n     */\n    name!: string;\n\n    // For EIP-2544 names, the ancestor that provided the resolver\n    #supports2544: null | Promise<boolean>;\n\n    #resolver: Contract;\n\n    constructor(provider: AbstractProvider, address: string, name: string) {\n        defineProperties<EnsResolver>(this, { provider, address, name });\n        this.#supports2544 = null;\n\n        this.#resolver = new Contract(address, [\n            \"function supportsInterface(bytes4) view returns (bool)\",\n            \"function resolve(bytes, bytes) view returns (bytes)\",\n            \"function addr(bytes32) view returns (address)\",\n            \"function addr(bytes32, uint) view returns (bytes)\",\n            \"function text(bytes32, string) view returns (string)\",\n            \"function contenthash(bytes32) view returns (bytes)\",\n        ], provider);\n\n    }\n\n    /**\n     *  Resolves to true if the resolver supports wildcard resolution.\n     */\n    async supportsWildcard(): Promise<boolean> {\n        if (this.#supports2544 == null) {\n            this.#supports2544 = (async () => {\n                try {\n                    return await this.#resolver.supportsInterface(\"0x9061b923\");\n                } catch (error) {\n                    // Wildcard resolvers must understand supportsInterface\n                    // and return true.\n                    if (isError(error, \"CALL_EXCEPTION\")) { return false; }\n\n                    // Let future attempts try again...\n                    this.#supports2544 = null;\n\n                    throw error;\n                }\n            })();\n        }\n\n        return await this.#supports2544;\n    }\n\n    async #fetch(funcName: string, params?: Array<any>): Promise<null | any> {\n        params = (params || []).slice();\n        const iface = this.#resolver.interface;\n\n        // The first parameters is always the nodehash\n        params.unshift(namehash(this.name))\n\n        let fragment: null | FunctionFragment = null;\n        if (await this.supportsWildcard()) {\n            fragment = iface.getFunction(funcName);\n            assert(fragment, \"missing fragment\", \"UNKNOWN_ERROR\", {\n                info: { funcName }\n            });\n\n            params = [\n                dnsEncode(this.name),\n                iface.encodeFunctionData(fragment, params)\n            ];\n\n            funcName = \"resolve(bytes,bytes)\";\n        }\n\n        params.push({\n            enableCcipRead: true\n        });\n\n        try {\n            const result = await this.#resolver[funcName](...params);\n\n            if (fragment) {\n                return iface.decodeFunctionResult(fragment, result)[0];\n            }\n\n            return result;\n        } catch (error: any) {\n            if (!isError(error, \"CALL_EXCEPTION\")) { throw error; }\n        }\n\n        return null;\n    }\n\n    /**\n     *  Resolves to the address for %%coinType%% or null if the\n     *  provided %%coinType%% has not been configured.\n     */\n    async getAddress(coinType?: number): Promise<null | string> {\n        if (coinType == null) { coinType = 60; }\n        if (coinType === 60) {\n            try {\n                const result = await this.#fetch(\"addr(bytes32)\");\n\n                // No address\n                if (result == null || result === ZeroAddress) { return null; }\n\n                return result;\n            } catch (error: any) {\n                if (isError(error, \"CALL_EXCEPTION\")) { return null; }\n                throw error;\n            }\n        }\n\n        // Try decoding its EVM canonical chain as an EVM chain address first\n        if (coinType >= 0 && coinType < 0x80000000) {\n            let ethCoinType = coinType + 0x80000000;\n\n            const data = await this.#fetch(\"addr(bytes32,uint)\", [ ethCoinType ]);\n            if (isHexString(data, 20)) { return getAddress(data); }\n        }\n\n        let coinPlugin: null | MulticoinProviderPlugin = null;\n        for (const plugin of this.provider.plugins) {\n            if (!(plugin instanceof MulticoinProviderPlugin)) { continue; }\n            if (plugin.supportsCoinType(coinType)) {\n                coinPlugin = plugin;\n                break;\n            }\n        }\n\n        if (coinPlugin == null) { return null; }\n\n        // keccak256(\"addr(bytes32,uint256\")\n        const data = await this.#fetch(\"addr(bytes32,uint)\", [ coinType ]);\n\n        // No address\n        if (data == null || data === \"0x\") { return null; }\n\n        // Compute the address\n        const address = await coinPlugin.decodeAddress(coinType, data);\n\n        if (address != null) { return address; }\n\n        assert(false, `invalid coin data`, \"UNSUPPORTED_OPERATION\", {\n            operation: `getAddress(${ coinType })`,\n            info: { coinType, data }\n        });\n    }\n\n    /**\n     *  Resolves to the EIP-634 text record for %%key%%, or ``null``\n     *  if unconfigured.\n     */\n    async getText(key: string): Promise<null | string> {\n        const data = await this.#fetch(\"text(bytes32,string)\", [ key ]);\n        if (data == null || data === \"0x\") { return null; }\n        return data;\n    }\n\n    /**\n     *  Rsolves to the content-hash or ``null`` if unconfigured.\n     */\n    async getContentHash(): Promise<null | string> {\n        // keccak256(\"contenthash()\")\n        const data = await this.#fetch(\"contenthash(bytes32)\");\n\n        // No contenthash\n        if (data == null || data === \"0x\") { return null; }\n\n        // IPFS (CID: 1, Type: 70=DAG-PB, 72=libp2p-key)\n        const ipfs = data.match(/^0x(e3010170|e5010172)(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipfs) {\n            const scheme = (ipfs[1] === \"e3010170\") ? \"ipfs\": \"ipns\";\n            const length = parseInt(ipfs[4], 16);\n            if (ipfs[5].length === length * 2) {\n                return `${ scheme }:/\\/${ encodeBase58(\"0x\" + ipfs[2])}`;\n            }\n        }\n\n        // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n        const swarm = data.match(/^0xe40101fa011b20([0-9a-f]*)$/)\n        if (swarm && swarm[1].length === 64) {\n            return `bzz:/\\/${ swarm[1] }`;\n        }\n\n        assert(false, `invalid or unsupported content hash data`, \"UNSUPPORTED_OPERATION\", {\n            operation: \"getContentHash()\",\n            info: { data }\n        });\n    }\n\n    /**\n     *  Resolves to the avatar url or ``null`` if the avatar is either\n     *  unconfigured or incorrectly configured (e.g. references an NFT\n     *  not owned by the address).\n     *\n     *  If diagnosing issues with configurations, the [[_getAvatar]]\n     *  method may be useful.\n     */\n    async getAvatar(): Promise<null | string> {\n        const avatar = await this._getAvatar();\n        return avatar.url;\n    }\n\n    /**\n     *  When resolving an avatar, there are many steps involved, such\n     *  fetching metadata and possibly validating ownership of an\n     *  NFT.\n     *\n     *  This method can be used to examine each step and the value it\n     *  was working from.\n     */\n    async _getAvatar(): Promise<AvatarResult> {\n        const linkage: Array<AvatarLinkage> = [ { type: \"name\", value: this.name } ];\n        try {\n            // test data for ricmoo.eth\n            //const avatar = \"eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233\";\n            const avatar = await this.getText(\"avatar\");\n            if (avatar == null) {\n                linkage.push({ type: \"!avatar\", value: \"\" });\n                return { url: null, linkage };\n            }\n            linkage.push({ type: \"avatar\", value: avatar });\n\n            for (let i = 0; i < matchers.length; i++) {\n                const match = avatar.match(matchers[i]);\n                if (match == null) { continue; }\n\n                const scheme = match[1].toLowerCase();\n\n                switch (scheme) {\n                    case \"https\":\n                    case \"data\":\n                        linkage.push({ type: \"url\", value: avatar });\n                        return { linkage, url: avatar };\n                    case \"ipfs\": {\n                        const url = getIpfsLink(avatar);\n                        linkage.push({ type: \"ipfs\", value: avatar });\n                        linkage.push({ type: \"url\", value: url });\n                        return { linkage, url };\n                    }\n\n                    case \"erc721\":\n                    case \"erc1155\": {\n                        // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                        const selector = (scheme === \"erc721\") ? \"tokenURI(uint256)\": \"uri(uint256)\";\n                        linkage.push({ type: scheme, value: avatar });\n\n                        // The owner of this name\n                        const owner = await this.getAddress();\n                        if (owner == null) {\n                            linkage.push({ type: \"!owner\", value: \"\" });\n                            return { url: null, linkage };\n                        }\n\n                        const comps = (match[2] || \"\").split(\"/\");\n                        if (comps.length !== 2) {\n                            linkage.push({ type: <any>`!${ scheme }caip`, value: (match[2] || \"\") });\n                            return { url: null, linkage };\n                        }\n\n                        const tokenId = comps[1];\n\n                        const contract = new Contract(comps[0], [\n                            // ERC-721\n                            \"function tokenURI(uint) view returns (string)\",\n                            \"function ownerOf(uint) view returns (address)\",\n\n                            // ERC-1155\n                            \"function uri(uint) view returns (string)\",\n                            \"function balanceOf(address, uint256) view returns (uint)\"\n                        ], this.provider);\n\n                        // Check that this account owns the token\n                        if (scheme === \"erc721\") {\n                            const tokenOwner = await contract.ownerOf(tokenId);\n\n                            if (owner !== tokenOwner) {\n                                linkage.push({ type: \"!owner\", value: tokenOwner });\n                                return { url: null, linkage };\n                            }\n                            linkage.push({ type: \"owner\", value: tokenOwner });\n\n                        } else if (scheme === \"erc1155\") {\n                            const balance = await contract.balanceOf(owner, tokenId);\n                            if (!balance) {\n                                linkage.push({ type: \"!balance\", value: \"0\" });\n                                return { url: null, linkage };\n                            }\n                            linkage.push({ type: \"balance\", value: balance.toString() });\n                        }\n\n                        // Call the token contract for the metadata URL\n                        let metadataUrl = await contract[selector](tokenId);\n                        if (metadataUrl == null || metadataUrl === \"0x\") {\n                            linkage.push({ type: \"!metadata-url\", value: \"\" });\n                            return { url: null, linkage };\n                        }\n\n                        linkage.push({ type: \"metadata-url-base\", value: metadataUrl });\n\n                        // ERC-1155 allows a generic {id} in the URL\n                        if (scheme === \"erc1155\") {\n                            metadataUrl = metadataUrl.replace(\"{id}\", toBeHex(tokenId, 32).substring(2));\n                            linkage.push({ type: \"metadata-url-expanded\", value: metadataUrl });\n                        }\n\n                        // Transform IPFS metadata links\n                        if (metadataUrl.match(/^ipfs:/i)) {\n                            metadataUrl = getIpfsLink(metadataUrl);\n                        }\n                        linkage.push({ type: \"metadata-url\", value: metadataUrl });\n\n                        // Get the token metadata\n                        let metadata: any = { };\n                        const response = await (new FetchRequest(metadataUrl)).send();\n                        response.assertOk();\n\n                        try {\n                            metadata = response.bodyJson;\n                        } catch (error) {\n                            try {\n                                linkage.push({ type: \"!metadata\", value: response.bodyText });\n                            } catch (error) {\n                                const bytes = response.body;\n                                if (bytes) {\n                                    linkage.push({ type: \"!metadata\", value: hexlify(bytes) });\n                                }\n                                return { url: null, linkage };\n                            }\n                            return { url: null, linkage };\n                        }\n\n                        if (!metadata) {\n                            linkage.push({ type: \"!metadata\", value: \"\" });\n                            return { url: null, linkage };\n                        }\n\n                        linkage.push({ type: \"metadata\", value: JSON.stringify(metadata) });\n\n                        // Pull the image URL out\n                        let imageUrl = metadata.image;\n                        if (typeof(imageUrl) !== \"string\") {\n                            linkage.push({ type: \"!imageUrl\", value: \"\" });\n                            return { url: null, linkage };\n                        }\n\n                        if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                            // Allow\n                        } else {\n                            // Transform IPFS link to gateway\n                            const ipfs = imageUrl.match(matcherIpfs);\n                            if (ipfs == null) {\n                                linkage.push({ type: \"!imageUrl-ipfs\", value: imageUrl });\n                                return { url: null, linkage };\n                            }\n\n                            linkage.push({ type: \"imageUrl-ipfs\", value: imageUrl });\n                            imageUrl = getIpfsLink(imageUrl);\n                        }\n\n                        linkage.push({ type: \"url\", value: imageUrl });\n\n                        return { linkage, url: imageUrl };\n                    }\n                }\n            }\n        } catch (error) { }\n\n        return { linkage, url: null };\n    }\n\n    static async getEnsAddress(provider: Provider): Promise<string> {\n        const network = await provider.getNetwork();\n\n        const ensPlugin = network.getPlugin<EnsPlugin>(\"org.ethers.plugins.network.Ens\");\n\n        // No ENS...\n        assert(ensPlugin, \"network does not support ENS\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"getEnsAddress\", info: { network } });\n\n        return ensPlugin.address;\n    }\n\n    static async #getResolver(provider: Provider, name: string): Promise<null | string> {\n        const ensAddr = await EnsResolver.getEnsAddress(provider);\n\n        try {\n            const contract = new Contract(ensAddr, [\n                \"function resolver(bytes32) view returns (address)\"\n            ], provider);\n\n            const addr = await contract.resolver(namehash(name), {\n                enableCcipRead: true\n            });\n\n            if (addr === ZeroAddress) { return null; }\n            return addr;\n\n        } catch (error) {\n            // ENS registry cannot throw errors on resolver(bytes32),\n            // so probably a link error\n            throw error;\n        }\n\n        return null;\n    }\n\n    /**\n     *  Resolve to the ENS resolver for %%name%% using %%provider%% or\n     *  ``null`` if unconfigured.\n     */\n    static async fromName(provider: AbstractProvider, name: string): Promise<null | EnsResolver> {\n\n        let currentName = name;\n        while (true) {\n            if (currentName === \"\" || currentName === \".\") { return null; }\n\n            // Optimization since the eth node cannot change and does\n            // not have a wildcard resolver\n            if (name !== \"eth\" && currentName === \"eth\") { return null; }\n\n            // Check the current node for a resolver\n            const addr = await EnsResolver.#getResolver(provider, currentName);\n\n            // Found a resolver!\n            if (addr != null) {\n                const resolver = new EnsResolver(provider, addr, name);\n\n                // Legacy resolver found, using EIP-2544 so it isn't safe to use\n                if (currentName !== name && !(await resolver.supportsWildcard())) { return null; }\n\n                return resolver;\n            }\n\n            // Get the parent node\n            currentName = currentName.split(\".\").slice(1).join(\".\");\n        }\n    }\n}\n","/**\n *  @_ignore\n */\nimport { getAddress, getCreateAddress } from \"../address/index.js\";\nimport { Signature } from \"../crypto/index.js\"\nimport { accessListify } from \"../transaction/index.js\";\nimport {\n    getBigInt, getNumber, hexlify, isHexString, zeroPadValue,\n    assert, assertArgument\n} from \"../utils/index.js\";\n\nimport type {\n    BlockParams, LogParams,\n    TransactionReceiptParams, TransactionResponseParams,\n} from \"./formatting.js\";\n\n\nconst BN_0 = BigInt(0);\n\nexport type FormatFunc = (value: any) => any;\n\nexport function allowNull(format: FormatFunc, nullValue?: any): FormatFunc {\n    return (function(value: any) {\n        if (value == null) { return nullValue; }\n        return format(value);\n    });\n}\n\nexport function arrayOf(format: FormatFunc): FormatFunc {\n    return ((array: any) => {\n        if (!Array.isArray(array)) { throw new Error(\"not an array\"); }\n        return array.map((i) => format(i));\n    });\n}\n\n// Requires an object which matches a fleet of other formatters\n// Any FormatFunc may return `undefined` to have the value omitted\n// from the result object. Calls preserve `this`.\nexport function object(format: Record<string, FormatFunc>, altNames?: Record<string, Array<string>>): FormatFunc {\n    return ((value: any) => {\n        const result: any = { };\n        for (const key in format) {\n            let srcKey = key;\n            if (altNames && key in altNames && !(srcKey in value)) {\n                for (const altKey of altNames[key]) {\n                    if (altKey in value) {\n                        srcKey = altKey;\n                        break;\n                    }\n                }\n            }\n\n            try {\n                const nv = format[key](value[srcKey]);\n                if (nv !== undefined) { result[key] = nv; }\n            } catch (error) {\n                const message = (error instanceof Error) ? error.message: \"not-an-error\";\n                assert(false, `invalid value for value.${ key } (${ message })`, \"BAD_DATA\", { value })\n            }\n        }\n        return result;\n    });\n}\n\nexport function formatBoolean(value: any): boolean {\n    switch (value) {\n        case true: case \"true\":\n            return true;\n        case false: case \"false\":\n            return false;\n    }\n    assertArgument(false, `invalid boolean; ${ JSON.stringify(value) }`, \"value\", value);\n}\n\nexport function formatData(value: string): string {\n    assertArgument(isHexString(value, true), \"invalid data\", \"value\", value);\n    return value;\n}\n\nexport function formatHash(value: any): string {\n    assertArgument(isHexString(value, 32), \"invalid hash\", \"value\", value);\n    return value;\n}\n\nexport function formatUint256(value: any): string {\n    if (!isHexString(value)) {\n        throw new Error(\"invalid uint256\");\n    }\n    return zeroPadValue(value, 32);\n}\n\nconst _formatLog = object({\n    address: getAddress,\n    blockHash: formatHash,\n    blockNumber: getNumber,\n    data: formatData,\n    index: getNumber,\n    removed: allowNull(formatBoolean, false),\n    topics: arrayOf(formatHash),\n    transactionHash: formatHash,\n    transactionIndex: getNumber,\n}, {\n    index: [ \"logIndex\" ]\n});\n\nexport function formatLog(value: any): LogParams {\n    return _formatLog(value);\n}\n\nconst _formatBlock = object({\n    hash: allowNull(formatHash),\n    parentHash: formatHash,\n    number: getNumber,\n\n    timestamp: getNumber,\n    nonce: allowNull(formatData),\n    difficulty: getBigInt,\n\n    gasLimit: getBigInt,\n    gasUsed: getBigInt,\n\n    miner: allowNull(getAddress),\n    extraData: formatData,\n\n    baseFeePerGas: allowNull(getBigInt)\n});\n\nexport function formatBlock(value: any): BlockParams {\n    const result = _formatBlock(value);\n    result.transactions = value.transactions.map((tx: string | TransactionResponseParams) => {\n        if (typeof(tx) === \"string\") { return tx; }\n        return formatTransactionResponse(tx);\n    });\n    return result;\n}\n\nconst _formatReceiptLog = object({\n    transactionIndex: getNumber,\n    blockNumber: getNumber,\n    transactionHash: formatHash,\n    address: getAddress,\n    topics: arrayOf(formatHash),\n    data: formatData,\n    index: getNumber,\n    blockHash: formatHash,\n}, {\n    index: [ \"logIndex\" ]\n});\n\nexport function formatReceiptLog(value: any): LogParams {\n    return _formatReceiptLog(value);\n}\n\nconst _formatTransactionReceipt = object({\n    to: allowNull(getAddress, null),\n    from: allowNull(getAddress, null),\n    contractAddress: allowNull(getAddress, null),\n    // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n    index: getNumber,\n    root: allowNull(hexlify),\n    gasUsed: getBigInt,\n    logsBloom: allowNull(formatData),\n    blockHash: formatHash,\n    hash: formatHash,\n    logs: arrayOf(formatReceiptLog),\n    blockNumber: getNumber,\n    //confirmations: allowNull(getNumber, null),\n    cumulativeGasUsed: getBigInt,\n    effectiveGasPrice: allowNull(getBigInt),\n    status: allowNull(getNumber),\n    type: allowNull(getNumber, 0)\n}, {\n    effectiveGasPrice: [ \"gasPrice\" ],\n    hash: [ \"transactionHash\" ],\n    index: [ \"transactionIndex\" ],\n});\n\nexport function formatTransactionReceipt(value: any): TransactionReceiptParams {\n    return _formatTransactionReceipt(value);\n}\n\nexport function formatTransactionResponse(value: any): TransactionResponseParams {\n\n    // Some clients (TestRPC) do strange things like return 0x0 for the\n    // 0 address; correct this to be a real address\n    if (value.to && getBigInt(value.to) === BN_0) {\n        value.to = \"0x0000000000000000000000000000000000000000\";\n    }\n\n    const result = object({\n        hash: formatHash,\n\n        type: (value: any) => {\n            if (value === \"0x\" || value == null) { return 0; }\n            return getNumber(value);\n        },\n        accessList: allowNull(accessListify, null),\n\n        blockHash: allowNull(formatHash, null),\n        blockNumber: allowNull(getNumber, null),\n        transactionIndex: allowNull(getNumber, null),\n\n        //confirmations: allowNull(getNumber, null),\n\n        from: getAddress,\n\n        // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas) must be set\n        gasPrice: allowNull(getBigInt),\n        maxPriorityFeePerGas: allowNull(getBigInt),\n        maxFeePerGas: allowNull(getBigInt),\n\n        gasLimit: getBigInt,\n        to: allowNull(getAddress, null),\n        value: getBigInt,\n        nonce: getNumber,\n        data: formatData,\n\n        creates: allowNull(getAddress, null),\n\n        chainId: allowNull(getBigInt, null)\n    }, {\n        data: [ \"input\" ],\n        gasLimit: [ \"gas\" ]\n    })(value);\n\n    // If to and creates are empty, populate the creates from the value\n    if (result.to == null && result.creates == null) {\n        result.creates = getCreateAddress(result);\n    }\n\n    // @TODO: Check fee data\n\n    // Add an access list to supported transaction types\n    if ((value.type === 1 || value.type === 2) && value.accessList == null) {\n        result.accessList = [ ];\n    }\n\n    // Compute the signature\n    if (value.signature) {\n        result.signature = Signature.from(value.signature);\n    } else {\n        result.signature = Signature.from(value);\n    }\n\n    // Some backends omit ChainId on legacy transactions, but we can compute it\n    if (result.chainId == null) {\n        const chainId = result.signature.legacyChainId;\n        if (chainId != null) { result.chainId = chainId; }\n    }\n\n\n    // @TODO: check chainID\n    /*\n    if (value.chainId != null) {\n        let chainId = value.chainId;\n\n        if (isHexString(chainId)) {\n            chainId = BigNumber.from(chainId).toNumber();\n        }\n\n        result.chainId = chainId;\n\n    } else {\n        let chainId = value.networkId;\n\n        // geth-etc returns chainId\n        if (chainId == null && result.v == null) {\n            chainId = value.chainId;\n        }\n\n        if (isHexString(chainId)) {\n            chainId = BigNumber.from(chainId).toNumber();\n        }\n\n        if (typeof(chainId) !== \"number\" && result.v != null) {\n            chainId = (result.v - 35) / 2;\n            if (chainId < 0) { chainId = 0; }\n            chainId = parseInt(chainId);\n        }\n\n        if (typeof(chainId) !== \"number\") { chainId = 0; }\n\n        result.chainId = chainId;\n    }\n    */\n\n    // 0x0000... should actually be null\n    if (result.blockHash && getBigInt(result.blockHash) === BN_0) {\n        result.blockHash = null;\n    }\n\n    return result;\n}\n","import { keccak256 } from \"../crypto/index.js\";\nimport {\n    concat, dataSlice, getBigInt, getBytes, encodeRlp, assertArgument\n} from \"../utils/index.js\";\n\nimport { getAddress } from \"./address.js\";\n\nimport type { BigNumberish, BytesLike } from \"../utils/index.js\";\n\n\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\n\n/**\n *  Returns the address that would result from a ``CREATE`` for %%tx%%.\n *\n *  This can be used to compute the address a contract will be\n *  deployed to by an EOA when sending a deployment transaction (i.e.\n *  when the ``to`` address is ``null``).\n *\n *  This can also be used to compute the address a contract will be\n *  deployed to by a contract, by using the contract's address as the\n *  ``to`` and the contract's nonce.\n *\n *  @example\n *    from = \"0x8ba1f109551bD432803012645Ac136ddd64DBA72\";\n *    nonce = 5;\n *\n *    getCreateAddress({ from, nonce });\n *    //_result:\n */\nexport function getCreateAddress(tx: { from: string, nonce: BigNumberish }): string {\n    const from = getAddress(tx.from);\n    const nonce = getBigInt(tx.nonce, \"tx.nonce\");\n\n    let nonceHex = nonce.toString(16);\n    if (nonceHex === \"0\") {\n        nonceHex = \"0x\";\n    } else if (nonceHex.length % 2) {\n        nonceHex = \"0x0\" + nonceHex;\n    } else {\n        nonceHex = \"0x\" + nonceHex;\n    }\n\n    return getAddress(dataSlice(keccak256(encodeRlp([ from, nonceHex ])), 12));\n}\n\n/**\n *  Returns the address that would result from a ``CREATE2`` operation\n *  with the given %%from%%, %%salt%% and %%initCodeHash%%.\n *\n *  To compute the %%initCodeHash%% from a contract's init code, use\n *  the [[keccak256]] function.\n *\n *  For a quick overview and example of ``CREATE2``, see [[link-ricmoo-wisps]].\n *\n *  @example\n *    // The address of the contract\n *    from = \"0x8ba1f109551bD432803012645Ac136ddd64DBA72\"\n *\n *    // The salt\n *    salt = id(\"HelloWorld\")\n *\n *    // The hash of the initCode\n *    initCode = \"0x6394198df16000526103ff60206004601c335afa6040516060f3\";\n *    initCodeHash = keccak256(initCode)\n *\n *    getCreate2Address(from, salt, initCodeHash)\n *    //_result:\n */\nexport function getCreate2Address(_from: string, _salt: BytesLike, _initCodeHash: BytesLike): string {\n    const from = getAddress(_from);\n    const salt = getBytes(_salt, \"salt\");\n    const initCodeHash = getBytes(_initCodeHash, \"initCodeHash\");\n\n    assertArgument(salt.length === 32, \"salt must be 32 bytes\", \"salt\", _salt);\n\n    assertArgument(initCodeHash.length === 32, \"initCodeHash must be 32 bytes\", \"initCodeHash\", _initCodeHash);\n\n    return getAddress(dataSlice(keccak256(concat([ \"0xff\", from, salt, initCodeHash ])), 12))\n}\n","import { defineProperties } from \"../utils/properties.js\";\n\nimport { assertArgument } from \"../utils/index.js\";\n\nimport type { FeeData, Provider } from \"./provider.js\";\nimport type { FetchRequest } from \"../utils/fetch.js\";\n\n\nconst EnsAddress = \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\";\n\n/**\n *  A **NetworkPlugin** provides additional functionality on a [[Network]].\n */\nexport class NetworkPlugin {\n    /**\n     *  The name of the plugin.\n     *\n     *  It is recommended to use reverse-domain-notation, which permits\n     *  unique names with a known authority as well as hierarchal entries.\n     */\n    readonly name!: string;\n\n    /**\n     *  Creates a new **NetworkPlugin**.\n     */\n    constructor(name: string) {\n        defineProperties<NetworkPlugin>(this, { name });\n    }\n\n    /**\n     *  Creates a copy of this plugin.\n     */\n    clone(): NetworkPlugin {\n        return new NetworkPlugin(this.name);\n    }\n\n//    validate(network: Network): NetworkPlugin {\n//        return this;\n//    }\n}\n\n\n/**\n *  The gas cost parameters for a [[GasCostPlugin]].\n */\nexport type GasCostParameters = {\n    /**\n     *  The transactions base fee.\n     */\n    txBase?: number;\n\n    /**\n     *  The fee for creating a new account.\n     */\n    txCreate?: number;\n\n    /**\n     *  The fee per zero-byte in the data.\n     */\n    txDataZero?: number;\n\n    /**\n     *  The fee per non-zero-byte in the data.\n     */\n    txDataNonzero?: number;\n\n    /**\n     *  The fee per storage key in the [[link-eip-2930]] access list.\n     */\n    txAccessListStorageKey?: number;\n\n    /**\n     *  The fee per address in the [[link-eip-2930]] access list.\n     */\n    txAccessListAddress?: number;\n};\n\n/**\n *  A **GasCostPlugin** allows a network to provide alternative values when\n *  computing the intrinsic gas required for a transaction.\n */\nexport class GasCostPlugin extends NetworkPlugin implements GasCostParameters {\n    /**\n     *  The block number to treat these values as valid from.\n     *\n     *  This allows a hardfork to have updated values included as well as\n     *  mulutiple hardforks to be supported.\n     */\n    readonly effectiveBlock!: number;\n\n    /**\n     *  The transactions base fee.\n     */\n    readonly txBase!: number;\n\n    /**\n     *  The fee for creating a new account.\n     */\n    readonly txCreate!: number;\n\n    /**\n     *  The fee per zero-byte in the data.\n     */\n    readonly txDataZero!: number;\n\n    /**\n     *  The fee per non-zero-byte in the data.\n     */\n    readonly txDataNonzero!: number;\n\n    /**\n     *  The fee per storage key in the [[link-eip-2930]] access list.\n     */\n    readonly txAccessListStorageKey!: number;\n\n    /**\n     *  The fee per address in the [[link-eip-2930]] access list.\n     */\n    readonly txAccessListAddress!: number;\n\n\n    /**\n     *  Creates a new GasCostPlugin from %%effectiveBlock%% until the\n     *  latest block or another GasCostPlugin supercedes that block number,\n     *  with the associated %%costs%%.\n     */\n    constructor(effectiveBlock?: number, costs?: GasCostParameters) {\n        if (effectiveBlock == null) { effectiveBlock = 0; }\n        super(`org.ethers.network.plugins.GasCost#${ (effectiveBlock || 0) }`);\n\n        const props: Record<string, number> = { effectiveBlock };\n        function set(name: keyof GasCostParameters, nullish: number): void {\n            let value = (costs || { })[name];\n            if (value == null) { value = nullish; }\n            assertArgument(typeof(value) === \"number\", `invalud value for ${ name }`, \"costs\", costs);\n            props[name] = value;\n        }\n\n        set(\"txBase\", 21000);\n        set(\"txCreate\", 32000);\n        set(\"txDataZero\", 4);\n        set(\"txDataNonzero\", 16);\n        set(\"txAccessListStorageKey\", 1900);\n        set(\"txAccessListAddress\", 2400);\n\n        defineProperties<GasCostPlugin>(this, props);\n    }\n\n    clone(): GasCostPlugin {\n        return new GasCostPlugin(this.effectiveBlock, this);\n    }\n}\n\n/**\n *  An **EnsPlugin** allows a [[Network]] to specify the ENS Registry\n *  Contract address and the target network to use when using that\n *  contract.\n *\n *  Various testnets have their own instance of the contract to use, but\n *  in general, the mainnet instance supports multi-chain addresses and\n *  should be used.\n */\nexport class EnsPlugin extends NetworkPlugin {\n\n    /**\n     *  The ENS Registrty Contract address.\n     */\n    readonly address!: string;\n\n    /**\n     *  The chain ID that the ENS contract lives on.\n     */\n    readonly targetNetwork!: number;\n\n    /**\n     *  Creates a new **EnsPlugin** connected to %%address%% on the\n     *  %%targetNetwork%%. The default ENS address and mainnet is used\n     *  if unspecified.\n     */\n    constructor(address?: null | string, targetNetwork?: null | number) {\n        super(\"org.ethers.plugins.network.Ens\");\n        defineProperties<EnsPlugin>(this, {\n            address: (address || EnsAddress),\n            targetNetwork: ((targetNetwork == null) ? 1: targetNetwork)\n        });\n    }\n\n    clone(): EnsPlugin {\n        return new EnsPlugin(this.address, this.targetNetwork);\n    }\n}\n\n/**\n *  A **FeeDataNetworkPlugin** allows a network to provide and alternate\n *  means to specify its fee data.\n *\n *  For example, a network which does not support [[link-eip-1559]] may\n *  choose to use a Gas Station site to approximate the gas price.\n */\nexport class FeeDataNetworkPlugin extends NetworkPlugin {\n    readonly #feeDataFunc: (provider: Provider) => Promise<FeeData>;\n\n    /**\n     *  The fee data function provided to the constructor.\n     */\n    get feeDataFunc(): (provider: Provider) => Promise<FeeData> {\n        return this.#feeDataFunc;\n    }\n\n    /**\n     *  Creates a new **FeeDataNetworkPlugin**.\n     */\n    constructor(feeDataFunc: (provider: Provider) => Promise<FeeData>) {\n        super(\"org.ethers.plugins.network.FeeData\");\n        this.#feeDataFunc = feeDataFunc;\n    }\n\n    /**\n     *  Resolves to the fee data.\n     */\n    async getFeeData(provider: Provider): Promise<FeeData> {\n        return await this.#feeDataFunc(provider);\n    }\n\n    clone(): FeeDataNetworkPlugin {\n        return new FeeDataNetworkPlugin(this.#feeDataFunc);\n    }\n}\n\nexport class FetchUrlFeeDataNetworkPlugin extends NetworkPlugin {\n    readonly #url: string;\n    readonly #processFunc: (f: () => Promise<FeeData>, p: Provider, r: FetchRequest) => Promise<{ gasPrice?: null | bigint, maxFeePerGas?: null | bigint, maxPriorityFeePerGas?: null | bigint }>;\n\n    /**\n     *  The URL to initialize the FetchRequest with in %%processFunc%%.\n     */\n    get url(): string { return this.#url; }\n\n    /**\n     *  The callback to use when computing the FeeData.\n     */\n    get processFunc(): (f: () => Promise<FeeData>, p: Provider, r: FetchRequest) => Promise<{ gasPrice?: null | bigint, maxFeePerGas?: null | bigint, maxPriorityFeePerGas?: null | bigint }> { return this.#processFunc; }\n\n    /**\n     *  Creates a new **FetchUrlFeeDataNetworkPlugin** which will\n     *  be used when computing the fee data for the network.\n     */\n    constructor(url: string, processFunc: (f: () => Promise<FeeData>, p: Provider, r: FetchRequest) => Promise<{ gasPrice?: null | bigint, maxFeePerGas?: null | bigint, maxPriorityFeePerGas?: null | bigint }>) {\n        super(\"org.ethers.plugins.network.FetchUrlFeeDataPlugin\");\n        this.#url = url;\n        this.#processFunc = processFunc;\n    }\n\n    // We are immutable, so we can serve as our own clone\n    clone(): FetchUrlFeeDataNetworkPlugin { return this; }\n}\n\n/*\nexport class CustomBlockNetworkPlugin extends NetworkPlugin {\n    readonly #blockFunc: (provider: Provider, block: BlockParams<string>) => Block<string>;\n    readonly #blockWithTxsFunc: (provider: Provider, block: BlockParams<TransactionResponseParams>) => Block<TransactionResponse>;\n\n    constructor(blockFunc: (provider: Provider, block: BlockParams<string>) => Block<string>, blockWithTxsFunc: (provider: Provider, block: BlockParams<TransactionResponseParams>) => Block<TransactionResponse>) {\n        super(\"org.ethers.network-plugins.custom-block\");\n        this.#blockFunc = blockFunc;\n        this.#blockWithTxsFunc = blockWithTxsFunc;\n    }\n\n    async getBlock(provider: Provider, block: BlockParams<string>): Promise<Block<string>> {\n        return await this.#blockFunc(provider, block);\n    }\n\n    async getBlockions(provider: Provider, block: BlockParams<TransactionResponseParams>): Promise<Block<TransactionResponse>> {\n        return await this.#blockWithTxsFunc(provider, block);\n    }\n\n    clone(): CustomBlockNetworkPlugin {\n        return new CustomBlockNetworkPlugin(this.#blockFunc, this.#blockWithTxsFunc);\n    }\n}\n*/\n","/**\n *  A **Network** encapsulates the various properties required to\n *  interact with a specific chain.\n *\n *  @_subsection: api/providers:Networks  [networks]\n */\n\nimport { accessListify } from \"../transaction/index.js\";\nimport { getBigInt, assert, assertArgument } from \"../utils/index.js\";\n\nimport {\n    EnsPlugin, FetchUrlFeeDataNetworkPlugin, GasCostPlugin\n} from \"./plugins-network.js\";\n\nimport type { BigNumberish } from \"../utils/index.js\";\nimport type { TransactionLike } from \"../transaction/index.js\";\n\nimport type { NetworkPlugin } from \"./plugins-network.js\";\n\n\n/**\n *  A Networkish can be used to allude to a Network, by specifing:\n *  - a [[Network]] object\n *  - a well-known (or registered) network name\n *  - a well-known (or registered) chain ID\n *  - an object with sufficient details to describe a network\n */\nexport type Networkish = Network | number | bigint | string | {\n    name?: string,\n    chainId?: number,\n    //layerOneConnection?: Provider,\n    ensAddress?: string,\n    ensNetwork?: number\n};\n\n\n\n\n/* * * *\n// Networks which operation against an L2 can use this plugin to\n// specify how to access L1, for the purpose of resolving ENS,\n// for example.\nexport class LayerOneConnectionPlugin extends NetworkPlugin {\n    readonly provider!: Provider;\n// @TODO: Rename to ChainAccess and allow for connecting to any chain\n    constructor(provider: Provider) {\n        super(\"org.ethers.plugins.layer-one-connection\");\n        defineProperties<LayerOneConnectionPlugin>(this, { provider });\n    }\n\n    clone(): LayerOneConnectionPlugin {\n        return new LayerOneConnectionPlugin(this.provider);\n    }\n}\n*/\n\n\nconst Networks: Map<string | bigint, () => Network> = new Map();\n\n\n/**\n *  A **Network** provides access to a chain's properties and allows\n *  for plug-ins to extend functionality.\n */\nexport class Network {\n    #name: string;\n    #chainId: bigint;\n\n    #plugins: Map<string, NetworkPlugin>;\n\n    /**\n     *  Creates a new **Network** for %%name%% and %%chainId%%.\n     */\n    constructor(name: string, chainId: BigNumberish) {\n        this.#name = name;\n        this.#chainId = getBigInt(chainId);\n        this.#plugins = new Map();\n    }\n\n    /**\n     *  Returns a JSON-compatible representation of a Network.\n     */\n    toJSON(): any {\n        return { name: this.name, chainId: String(this.chainId) };\n    }\n\n    /**\n     *  The network common name.\n     *\n     *  This is the canonical name, as networks migh have multiple\n     *  names.\n     */\n    get name(): string { return this.#name; }\n    set name(value: string) { this.#name =  value; }\n\n    /**\n     *  The network chain ID.\n     */\n    get chainId(): bigint { return this.#chainId; }\n    set chainId(value: BigNumberish) { this.#chainId = getBigInt(value, \"chainId\"); }\n\n    /**\n     *  Returns true if %%other%% matches this network. Any chain ID\n     *  must match, and if no chain ID is present, the name must match.\n     *\n     *  This method does not currently check for additional properties,\n     *  such as ENS address or plug-in compatibility.\n     */\n    matches(other: Networkish): boolean {\n        if (other == null) { return false; }\n\n        if (typeof(other) === \"string\") {\n            try {\n                return (this.chainId === getBigInt(other));\n            } catch (error) { }\n            return (this.name === other);\n        }\n\n        if (typeof(other) === \"number\" || typeof(other) === \"bigint\") {\n            try {\n                return (this.chainId === getBigInt(other));\n            } catch (error) { }\n            return false;\n        }\n\n        if (typeof(other) === \"object\") {\n            if (other.chainId != null) {\n                try {\n                    return (this.chainId === getBigInt(other.chainId));\n                } catch (error) { }\n                return false;\n            }\n            if (other.name != null) {\n                return (this.name === other.name);\n            }\n            return false;\n        }\n\n        return false;\n    }\n\n    /**\n     *  Returns the list of plugins currently attached to this Network.\n     */\n    get plugins(): Array<NetworkPlugin> {\n        return Array.from(this.#plugins.values());\n    }\n\n    /**\n     *  Attach a new %%plugin%% to this Network. The network name\n     *  must be unique, excluding any fragment.\n     */\n    attachPlugin(plugin: NetworkPlugin): this {\n        if (this.#plugins.get(plugin.name)) {\n            throw new Error(`cannot replace existing plugin: ${ plugin.name } `);\n        }\n        this.#plugins.set(plugin.name, plugin.clone());\n        return this;\n    }\n\n    /**\n     *  Return the plugin, if any, matching %%name%% exactly. Plugins\n     *  with fragments will not be returned unless %%name%% includes\n     *  a fragment.\n     */\n    getPlugin<T extends NetworkPlugin = NetworkPlugin>(name: string): null | T {\n        return <T>(this.#plugins.get(name)) || null;\n    }\n\n    /**\n     *  Gets a list of all plugins that match %%name%%, with otr without\n     *  a fragment.\n     */\n    getPlugins<T extends NetworkPlugin = NetworkPlugin>(basename: string): Array<T> {\n        return <Array<T>>(this.plugins.filter((p) => (p.name.split(\"#\")[0] === basename)));\n    }\n\n    /**\n     *  Create a copy of this Network.\n     */\n    clone(): Network {\n        const clone = new Network(this.name, this.chainId);\n        this.plugins.forEach((plugin) => {\n            clone.attachPlugin(plugin.clone());\n        });\n        return clone;\n    }\n\n    /**\n     *  Compute the intrinsic gas required for a transaction.\n     *\n     *  A GasCostPlugin can be attached to override the default\n     *  values.\n     */\n    computeIntrinsicGas(tx: TransactionLike): number {\n        const costs = this.getPlugin<GasCostPlugin>(\"org.ethers.plugins.network.GasCost\") || (new GasCostPlugin());\n\n        let gas = costs.txBase;\n        if (tx.to == null) { gas += costs.txCreate; }\n        if (tx.data) {\n            for (let i = 2; i < tx.data.length; i += 2) {\n                if (tx.data.substring(i, i + 2) === \"00\") {\n                    gas += costs.txDataZero;\n                } else {\n                    gas += costs.txDataNonzero;\n                }\n            }\n        }\n\n        if (tx.accessList) {\n            const accessList = accessListify(tx.accessList);\n            for (const addr in accessList) {\n                gas += costs.txAccessListAddress + costs.txAccessListStorageKey * accessList[addr].storageKeys.length;\n            }\n        }\n\n        return gas;\n    }\n\n    /**\n     *  Returns a new Network for the %%network%% name or chainId.\n     */\n    static from(network?: Networkish): Network {\n        injectCommonNetworks();\n\n        // Default network\n        if (network == null) { return Network.from(\"mainnet\"); }\n\n        // Canonical name or chain ID\n        if (typeof(network) === \"number\") { network = BigInt(network); }\n        if (typeof(network) === \"string\" || typeof(network) === \"bigint\") {\n            const networkFunc = Networks.get(network);\n            if (networkFunc) { return networkFunc(); }\n            if (typeof(network) === \"bigint\") {\n                return new Network(\"unknown\", network);\n            }\n\n            assertArgument(false, \"unknown network\", \"network\", network);\n        }\n\n        // Clonable with network-like abilities\n        if (typeof((<Network>network).clone) === \"function\") {\n            const clone = (<Network>network).clone();\n            //if (typeof(network.name) !== \"string\" || typeof(network.chainId) !== \"number\") {\n            //}\n            return clone;\n        }\n\n        // Networkish\n        if (typeof(network) === \"object\") {\n            assertArgument(typeof(network.name) === \"string\" && typeof(network.chainId) === \"number\",\n                \"invalid network object name or chainId\", \"network\", network);\n\n            const custom = new Network(<string>(network.name), <number>(network.chainId));\n\n            if ((<any>network).ensAddress || (<any>network).ensNetwork != null) {\n                custom.attachPlugin(new EnsPlugin((<any>network).ensAddress, (<any>network).ensNetwork));\n            }\n\n            //if ((<any>network).layerOneConnection) {\n            //    custom.attachPlugin(new LayerOneConnectionPlugin((<any>network).layerOneConnection));\n            //}\n\n            return custom;\n        }\n\n        assertArgument(false, \"invalid network\", \"network\", network);\n    }\n\n    /**\n     *  Register %%nameOrChainId%% with a function which returns\n     *  an instance of a Network representing that chain.\n     */\n    static register(nameOrChainId: string | number | bigint, networkFunc: () => Network): void {\n        if (typeof(nameOrChainId) === \"number\") { nameOrChainId = BigInt(nameOrChainId); }\n        const existing = Networks.get(nameOrChainId);\n        if (existing) {\n            assertArgument(false, `conflicting network for ${ JSON.stringify(existing.name) }`, \"nameOrChainId\", nameOrChainId);\n        }\n        Networks.set(nameOrChainId, networkFunc);\n    }\n}\n\n\ntype Options = {\n    ensNetwork?: number;\n    altNames?: Array<string>;\n    plugins?: Array<NetworkPlugin>;\n};\n\n// We don't want to bring in formatUnits because it is backed by\n// FixedNumber and we want to keep Networks tiny. The values\n// included by the Gas Stations are also IEEE 754 with lots of\n// rounding issues and exceed the strict checks formatUnits has.\nfunction parseUnits(_value: number | string, decimals: number): bigint {\n    const value = String(_value);\n    if (!value.match(/^[0-9.]+$/)) {\n        throw new Error(`invalid gwei value: ${ _value }`);\n    }\n\n    // Break into [ whole, fraction ]\n    const comps = value.split(\".\");\n    if (comps.length === 1) { comps.push(\"\"); }\n\n    // More than 1 decimal point or too many fractional positions\n    if (comps.length !== 2) {\n        throw new Error(`invalid gwei value: ${ _value }`);\n    }\n\n    // Pad the fraction to 9 decimalplaces\n    while (comps[1].length < decimals) { comps[1] += \"0\"; }\n\n    // Too many decimals and some non-zero ending, take the ceiling\n    if (comps[1].length > 9) {\n        let frac = BigInt(comps[1].substring(0, 9));\n        if (!comps[1].substring(9).match(/^0+$/)) { frac++; }\n        comps[1] = frac.toString();\n    }\n\n    return BigInt(comps[0] + comps[1]);\n}\n\n// Used by Polygon to use a gas station for fee data\nfunction getGasStationPlugin(url: string) {\n    return new FetchUrlFeeDataNetworkPlugin(url, async (fetchFeeData, provider, request) => {\n\n        // Prevent Cloudflare from blocking our request in node.js\n        request.setHeader(\"User-Agent\", \"ethers\");\n\n        let response;\n        try {\n            const [ _response, _feeData ] = await Promise.all([\n                request.send(), fetchFeeData()\n            ]);\n            response = _response;\n            const payload = response.bodyJson.standard;\n            const feeData = {\n                gasPrice: _feeData.gasPrice,\n                maxFeePerGas: parseUnits(payload.maxFee, 9),\n                maxPriorityFeePerGas: parseUnits(payload.maxPriorityFee, 9),\n            };\n            return feeData;\n        } catch (error: any) {\n            assert(false, `error encountered with polygon gas station (${ JSON.stringify(request.url) })`, \"SERVER_ERROR\", { request, response, error });\n        }\n    });\n}\n\n// See: https://chainlist.org\nlet injected = false;\nfunction injectCommonNetworks(): void {\n    if (injected) { return; }\n    injected = true;\n\n    /// Register popular Ethereum networks\n    function registerEth(name: string, chainId: number, options: Options): void {\n        const func = function() {\n            const network = new Network(name, chainId);\n\n            // We use 0 to disable ENS\n            if (options.ensNetwork != null) {\n                network.attachPlugin(new EnsPlugin(null, options.ensNetwork));\n            }\n\n            network.attachPlugin(new GasCostPlugin());\n\n            (options.plugins || []).forEach((plugin) => {\n                network.attachPlugin(plugin);\n            });\n\n            return network;\n        };\n\n        // Register the network by name and chain ID\n        Network.register(name, func);\n        Network.register(chainId, func);\n\n        if (options.altNames) {\n            options.altNames.forEach((name) => {\n                Network.register(name, func);\n            });\n        }\n    }\n\n    registerEth(\"mainnet\", 1, { ensNetwork: 1, altNames: [ \"homestead\" ] });\n    registerEth(\"ropsten\", 3, { ensNetwork: 3 });\n    registerEth(\"rinkeby\", 4, { ensNetwork: 4 });\n    registerEth(\"goerli\", 5, { ensNetwork: 5 });\n    registerEth(\"kovan\", 42, { ensNetwork: 42 });\n    registerEth(\"sepolia\", 11155111, { ensNetwork: 11155111 });\n\n\n\n    registerEth(\"classic\", 61, { });\n    registerEth(\"classicKotti\", 6, { });\n\n    registerEth(\"arbitrum\", 42161, {\n        ensNetwork: 1,\n    });\n    registerEth(\"arbitrum-goerli\", 421613, { });\n\n    registerEth(\"base\", 8453, { ensNetwork: 1 });\n    registerEth(\"base-goerli\", 84531, { });\n    registerEth(\"base-sepolia\", 84532, { });\n\n    registerEth(\"bnb\", 56, { ensNetwork: 1 });\n    registerEth(\"bnbt\", 97, { });\n\n    registerEth(\"linea\", 59144, { ensNetwork: 1 });\n    registerEth(\"linea-goerli\", 59140, { });\n\n    registerEth(\"matic\", 137, {\n        ensNetwork: 1,\n        plugins: [\n            getGasStationPlugin(\"https:/\\/gasstation.polygon.technology/v2\")\n        ]\n    });\n    registerEth(\"matic-mumbai\", 80001, {\n        altNames: [ \"maticMumbai\", \"maticmum\" ],  // @TODO: Future remove these alts\n        plugins: [\n            getGasStationPlugin(\"https:/\\/gasstation-testnet.polygon.technology/v2\")\n        ]\n    });\n\n    registerEth(\"optimism\", 10, {\n        ensNetwork: 1,\n        plugins: [ ]\n    });\n    registerEth(\"optimism-goerli\", 420, { });\n\n    registerEth(\"xdai\", 100, { ensNetwork: 1 });\n}\n","import { assert, isHexString } from \"../utils/index.js\";\n\nimport type { AbstractProvider, Subscriber } from \"./abstract-provider.js\";\nimport type { EventFilter, OrphanFilter, ProviderEvent } from \"./provider.js\";\n\nfunction copy(obj: any): any {\n    return JSON.parse(JSON.stringify(obj));\n}\n\n/**\n *  Return the polling subscriber for common events.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport function getPollingSubscriber(provider: AbstractProvider, event: ProviderEvent): Subscriber {\n    if (event === \"block\") { return new PollingBlockSubscriber(provider); }\n    if (isHexString(event, 32)) { return new PollingTransactionSubscriber(provider, event); }\n\n    assert(false, \"unsupported polling event\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"getPollingSubscriber\", info: { event }\n    });\n}\n\n// @TODO: refactor this\n\n/**\n *  A **PollingBlockSubscriber** polls at a regular interval for a change\n *  in the block number.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class PollingBlockSubscriber implements Subscriber {\n    #provider: AbstractProvider;\n    #poller: null | number;\n\n    #interval: number;\n\n    // The most recent block we have scanned for events. The value -2\n    // indicates we still need to fetch an initial block number\n    #blockNumber: number;\n\n    /**\n     *  Create a new **PollingBlockSubscriber** attached to %%provider%%.\n     */\n    constructor(provider: AbstractProvider) {\n        this.#provider = provider;\n        this.#poller = null;\n        this.#interval = 4000;\n\n        this.#blockNumber = -2;\n    }\n\n    /**\n     *  The polling interval.\n     */\n    get pollingInterval(): number { return this.#interval; }\n    set pollingInterval(value: number) { this.#interval = value; }\n\n    async #poll(): Promise<void> {\n        try {\n            const blockNumber = await this.#provider.getBlockNumber();\n\n            // Bootstrap poll to setup our initial block number\n            if (this.#blockNumber === -2) {\n                this.#blockNumber = blockNumber;\n                return;\n            }\n\n            // @TODO: Put a cap on the maximum number of events per loop?\n\n            if (blockNumber !== this.#blockNumber) {\n                for (let b = this.#blockNumber + 1; b <= blockNumber; b++) {\n                    // We have been stopped\n                    if (this.#poller == null) { return; }\n\n                    await this.#provider.emit(\"block\", b);\n                }\n\n                this.#blockNumber = blockNumber;\n            }\n\n        } catch (error) {\n            // @TODO: Minor bump, add an \"error\" event to let subscribers\n            //        know things went awry.\n            //console.log(error);\n        }\n\n        // We have been stopped\n        if (this.#poller == null) { return; }\n\n        this.#poller = this.#provider._setTimeout(this.#poll.bind(this), this.#interval);\n    }\n\n    start(): void {\n        if (this.#poller) { return; }\n        this.#poller = this.#provider._setTimeout(this.#poll.bind(this), this.#interval);\n        this.#poll();\n    }\n\n    stop(): void {\n        if (!this.#poller) { return; }\n        this.#provider._clearTimeout(this.#poller);\n        this.#poller = null;\n    }\n\n    pause(dropWhilePaused?: boolean): void {\n        this.stop();\n        if (dropWhilePaused) { this.#blockNumber = -2; }\n    }\n\n    resume(): void {\n        this.start();\n    }\n}\n\n\n/**\n *  An **OnBlockSubscriber** can be sub-classed, with a [[_poll]]\n *  implmentation which will be called on every new block.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class OnBlockSubscriber implements Subscriber {\n    #provider: AbstractProvider;\n    #poll: (b: number) => void;\n    #running: boolean;\n\n    /**\n     *  Create a new **OnBlockSubscriber** attached to %%provider%%.\n     */\n    constructor(provider: AbstractProvider) {\n        this.#provider = provider;\n        this.#running = false;\n        this.#poll = (blockNumber: number) => {\n            this._poll(blockNumber, this.#provider);\n        }\n    }\n\n    /**\n     *  Called on every new block.\n     */\n    async _poll(blockNumber: number, provider: AbstractProvider): Promise<void> {\n        throw new Error(\"sub-classes must override this\");\n    }\n\n    start(): void {\n        if (this.#running) { return; }\n        this.#running = true;\n\n        this.#poll(-2);\n        this.#provider.on(\"block\", this.#poll);\n    }\n\n    stop(): void {\n        if (!this.#running) { return; }\n        this.#running = false;\n\n        this.#provider.off(\"block\", this.#poll);\n    }\n\n    pause(dropWhilePaused?: boolean): void { this.stop(); }\n    resume(): void { this.start(); }\n}\n\nexport class PollingBlockTagSubscriber extends OnBlockSubscriber {\n    readonly #tag: string;\n    #lastBlock: number;\n\n    constructor(provider: AbstractProvider, tag: string) {\n        super(provider);\n        this.#tag = tag;\n        this.#lastBlock = -2;\n    }\n\n    pause(dropWhilePaused?: boolean): void {\n        if (dropWhilePaused) { this.#lastBlock = -2; }\n        super.pause(dropWhilePaused);\n    }\n\n    async _poll(blockNumber: number, provider: AbstractProvider): Promise<void> {\n        const block = await provider.getBlock(this.#tag);\n        if (block == null) { return; }\n\n        if (this.#lastBlock === -2) {\n            this.#lastBlock = block.number;\n        } else if (block.number > this.#lastBlock) {\n            provider.emit(this.#tag, block.number);\n            this.#lastBlock = block.number;\n        }\n    }\n}\n\n\n/**\n *  @_ignore:\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class PollingOrphanSubscriber extends OnBlockSubscriber {\n    #filter: OrphanFilter;\n\n    constructor(provider: AbstractProvider, filter: OrphanFilter) {\n        super(provider);\n        this.#filter = copy(filter);\n    }\n\n    async _poll(blockNumber: number, provider: AbstractProvider): Promise<void> {\n        throw new Error(\"@TODO\");\n        console.log(this.#filter);\n    }\n}\n\n/**\n *  A **PollingTransactionSubscriber** will poll for a given transaction\n *  hash for its receipt.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class PollingTransactionSubscriber extends OnBlockSubscriber {\n    #hash: string;\n\n    /**\n     *  Create a new **PollingTransactionSubscriber** attached to\n     *  %%provider%%, listening for %%hash%%.\n     */\n    constructor(provider: AbstractProvider, hash: string) {\n        super(provider);\n        this.#hash = hash;\n    }\n\n    async _poll(blockNumber: number, provider: AbstractProvider): Promise<void> {\n        const tx = await provider.getTransactionReceipt(this.#hash);\n        if (tx) { provider.emit(this.#hash, tx); }\n    }\n}\n\n/**\n *  A **PollingEventSubscriber** will poll for a given filter for its logs.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class PollingEventSubscriber implements Subscriber {\n    #provider: AbstractProvider;\n    #filter: EventFilter;\n    #poller: (b: number) => void;\n\n    #running: boolean;\n\n    // The most recent block we have scanned for events. The value -2\n    // indicates we still need to fetch an initial block number\n    #blockNumber: number;\n\n    /**\n     *  Create a new **PollingTransactionSubscriber** attached to\n     *  %%provider%%, listening for %%filter%%.\n     */\n    constructor(provider: AbstractProvider, filter: EventFilter) {\n        this.#provider = provider;\n        this.#filter = copy(filter);\n        this.#poller = this.#poll.bind(this);\n        this.#running = false;\n        this.#blockNumber = -2;\n    }\n\n    async #poll(blockNumber: number): Promise<void> {\n        // The initial block hasn't been determined yet\n        if (this.#blockNumber === -2) { return; }\n\n        const filter = copy(this.#filter);\n        filter.fromBlock = this.#blockNumber + 1;\n        filter.toBlock = blockNumber;\n\n        const logs = await this.#provider.getLogs(filter);\n\n        // No logs could just mean the node has not indexed them yet,\n        // so we keep a sliding window of 60 blocks to keep scanning\n        if (logs.length === 0) {\n            if (this.#blockNumber < blockNumber - 60) {\n                this.#blockNumber = blockNumber - 60;\n            }\n            return;\n        }\n\n        for (const log of logs) {\n            this.#provider.emit(this.#filter, log);\n\n            // Only advance the block number when logs were found to\n            // account for networks (like BNB and Polygon) which may\n            // sacrifice event consistency for block event speed\n            this.#blockNumber = log.blockNumber;\n        }\n    }\n\n    start(): void {\n        if (this.#running) { return; }\n        this.#running = true;\n\n        if (this.#blockNumber === -2) {\n            this.#provider.getBlockNumber().then((blockNumber) => {\n                this.#blockNumber = blockNumber;\n            });\n        }\n        this.#provider.on(\"block\", this.#poller);\n    }\n\n    stop(): void {\n        if (!this.#running) { return; }\n        this.#running = false;\n\n        this.#provider.off(\"block\", this.#poller);\n    }\n\n    pause(dropWhilePaused?: boolean): void {\n        this.stop();\n        if (dropWhilePaused) { this.#blockNumber = -2; }\n    }\n\n    resume(): void {\n        this.start();\n    }\n}\n","/**\n *  The available providers should suffice for most developers purposes,\n *  but the [[AbstractProvider]] class has many features which enable\n *  sub-classing it for specific purposes.\n *\n *  @_section: api/providers/abstract-provider: Subclassing Provider  [abstract-provider]\n */\n\n// @TODO\n// Event coalescence\n//   When we register an event with an async value (e.g. address is a Signer\n//   or ENS name), we need to add it immeidately for the Event API, but also\n//   need time to resolve the address. Upon resolving the address, we need to\n//   migrate the listener to the static event. We also need to maintain a map\n//   of Signer/ENS name to address so we can sync respond to listenerCount.\n\nimport { getAddress, resolveAddress } from \"../address/index.js\";\nimport { ZeroAddress } from \"../constants/index.js\";\nimport { Contract } from \"../contract/index.js\";\nimport { namehash } from \"../hash/index.js\";\nimport { Transaction } from \"../transaction/index.js\";\nimport {\n    concat, dataLength, dataSlice, hexlify, isHexString,\n    getBigInt, getBytes, getNumber,\n    isCallException, isError, makeError, assert, assertArgument,\n    FetchRequest,\n    toBeArray, toQuantity,\n    defineProperties, EventPayload, resolveProperties,\n    toUtf8String\n} from \"../utils/index.js\";\n\nimport { EnsResolver } from \"./ens-resolver.js\";\nimport {\n    formatBlock, formatLog, formatTransactionReceipt, formatTransactionResponse\n} from \"./format.js\";\nimport { Network } from \"./network.js\";\nimport { copyRequest, Block, FeeData, Log, TransactionReceipt, TransactionResponse } from \"./provider.js\";\nimport {\n    PollingBlockSubscriber, PollingBlockTagSubscriber, PollingEventSubscriber,\n    PollingOrphanSubscriber, PollingTransactionSubscriber\n} from \"./subscriber-polling.js\";\n\nimport type { Addressable, AddressLike } from \"../address/index.js\";\nimport type { BigNumberish, BytesLike } from \"../utils/index.js\";\nimport type { Listener } from \"../utils/index.js\";\n\nimport type { Networkish } from \"./network.js\";\nimport type { FetchUrlFeeDataNetworkPlugin } from \"./plugins-network.js\";\n//import type { MaxPriorityFeePlugin } from \"./plugins-network.js\";\nimport type {\n    BlockParams, LogParams, TransactionReceiptParams,\n    TransactionResponseParams\n} from \"./formatting.js\";\n\nimport type {\n    BlockTag, EventFilter, Filter, FilterByBlockHash, OrphanFilter,\n    PreparedTransactionRequest, Provider, ProviderEvent,\n    TransactionRequest\n} from \"./provider.js\";\n\ntype Timer = ReturnType<typeof setTimeout>;\n\n\n// Constants\nconst BN_2 = BigInt(2);\n\nconst MAX_CCIP_REDIRECTS = 10;\n\nfunction isPromise<T = any>(value: any): value is Promise<T> {\n    return (value && typeof(value.then) === \"function\");\n}\n\nfunction getTag(prefix: string, value: any): string {\n    return prefix + \":\" + JSON.stringify(value, (k, v) => {\n        if (v == null) { return \"null\"; }\n        if (typeof(v) === \"bigint\") { return `bigint:${ v.toString() }`}\n        if (typeof(v) === \"string\") { return v.toLowerCase(); }\n\n        // Sort object keys\n        if (typeof(v) === \"object\" && !Array.isArray(v)) {\n            const keys = Object.keys(v);\n            keys.sort();\n            return keys.reduce((accum, key) => {\n                accum[key] = v[key];\n                return accum;\n            }, <any>{ });\n        }\n\n        return v;\n    });\n}\n\n/**\n *  The types of additional event values that can be emitted for the\n *  ``\"debug\"`` event.\n */\nexport type DebugEventAbstractProvider = {\n    action: \"sendCcipReadFetchRequest\",\n    request: FetchRequest\n    index: number\n    urls: Array<string>\n} | {\n    action: \"receiveCcipReadFetchResult\",\n    request: FetchRequest,\n    result: any\n} | {\n    action: \"receiveCcipReadFetchError\",\n    request: FetchRequest,\n    result: any\n} | {\n    action: \"sendCcipReadCall\",\n    transaction: { to: string, data: string }\n} | {\n    action: \"receiveCcipReadCallResult\",\n    transaction: { to: string, data: string }\n    result: string\n} | {\n    action: \"receiveCcipReadCallError\",\n    transaction: { to: string, data: string }\n    error: Error\n};\n\n\n/**\n *  The value passed to the [[AbstractProvider-_getSubscriber]] method.\n *\n *  Only developers sub-classing [[AbstractProvider[[ will care about this,\n *  if they are modifying a low-level feature of how subscriptions operate.\n */\nexport type Subscription = {\n    type: \"block\" | \"close\" | \"debug\" | \"error\" | \"finalized\" | \"network\" | \"pending\" | \"safe\",\n    tag: string\n} | {\n    type: \"transaction\",\n    tag: string,\n    hash: string\n} | {\n    type: \"event\",\n    tag: string,\n    filter: EventFilter\n} | {\n    type: \"orphan\",\n    tag: string,\n    filter: OrphanFilter\n};\n\n/**\n *  A **Subscriber** manages a subscription.\n *\n *  Only developers sub-classing [[AbstractProvider[[ will care about this,\n *  if they are modifying a low-level feature of how subscriptions operate.\n */\nexport interface Subscriber {\n    /**\n     *  Called initially when a subscriber is added the first time.\n     */\n    start(): void;\n\n    /**\n     *  Called when there are no more subscribers to the event.\n     */\n    stop(): void;\n\n    /**\n     *  Called when the subscription should pause.\n     *\n     *  If %%dropWhilePaused%%, events that occur while paused should not\n     *  be emitted [[resume]].\n     */\n    pause(dropWhilePaused?: boolean): void;\n\n    /**\n     *  Resume a paused subscriber.\n     */\n    resume(): void;\n\n    /**\n     *  The frequency (in ms) to poll for events, if polling is used by\n     *  the subscriber.\n     *\n     *  For non-polling subscribers, this must return ``undefined``.\n     */\n    pollingInterval?: number;\n}\n\n/**\n *  An **UnmanagedSubscriber** is useful for events which do not require\n *  any additional management, such as ``\"debug\"`` which only requires\n *  emit in synchronous event loop triggered calls.\n */\nexport class UnmanagedSubscriber implements Subscriber {\n    /**\n     *  The name fof the event.\n     */\n    name!: string;\n\n    /**\n     *  Create a new UnmanagedSubscriber with %%name%%.\n     */\n    constructor(name: string) { defineProperties<UnmanagedSubscriber>(this, { name }); }\n\n    start(): void { }\n    stop(): void { }\n\n    pause(dropWhilePaused?: boolean): void { }\n    resume(): void { }\n}\n\ntype Sub = {\n    tag: string;\n    nameMap: Map<string, string>\n    addressableMap: WeakMap<Addressable, string>;\n    listeners: Array<{ listener: Listener, once: boolean }>;\n    // @TODO: get rid of this, as it is (and has to be)\n    // tracked in subscriber\n    started: boolean;\n    subscriber: Subscriber;\n};\n\nfunction copy<T = any>(value: T): T {\n    return JSON.parse(JSON.stringify(value));\n}\n\nfunction concisify(items: Array<string>): Array<string> {\n    items = Array.from((new Set(items)).values())\n    items.sort();\n    return items;\n}\n\n\nasync function getSubscription(_event: ProviderEvent, provider: AbstractProvider): Promise<Subscription> {\n    if (_event == null) { throw new Error(\"invalid event\"); }\n\n    // Normalize topic array info an EventFilter\n    if (Array.isArray(_event)) { _event = { topics: _event }; }\n\n    if (typeof(_event) === \"string\") {\n        switch (_event) {\n            case \"block\":\n            case \"debug\":\n            case \"error\":\n            case \"finalized\":\n            case \"network\":\n            case \"pending\":\n            case \"safe\": {\n                return { type: _event, tag: _event };\n            }\n        }\n    }\n\n    if (isHexString(_event, 32)) {\n        const hash = _event.toLowerCase();\n        return { type: \"transaction\", tag: getTag(\"tx\", { hash }), hash };\n    }\n\n    if ((<any>_event).orphan) {\n        const event = <OrphanFilter>_event;\n        // @TODO: Should lowercase and whatnot things here instead of copy...\n        return { type: \"orphan\", tag: getTag(\"orphan\", event), filter: copy(event) };\n    }\n\n    if (((<any>_event).address || (<any>_event).topics)) {\n        const event = <EventFilter>_event;\n\n        const filter: any = {\n            topics: ((event.topics || []).map((t) => {\n                if (t == null) { return null; }\n                if (Array.isArray(t)) {\n                    return concisify(t.map((t) => t.toLowerCase()));\n                }\n                return t.toLowerCase();\n            }))\n        };\n\n        if (event.address) {\n            const addresses: Array<string> = [ ];\n            const promises: Array<Promise<void>> = [ ];\n\n            const addAddress = (addr: AddressLike) => {\n                if (isHexString(addr)) {\n                    addresses.push(addr);\n                } else {\n                    promises.push((async () => {\n                        addresses.push(await resolveAddress(addr, provider));\n                    })());\n                }\n            }\n\n            if (Array.isArray(event.address)) {\n                event.address.forEach(addAddress);\n            } else {\n                addAddress(event.address);\n            }\n            if (promises.length) { await Promise.all(promises); }\n            filter.address = concisify(addresses.map((a) => a.toLowerCase()));\n        }\n\n        return { filter, tag: getTag(\"event\", filter), type: \"event\" };\n    }\n\n    assertArgument(false, \"unknown ProviderEvent\", \"event\", _event);\n}\n\nfunction getTime(): number { return (new Date()).getTime(); }\n\n/**\n *  An **AbstractPlugin** is used to provide additional internal services\n *  to an [[AbstractProvider]] without adding backwards-incompatible changes\n *  to method signatures or other internal and complex logic.\n */\nexport interface AbstractProviderPlugin {\n    /**\n     *  The reverse domain notation of the plugin.\n     */\n    readonly name: string;\n\n    /**\n     *  Creates a new instance of the plugin, connected to %%provider%%.\n     */\n    connect(provider: AbstractProvider): AbstractProviderPlugin;\n}\n\n/**\n *  A normalized filter used for [[PerformActionRequest]] objects.\n */\nexport type PerformActionFilter = {\n    address?: string | Array<string>;\n    topics?: Array<null | string | Array<string>>;\n    fromBlock?: BlockTag;\n    toBlock?: BlockTag;\n} | {\n    address?: string | Array<string>;\n    topics?: Array<null | string | Array<string>>;\n    blockHash?: string;\n};\n\n/**\n *  A normalized transactions used for [[PerformActionRequest]] objects.\n */\nexport interface PerformActionTransaction extends PreparedTransactionRequest {\n    /**\n     *  The ``to`` address of the transaction.\n     */\n    to?: string;\n\n    /**\n     *  The sender of the transaction.\n     */\n    from?: string;\n}\n\n/**\n *  The [[AbstractProvider]] methods will normalize all values and pass this\n *  type to [[AbstractProvider-_perform]].\n */\nexport type PerformActionRequest = {\n    method: \"broadcastTransaction\",\n    signedTransaction: string\n} | {\n    method: \"call\",\n    transaction: PerformActionTransaction, blockTag: BlockTag\n} | {\n    method: \"chainId\"\n} | {\n    method: \"estimateGas\",\n    transaction: PerformActionTransaction\n} | {\n    method: \"getBalance\",\n    address: string, blockTag: BlockTag\n} | {\n    method: \"getBlock\",\n    blockTag: BlockTag, includeTransactions: boolean\n} | {\n    method: \"getBlock\",\n    blockHash: string, includeTransactions: boolean\n} | {\n    method: \"getBlockNumber\"\n} | {\n    method: \"getCode\",\n    address: string, blockTag: BlockTag\n} | {\n    method: \"getGasPrice\"\n} | {\n    method: \"getLogs\",\n    filter: PerformActionFilter\n} | {\n    method: \"getPriorityFee\"\n} | {\n    method: \"getStorage\",\n    address: string, position: bigint, blockTag: BlockTag\n} | {\n    method: \"getTransaction\",\n    hash: string\n} | {\n    method: \"getTransactionCount\",\n    address: string, blockTag: BlockTag\n} | {\n    method: \"getTransactionReceipt\",\n    hash: string\n} | {\n    method: \"getTransactionResult\",\n    hash: string\n};\n\ntype _PerformAccountRequest = {\n    method: \"getBalance\" | \"getTransactionCount\" | \"getCode\"\n} | {\n    method: \"getStorage\", position: bigint\n}\n\n/**\n *  Options for configuring some internal aspects of an [[AbstractProvider]].\n *\n *  **``cacheTimeout``** - how long to cache a low-level ``_perform``\n *  for, based on input parameters. This reduces the number of calls\n *  to getChainId and getBlockNumber, but may break test chains which\n *  can perform operations (internally) synchronously. Use ``-1`` to\n *  disable, ``0`` will only buffer within the same event loop and\n *  any other value is in ms. (default: ``250``)\n */\nexport type AbstractProviderOptions = {\n    cacheTimeout?: number;\n    pollingInterval?: number;\n};\n\nconst defaultOptions = {\n    cacheTimeout: 250,\n    pollingInterval: 4000\n};\n\ntype CcipArgs = {\n    sender: string;\n    urls: Array<string>;\n    calldata: string;\n    selector: string;\n    extraData: string;\n    errorArgs: Array<any>\n};\n\n/**\n *  An **AbstractProvider** provides a base class for other sub-classes to\n *  implement the [[Provider]] API by normalizing input arguments and\n *  formatting output results as well as tracking events for consistent\n *  behaviour on an eventually-consistent network.\n */\nexport class AbstractProvider implements Provider {\n\n    #subs: Map<string, Sub>;\n    #plugins: Map<string, AbstractProviderPlugin>;\n\n    // null=unpaused, true=paused+dropWhilePaused, false=paused\n    #pausedState: null | boolean;\n\n    #destroyed: boolean;\n\n    #networkPromise: null | Promise<Network>;\n    readonly #anyNetwork: boolean;\n\n    #performCache: Map<string, Promise<any>>;\n\n    // The most recent block number if running an event or -1 if no \"block\" event\n    #lastBlockNumber: number;\n\n    #nextTimer: number;\n    #timers: Map<number, { timer: null | Timer, func: () => void, time: number }>;\n\n    #disableCcipRead: boolean;\n\n    #options: Required<AbstractProviderOptions>;\n\n    /**\n     *  Create a new **AbstractProvider** connected to %%network%%, or\n     *  use the various network detection capabilities to discover the\n     *  [[Network]] if necessary.\n     */\n    constructor(_network?: \"any\" | Networkish, options?: AbstractProviderOptions) {\n        this.#options = Object.assign({ }, defaultOptions, options || { });\n\n        if (_network === \"any\") {\n            this.#anyNetwork = true;\n            this.#networkPromise = null;\n        } else if (_network) {\n            const network = Network.from(_network);\n            this.#anyNetwork = false;\n            this.#networkPromise = Promise.resolve(network);\n            setTimeout(() => { this.emit(\"network\", network, null); }, 0);\n        } else {\n            this.#anyNetwork = false;\n            this.#networkPromise = null;\n        }\n\n        this.#lastBlockNumber = -1;\n\n        this.#performCache = new Map();\n\n        this.#subs = new Map();\n        this.#plugins = new Map();\n        this.#pausedState = null;\n\n        this.#destroyed = false;\n\n        this.#nextTimer = 1;\n        this.#timers = new Map();\n\n        this.#disableCcipRead = false;\n    }\n\n    get pollingInterval(): number { return this.#options.pollingInterval; }\n\n    /**\n     *  Returns ``this``, to allow an **AbstractProvider** to implement\n     *  the [[ContractRunner]] interface.\n     */\n    get provider(): this { return this; }\n\n    /**\n     *  Returns all the registered plug-ins.\n     */\n    get plugins(): Array<AbstractProviderPlugin> {\n        return Array.from(this.#plugins.values());\n    }\n\n    /**\n     *  Attach a new plug-in.\n     */\n    attachPlugin(plugin: AbstractProviderPlugin): this {\n        if (this.#plugins.get(plugin.name)) {\n            throw new Error(`cannot replace existing plugin: ${ plugin.name } `);\n        }\n        this.#plugins.set(plugin.name,  plugin.connect(this));\n        return this;\n    }\n\n    /**\n     *  Get a plugin by name.\n     */\n    getPlugin<T extends AbstractProviderPlugin = AbstractProviderPlugin>(name: string): null | T {\n        return <T>(this.#plugins.get(name)) || null;\n    }\n\n    /**\n     *  Prevent any CCIP-read operation, regardless of whether requested\n     *  in a [[call]] using ``enableCcipRead``.\n     */\n    get disableCcipRead(): boolean { return this.#disableCcipRead; }\n    set disableCcipRead(value: boolean) { this.#disableCcipRead = !!value; }\n\n    // Shares multiple identical requests made during the same 250ms\n    async #perform<T = any>(req: PerformActionRequest): Promise<T> {\n        const timeout = this.#options.cacheTimeout;\n\n        // Caching disabled\n        if (timeout < 0) { return await this._perform(req); }\n\n        // Create a tag\n        const tag = getTag(req.method, req);\n\n        let perform = this.#performCache.get(tag);\n        if (!perform) {\n            perform = this._perform(req);\n\n            this.#performCache.set(tag, perform);\n\n            setTimeout(() => {\n                if (this.#performCache.get(tag) === perform) {\n                    this.#performCache.delete(tag);\n                }\n            }, timeout);\n        }\n\n        return await perform;\n    }\n\n    /**\n     *  Resolves to the data for executing the CCIP-read operations.\n     */\n    async ccipReadFetch(tx: PerformActionTransaction, calldata: string, urls: Array<string>): Promise<null | string> {\n        if (this.disableCcipRead || urls.length === 0 || tx.to == null) { return null; }\n\n        const sender = tx.to.toLowerCase();\n        const data = calldata.toLowerCase();\n\n        const errorMessages: Array<string> = [ ];\n\n        for (let i = 0; i < urls.length; i++) {\n            const url = urls[i];\n\n            // URL expansion\n            const href = url.replace(\"{sender}\", sender).replace(\"{data}\", data);\n\n            // If no {data} is present, use POST; otherwise GET\n            //const json: string | null = (url.indexOf(\"{data}\") >= 0) ? null: JSON.stringify({ data, sender });\n\n            //const result = await fetchJson({ url: href, errorPassThrough: true }, json, (value, response) => {\n            //    value.status = response.statusCode;\n            //    return value;\n            //});\n            const request = new FetchRequest(href);\n            if (url.indexOf(\"{data}\") === -1) {\n                request.body = { data, sender };\n            }\n\n            this.emit(\"debug\", { action: \"sendCcipReadFetchRequest\", request, index: i, urls });\n\n            let errorMessage = \"unknown error\";\n\n            const resp = await request.send();\n            try {\n                 const result = resp.bodyJson;\n                 if (result.data) {\n                     this.emit(\"debug\", { action: \"receiveCcipReadFetchResult\", request, result });\n                     return result.data;\n                 }\n                 if (result.message) { errorMessage = result.message; }\n                 this.emit(\"debug\", { action: \"receiveCcipReadFetchError\", request, result });\n            } catch (error) { }\n\n            // 4xx indicates the result is not present; stop\n            assert(resp.statusCode < 400 || resp.statusCode >= 500, `response not found during CCIP fetch: ${ errorMessage }`,\n                \"OFFCHAIN_FAULT\", { reason: \"404_MISSING_RESOURCE\", transaction: tx, info: { url, errorMessage } });\n\n            // 5xx indicates server issue; try the next url\n            errorMessages.push(errorMessage);\n        }\n\n        assert(false, `error encountered during CCIP fetch: ${ errorMessages.map((m) => JSON.stringify(m)).join(\", \") }`, \"OFFCHAIN_FAULT\", {\n            reason: \"500_SERVER_ERROR\",\n            transaction: tx, info: { urls, errorMessages }\n        });\n    }\n\n    /**\n     *  Provides the opportunity for a sub-class to wrap a block before\n     *  returning it, to add additional properties or an alternate\n     *  sub-class of [[Block]].\n     */\n    _wrapBlock(value: BlockParams, network: Network): Block {\n        return new Block(formatBlock(value), this);\n    }\n\n    /**\n     *  Provides the opportunity for a sub-class to wrap a log before\n     *  returning it, to add additional properties or an alternate\n     *  sub-class of [[Log]].\n     */\n    _wrapLog(value: LogParams, network: Network): Log {\n        return new Log(formatLog(value), this);\n    }\n\n    /**\n     *  Provides the opportunity for a sub-class to wrap a transaction\n     *  receipt before returning it, to add additional properties or an\n     *  alternate sub-class of [[TransactionReceipt]].\n     */\n    _wrapTransactionReceipt(value: TransactionReceiptParams, network: Network): TransactionReceipt {\n        return new TransactionReceipt(formatTransactionReceipt(value), this);\n    }\n\n    /**\n     *  Provides the opportunity for a sub-class to wrap a transaction\n     *  response before returning it, to add additional properties or an\n     *  alternate sub-class of [[TransactionResponse]].\n     */\n    _wrapTransactionResponse(tx: TransactionResponseParams, network: Network): TransactionResponse {\n        return new TransactionResponse(formatTransactionResponse(tx), this);\n    }\n\n    /**\n     *  Resolves to the Network, forcing a network detection using whatever\n     *  technique the sub-class requires.\n     *\n     *  Sub-classes **must** override this.\n     */\n    _detectNetwork(): Promise<Network> {\n        assert(false, \"sub-classes must implement this\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"_detectNetwork\"\n        });\n    }\n\n    /**\n     *  Sub-classes should use this to perform all built-in operations. All\n     *  methods sanitizes and normalizes the values passed into this.\n     *\n     *  Sub-classes **must** override this.\n     */\n    async _perform<T = any>(req: PerformActionRequest): Promise<T> {\n        assert(false, `unsupported method: ${ req.method }`, \"UNSUPPORTED_OPERATION\", {\n            operation: req.method,\n            info: req\n        });\n    }\n\n    // State\n\n    async getBlockNumber(): Promise<number> {\n        const blockNumber = getNumber(await this.#perform({ method: \"getBlockNumber\" }), \"%response\");\n        if (this.#lastBlockNumber >= 0) { this.#lastBlockNumber = blockNumber; }\n        return blockNumber;\n    }\n\n    /**\n     *  Returns or resolves to the address for %%address%%, resolving ENS\n     *  names and [[Addressable]] objects and returning if already an\n     *  address.\n     */\n    _getAddress(address: AddressLike): string | Promise<string> {\n        return resolveAddress(address, this);\n    }\n\n    /**\n     *  Returns or resolves to a valid block tag for %%blockTag%%, resolving\n     *  negative values and returning if already a valid block tag.\n     */\n    _getBlockTag(blockTag?: BlockTag): string | Promise<string> {\n        if (blockTag == null) { return \"latest\"; }\n\n        switch (blockTag) {\n            case \"earliest\":\n                return \"0x0\";\n            case \"finalized\":\n            case \"latest\":\n            case \"pending\":\n            case \"safe\":\n                return blockTag;\n        }\n\n\n        if (isHexString(blockTag)) {\n            if (isHexString(blockTag, 32)) { return blockTag; }\n            return toQuantity(blockTag);\n        }\n\n        if (typeof(blockTag) === \"bigint\") {\n            blockTag = getNumber(blockTag, \"blockTag\");\n        }\n\n        if (typeof(blockTag) === \"number\") {\n            if (blockTag >= 0) { return toQuantity(blockTag); }\n            if (this.#lastBlockNumber >= 0) { return toQuantity(this.#lastBlockNumber + blockTag); }\n            return this.getBlockNumber().then((b) => toQuantity(b + <number>blockTag));\n        }\n\n        assertArgument(false, \"invalid blockTag\", \"blockTag\", blockTag);\n    }\n\n    /**\n     *  Returns or resolves to a filter for %%filter%%, resolving any ENS\n     *  names or [[Addressable]] object and returning if already a valid\n     *  filter.\n     */\n    _getFilter(filter: Filter | FilterByBlockHash): PerformActionFilter | Promise<PerformActionFilter> {\n\n        // Create a canonical representation of the topics\n        const topics = (filter.topics || [ ]).map((t) => {\n            if (t == null) { return null; }\n            if (Array.isArray(t)) {\n                return concisify(t.map((t) => t.toLowerCase()));\n            }\n            return t.toLowerCase();\n        });\n\n        const blockHash = (\"blockHash\" in filter) ? filter.blockHash: undefined;\n\n        const resolve = (_address: Array<string>, fromBlock?: string, toBlock?: string) => {\n            let address: undefined | string | Array<string> = undefined;\n            switch (_address.length) {\n                case 0: break;\n                case 1:\n                    address = _address[0];\n                    break;\n                default:\n                    _address.sort();\n                    address = _address;\n            }\n\n            if (blockHash) {\n                if (fromBlock != null || toBlock != null) {\n                    throw new Error(\"invalid filter\");\n                }\n            }\n\n            const filter = <any>{ };\n            if (address) { filter.address = address; }\n            if (topics.length) { filter.topics = topics; }\n            if (fromBlock) { filter.fromBlock = fromBlock; }\n            if (toBlock) { filter.toBlock = toBlock; }\n            if (blockHash) { filter.blockHash = blockHash; }\n\n            return filter;\n        };\n\n        // Addresses could be async (ENS names or Addressables)\n        let address: Array<string | Promise<string>> = [ ];\n        if (filter.address) {\n            if (Array.isArray(filter.address)) {\n                for (const addr of filter.address) { address.push(this._getAddress(addr)); }\n            } else {\n                address.push(this._getAddress(filter.address));\n            }\n        }\n\n        let fromBlock: undefined | string | Promise<string> = undefined;\n        if (\"fromBlock\" in filter) { fromBlock = this._getBlockTag(filter.fromBlock); }\n\n        let toBlock: undefined | string | Promise<string> = undefined;\n        if (\"toBlock\" in filter) { toBlock = this._getBlockTag(filter.toBlock); }\n\n        if (address.filter((a) => (typeof(a) !== \"string\")).length ||\n            (fromBlock != null && typeof(fromBlock) !== \"string\") ||\n            (toBlock != null && typeof(toBlock) !== \"string\")) {\n\n            return Promise.all([ Promise.all(address), fromBlock, toBlock ]).then((result) => {\n                return resolve(result[0], result[1], result[2]);\n            });\n        }\n\n        return resolve(<Array<string>>address, fromBlock, toBlock);\n    }\n\n    /**\n     *  Returns or resovles to a transaction for %%request%%, resolving\n     *  any ENS names or [[Addressable]] and returning if already a valid\n     *  transaction.\n     */\n    _getTransactionRequest(_request: TransactionRequest): PerformActionTransaction | Promise<PerformActionTransaction> {\n        const request = <PerformActionTransaction>copyRequest(_request);\n\n        const promises: Array<Promise<void>> = [ ];\n        [ \"to\", \"from\" ].forEach((key) => {\n            if ((<any>request)[key] == null) { return; }\n\n            const addr = resolveAddress((<any>request)[key], this);\n            if (isPromise(addr)) {\n                promises.push((async function() { (<any>request)[key] = await addr; })());\n            } else {\n                (<any>request)[key] = addr;\n            }\n        });\n\n        if (request.blockTag != null) {\n            const blockTag = this._getBlockTag(request.blockTag);\n            if (isPromise(blockTag)) {\n                promises.push((async function() { request.blockTag = await blockTag; })());\n            } else {\n                request.blockTag = blockTag;\n            }\n        }\n\n        if (promises.length) {\n            return (async function() {\n                await Promise.all(promises);\n                return request;\n            })();\n        }\n\n        return request;\n    }\n\n    async getNetwork(): Promise<Network> {\n\n        // No explicit network was set and this is our first time\n        if (this.#networkPromise == null) {\n\n            // Detect the current network (shared with all calls)\n            const detectNetwork = (async () => {\n                try {\n                    const network = await this._detectNetwork();\n                    this.emit(\"network\", network, null);\n                    return network;\n                } catch (error) {\n                    if (this.#networkPromise === detectNetwork!) {\n                        this.#networkPromise = null;\n                    }\n                    throw error;\n                }\n            })();\n\n            this.#networkPromise = detectNetwork;\n            return (await detectNetwork).clone();\n        }\n\n        const networkPromise = this.#networkPromise;\n\n        const [ expected, actual ] = await Promise.all([\n            networkPromise,          // Possibly an explicit Network\n            this._detectNetwork()    // The actual connected network\n        ]);\n\n        if (expected.chainId !== actual.chainId) {\n            if (this.#anyNetwork) {\n                // The \"any\" network can change, so notify listeners\n                this.emit(\"network\", actual, expected);\n\n                // Update the network if something else hasn't already changed it\n                if (this.#networkPromise === networkPromise) {\n                    this.#networkPromise = Promise.resolve(actual);\n                }\n            } else {\n                // Otherwise, we do not allow changes to the underlying network\n                assert(false, `network changed: ${ expected.chainId } => ${ actual.chainId } `, \"NETWORK_ERROR\", {\n                    event: \"changed\"\n                });\n            }\n        }\n\n        return expected.clone();\n    }\n\n    async getFeeData(): Promise<FeeData> {\n        const network = await this.getNetwork();\n\n        const getFeeDataFunc = async () => {\n            const { _block, gasPrice, priorityFee } = await resolveProperties({\n                _block: this.#getBlock(\"latest\", false),\n                gasPrice: ((async () => {\n                    try {\n                        const value = await this.#perform({ method: \"getGasPrice\" });\n                        return getBigInt(value, \"%response\");\n                    } catch (error) { }\n                    return null\n                })()),\n                priorityFee: ((async () => {\n                    try {\n                        const value = await this.#perform({ method: \"getPriorityFee\" });\n                        return getBigInt(value, \"%response\");\n                    } catch (error) { }\n                    return null;\n                })())\n            });\n\n            let maxFeePerGas: null | bigint = null;\n            let maxPriorityFeePerGas: null | bigint = null;\n\n            // These are the recommended EIP-1559 heuristics for fee data\n            const block = this._wrapBlock(_block, network);\n            if (block && block.baseFeePerGas) {\n                maxPriorityFeePerGas = (priorityFee != null) ? priorityFee: BigInt(\"1000000000\");\n                maxFeePerGas = (block.baseFeePerGas * BN_2) + maxPriorityFeePerGas;\n            }\n\n            return new FeeData(gasPrice, maxFeePerGas, maxPriorityFeePerGas);\n        };\n\n        // Check for a FeeDataNetWorkPlugin\n        const plugin = <FetchUrlFeeDataNetworkPlugin>network.getPlugin(\"org.ethers.plugins.network.FetchUrlFeeDataPlugin\");\n        if (plugin) {\n            const req = new FetchRequest(plugin.url);\n            const feeData = await plugin.processFunc(getFeeDataFunc, this, req);\n            return new FeeData(feeData.gasPrice, feeData.maxFeePerGas, feeData.maxPriorityFeePerGas);\n        }\n\n        return await getFeeDataFunc();\n    }\n\n\n    async estimateGas(_tx: TransactionRequest): Promise<bigint> {\n        let tx = this._getTransactionRequest(_tx);\n        if (isPromise(tx)) { tx = await tx; }\n        return getBigInt(await this.#perform({\n            method: \"estimateGas\", transaction: tx\n        }), \"%response\");\n    }\n\n    async #call(tx: PerformActionTransaction, blockTag: string, attempt: number): Promise<string> {\n        assert (attempt < MAX_CCIP_REDIRECTS, \"CCIP read exceeded maximum redirections\", \"OFFCHAIN_FAULT\", {\n             reason: \"TOO_MANY_REDIRECTS\",\n             transaction: Object.assign({ }, tx, { blockTag, enableCcipRead: true })\n         });\n\n         // This came in as a PerformActionTransaction, so to/from are safe; we can cast\n         const transaction = <PerformActionTransaction>copyRequest(tx);\n\n         try {\n             return hexlify(await this._perform({ method: \"call\", transaction, blockTag }));\n\n         } catch (error: any) {\n             // CCIP Read OffchainLookup\n             if (!this.disableCcipRead && isCallException(error) && error.data && attempt >= 0 && blockTag === \"latest\" && transaction.to != null && dataSlice(error.data, 0, 4) === \"0x556f1830\") {\n                 const data = error.data;\n\n                 const txSender = await resolveAddress(transaction.to, this);\n\n                 // Parse the CCIP Read Arguments\n                 let ccipArgs: CcipArgs;\n                 try {\n                     ccipArgs = parseOffchainLookup(dataSlice(error.data, 4));\n                 } catch (error: any) {\n                     assert(false, error.message, \"OFFCHAIN_FAULT\", {\n                         reason: \"BAD_DATA\", transaction, info: { data } });\n                 }\n\n                 // Check the sender of the OffchainLookup matches the transaction\n                 assert(ccipArgs.sender.toLowerCase() === txSender.toLowerCase(),\n                     \"CCIP Read sender mismatch\", \"CALL_EXCEPTION\", {\n                         action: \"call\",\n                         data,\n                         reason: \"OffchainLookup\",\n                         transaction: <any>transaction, // @TODO: populate data?\n                         invocation: null,\n                         revert: {\n                             signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                             name: \"OffchainLookup\",\n                             args: ccipArgs.errorArgs\n                         }\n                     });\n\n                 const ccipResult = await this.ccipReadFetch(transaction, ccipArgs.calldata, ccipArgs.urls);\n                 assert(ccipResult != null, \"CCIP Read failed to fetch data\", \"OFFCHAIN_FAULT\", {\n                     reason: \"FETCH_FAILED\", transaction, info: { data: error.data, errorArgs: ccipArgs.errorArgs } });\n\n                 const tx = {\n                     to: txSender,\n                     data: concat([ ccipArgs.selector, encodeBytes([ ccipResult, ccipArgs.extraData ]) ])\n                 };\n\n                 this.emit(\"debug\", { action: \"sendCcipReadCall\", transaction: tx });\n                 try {\n                     const result = await this.#call(tx, blockTag, attempt + 1);\n                     this.emit(\"debug\", { action: \"receiveCcipReadCallResult\", transaction: Object.assign({ }, tx), result });\n                     return result;\n                 } catch (error) {\n                     this.emit(\"debug\", { action: \"receiveCcipReadCallError\", transaction: Object.assign({ }, tx), error });\n                     throw error;\n                 }\n             }\n\n             throw error;\n         }\n    }\n\n    async #checkNetwork<T>(promise: Promise<T>): Promise<T> {\n        const { value } = await resolveProperties({\n            network: this.getNetwork(),\n            value: promise\n        });\n        return value;\n    }\n\n    async call(_tx: TransactionRequest): Promise<string> {\n        const { tx, blockTag } = await resolveProperties({\n            tx: this._getTransactionRequest(_tx),\n            blockTag: this._getBlockTag(_tx.blockTag)\n        });\n\n        return await this.#checkNetwork(this.#call(tx, blockTag, _tx.enableCcipRead ? 0: -1));\n    }\n\n    // Account\n    async #getAccountValue(request: _PerformAccountRequest, _address: AddressLike, _blockTag?: BlockTag): Promise<any> {\n        let address: string | Promise<string> = this._getAddress(_address);\n        let blockTag: string | Promise<string> = this._getBlockTag(_blockTag);\n\n        if (typeof(address) !== \"string\" || typeof(blockTag) !== \"string\") {\n            [ address, blockTag ] = await Promise.all([ address, blockTag ]);\n        }\n\n        return await this.#checkNetwork(this.#perform(Object.assign(request, { address, blockTag })));\n    }\n\n    async getBalance(address: AddressLike, blockTag?: BlockTag): Promise<bigint> {\n        return getBigInt(await this.#getAccountValue({ method: \"getBalance\" }, address, blockTag), \"%response\");\n    }\n\n    async getTransactionCount(address: AddressLike, blockTag?: BlockTag): Promise<number> {\n        return getNumber(await this.#getAccountValue({ method: \"getTransactionCount\" }, address, blockTag), \"%response\");\n    }\n\n    async getCode(address: AddressLike, blockTag?: BlockTag): Promise<string> {\n        return hexlify(await this.#getAccountValue({ method: \"getCode\" }, address, blockTag));\n    }\n\n    async getStorage(address: AddressLike, _position: BigNumberish, blockTag?: BlockTag): Promise<string> {\n        const position = getBigInt(_position, \"position\");\n        return hexlify(await this.#getAccountValue({ method: \"getStorage\", position }, address, blockTag));\n    }\n\n    // Write\n    async broadcastTransaction(signedTx: string): Promise<TransactionResponse> {\n        const { blockNumber, hash, network } = await resolveProperties({\n             blockNumber: this.getBlockNumber(),\n             hash: this._perform({\n                 method: \"broadcastTransaction\",\n                 signedTransaction: signedTx\n             }),\n             network: this.getNetwork()\n        });\n\n        const tx = Transaction.from(signedTx);\n        if (tx.hash !== hash) {\n            throw new Error(\"@TODO: the returned hash did not match\");\n        }\n\n        return this._wrapTransactionResponse(<any>tx, network).replaceableTransaction(blockNumber);\n    }\n\n    async #getBlock(block: BlockTag | string, includeTransactions: boolean): Promise<any> {\n        // @TODO: Add CustomBlockPlugin check\n\n        if (isHexString(block, 32)) {\n            return await this.#perform({\n                method: \"getBlock\", blockHash: block, includeTransactions\n            });\n        }\n\n        let blockTag = this._getBlockTag(block);\n        if (typeof(blockTag) !== \"string\") { blockTag = await blockTag; }\n\n        return await this.#perform({\n            method: \"getBlock\", blockTag, includeTransactions\n        });\n    }\n\n    // Queries\n    async getBlock(block: BlockTag | string, prefetchTxs?: boolean): Promise<null | Block> {\n        const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#getBlock(block, !!prefetchTxs)\n        });\n        if (params == null) { return null; }\n\n        return this._wrapBlock(params, network);\n    }\n\n    async getTransaction(hash: string): Promise<null | TransactionResponse> {\n        const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#perform({ method: \"getTransaction\", hash })\n        });\n        if (params == null) { return null; }\n\n        return this._wrapTransactionResponse(params, network);\n    }\n\n    async getTransactionReceipt(hash: string): Promise<null | TransactionReceipt> {\n        const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#perform({ method: \"getTransactionReceipt\", hash })\n        });\n        if (params == null) { return null; }\n\n        // Some backends did not backfill the effectiveGasPrice into old transactions\n        // in the receipt, so we look it up manually and inject it.\n        if (params.gasPrice == null && params.effectiveGasPrice == null) {\n            const tx = await this.#perform({ method: \"getTransaction\", hash });\n            if (tx == null) { throw new Error(\"report this; could not find tx or effectiveGasPrice\"); }\n            params.effectiveGasPrice = tx.gasPrice;\n        }\n\n        return this._wrapTransactionReceipt(params, network);\n    }\n\n    async getTransactionResult(hash: string): Promise<null | string> {\n        const { result } = await resolveProperties({\n            network: this.getNetwork(),\n            result: this.#perform({ method: \"getTransactionResult\", hash })\n        });\n        if (result == null) { return null; }\n        return hexlify(result);\n    }\n\n    // Bloom-filter Queries\n    async getLogs(_filter: Filter | FilterByBlockHash): Promise<Array<Log>> {\n        let filter = this._getFilter(_filter);\n        if (isPromise(filter)) { filter = await filter; }\n\n        const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#perform<Array<LogParams>>({ method: \"getLogs\", filter })\n        });\n\n        return params.map((p) => this._wrapLog(p, network));\n    }\n\n    // ENS\n    _getProvider(chainId: number): AbstractProvider {\n        assert(false, \"provider cannot connect to target network\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"_getProvider()\"\n        });\n    }\n\n    async getResolver(name: string): Promise<null | EnsResolver> {\n        return await EnsResolver.fromName(this, name);\n    }\n\n    async getAvatar(name: string): Promise<null | string> {\n        const resolver = await this.getResolver(name);\n        if (resolver) { return await resolver.getAvatar(); }\n        return null;\n    }\n\n    async resolveName(name: string): Promise<null | string>{\n        const resolver = await this.getResolver(name);\n        if (resolver) { return await resolver.getAddress(); }\n        return null;\n    }\n\n    async lookupAddress(address: string): Promise<null | string> {\n        address = getAddress(address);\n        const node = namehash(address.substring(2).toLowerCase() + \".addr.reverse\");\n\n        try {\n\n            const ensAddr = await EnsResolver.getEnsAddress(this);\n            const ensContract = new Contract(ensAddr, [\n                \"function resolver(bytes32) view returns (address)\"\n            ], this);\n\n            const resolver = await ensContract.resolver(node);\n            if (resolver == null || resolver === ZeroAddress) { return null; }\n\n            const resolverContract = new Contract(resolver, [\n                \"function name(bytes32) view returns (string)\"\n            ], this);\n            const name = await resolverContract.name(node);\n\n            // Failed forward resolution\n            const check = await this.resolveName(name);\n            if (check !== address) { return null; }\n\n            return name;\n\n        } catch (error) {\n            // No data was returned from the resolver\n            if (isError(error, \"BAD_DATA\") && error.value === \"0x\") {\n                return null;\n            }\n\n            // Something reerted\n            if (isError(error, \"CALL_EXCEPTION\")) { return null; }\n\n            throw error;\n        }\n\n        return null;\n    }\n\n    async waitForTransaction(hash: string, _confirms?: null | number, timeout?: null | number): Promise<null | TransactionReceipt> {\n        const confirms = (_confirms != null) ? _confirms: 1;\n        if (confirms === 0) { return this.getTransactionReceipt(hash); }\n\n        return new Promise(async (resolve, reject) => {\n            let timer: null | Timer = null;\n\n            const listener = (async (blockNumber: number) => {\n                try {\n                    const receipt = await this.getTransactionReceipt(hash);\n                    if (receipt != null) {\n                        if (blockNumber - receipt.blockNumber + 1 >= confirms) {\n                            resolve(receipt);\n                            //this.off(\"block\", listener);\n                            if (timer) {\n                                clearTimeout(timer);\n                                timer = null;\n                            }\n                            return;\n                        }\n                    }\n                } catch (error) {\n                    console.log(\"EEE\", error);\n                }\n                this.once(\"block\", listener);\n            });\n\n            if (timeout != null) {\n                timer = setTimeout(() => {\n                    if (timer == null) { return; }\n                    timer = null;\n                    this.off(\"block\", listener);\n                    reject(makeError(\"timeout\", \"TIMEOUT\", { reason: \"timeout\" }));\n                }, timeout);\n            }\n\n            listener(await this.getBlockNumber());\n        });\n    }\n\n    async waitForBlock(blockTag?: BlockTag): Promise<Block> {\n        assert(false, \"not implemented yet\", \"NOT_IMPLEMENTED\", {\n            operation: \"waitForBlock\"\n        });\n    }\n\n    /**\n     *  Clear a timer created using the [[_setTimeout]] method.\n     */\n    _clearTimeout(timerId: number): void {\n        const timer = this.#timers.get(timerId);\n        if (!timer) { return; }\n        if (timer.timer) { clearTimeout(timer.timer); }\n        this.#timers.delete(timerId);\n    }\n\n    /**\n     *  Create a timer that will execute %%func%% after at least %%timeout%%\n     *  (in ms). If %%timeout%% is unspecified, then %%func%% will execute\n     *  in the next event loop.\n     *\n     *  [Pausing](AbstractProvider-paused) the provider will pause any\n     *  associated timers.\n     */\n    _setTimeout(_func: () => void, timeout?: number): number {\n        if (timeout == null) { timeout = 0; }\n        const timerId = this.#nextTimer++;\n        const func = () => {\n            this.#timers.delete(timerId);\n            _func();\n        };\n\n        if (this.paused) {\n            this.#timers.set(timerId, { timer: null, func, time: timeout });\n        } else {\n            const timer = setTimeout(func, timeout);\n            this.#timers.set(timerId, { timer, func, time: getTime() });\n        }\n\n        return timerId;\n    }\n\n    /**\n     *  Perform %%func%% on each subscriber.\n     */\n    _forEachSubscriber(func: (s: Subscriber) => void): void {\n        for (const sub of this.#subs.values()) {\n            func(sub.subscriber);\n        }\n    }\n\n    /**\n     *  Sub-classes may override this to customize subscription\n     *  implementations.\n     */\n    _getSubscriber(sub: Subscription): Subscriber {\n        switch (sub.type) {\n            case \"debug\":\n            case \"error\":\n            case \"network\":\n                return new UnmanagedSubscriber(sub.type);\n            case \"block\": {\n                const subscriber = new PollingBlockSubscriber(this);\n                subscriber.pollingInterval = this.pollingInterval;\n                return subscriber;\n            }\n            case \"safe\": case \"finalized\":\n                return new PollingBlockTagSubscriber(this, sub.type);\n            case \"event\":\n                return new PollingEventSubscriber(this, sub.filter);\n            case \"transaction\":\n                return new PollingTransactionSubscriber(this, sub.hash);\n            case \"orphan\":\n                return new PollingOrphanSubscriber(this, sub.filter);\n        }\n\n        throw new Error(`unsupported event: ${ sub.type }`);\n    }\n\n    /**\n     *  If a [[Subscriber]] fails and needs to replace itself, this\n     *  method may be used.\n     *\n     *  For example, this is used for providers when using the\n     *  ``eth_getFilterChanges`` method, which can return null if state\n     *  filters are not supported by the backend, allowing the Subscriber\n     *  to swap in a [[PollingEventSubscriber]].\n     */\n    _recoverSubscriber(oldSub: Subscriber, newSub: Subscriber): void {\n        for (const sub of this.#subs.values()) {\n            if (sub.subscriber === oldSub) {\n                if (sub.started) { sub.subscriber.stop(); }\n                sub.subscriber = newSub;\n                if (sub.started) { newSub.start(); }\n                if (this.#pausedState != null) { newSub.pause(this.#pausedState); }\n                break;\n            }\n        }\n    }\n\n    async #hasSub(event: ProviderEvent, emitArgs?: Array<any>): Promise<null | Sub> {\n        let sub = await getSubscription(event, this);\n        // This is a log that is removing an existing log; we actually want\n        // to emit an orphan event for the removed log\n        if (sub.type === \"event\" && emitArgs && emitArgs.length > 0 && emitArgs[0].removed === true) {\n            sub = await getSubscription({ orphan: \"drop-log\", log: emitArgs[0] }, this);\n        }\n        return this.#subs.get(sub.tag) || null;\n    }\n\n    async #getSub(event: ProviderEvent): Promise<Sub> {\n        const subscription = await getSubscription(event, this);\n\n        // Prevent tampering with our tag in any subclass' _getSubscriber\n        const tag = subscription.tag;\n\n        let sub = this.#subs.get(tag);\n        if (!sub) {\n            const subscriber = this._getSubscriber(subscription);\n\n            const addressableMap = new WeakMap();\n            const nameMap = new Map();\n            sub = { subscriber, tag, addressableMap, nameMap, started: false, listeners: [ ] };\n            this.#subs.set(tag, sub);\n        }\n\n        return sub;\n    }\n\n    async on(event: ProviderEvent, listener: Listener): Promise<this> {\n        const sub = await this.#getSub(event);\n        sub.listeners.push({ listener, once: false });\n        if (!sub.started) {\n            sub.subscriber.start();\n            sub.started = true;\n            if (this.#pausedState != null) { sub.subscriber.pause(this.#pausedState); }\n        }\n        return this;\n    }\n\n    async once(event: ProviderEvent, listener: Listener): Promise<this> {\n        const sub = await this.#getSub(event);\n        sub.listeners.push({ listener, once: true });\n        if (!sub.started) {\n            sub.subscriber.start();\n            sub.started = true;\n            if (this.#pausedState != null) { sub.subscriber.pause(this.#pausedState); }\n        }\n        return this;\n    }\n\n    async emit(event: ProviderEvent, ...args: Array<any>): Promise<boolean> {\n        const sub = await this.#hasSub(event, args);\n        // If there is not subscription or if a recent emit removed\n        // the last of them (which also deleted the sub) do nothing\n        if (!sub || sub.listeners.length === 0) { return false; };\n\n        const count = sub.listeners.length;\n        sub.listeners = sub.listeners.filter(({ listener, once }) => {\n            const payload = new EventPayload(this, (once ? null: listener), event);\n            try {\n                listener.call(this, ...args, payload);\n            } catch(error) { }\n            return !once;\n        });\n\n        if (sub.listeners.length === 0) {\n            if (sub.started) { sub.subscriber.stop(); }\n            this.#subs.delete(sub.tag);\n        }\n\n        return (count > 0);\n    }\n\n    async listenerCount(event?: ProviderEvent): Promise<number> {\n        if (event) {\n            const sub = await this.#hasSub(event);\n            if (!sub) { return 0; }\n            return sub.listeners.length;\n        }\n\n        let total = 0;\n        for (const { listeners } of this.#subs.values()) {\n            total += listeners.length;\n        }\n        return total;\n    }\n\n    async listeners(event?: ProviderEvent): Promise<Array<Listener>> {\n        if (event) {\n            const sub = await this.#hasSub(event);\n            if (!sub) { return  [ ]; }\n            return sub.listeners.map(({ listener }) => listener);\n        }\n        let result: Array<Listener> = [ ];\n        for (const { listeners } of this.#subs.values()) {\n            result = result.concat(listeners.map(({ listener }) => listener));\n        }\n        return result;\n    }\n\n    async off(event: ProviderEvent, listener?: Listener): Promise<this> {\n        const sub = await this.#hasSub(event);\n        if (!sub) { return this; }\n\n        if (listener) {\n            const index = sub.listeners.map(({ listener }) => listener).indexOf(listener);\n            if (index >= 0) { sub.listeners.splice(index, 1); }\n        }\n\n        if (!listener || sub.listeners.length === 0) {\n            if (sub.started) { sub.subscriber.stop(); }\n            this.#subs.delete(sub.tag);\n        }\n\n        return this;\n    }\n\n    async removeAllListeners(event?: ProviderEvent): Promise<this> {\n        if (event) {\n            const { tag, started, subscriber } = await this.#getSub(event);\n            if (started) { subscriber.stop(); }\n            this.#subs.delete(tag);\n        } else {\n            for (const [ tag, { started, subscriber } ] of this.#subs) {\n                if (started) { subscriber.stop(); }\n                this.#subs.delete(tag);\n            }\n        }\n        return this;\n    }\n\n    // Alias for \"on\"\n    async addListener(event: ProviderEvent, listener: Listener): Promise<this> {\n       return await this.on(event, listener);\n    }\n\n    // Alias for \"off\"\n    async removeListener(event: ProviderEvent, listener: Listener): Promise<this> {\n       return this.off(event, listener);\n    }\n\n    /**\n     *  If this provider has been destroyed using the [[destroy]] method.\n     *\n     *  Once destroyed, all resources are reclaimed, internal event loops\n     *  and timers are cleaned up and no further requests may be sent to\n     *  the provider.\n     */\n    get destroyed(): boolean {\n        return this.#destroyed;\n    }\n\n    /**\n     *  Sub-classes may use this to shutdown any sockets or release their\n     *  resources and reject any pending requests.\n     *\n     *  Sub-classes **must** call ``super.destroy()``.\n     */\n    destroy(): void {\n        // Stop all listeners\n        this.removeAllListeners();\n\n        // Shut down all tiemrs\n        for (const timerId of this.#timers.keys()) {\n            this._clearTimeout(timerId);\n        }\n\n        this.#destroyed = true;\n    }\n\n    /**\n     *  Whether the provider is currently paused.\n     *\n     *  A paused provider will not emit any events, and generally should\n     *  not make any requests to the network, but that is up to sub-classes\n     *  to manage.\n     *\n     *  Setting ``paused = true`` is identical to calling ``.pause(false)``,\n     *  which will buffer any events that occur while paused until the\n     *  provider is unpaused.\n     */\n    get paused(): boolean { return (this.#pausedState != null); }\n    set paused(pause: boolean) {\n        if (!!pause === this.paused) { return; }\n\n        if (this.paused) {\n            this.resume();\n        } else {\n            this.pause(false);\n        }\n    }\n\n    /**\n     *  Pause the provider. If %%dropWhilePaused%%, any events that occur\n     *  while paused are dropped, otherwise all events will be emitted once\n     *  the provider is unpaused.\n     */\n    pause(dropWhilePaused?: boolean): void {\n        this.#lastBlockNumber = -1;\n\n        if (this.#pausedState != null) {\n            if (this.#pausedState == !!dropWhilePaused) { return; }\n            assert(false, \"cannot change pause type; resume first\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"pause\"\n            });\n        }\n\n        this._forEachSubscriber((s) => s.pause(dropWhilePaused));\n        this.#pausedState = !!dropWhilePaused;\n\n        for (const timer of this.#timers.values()) {\n            // Clear the timer\n            if (timer.timer) { clearTimeout(timer.timer); }\n\n            // Remaining time needed for when we become unpaused\n            timer.time = getTime() - timer.time;\n        }\n    }\n\n    /**\n     *  Resume the provider.\n     */\n    resume(): void {\n        if (this.#pausedState == null) { return; }\n\n        this._forEachSubscriber((s) => s.resume());\n        this.#pausedState = null;\n        for (const timer of this.#timers.values()) {\n            // Remaining time when we were paused\n            let timeout = timer.time;\n            if (timeout < 0) { timeout = 0; }\n\n            // Start time (in cause paused, so we con compute remaininf time)\n            timer.time = getTime();\n\n            // Start the timer\n            setTimeout(timer.func, timeout);\n        }\n    }\n}\n\n\nfunction _parseString(result: string, start: number): null | string {\n    try {\n        const bytes = _parseBytes(result, start);\n        if (bytes) { return toUtf8String(bytes); }\n    } catch(error) { }\n    return null;\n}\n\nfunction _parseBytes(result: string, start: number): null | string {\n    if (result === \"0x\") { return null; }\n    try {\n        const offset = getNumber(dataSlice(result, start, start + 32));\n        const length = getNumber(dataSlice(result, offset, offset + 32));\n\n        return dataSlice(result, offset + 32, offset + 32 + length);\n    } catch (error) { }\n    return null;\n}\n\nfunction numPad(value: number): Uint8Array {\n    const result = toBeArray(value);\n    if (result.length > 32) { throw new Error(\"internal; should not happen\"); }\n\n    const padded = new Uint8Array(32);\n    padded.set(result, 32 - result.length);\n    return padded;\n}\n\nfunction bytesPad(value: Uint8Array): Uint8Array {\n    if ((value.length % 32) === 0) { return value; }\n\n    const result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n    result.set(value);\n    return result;\n}\n\nconst empty: Uint8Array = new Uint8Array([ ]);\n\n// ABI Encodes a series of (bytes, bytes, ...)\nfunction encodeBytes(datas: Array<BytesLike>): string {\n    const result: Array<Uint8Array> = [ ];\n\n    let byteCount = 0;\n\n    // Add place-holders for pointers as we add items\n    for (let i = 0; i < datas.length; i++) {\n        result.push(empty);\n        byteCount += 32;\n    }\n\n    for (let i = 0; i < datas.length; i++) {\n        const data = getBytes(datas[i]);\n\n        // Update the bytes offset\n        result[i] = numPad(byteCount);\n\n        // The length and padded value of data\n        result.push(numPad(data.length));\n        result.push(bytesPad(data));\n        byteCount += 32 + Math.ceil(data.length / 32) * 32;\n    }\n\n    return concat(result);\n}\n\nconst zeros = \"0x0000000000000000000000000000000000000000000000000000000000000000\"\nfunction parseOffchainLookup(data: string): CcipArgs {\n    const result: CcipArgs = {\n        sender: \"\", urls: [ ], calldata: \"\", selector: \"\", extraData: \"\", errorArgs: [ ]\n    };\n\n    assert(dataLength(data) >= 5 * 32, \"insufficient OffchainLookup data\", \"OFFCHAIN_FAULT\", {\n        reason: \"insufficient OffchainLookup data\"\n    });\n\n    const sender = dataSlice(data, 0, 32);\n    assert(dataSlice(sender, 0, 12) === dataSlice(zeros, 0, 12), \"corrupt OffchainLookup sender\", \"OFFCHAIN_FAULT\", {\n        reason: \"corrupt OffchainLookup sender\"\n    });\n    result.sender = dataSlice(sender, 12);\n\n    // Read the URLs from the response\n    try {\n        const urls: Array<string> = [];\n        const urlsOffset = getNumber(dataSlice(data, 32, 64));\n        const urlsLength = getNumber(dataSlice(data, urlsOffset, urlsOffset + 32));\n        const urlsData = dataSlice(data, urlsOffset + 32);\n        for (let u = 0; u < urlsLength; u++) {\n            const url = _parseString(urlsData, u * 32);\n            if (url == null) { throw new Error(\"abort\"); }\n            urls.push(url);\n        }\n        result.urls = urls;\n    } catch (error) {\n        assert(false, \"corrupt OffchainLookup urls\", \"OFFCHAIN_FAULT\", {\n            reason: \"corrupt OffchainLookup urls\"\n        });\n    }\n\n    // Get the CCIP calldata to forward\n    try {\n        const calldata = _parseBytes(data, 64);\n        if (calldata == null) { throw new Error(\"abort\"); }\n        result.calldata = calldata;\n    } catch (error) {\n        assert(false, \"corrupt OffchainLookup calldata\", \"OFFCHAIN_FAULT\", {\n            reason: \"corrupt OffchainLookup calldata\"\n        });\n    }\n\n    // Get the callbackSelector (bytes4)\n    assert(dataSlice(data, 100, 128) === dataSlice(zeros, 0, 28), \"corrupt OffchainLookup callbaackSelector\", \"OFFCHAIN_FAULT\", {\n        reason: \"corrupt OffchainLookup callbaackSelector\"\n    });\n    result.selector = dataSlice(data, 96, 100);\n\n    // Get the extra data to send back to the contract as context\n    try {\n        const extraData = _parseBytes(data, 128);\n        if (extraData == null) { throw new Error(\"abort\"); }\n        result.extraData = extraData;\n    } catch (error) {\n        assert(false, \"corrupt OffchainLookup extraData\", \"OFFCHAIN_FAULT\", {\n            reason: \"corrupt OffchainLookup extraData\"\n        });\n    }\n\n    result.errorArgs = \"sender,urls,calldata,selector,extraData\".split(/,/).map((k) => (<any>result)[k])\n\n    return result;\n}\n","/**\n *  Generally the [[Wallet]] and [[JsonRpcSigner]] and their sub-classes\n *  are sufficent for most developers, but this is provided to\n *  fascilitate more complex Signers.\n *\n *  @_section: api/providers/abstract-signer: Subclassing Signer [abstract-signer]\n */\nimport { resolveAddress } from \"../address/index.js\";\nimport { Transaction } from \"../transaction/index.js\";\nimport {\n    defineProperties, getBigInt, resolveProperties,\n    assert, assertArgument\n} from \"../utils/index.js\";\n\nimport { copyRequest } from \"./provider.js\";\n\nimport type { TypedDataDomain, TypedDataField } from \"../hash/index.js\";\nimport type { TransactionLike } from \"../transaction/index.js\";\n\nimport type {\n    BlockTag, Provider, TransactionRequest, TransactionResponse\n} from \"./provider.js\";\nimport type { Signer } from \"./signer.js\";\n\n\nfunction checkProvider(signer: AbstractSigner, operation: string): Provider {\n    if (signer.provider) { return signer.provider; }\n    assert(false, \"missing provider\", \"UNSUPPORTED_OPERATION\", { operation });\n}\n\nasync function populate(signer: AbstractSigner, tx: TransactionRequest): Promise<TransactionLike<string>> {\n    let pop: any = copyRequest(tx);\n\n    if (pop.to != null) { pop.to = resolveAddress(pop.to, signer); }\n\n    if (pop.from != null) {\n        const from = pop.from;\n        pop.from = Promise.all([\n            signer.getAddress(),\n            resolveAddress(from, signer)\n        ]).then(([ address, from ]) => {\n            assertArgument(address.toLowerCase() === from.toLowerCase(),\n                \"transaction from mismatch\", \"tx.from\", from);\n            return address;\n        });\n    } else {\n        pop.from = signer.getAddress();\n    }\n\n    return await resolveProperties(pop);\n}\n\n\n/**\n *  An **AbstractSigner** includes most of teh functionality required\n *  to get a [[Signer]] working as expected, but requires a few\n *  Signer-specific methods be overridden.\n *\n */\nexport abstract class AbstractSigner<P extends null | Provider = null | Provider> implements Signer {\n    /**\n     *  The provider this signer is connected to.\n     */\n    readonly provider!: P;\n\n    /**\n     *  Creates a new Signer connected to %%provider%%.\n     */\n    constructor(provider?: P) {\n        defineProperties<AbstractSigner>(this, { provider: (provider || null) });\n    }\n\n    /**\n     *  Resolves to the Signer address.\n     */\n    abstract getAddress(): Promise<string>;\n\n    /**\n     *  Returns the signer connected to %%provider%%.\n     *\n     *  This may throw, for example, a Signer connected over a Socket or\n     *  to a specific instance of a node may not be transferrable.\n     */\n    abstract connect(provider: null | Provider): Signer;\n\n    async getNonce(blockTag?: BlockTag): Promise<number> {\n        return checkProvider(this, \"getTransactionCount\").getTransactionCount(await this.getAddress(), blockTag);\n    }\n\n    async populateCall(tx: TransactionRequest): Promise<TransactionLike<string>> {\n        const pop = await populate(this, tx);\n        return pop;\n    }\n\n    async populateTransaction(tx: TransactionRequest): Promise<TransactionLike<string>> {\n        const provider = checkProvider(this, \"populateTransaction\");\n\n        const pop = await populate(this, tx);\n\n        if (pop.nonce == null) {\n            pop.nonce = await this.getNonce(\"pending\");\n        }\n\n        if (pop.gasLimit == null) {\n            pop.gasLimit = await this.estimateGas(pop);\n        }\n\n        // Populate the chain ID\n        const network = await (<Provider>(this.provider)).getNetwork();\n        if (pop.chainId != null) {\n            const chainId = getBigInt(pop.chainId);\n            assertArgument(chainId === network.chainId, \"transaction chainId mismatch\", \"tx.chainId\", tx.chainId);\n        } else {\n            pop.chainId = network.chainId;\n        }\n\n        // Do not allow mixing pre-eip-1559 and eip-1559 properties\n        const hasEip1559 = (pop.maxFeePerGas != null || pop.maxPriorityFeePerGas != null);\n        if (pop.gasPrice != null && (pop.type === 2 || hasEip1559)) {\n            assertArgument(false, \"eip-1559 transaction do not support gasPrice\", \"tx\", tx);\n        } else if ((pop.type === 0 || pop.type === 1) && hasEip1559) {\n            assertArgument(false, \"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"tx\", tx);\n        }\n\n        if ((pop.type === 2 || pop.type == null) && (pop.maxFeePerGas != null && pop.maxPriorityFeePerGas != null)) {\n            // Fully-formed EIP-1559 transaction (skip getFeeData)\n            pop.type = 2;\n\n        } else if (pop.type === 0 || pop.type === 1) {\n            // Explicit Legacy or EIP-2930 transaction\n\n            // We need to get fee data to determine things\n            const feeData = await provider.getFeeData();\n\n            assert(feeData.gasPrice != null, \"network does not support gasPrice\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"getGasPrice\" });\n\n            // Populate missing gasPrice\n            if (pop.gasPrice == null) { pop.gasPrice = feeData.gasPrice; }\n\n        } else {\n\n            // We need to get fee data to determine things\n            const feeData = await provider.getFeeData();\n\n            if (pop.type == null) {\n                // We need to auto-detect the intended type of this transaction...\n\n                if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                    // The network supports EIP-1559!\n\n                    // Upgrade transaction from null to eip-1559\n                    pop.type = 2;\n\n                    if (pop.gasPrice != null) {\n                        // Using legacy gasPrice property on an eip-1559 network,\n                        // so use gasPrice as both fee properties\n                        const gasPrice = pop.gasPrice;\n                        delete pop.gasPrice;\n                        pop.maxFeePerGas = gasPrice;\n                        pop.maxPriorityFeePerGas = gasPrice;\n\n                    } else {\n                        // Populate missing fee data\n\n                        if (pop.maxFeePerGas == null) {\n                            pop.maxFeePerGas = feeData.maxFeePerGas;\n                        }\n\n                        if (pop.maxPriorityFeePerGas == null) {\n                            pop.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                        }\n                    }\n\n                } else if (feeData.gasPrice != null) {\n                    // Network doesn't support EIP-1559...\n\n                    // ...but they are trying to use EIP-1559 properties\n                    assert(!hasEip1559, \"network does not support EIP-1559\", \"UNSUPPORTED_OPERATION\", {\n                            operation: \"populateTransaction\" });\n\n                    // Populate missing fee data\n                    if (pop.gasPrice == null) {\n                        pop.gasPrice = feeData.gasPrice;\n                    }\n\n                    // Explicitly set untyped transaction to legacy\n                    // @TODO: Maybe this shold allow type 1?\n                    pop.type = 0;\n\n               } else {\n                    // getFeeData has failed us.\n                    assert(false, \"failed to get consistent fee data\", \"UNSUPPORTED_OPERATION\", {\n                        operation: \"signer.getFeeData\" });\n                }\n\n            } else if (pop.type === 2) {\n                // Explicitly using EIP-1559\n\n                // Populate missing fee data\n                if (pop.maxFeePerGas == null) {\n                    pop.maxFeePerGas = feeData.maxFeePerGas;\n                }\n\n                if (pop.maxPriorityFeePerGas == null) {\n                    pop.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                }\n            }\n        }\n\n//@TOOD: Don't await all over the place; save them up for\n// the end for better batching\n        return await resolveProperties(pop);\n    }\n\n    async estimateGas(tx: TransactionRequest): Promise<bigint> {\n        return checkProvider(this, \"estimateGas\").estimateGas(await this.populateCall(tx));\n    }\n\n    async call(tx: TransactionRequest): Promise<string> {\n        return checkProvider(this, \"call\").call(await this.populateCall(tx));\n    }\n\n    async resolveName(name: string): Promise<null | string> {\n        const provider = checkProvider(this, \"resolveName\");\n        return await provider.resolveName(name);\n    }\n\n    async sendTransaction(tx: TransactionRequest): Promise<TransactionResponse> {\n        const provider = checkProvider(this, \"sendTransaction\");\n\n        const pop = await this.populateTransaction(tx);\n        delete pop.from;\n        const txObj = Transaction.from(pop);\n        return await provider.broadcastTransaction(await this.signTransaction(txObj));\n    }\n\n    abstract signTransaction(tx: TransactionRequest): Promise<string>;\n    abstract signMessage(message: string | Uint8Array): Promise<string>;\n    abstract signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string>;\n}\n\n/**\n *  A **VoidSigner** is a class deisgned to allow an address to be used\n *  in any API which accepts a Signer, but for which there are no\n *  credentials available to perform any actual signing.\n *\n *  This for example allow impersonating an account for the purpose of\n *  static calls or estimating gas, but does not allow sending transactions.\n */\nexport class VoidSigner extends AbstractSigner {\n    /**\n     *  The signer address.\n     */\n    readonly address!: string;\n\n    /**\n     *  Creates a new **VoidSigner** with %%address%% attached to\n     *  %%provider%%.\n     */\n    constructor(address: string, provider?: null | Provider) {\n        super(provider);\n        defineProperties<VoidSigner>(this, { address });\n    }\n\n    async getAddress(): Promise<string> { return this.address; }\n\n    connect(provider: null | Provider): VoidSigner {\n        return new VoidSigner(this.address, provider);\n    }\n\n    #throwUnsupported(suffix: string, operation: string): never {\n        assert(false, `VoidSigner cannot sign ${ suffix }`, \"UNSUPPORTED_OPERATION\", { operation });\n    }\n\n    async signTransaction(tx: TransactionRequest): Promise<string> {\n        this.#throwUnsupported(\"transactions\", \"signTransaction\");\n    }\n\n    async signMessage(message: string | Uint8Array): Promise<string> {\n        this.#throwUnsupported(\"messages\", \"signMessage\");\n    }\n\n    async signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        this.#throwUnsupported(\"typed-data\", \"signTypedData\");\n    }\n}\n\n","import { isError } from \"../utils/index.js\";\n\nimport { PollingEventSubscriber } from \"./subscriber-polling.js\";\n\nimport type { AbstractProvider, Subscriber } from \"./abstract-provider.js\";\nimport type { Network } from \"./network.js\";\nimport type { EventFilter } from \"./provider.js\";\nimport type { JsonRpcApiProvider } from \"./provider-jsonrpc.js\";\n\nfunction copy(obj: any): any {\n    return JSON.parse(JSON.stringify(obj));\n}\n\n/**\n *  Some backends support subscribing to events using a Filter ID.\n *\n *  When subscribing with this technique, the node issues a unique\n *  //Filter ID//. At this point the node dedicates resources to\n *  the filter, so that periodic calls to follow up on the //Filter ID//\n *  will receive any events since the last call.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class FilterIdSubscriber implements Subscriber {\n    #provider: JsonRpcApiProvider;\n\n    #filterIdPromise: null | Promise<string>;\n    #poller: (b: number) => Promise<void>;\n\n    #running: boolean;\n\n    #network: null | Network;\n\n    #hault: boolean;\n\n    /**\n     *  Creates a new **FilterIdSubscriber** which will used [[_subscribe]]\n     *  and [[_emitResults]] to setup the subscription and provide the event\n     *  to the %%provider%%.\n     */\n    constructor(provider: JsonRpcApiProvider) {\n        this.#provider = provider;\n\n        this.#filterIdPromise = null;\n        this.#poller = this.#poll.bind(this);\n\n        this.#running = false;\n\n        this.#network = null;\n\n        this.#hault = false;\n    }\n\n    /**\n     *  Sub-classes **must** override this to begin the subscription.\n     */\n    _subscribe(provider: JsonRpcApiProvider): Promise<string> {\n        throw new Error(\"subclasses must override this\");\n    }\n\n    /**\n     *  Sub-classes **must** override this handle the events.\n     */\n    _emitResults(provider: AbstractProvider, result: Array<any>): Promise<void> {\n        throw new Error(\"subclasses must override this\");\n    }\n\n    /**\n     *  Sub-classes **must** override this handle recovery on errors.\n     */\n    _recover(provider: AbstractProvider): Subscriber {\n        throw new Error(\"subclasses must override this\");\n    }\n\n    async #poll(blockNumber: number): Promise<void> {\n        try {\n            // Subscribe if necessary\n            if (this.#filterIdPromise == null) {\n                this.#filterIdPromise = this._subscribe(this.#provider);\n            }\n\n            // Get the Filter ID\n            let filterId: null | string = null;\n            try {\n                filterId = await this.#filterIdPromise;\n            } catch (error) {\n                if (!isError(error, \"UNSUPPORTED_OPERATION\") || error.operation !== \"eth_newFilter\") {\n                    throw error;\n                }\n            }\n\n            // The backend does not support Filter ID; downgrade to\n            // polling\n            if (filterId == null) {\n                this.#filterIdPromise = null;\n                this.#provider._recoverSubscriber(this, this._recover(this.#provider));\n                return;\n            }\n\n            const network = await this.#provider.getNetwork();\n            if (!this.#network) { this.#network = network; }\n\n            if ((this.#network as Network).chainId !== network.chainId) {\n                throw new Error(\"chaid changed\");\n            }\n\n            if (this.#hault) { return; }\n\n            const result = await this.#provider.send(\"eth_getFilterChanges\", [ filterId ]);\n            await this._emitResults(this.#provider, result);\n        } catch (error) { console.log(\"@TODO\", error); }\n\n        this.#provider.once(\"block\", this.#poller);\n    }\n\n    #teardown(): void {\n        const filterIdPromise = this.#filterIdPromise;\n        if (filterIdPromise) {\n            this.#filterIdPromise = null;\n            filterIdPromise.then((filterId) => {\n                this.#provider.send(\"eth_uninstallFilter\", [ filterId ]);\n            });\n        }\n    }\n\n    start(): void {\n        if (this.#running) { return; }\n        this.#running = true;\n\n        this.#poll(-2);\n    }\n\n    stop(): void {\n        if (!this.#running) { return; }\n        this.#running = false;\n\n        this.#hault = true;\n        this.#teardown();\n        this.#provider.off(\"block\", this.#poller);\n    }\n\n    pause(dropWhilePaused?: boolean): void {\n        if (dropWhilePaused){ this.#teardown(); }\n        this.#provider.off(\"block\", this.#poller);\n    }\n\n    resume(): void { this.start(); }\n}\n\n/**\n *  A **FilterIdSubscriber** for receiving contract events.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class FilterIdEventSubscriber extends FilterIdSubscriber {\n    #event: EventFilter;\n\n    /**\n     *  Creates a new **FilterIdEventSubscriber** attached to %%provider%%\n     *  listening for %%filter%%.\n     */\n    constructor(provider: JsonRpcApiProvider, filter: EventFilter) {\n        super(provider);\n        this.#event = copy(filter);\n    }\n\n    _recover(provider: AbstractProvider): Subscriber {\n        return new PollingEventSubscriber(provider, this.#event);\n    }\n\n    async _subscribe(provider: JsonRpcApiProvider): Promise<string> {\n        const filterId = await provider.send(\"eth_newFilter\", [ this.#event ]);\n        return filterId;\n    }\n\n    async _emitResults(provider: JsonRpcApiProvider, results: Array<any>): Promise<void> {\n        for (const result of results) {\n            provider.emit(this.#event, provider._wrapLog(result, provider._network));\n        }\n    }\n}\n\n/**\n *  A **FilterIdSubscriber** for receiving pending transactions events.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class FilterIdPendingSubscriber extends FilterIdSubscriber {\n    async _subscribe(provider: JsonRpcApiProvider): Promise<string> {\n        return await provider.send(\"eth_newPendingTransactionFilter\", [ ]);\n    }\n\n    async _emitResults(provider: JsonRpcApiProvider, results: Array<any>): Promise<void> {\n        for (const result of results) {\n            provider.emit(\"pending\", result);\n        }\n    }\n}\n","/**\n *  One of the most common ways to interact with the blockchain is\n *  by a node running a JSON-RPC interface which can be connected to,\n *  based on the transport, using:\n *\n *  - HTTP or HTTPS - [[JsonRpcProvider]]\n *  - WebSocket - [[WebSocketProvider]]\n *  - IPC - [[IpcSocketProvider]]\n *\n * @_section: api/providers/jsonrpc:JSON-RPC Provider  [about-jsonrpcProvider]\n */\n\n// @TODO:\n// - Add the batching API\n\n// https://playground.open-rpc.org/?schemaUrl=https://raw.githubusercontent.com/ethereum/eth1.0-apis/assembled-spec/openrpc.json&uiSchema%5BappBar%5D%5Bui:splitView%5D=true&uiSchema%5BappBar%5D%5Bui:input%5D=false&uiSchema%5BappBar%5D%5Bui:examplesDropdown%5D=false\n\nimport { AbiCoder } from \"../abi/index.js\";\nimport { getAddress, resolveAddress } from \"../address/index.js\";\nimport { TypedDataEncoder } from \"../hash/index.js\";\nimport { accessListify } from \"../transaction/index.js\";\nimport {\n    defineProperties, getBigInt, hexlify, isHexString, toQuantity, toUtf8Bytes,\n    isError, makeError, assert, assertArgument,\n    FetchRequest, resolveProperties\n} from \"../utils/index.js\";\n\nimport { AbstractProvider, UnmanagedSubscriber } from \"./abstract-provider.js\";\nimport { AbstractSigner } from \"./abstract-signer.js\";\nimport { Network } from \"./network.js\";\nimport { FilterIdEventSubscriber, FilterIdPendingSubscriber } from \"./subscriber-filterid.js\";\nimport { PollingEventSubscriber } from \"./subscriber-polling.js\";\n\nimport type { TypedDataDomain, TypedDataField } from \"../hash/index.js\";\nimport type { TransactionLike } from \"../transaction/index.js\";\n\nimport type { PerformActionRequest, Subscriber, Subscription } from \"./abstract-provider.js\";\nimport type { Networkish } from \"./network.js\";\nimport type { Provider, TransactionRequest, TransactionResponse } from \"./provider.js\";\nimport type { Signer } from \"./signer.js\";\n\ntype Timer = ReturnType<typeof setTimeout>;\n\nconst Primitive = \"bigint,boolean,function,number,string,symbol\".split(/,/g);\n//const Methods = \"getAddress,then\".split(/,/g);\nfunction deepCopy<T = any>(value: T): T {\n    if (value == null || Primitive.indexOf(typeof(value)) >= 0) {\n        return value;\n    }\n\n    // Keep any Addressable\n    if (typeof((<any>value).getAddress) === \"function\") {\n        return value;\n    }\n\n    if (Array.isArray(value)) { return <any>(value.map(deepCopy)); }\n\n    if (typeof(value) === \"object\") {\n        return Object.keys(value).reduce((accum, key) => {\n            accum[key] = (<any>value)[key];\n            return accum;\n        }, <any>{ });\n    }\n\n    throw new Error(`should not happen: ${ value } (${ typeof(value) })`);\n}\n\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => { setTimeout(resolve, duration); });\n}\n\nfunction getLowerCase(value: string): string {\n    if (value) { return value.toLowerCase(); }\n    return value;\n}\n\ninterface Pollable {\n    pollingInterval: number;\n}\n\nfunction isPollable(value: any): value is Pollable {\n    return (value && typeof(value.pollingInterval) === \"number\");\n}\n\n/**\n *  A JSON-RPC payload, which are sent to a JSON-RPC server.\n */\nexport type JsonRpcPayload = {\n    /**\n     *  The JSON-RPC request ID.\n     */\n    id: number;\n\n    /**\n     *  The JSON-RPC request method.\n     */\n    method: string;\n\n    /**\n     *  The JSON-RPC request parameters.\n     */\n    params: Array<any> | Record<string, any>;\n\n    /**\n     *  A required constant in the JSON-RPC specification.\n     */\n    jsonrpc: \"2.0\";\n};\n\n/**\n *  A JSON-RPC result, which are returned on success from a JSON-RPC server.\n */\nexport type JsonRpcResult = {\n    /**\n     *  The response ID to match it to the relevant request.\n     */\n    id: number;\n\n    /**\n     *  The response result.\n     */\n    result: any;\n};\n\n/**\n *  A JSON-RPC error, which are returned on failure from a JSON-RPC server.\n */\nexport type JsonRpcError = {\n    /**\n     *  The response ID to match it to the relevant request.\n     */\n    id: number;\n\n    /**\n     *  The response error.\n     */\n    error: {\n        code: number;\n        message?: string;\n        data?: any;\n    }\n};\n\n/**\n *  When subscribing to the ``\"debug\"`` event, the [[Listener]] will\n *  receive this object as the first parameter.\n */\nexport type DebugEventJsonRpcApiProvider = {\n    action: \"sendRpcPayload\",\n    payload: JsonRpcPayload | Array<JsonRpcPayload>\n} | {\n    action: \"receiveRpcResult\",\n    result: Array<JsonRpcResult | JsonRpcError>\n} | {\n    action: \"receiveRpcError\",\n    error: Error\n};\n\n/**\n *  Options for configuring a [[JsonRpcApiProvider]]. Much of this\n *  is targetted towards sub-classes, which often will not expose\n *  any of these options to their consumers.\n *\n *  **``polling``** - use the polling strategy is used immediately\n *  for events; otherwise, attempt to use filters and fall back onto\n *  polling (default: ``false``)\n *\n *  **``staticNetwork``** - do not request chain ID on requests to\n *  validate the underlying chain has not changed (default: ``null``)\n *\n *  This should **ONLY** be used if it is **certain** that the network\n *  cannot change, such as when using INFURA (since the URL dictates the\n *  network). If the network is assumed static and it does change, this\n *  can have tragic consequences. For example, this **CANNOT** be used\n *  with MetaMask, since the used can select a new network from the\n *  drop-down at any time.\n *\n *  **``batchStallTime``** - how long (ms) to aggregate requests into a\n *  single batch. ``0`` indicates batching will only encompass the current\n *  event loop. If ``batchMaxCount = 1``, this is ignored. (default: ``10``)\n *\n *  **``batchMaxSize``** - target maximum size (bytes) to allow per batch\n *  request (default: 1Mb)\n *\n *  **``batchMaxCount``** - maximum number of requests to allow in a batch.\n *  If ``batchMaxCount = 1``, then batching is disabled. (default: ``100``)\n *\n *  **``cacheTimeout``** - passed as [[AbstractProviderOptions]].\n */\nexport type JsonRpcApiProviderOptions = {\n    polling?: boolean;\n    staticNetwork?: null | boolean | Network;\n    batchStallTime?: number;\n    batchMaxSize?: number;\n    batchMaxCount?: number;\n\n    cacheTimeout?: number;\n    pollingInterval?: number;\n};\n\nconst defaultOptions = {\n    polling: false,\n    staticNetwork: null,\n\n    batchStallTime: 10,      // 10ms\n    batchMaxSize: (1 << 20), // 1Mb\n    batchMaxCount: 100,      // 100 requests\n\n    cacheTimeout: 250,\n    pollingInterval: 4000\n}\n\n/**\n *  A **JsonRpcTransactionRequest** is formatted as needed by the JSON-RPC\n *  Ethereum API specification.\n */\nexport interface JsonRpcTransactionRequest {\n     /**\n      *  The sender address to use when signing.\n      */\n     from?: string;\n\n     /**\n      *  The target address.\n      */\n     to?: string;\n\n     /**\n      *  The transaction data.\n      */\n     data?: string;\n\n     /**\n      *  The chain ID the transaction is valid on.\n      */\n     chainId?: string;\n\n     /**\n      *  The [[link-eip-2718]] transaction type.\n      */\n     type?: string;\n\n     /**\n      *  The maximum amount of gas to allow a transaction to consume.\n      *\n      *  In most other places in ethers, this is called ``gasLimit`` which\n      *  differs from the JSON-RPC Ethereum API specification.\n      */\n     gas?: string;\n\n     /**\n      *  The gas price per wei for transactions prior to [[link-eip-1559]].\n      */\n     gasPrice?: string;\n\n     /**\n      *  The maximum fee per gas for [[link-eip-1559]] transactions.\n      */\n     maxFeePerGas?: string;\n\n     /**\n      *  The maximum priority fee per gas for [[link-eip-1559]] transactions.\n      */\n     maxPriorityFeePerGas?: string;\n\n     /**\n      *  The nonce for the transaction.\n      */\n     nonce?: string;\n\n     /**\n      *  The transaction value (in wei).\n      */\n     value?: string;\n\n     /**\n      *  The transaction access list.\n      */\n     accessList?: Array<{ address: string, storageKeys: Array<string> }>;\n}\n\n// @TODO: Unchecked Signers\n\nexport class JsonRpcSigner extends AbstractSigner<JsonRpcApiProvider> {\n    address!: string;\n\n    constructor(provider: JsonRpcApiProvider, address: string) {\n        super(provider);\n        address = getAddress(address);\n        defineProperties<JsonRpcSigner>(this, { address });\n    }\n\n    connect(provider: null | Provider): Signer {\n        assert(false, \"cannot reconnect JsonRpcSigner\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"signer.connect\"\n        });\n    }\n\n    async getAddress(): Promise<string> {\n        return this.address;\n    }\n\n    // JSON-RPC will automatially fill in nonce, etc. so we just check from\n    async populateTransaction(tx: TransactionRequest): Promise<TransactionLike<string>> {\n        return await this.populateCall(tx);\n    }\n\n    // Returns just the hash of the transaction after sent, which is what\n    // the bare JSON-RPC API does;\n    async sendUncheckedTransaction(_tx: TransactionRequest): Promise<string> {\n        const tx = deepCopy(_tx);\n\n        const promises: Array<Promise<void>> = [];\n\n        // Make sure the from matches the sender\n        if (tx.from) {\n            const _from = tx.from;\n            promises.push((async () => {\n                const from = await resolveAddress(_from, this.provider);\n                assertArgument(from != null && from.toLowerCase() === this.address.toLowerCase(),\n                    \"from address mismatch\", \"transaction\", _tx);\n                tx.from = from;\n            })());\n        } else {\n            tx.from = this.address;\n        }\n\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (tx.gasLimit == null) {\n            promises.push((async () => {\n                tx.gasLimit = await this.provider.estimateGas({ ...tx, from: this.address});\n            })());\n        }\n\n        // The address may be an ENS name or Addressable\n        if (tx.to != null) {\n            const _to = tx.to;\n            promises.push((async () => {\n                tx.to = await resolveAddress(_to, this.provider);\n            })());\n        }\n\n        // Wait until all of our properties are filled in\n        if (promises.length) { await Promise.all(promises); }\n\n        const hexTx = this.provider.getRpcTransaction(tx);\n\n        return this.provider.send(\"eth_sendTransaction\", [ hexTx ]);\n    }\n\n    async sendTransaction(tx: TransactionRequest): Promise<TransactionResponse> {\n        // This cannot be mined any earlier than any recent block\n        const blockNumber = await this.provider.getBlockNumber();\n\n        // Send the transaction\n        const hash = await this.sendUncheckedTransaction(tx);\n\n        // Unfortunately, JSON-RPC only provides and opaque transaction hash\n        // for a response, and we need the actual transaction, so we poll\n        // for it; it should show up very quickly\n        return await (new Promise((resolve, reject) => {\n            const timeouts = [ 1000, 100 ];\n            let invalids = 0;\n\n            const checkTx = async () => {\n\n                try {\n                    // Try getting the transaction\n                    const tx = await this.provider.getTransaction(hash);\n\n                    if (tx != null) {\n                        resolve(tx.replaceableTransaction(blockNumber));\n                        return;\n                    }\n\n                } catch (error) {\n\n                    // If we were cancelled: stop polling.\n                    // If the data is bad: the node returns bad transactions\n                    // If the network changed: calling again will also fail\n                    // If unsupported: likely destroyed\n                    if (isError(error, \"CANCELLED\") || isError(error, \"BAD_DATA\") ||\n                        isError(error, \"NETWORK_ERROR\" || isError(error, \"UNSUPPORTED_OPERATION\"))) {\n\n                        if (error.info == null) { error.info = { }; }\n                        error.info.sendTransactionHash = hash;\n\n                        reject(error);\n                        return;\n                    }\n\n                    // Stop-gap for misbehaving backends; see #4513\n                    if (isError(error, \"INVALID_ARGUMENT\")) {\n                        invalids++;\n                        if (error.info == null) { error.info = { }; }\n                        error.info.sendTransactionHash = hash;\n                        if (invalids > 10) {\n                            reject(error);\n                            return;\n                        }\n                    }\n\n                    // Notify anyone that cares; but we will try again, since\n                    // it is likely an intermittent service error\n                    this.provider.emit(\"error\", makeError(\"failed to fetch transation after sending (will try again)\", \"UNKNOWN_ERROR\", { error }));\n                }\n\n                // Wait another 4 seconds\n                this.provider._setTimeout(() => { checkTx(); }, timeouts.pop() || 4000);\n            };\n            checkTx();\n        }));\n    }\n\n    async signTransaction(_tx: TransactionRequest): Promise<string> {\n        const tx = deepCopy(_tx);\n\n        // Make sure the from matches the sender\n        if (tx.from) {\n            const from = await resolveAddress(tx.from, this.provider);\n            assertArgument(from != null && from.toLowerCase() === this.address.toLowerCase(),\n                \"from address mismatch\", \"transaction\", _tx);\n            tx.from = from;\n        } else {\n            tx.from = this.address;\n        }\n\n        const hexTx = this.provider.getRpcTransaction(tx);\n        return await this.provider.send(\"eth_signTransaction\", [ hexTx ]);\n    }\n\n\n    async signMessage(_message: string | Uint8Array): Promise<string> {\n        const message = ((typeof(_message) === \"string\") ? toUtf8Bytes(_message): _message);\n        return await this.provider.send(\"personal_sign\", [\n            hexlify(message), this.address.toLowerCase() ]);\n    }\n\n    async signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, _value: Record<string, any>): Promise<string> {\n        const value = deepCopy(_value);\n\n        // Populate any ENS names (in-place)\n        const populated = await TypedDataEncoder.resolveNames(domain, types, value, async (value: string) => {\n            const address = await resolveAddress(value);\n            assertArgument(address != null, \"TypedData does not support null address\", \"value\", value);\n            return address;\n        });\n\n        return await this.provider.send(\"eth_signTypedData_v4\", [\n            this.address.toLowerCase(),\n            JSON.stringify(TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n        ]);\n    }\n\n    async unlock(password: string): Promise<boolean> {\n        return this.provider.send(\"personal_unlockAccount\", [\n            this.address.toLowerCase(), password, null ]);\n    }\n\n    // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n    async _legacySignMessage(_message: string | Uint8Array): Promise<string> {\n        const message = ((typeof(_message) === \"string\") ? toUtf8Bytes(_message): _message);\n        return await this.provider.send(\"eth_sign\", [\n            this.address.toLowerCase(), hexlify(message) ]);\n    }\n}\n\ntype ResolveFunc = (result: JsonRpcResult) => void;\ntype RejectFunc = (error: Error) => void;\n\ntype Payload = { payload: JsonRpcPayload, resolve: ResolveFunc, reject: RejectFunc };\n\n/**\n *  The JsonRpcApiProvider is an abstract class and **MUST** be\n *  sub-classed.\n *\n *  It provides the base for all JSON-RPC-based Provider interaction.\n *\n *  Sub-classing Notes:\n *  - a sub-class MUST override _send\n *  - a sub-class MUST call the `_start()` method once connected\n */\nexport abstract class JsonRpcApiProvider extends AbstractProvider {\n\n    #options: Required<JsonRpcApiProviderOptions>;\n\n    // The next ID to use for the JSON-RPC ID field\n    #nextId: number;\n\n    // Payloads are queued and triggered in batches using the drainTimer\n    #payloads: Array<Payload>;\n    #drainTimer: null | Timer;\n\n    #notReady: null | {\n        promise: Promise<void>,\n        resolve: null | ((v: void) => void)\n    };\n\n    #network: null | Network;\n    #pendingDetectNetwork: null | Promise<Network>;\n\n    #scheduleDrain(): void {\n        if (this.#drainTimer) { return; }\n\n        // If we aren't using batching, no harm in sending it immediately\n        const stallTime = (this._getOption(\"batchMaxCount\") === 1) ? 0: this._getOption(\"batchStallTime\");\n\n        this.#drainTimer = setTimeout(() => {\n            this.#drainTimer = null;\n\n            const payloads = this.#payloads;\n            this.#payloads = [ ];\n\n            while (payloads.length) {\n\n                // Create payload batches that satisfy our batch constraints\n                const batch = [ <Payload>(payloads.shift()) ];\n                while (payloads.length) {\n                    if (batch.length === this.#options.batchMaxCount) { break; }\n                    batch.push(<Payload>(payloads.shift()));\n                    const bytes = JSON.stringify(batch.map((p) => p.payload));\n                    if (bytes.length > this.#options.batchMaxSize) {\n                        payloads.unshift(<Payload>(batch.pop()));\n                        break;\n                    }\n                }\n\n                // Process the result to each payload\n                (async () => {\n                    const payload = ((batch.length === 1) ? batch[0].payload: batch.map((p) => p.payload));\n\n                    this.emit(\"debug\", { action: \"sendRpcPayload\", payload });\n\n                    try {\n                        const result = await this._send(payload);\n                        this.emit(\"debug\", { action: \"receiveRpcResult\", result });\n\n                        // Process results in batch order\n                        for (const { resolve, reject, payload } of batch) {\n\n                            if (this.destroyed) {\n                                reject(makeError(\"provider destroyed; cancelled request\", \"UNSUPPORTED_OPERATION\", { operation: payload.method }));\n                                continue;\n                            }\n\n                            // Find the matching result\n                            const resp = result.filter((r) => (r.id === payload.id))[0];\n\n                            // No result; the node failed us in unexpected ways\n                            if (resp == null) {\n                                const error = makeError(\"missing response for request\", \"BAD_DATA\", {\n                                    value: result, info: { payload }\n                                });\n                                this.emit(\"error\", error);\n                                reject(error);\n                                continue;\n                            }\n\n                            // The response is an error\n                            if (\"error\" in resp) {\n                                reject(this.getRpcError(payload, resp));\n                                continue;\n                            }\n\n                            // All good; send the result\n                            resolve(resp.result);\n                        }\n\n                    } catch (error: any) {\n                        this.emit(\"debug\", { action: \"receiveRpcError\", error });\n\n                        for (const { reject } of batch) {\n                            // @TODO: augment the error with the payload\n                            reject(error);\n                        }\n                    }\n                })();\n            }\n        }, stallTime);\n    }\n\n    constructor(network?: Networkish, options?: JsonRpcApiProviderOptions) {\n        super(network, options);\n\n        this.#nextId = 1;\n        this.#options = Object.assign({ }, defaultOptions, options || { });\n\n        this.#payloads = [ ];\n        this.#drainTimer = null;\n\n        this.#network = null;\n        this.#pendingDetectNetwork = null;\n\n        {\n            let resolve: null | ((value: void) => void) = null;\n            const promise = new Promise((_resolve: (value: void) => void) => {\n                resolve = _resolve;\n            });\n            this.#notReady = { promise, resolve };\n        }\n\n        const staticNetwork = this._getOption(\"staticNetwork\");\n        if (typeof(staticNetwork) === \"boolean\") {\n            assertArgument(!staticNetwork || network !== \"any\", \"staticNetwork cannot be used on special network 'any'\", \"options\", options);\n            if (staticNetwork && network != null) {\n                this.#network = Network.from(network);\n            }\n\n        } else if (staticNetwork) {\n            // Make sure any static network is compatbile with the provided netwrok\n            assertArgument(network == null || staticNetwork.matches(network),\n                \"staticNetwork MUST match network object\", \"options\", options);\n            this.#network = staticNetwork;\n        }\n    }\n\n    /**\n     *  Returns the value associated with the option %%key%%.\n     *\n     *  Sub-classes can use this to inquire about configuration options.\n     */\n    _getOption<K extends keyof JsonRpcApiProviderOptions>(key: K): JsonRpcApiProviderOptions[K] {\n        return this.#options[key];\n    }\n\n    /**\n     *  Gets the [[Network]] this provider has committed to. On each call, the network\n     *  is detected, and if it has changed, the call will reject.\n     */\n    get _network(): Network {\n        assert (this.#network, \"network is not available yet\", \"NETWORK_ERROR\");\n        return this.#network;\n    }\n\n    /**\n     *  Sends a JSON-RPC %%payload%% (or a batch) to the underlying channel.\n     *\n     *  Sub-classes **MUST** override this.\n     */\n    abstract _send(payload: JsonRpcPayload | Array<JsonRpcPayload>): Promise<Array<JsonRpcResult | JsonRpcError>>;\n\n\n    /**\n     *  Resolves to the non-normalized value by performing %%req%%.\n     *\n     *  Sub-classes may override this to modify behavior of actions,\n     *  and should generally call ``super._perform`` as a fallback.\n     */\n    async _perform(req: PerformActionRequest): Promise<any> {\n\n        // Legacy networks do not like the type field being passed along (which\n        // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n        if (req.method === \"call\" || req.method === \"estimateGas\") {\n            let tx = req.transaction;\n            if (tx && tx.type != null && getBigInt(tx.type)) {\n                // If there are no EIP-1559 properties, it might be non-EIP-a559\n                if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                    const feeData = await this.getFeeData();\n                    if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                        // Network doesn't know about EIP-1559 (and hence type)\n                        req = Object.assign({ }, req, {\n                            transaction: Object.assign({ }, tx, { type: undefined })\n                        });\n                    }\n                }\n            }\n        }\n\n        const request = this.getRpcRequest(req);\n\n        if (request != null) {\n            return await this.send(request.method, request.args);\n        }\n\n        return super._perform(req);\n    }\n\n    /**\n     *  Sub-classes may override this; it detects the *actual* network that\n     *  we are **currently** connected to.\n     *\n     *  Keep in mind that [[send]] may only be used once [[ready]], otherwise the\n     *  _send primitive must be used instead.\n     */\n    async _detectNetwork(): Promise<Network> {\n        const network = this._getOption(\"staticNetwork\");\n        if (network) {\n            if (network === true) {\n                if (this.#network) { return this.#network; }\n            } else {\n                return network;\n            }\n        }\n\n        if (this.#pendingDetectNetwork) {\n            return await this.#pendingDetectNetwork;\n        }\n\n        // If we are ready, use ``send``, which enabled requests to be batched\n        if (this.ready) {\n            this.#pendingDetectNetwork = (async () => {\n                try {\n                    const result = Network.from(getBigInt(await this.send(\"eth_chainId\", [ ])));\n                    this.#pendingDetectNetwork = null;\n                    return result;\n                } catch (error) {\n                    this.#pendingDetectNetwork = null;\n                    throw error;\n                }\n            })();\n            return await this.#pendingDetectNetwork;\n        }\n\n        // We are not ready yet; use the primitive _send\n        this.#pendingDetectNetwork = (async () => {\n            const payload: JsonRpcPayload = {\n                id: this.#nextId++, method: \"eth_chainId\", params: [ ], jsonrpc: \"2.0\"\n            };\n\n            this.emit(\"debug\", { action: \"sendRpcPayload\", payload });\n\n            let result: JsonRpcResult | JsonRpcError;\n            try {\n                result = (await this._send(payload))[0];\n                this.#pendingDetectNetwork = null;\n            } catch (error) {\n                this.#pendingDetectNetwork = null;\n                this.emit(\"debug\", { action: \"receiveRpcError\", error });\n                throw error;\n            }\n\n            this.emit(\"debug\", { action: \"receiveRpcResult\", result });\n\n            if (\"result\" in result) {\n                return Network.from(getBigInt(result.result));\n            }\n\n            throw this.getRpcError(payload, result);\n        })();\n\n        return await this.#pendingDetectNetwork;\n    }\n\n    /**\n     *  Sub-classes **MUST** call this. Until [[_start]] has been called, no calls\n     *  will be passed to [[_send]] from [[send]]. If it is overridden, then\n     *  ``super._start()`` **MUST** be called.\n     *\n     *  Calling it multiple times is safe and has no effect.\n     */\n    _start(): void {\n        if (this.#notReady == null || this.#notReady.resolve == null) { return; }\n\n        this.#notReady.resolve();\n        this.#notReady = null;\n\n        (async () => {\n\n            // Bootstrap the network\n            while (this.#network == null && !this.destroyed) {\n                try {\n                    this.#network = await this._detectNetwork();\n                } catch (error) {\n                    if (this.destroyed) { break; }\n                    console.log(\"JsonRpcProvider failed to detect network and cannot start up; retry in 1s (perhaps the URL is wrong or the node is not started)\");\n                    this.emit(\"error\", makeError(\"failed to bootstrap network detection\", \"NETWORK_ERROR\", { event: \"initial-network-discovery\", info: { error } }));\n                    await stall(1000);\n                }\n            }\n\n            // Start dispatching requests\n            this.#scheduleDrain();\n        })();\n    }\n\n    /**\n     *  Resolves once the [[_start]] has been called. This can be used in\n     *  sub-classes to defer sending data until the connection has been\n     *  established.\n     */\n    async _waitUntilReady(): Promise<void> {\n        if (this.#notReady == null) { return; }\n        return await this.#notReady.promise;\n    }\n\n\n    /**\n     *  Return a Subscriber that will manage the %%sub%%.\n     *\n     *  Sub-classes may override this to modify the behavior of\n     *  subscription management.\n     */\n    _getSubscriber(sub: Subscription): Subscriber {\n\n        // Pending Filters aren't availble via polling\n        if (sub.type === \"pending\") { return new FilterIdPendingSubscriber(this); }\n\n        if (sub.type === \"event\") {\n            if (this._getOption(\"polling\")) {\n                return new PollingEventSubscriber(this, sub.filter);\n            }\n            return new FilterIdEventSubscriber(this, sub.filter);\n        }\n\n        // Orphaned Logs are handled automatically, by the filter, since\n        // logs with removed are emitted by it\n        if (sub.type === \"orphan\" && sub.filter.orphan === \"drop-log\") {\n            return new UnmanagedSubscriber(\"orphan\");\n        }\n\n        return super._getSubscriber(sub);\n    }\n\n    /**\n     *  Returns true only if the [[_start]] has been called.\n     */\n    get ready(): boolean { return this.#notReady == null; }\n\n    /**\n     *  Returns %%tx%% as a normalized JSON-RPC transaction request,\n     *  which has all values hexlified and any numeric values converted\n     *  to Quantity values.\n     */\n    getRpcTransaction(tx: TransactionRequest): JsonRpcTransactionRequest {\n        const result: JsonRpcTransactionRequest = {};\n\n        // JSON-RPC now requires numeric values to be \"quantity\" values\n        [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach((key) => {\n            if ((<any>tx)[key] == null) { return; }\n            let dstKey = key;\n            if (key === \"gasLimit\") { dstKey = \"gas\"; }\n            (<any>result)[dstKey] = toQuantity(getBigInt((<any>tx)[key], `tx.${ key }`));\n        });\n\n        // Make sure addresses and data are lowercase\n        [\"from\", \"to\", \"data\"].forEach((key) => {\n            if ((<any>tx)[key] == null) { return; }\n            (<any>result)[key] = hexlify((<any>tx)[key]);\n        });\n\n        // Normalize the access list object\n        if (tx.accessList) {\n            result[\"accessList\"] = accessListify(tx.accessList);\n        }\n\n        return result;\n    }\n\n    /**\n     *  Returns the request method and arguments required to perform\n     *  %%req%%.\n     */\n    getRpcRequest(req: PerformActionRequest): null | { method: string, args: Array<any> } {\n        switch (req.method) {\n            case \"chainId\":\n                return { method: \"eth_chainId\", args: [ ] };\n\n            case \"getBlockNumber\":\n                return { method: \"eth_blockNumber\", args: [ ] };\n\n            case \"getGasPrice\":\n                return { method: \"eth_gasPrice\", args: [] };\n\n            case \"getPriorityFee\":\n                return { method: \"eth_maxPriorityFeePerGas\", args: [ ] };\n\n            case \"getBalance\":\n                return {\n                    method: \"eth_getBalance\",\n                    args: [ getLowerCase(req.address), req.blockTag ]\n                };\n\n            case \"getTransactionCount\":\n                return {\n                    method: \"eth_getTransactionCount\",\n                    args: [ getLowerCase(req.address), req.blockTag ]\n                };\n\n            case \"getCode\":\n                return {\n                    method: \"eth_getCode\",\n                    args: [ getLowerCase(req.address), req.blockTag ]\n                };\n\n            case \"getStorage\":\n                return {\n                    method: \"eth_getStorageAt\",\n                    args: [\n                        getLowerCase(req.address),\n                        (\"0x\" + req.position.toString(16)),\n                        req.blockTag\n                    ]\n                };\n\n            case \"broadcastTransaction\":\n                return {\n                    method: \"eth_sendRawTransaction\",\n                    args: [ req.signedTransaction ]\n                };\n\n            case \"getBlock\":\n                if (\"blockTag\" in req) {\n                    return {\n                        method: \"eth_getBlockByNumber\",\n                        args: [ req.blockTag, !!req.includeTransactions ]\n                    };\n                } else if (\"blockHash\" in req) {\n                    return {\n                        method: \"eth_getBlockByHash\",\n                        args: [ req.blockHash, !!req.includeTransactions ]\n                    };\n                }\n                break;\n\n            case \"getTransaction\":\n                return {\n                    method: \"eth_getTransactionByHash\",\n                    args: [ req.hash ]\n                };\n\n            case \"getTransactionReceipt\":\n                return {\n                    method: \"eth_getTransactionReceipt\",\n                    args: [ req.hash ]\n                };\n\n            case \"call\":\n                return {\n                    method: \"eth_call\",\n                    args: [ this.getRpcTransaction(req.transaction), req.blockTag ]\n                };\n\n            case \"estimateGas\": {\n                return {\n                    method: \"eth_estimateGas\",\n                    args: [ this.getRpcTransaction(req.transaction) ]\n                };\n            }\n\n            case \"getLogs\":\n                if (req.filter && req.filter.address != null) {\n                    if (Array.isArray(req.filter.address)) {\n                        req.filter.address = req.filter.address.map(getLowerCase);\n                    } else {\n                        req.filter.address = getLowerCase(req.filter.address);\n                    }\n                }\n                return { method: \"eth_getLogs\", args: [ req.filter ] };\n        }\n\n        return null;\n    }\n\n    /**\n     *  Returns an ethers-style Error for the given JSON-RPC error\n     *  %%payload%%, coalescing the various strings and error shapes\n     *  that different nodes return, coercing them into a machine-readable\n     *  standardized error.\n     */\n    getRpcError(payload: JsonRpcPayload, _error: JsonRpcError): Error {\n        const { method } = payload;\n        const { error } = _error;\n\n        if (method === \"eth_estimateGas\" && error.message) {\n            const msg = error.message;\n            if (!msg.match(/revert/i) && msg.match(/insufficient funds/i)) {\n                return makeError(\"insufficient funds\", \"INSUFFICIENT_FUNDS\", {\n                    transaction: ((<any>payload).params[0]),\n                    info: { payload, error }\n                });\n            }\n        }\n\n        if (method === \"eth_call\" || method === \"eth_estimateGas\") {\n            const result = spelunkData(error);\n\n            const e = AbiCoder.getBuiltinCallException(\n                (method === \"eth_call\") ? \"call\": \"estimateGas\",\n                ((<any>payload).params[0]),\n                (result ? result.data: null)\n            );\n            e.info = { error, payload };\n            return e;\n        }\n\n        // Only estimateGas and call can return arbitrary contract-defined text, so now we\n        // we can process text safely.\n\n        const message = JSON.stringify(spelunkMessage(error));\n\n        if (typeof(error.message) === \"string\" && error.message.match(/user denied|ethers-user-denied/i)) {\n            const actionMap: Record<string, \"requestAccess\" | \"sendTransaction\" | \"signMessage\" | \"signTransaction\" | \"signTypedData\"> = {\n                eth_sign: \"signMessage\",\n                personal_sign: \"signMessage\",\n                eth_signTypedData_v4: \"signTypedData\",\n                eth_signTransaction: \"signTransaction\",\n                eth_sendTransaction: \"sendTransaction\",\n                eth_requestAccounts: \"requestAccess\",\n                wallet_requestAccounts: \"requestAccess\",\n            };\n\n            return makeError(`user rejected action`, \"ACTION_REJECTED\", {\n                action: (actionMap[method] || \"unknown\") ,\n                reason: \"rejected\",\n                info: { payload, error }\n            });\n        }\n\n        if (method === \"eth_sendRawTransaction\" || method === \"eth_sendTransaction\") {\n            const transaction = <TransactionLike<string>>((<any>payload).params[0]);\n\n            if (message.match(/insufficient funds|base fee exceeds gas limit/i)) {\n                return makeError(\"insufficient funds for intrinsic transaction cost\", \"INSUFFICIENT_FUNDS\", {\n                    transaction, info: { error }\n                });\n            }\n\n            if (message.match(/nonce/i) && message.match(/too low/i)) {\n                return makeError(\"nonce has already been used\", \"NONCE_EXPIRED\", { transaction, info: { error } });\n            }\n\n            // \"replacement transaction underpriced\"\n            if (message.match(/replacement transaction/i) && message.match(/underpriced/i)) {\n                return makeError(\"replacement fee too low\", \"REPLACEMENT_UNDERPRICED\", { transaction, info: { error } });\n            }\n\n            if (message.match(/only replay-protected/i)) {\n                return makeError(\"legacy pre-eip-155 transactions not supported\", \"UNSUPPORTED_OPERATION\", {\n                    operation: method, info: { transaction, info: { error } }\n                });\n            }\n        }\n\n        let unsupported = !!message.match(/the method .* does not exist/i);\n        if (!unsupported) {\n            if (error && (<any>error).details && (<any>error).details.startsWith(\"Unauthorized method:\")) {\n                unsupported = true;\n            }\n        }\n\n        if (unsupported) {\n            return makeError(\"unsupported operation\", \"UNSUPPORTED_OPERATION\", {\n                operation: payload.method, info: { error, payload }\n            });\n        }\n\n        return makeError(\"could not coalesce error\", \"UNKNOWN_ERROR\", { error, payload });\n    }\n\n\n    /**\n     *  Requests the %%method%% with %%params%% via the JSON-RPC protocol\n     *  over the underlying channel. This can be used to call methods\n     *  on the backend that do not have a high-level API within the Provider\n     *  API.\n     *\n     *  This method queues requests according to the batch constraints\n     *  in the options, assigns the request a unique ID.\n     *\n     *  **Do NOT override** this method in sub-classes; instead\n     *  override [[_send]] or force the options values in the\n     *  call to the constructor to modify this method's behavior.\n     */\n    send(method: string, params: Array<any> | Record<string, any>): Promise<any> {\n        // @TODO: cache chainId?? purge on switch_networks\n\n        // We have been destroyed; no operations are supported anymore\n        if (this.destroyed) {\n            return Promise.reject(makeError(\"provider destroyed; cancelled request\", \"UNSUPPORTED_OPERATION\", { operation: method }));\n        }\n\n        const id = this.#nextId++;\n        const promise = new Promise((resolve, reject) => {\n            this.#payloads.push({\n                resolve, reject,\n                payload: { method, params, id, jsonrpc: \"2.0\" }\n            });\n        });\n\n        // If there is not a pending drainTimer, set one\n        this.#scheduleDrain();\n\n        return <Promise<JsonRpcResult>>promise;\n    }\n\n    /**\n     *  Resolves to the [[Signer]] account for  %%address%% managed by\n     *  the client.\n     *\n     *  If the %%address%% is a number, it is used as an index in the\n     *  the accounts from [[listAccounts]].\n     *\n     *  This can only be used on clients which manage accounts (such as\n     *  Geth with imported account or MetaMask).\n     *\n     *  Throws if the account doesn't exist.\n     */\n    async getSigner(address?: number | string): Promise<JsonRpcSigner> {\n        if (address == null) { address = 0; }\n\n        const accountsPromise = this.send(\"eth_accounts\", [ ]);\n\n        // Account index\n        if (typeof(address) === \"number\") {\n            const accounts = <Array<string>>(await accountsPromise);\n            if (address >= accounts.length) { throw new Error(\"no such account\"); }\n            return new JsonRpcSigner(this, accounts[address]);\n        }\n\n        const { accounts } = await resolveProperties({\n            network: this.getNetwork(),\n            accounts: accountsPromise\n        });\n\n        // Account address\n        address = getAddress(address);\n        for (const account of accounts) {\n            if (getAddress(account) === address) {\n                return new JsonRpcSigner(this, address);\n            }\n        }\n\n        throw new Error(\"invalid account\");\n    }\n\n    async listAccounts(): Promise<Array<JsonRpcSigner>> {\n        const accounts: Array<string> = await this.send(\"eth_accounts\", [ ]);\n        return accounts.map((a) => new JsonRpcSigner(this, a));\n    }\n\n    destroy(): void {\n\n        // Stop processing requests\n        if (this.#drainTimer) {\n            clearTimeout(this.#drainTimer);\n            this.#drainTimer = null;\n        }\n\n        // Cancel all pending requests\n        for (const { payload, reject } of this.#payloads) {\n            reject(makeError(\"provider destroyed; cancelled request\", \"UNSUPPORTED_OPERATION\", { operation: payload.method }));\n        }\n\n        this.#payloads = [ ];\n\n        // Parent clean-up\n        super.destroy();\n\n    }\n}\n\n// @TODO: remove this in v7, it is not exported because this functionality\n// is exposed in the JsonRpcApiProvider by setting polling to true. It should\n// be safe to remove regardless, because it isn't reachable, but just in case.\n/**\n *  @_ignore:\n */\nexport abstract class JsonRpcApiPollingProvider extends JsonRpcApiProvider {\n    #pollingInterval: number;\n    constructor(network?: Networkish, options?: JsonRpcApiProviderOptions) {\n        super(network, options);\n\n        this.#pollingInterval = 4000;\n    }\n\n    _getSubscriber(sub: Subscription): Subscriber {\n        const subscriber = super._getSubscriber(sub);\n        if (isPollable(subscriber)) {\n            subscriber.pollingInterval = this.#pollingInterval;\n        }\n        return subscriber;\n    }\n\n    /**\n     *  The polling interval (default: 4000 ms)\n     */\n    get pollingInterval(): number { return this.#pollingInterval; }\n    set pollingInterval(value: number) {\n        if (!Number.isInteger(value) || value < 0) { throw new Error(\"invalid interval\"); }\n        this.#pollingInterval = value;\n        this._forEachSubscriber((sub) => {\n            if (isPollable(sub)) {\n                sub.pollingInterval = this.#pollingInterval;\n            }\n        });\n    }\n}\n\n/**\n *  The JsonRpcProvider is one of the most common Providers,\n *  which performs all operations over HTTP (or HTTPS) requests.\n *\n *  Events are processed by polling the backend for the current block\n *  number; when it advances, all block-base events are then checked\n *  for updates.\n */\nexport class JsonRpcProvider extends JsonRpcApiPollingProvider {\n    #connect: FetchRequest;\n\n    constructor(url?: string | FetchRequest, network?: Networkish, options?: JsonRpcApiProviderOptions) {\n        if (url == null) { url = \"http:/\\/localhost:8545\"; }\n        super(network, options);\n\n        if (typeof(url) === \"string\") {\n            this.#connect = new FetchRequest(url);\n        } else {\n            this.#connect = url.clone();\n        }\n    }\n\n    _getConnection(): FetchRequest {\n        return this.#connect.clone();\n    }\n\n    async send(method: string, params: Array<any> | Record<string, any>): Promise<any> {\n        // All requests are over HTTP, so we can just start handling requests\n        // We do this here rather than the constructor so that we don't send any\n        // requests to the network (i.e. eth_chainId) until we absolutely have to.\n        await this._start();\n\n        return await super.send(method, params);\n    }\n\n    async _send(payload: JsonRpcPayload | Array<JsonRpcPayload>): Promise<Array<JsonRpcResult>> {\n        // Configure a POST connection for the requested method\n        const request = this._getConnection();\n        request.body = JSON.stringify(payload);\n        request.setHeader(\"content-type\", \"application/json\");\n        const response = await request.send();\n        response.assertOk();\n\n        let resp = response.bodyJson;\n        if (!Array.isArray(resp)) { resp = [ resp ]; }\n\n        return resp;\n    }\n}\n\nfunction spelunkData(value: any): null | { message: string, data: string } {\n    if (value == null) { return null; }\n\n    // These *are* the droids we're looking for.\n    if (typeof(value.message) === \"string\" && value.message.match(/revert/i) && isHexString(value.data)) {\n        return { message: value.message, data: value.data };\n    }\n\n    // Spelunk further...\n    if (typeof(value) === \"object\") {\n        for (const key in value) {\n            const result = spelunkData(value[key]);\n            if (result) { return result; }\n        }\n        return null;\n    }\n\n    // Might be a JSON string we can further descend...\n    if (typeof(value) === \"string\") {\n        try {\n            return spelunkData(JSON.parse(value));\n        } catch (error) { }\n    }\n\n    return null;\n}\n\nfunction _spelunkMessage(value: any, result: Array<string>): void {\n    if (value == null) { return; }\n\n    // These *are* the droids we're looking for.\n    if (typeof(value.message) === \"string\") {\n        result.push(value.message);\n    }\n\n    // Spelunk further...\n    if (typeof(value) === \"object\") {\n        for (const key in value) {\n            _spelunkMessage(value[key], result);\n        }\n    }\n\n    // Might be a JSON string we can further descend...\n    if (typeof(value) === \"string\") {\n        try {\n            return _spelunkMessage(JSON.parse(value), result);\n        } catch (error) { }\n    }\n}\n\nfunction spelunkMessage(value: any): Array<string> {\n    const result: Array<string> = [ ];\n    _spelunkMessage(value, result);\n    return result;\n}\n","/**\n *  The **FixedNumber** class permits using values with decimal places,\n *  using fixed-pont math.\n *\n *  Fixed-point math is still based on integers under-the-hood, but uses an\n *  internal offset to store fractional components below, and each operation\n *  corrects for this after each operation.\n *\n *  @_section: api/utils/fixed-point-math:Fixed-Point Maths  [about-fixed-point-math]\n */\nimport { getBytes } from \"./data.js\";\nimport { assert, assertArgument, assertPrivate } from \"./errors.js\";\nimport {\n    getBigInt, getNumber, fromTwos, mask, toBigInt\n} from \"./maths.js\";\nimport { defineProperties } from \"./properties.js\";\n\nimport type { BigNumberish, BytesLike, Numeric } from \"./index.js\";\n\nconst BN_N1 = BigInt(-1);\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_5 = BigInt(5);\n\nconst _guard = { };\n\n\n// Constant to pull zeros from for multipliers\nlet Zeros = \"0000\";\nwhile (Zeros.length < 80) { Zeros += Zeros; }\n\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getTens(decimals: number): bigint {\n    let result = Zeros;\n    while (result.length < decimals) { result += result; }\n    return BigInt(\"1\" + result.substring(0, decimals));\n}\n\n\n\n    /*\n     *  Returns a new FixedFormat for %%value%%.\n     *\n     *  If %%value%% is specified as a ``number``, the bit-width is\n     *  128 bits and %%value%% is used for the ``decimals``.\n     *\n     *  A string %%value%% may begin with ``fixed`` or ``ufixed``\n     *  for signed and unsigned respectfully. If no other properties\n     *  are specified, the bit-width is 128-bits with 18 decimals.\n     *\n     *  To specify the bit-width and demicals, append them separated\n     *  by an ``\"x\"`` to the %%value%%.\n     *\n     *  For example, ``ufixed128x18`` describes an unsigned, 128-bit\n     *  wide format with 18 decimals.\n     *\n     *  If %%value%% is an other object, its properties for ``signed``,\n     *  ``width`` and ``decimals`` are checked.\n     */\n\n/**\n *  A description of a fixed-point arithmetic field.\n *\n *  When specifying the fixed format, the values override the default of\n *  a ``fixed128x18``, which implies a signed 128-bit value with 18\n *  decimals of precision.\n *\n *  The alias ``fixed`` and ``ufixed`` can be used for ``fixed128x18`` and\n *  ``ufixed128x18`` respectively.\n *\n *  When a fixed format string begins with a ``u``, it indicates the field\n *  is unsigned, so any negative values will overflow. The first number\n *  indicates the bit-width and the second number indicates the decimal\n *  precision.\n *\n *  When a ``number`` is used for a fixed format, it indicates the number\n *  of decimal places, and the default width and signed-ness will be used.\n *\n *  The bit-width must be byte aligned and the decimals can be at most 80.\n */\nexport type FixedFormat = number | string | {\n    signed?: boolean,\n    width?: number,\n    decimals?: number\n};\n\nfunction checkValue(val: bigint, format: _FixedFormat, safeOp?: string): bigint {\n    const width = BigInt(format.width);\n    if (format.signed) {\n        const limit = (BN_1 << (width - BN_1));\n        assert(safeOp == null || (val >= -limit  && val < limit), \"overflow\", \"NUMERIC_FAULT\", {\n            operation: <string>safeOp, fault: \"overflow\", value: val\n        });\n\n        if (val > BN_0) {\n            val = fromTwos(mask(val, width), width);\n        } else {\n            val = -fromTwos(mask(-val, width), width);\n        }\n\n    } else {\n        const limit = (BN_1 << width);\n        assert(safeOp == null || (val >= 0 && val < limit), \"overflow\", \"NUMERIC_FAULT\", {\n            operation: <string>safeOp, fault: \"overflow\", value: val\n        });\n        val = (((val % limit) + limit) % limit) & (limit - BN_1);\n    }\n\n    return val;\n}\n\ntype _FixedFormat = { signed: boolean, width: number, decimals: number, name: string }\n\nfunction getFormat(value?: FixedFormat): _FixedFormat {\n    if (typeof(value) === \"number\") { value = `fixed128x${value}` }\n\n    let signed = true;\n    let width = 128;\n    let decimals = 18;\n\n    if (typeof(value) === \"string\") {\n        // Parse the format string\n        if (value === \"fixed\") {\n            // defaults...\n        } else if (value === \"ufixed\") {\n            signed = false;\n        } else {\n            const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n            assertArgument(match, \"invalid fixed format\", \"format\", value);\n            signed = (match[1] !== \"u\");\n            width = parseInt(match[2]);\n            decimals = parseInt(match[3]);\n        }\n    } else if (value) {\n        // Extract the values from the object\n        const v: any = value;\n        const check = (key: string, type: string, defaultValue: any): any => {\n            if (v[key] == null) { return defaultValue; }\n            assertArgument(typeof(v[key]) === type,\n                \"invalid fixed format (\" + key + \" not \" + type +\")\", \"format.\" + key, v[key]);\n            return v[key];\n        }\n        signed = check(\"signed\", \"boolean\", signed);\n        width = check(\"width\", \"number\", width);\n        decimals = check(\"decimals\", \"number\", decimals);\n    }\n\n    assertArgument((width % 8) === 0, \"invalid FixedNumber width (not byte aligned)\", \"format.width\", width);\n    assertArgument(decimals <= 80, \"invalid FixedNumber decimals (too large)\", \"format.decimals\", decimals);\n\n    const name = (signed ? \"\": \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n\n    return { signed, width, decimals, name };\n}\n\nfunction toString(val: bigint, decimals: number) {\n    let negative = \"\";\n    if (val < BN_0) {\n        negative = \"-\";\n        val *= BN_N1;\n    }\n\n    let str = val.toString();\n\n    // No decimal point for whole values\n    if (decimals === 0) { return (negative + str); }\n\n    // Pad out to the whole component (including a whole digit)\n    while (str.length <= decimals) { str = Zeros + str; }\n\n    // Insert the decimal point\n    const index = str.length - decimals;\n    str = str.substring(0, index) + \".\" + str.substring(index);\n\n    // Trim the whole component (leaving at least one 0)\n    while (str[0] === \"0\" && str[1] !== \".\") {\n        str = str.substring(1);\n    }\n\n    // Trim the decimal component (leaving at least one 0)\n    while (str[str.length - 1] === \"0\" && str[str.length - 2] !== \".\") {\n        str = str.substring(0, str.length - 1);\n    }\n\n    return (negative + str);\n}\n\n\n/**\n *  A FixedNumber represents a value over its [[FixedFormat]]\n *  arithmetic field.\n *\n *  A FixedNumber can be used to perform math, losslessly, on\n *  values which have decmial places.\n *\n *  A FixedNumber has a fixed bit-width to store values in, and stores all\n *  values internally by multiplying the value by 10 raised to the power of\n *  %%decimals%%.\n *\n *  If operations are performed that cause a value to grow too high (close to\n *  positive infinity) or too low (close to negative infinity), the value\n *  is said to //overflow//.\n *\n *  For example, an 8-bit signed value, with 0 decimals may only be within\n *  the range ``-128`` to ``127``; so ``-128 - 1`` will overflow and become\n *  ``127``. Likewise, ``127 + 1`` will overflow and become ``-127``.\n *\n *  Many operation have a normal and //unsafe// variant. The normal variant\n *  will throw a [[NumericFaultError]] on any overflow, while the //unsafe//\n *  variant will silently allow overflow, corrupting its value value.\n *\n *  If operations are performed that cause a value to become too small\n *  (close to zero), the value loses precison and is said to //underflow//.\n *\n *  For example, an value with 1 decimal place may store a number as small\n *  as ``0.1``, but the value of ``0.1 / 2`` is ``0.05``, which cannot fit\n *  into 1 decimal place, so underflow occurs which means precision is lost\n *  and the value becomes ``0``.\n *\n *  Some operations have a normal and //signalling// variant. The normal\n *  variant will silently ignore underflow, while the //signalling// variant\n *  will thow a [[NumericFaultError]] on underflow.\n */\nexport class FixedNumber {\n\n    /**\n     *  The specific fixed-point arithmetic field for this value.\n     */\n    readonly format!: string;\n\n    readonly #format: _FixedFormat;\n\n    // The actual value (accounting for decimals)\n    #val: bigint;\n\n    // A base-10 value to multiple values by to maintain the magnitude\n    readonly #tens: bigint;\n\n    /**\n     *  This is a property so console.log shows a human-meaningful value.\n     *\n     *  @private\n     */\n    readonly _value!: string;\n\n    // Use this when changing this file to get some typing info,\n    // but then switch to any to mask the internal type\n    //constructor(guard: any, value: bigint, format: _FixedFormat) {\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, value: bigint, format: any) {\n        assertPrivate(guard, _guard, \"FixedNumber\");\n\n        this.#val = value;\n\n        this.#format = format;\n\n        const _value = toString(value, format.decimals);\n\n        defineProperties<FixedNumber>(this, { format: format.name, _value });\n\n        this.#tens = getTens(format.decimals);\n    }\n\n    /**\n     *  If true, negative values are permitted, otherwise only\n     *  positive values and zero are allowed.\n     */\n    get signed(): boolean { return this.#format.signed; }\n\n    /**\n     *  The number of bits available to store the value.\n     */\n    get width(): number { return this.#format.width; }\n\n    /**\n     *  The number of decimal places in the fixed-point arithment field.\n     */\n    get decimals(): number { return this.#format.decimals; }\n\n    /**\n     *  The value as an integer, based on the smallest unit the\n     *  [[decimals]] allow.\n     */\n    get value(): bigint { return this.#val; }\n\n    #checkFormat(other: FixedNumber): void {\n        assertArgument(this.format === other.format,\n            \"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n    }\n\n    #checkValue(val: bigint, safeOp?: string): FixedNumber {\n/*\n        const width = BigInt(this.width);\n        if (this.signed) {\n            const limit = (BN_1 << (width - BN_1));\n            assert(safeOp == null || (val >= -limit  && val < limit), \"overflow\", \"NUMERIC_FAULT\", {\n                operation: <string>safeOp, fault: \"overflow\", value: val\n            });\n\n            if (val > BN_0) {\n                val = fromTwos(mask(val, width), width);\n            } else {\n                val = -fromTwos(mask(-val, width), width);\n            }\n\n        } else {\n            const masked = mask(val, width);\n            assert(safeOp == null || (val >= 0 && val === masked), \"overflow\", \"NUMERIC_FAULT\", {\n                operation: <string>safeOp, fault: \"overflow\", value: val\n            });\n            val = masked;\n        }\n*/\n        val = checkValue(val, this.#format, safeOp);\n        return new FixedNumber(_guard, val, this.#format);\n    }\n\n    #add(o: FixedNumber, safeOp?: string): FixedNumber {\n        this.#checkFormat(o);\n        return this.#checkValue(this.#val + o.#val, safeOp);\n    }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%this%% added\n     *  to %%other%%, ignoring overflow.\n     */\n    addUnsafe(other: FixedNumber): FixedNumber { return this.#add(other); }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%this%% added\n     *  to %%other%%. A [[NumericFaultError]] is thrown if overflow\n     *  occurs.\n     */\n    add(other: FixedNumber): FixedNumber { return this.#add(other, \"add\"); }\n\n    #sub(o: FixedNumber, safeOp?: string): FixedNumber {\n        this.#checkFormat(o);\n        return this.#checkValue(this.#val - o.#val, safeOp);\n    }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%other%% subtracted\n     *  from %%this%%, ignoring overflow.\n     */\n    subUnsafe(other: FixedNumber): FixedNumber { return this.#sub(other); }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%other%% subtracted\n     *  from %%this%%. A [[NumericFaultError]] is thrown if overflow\n     *  occurs.\n     */\n    sub(other: FixedNumber): FixedNumber { return this.#sub(other, \"sub\"); }\n\n    #mul(o: FixedNumber, safeOp?: string): FixedNumber {\n        this.#checkFormat(o);\n        return this.#checkValue((this.#val * o.#val) / this.#tens, safeOp);\n    }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%this%% multiplied\n     *  by %%other%%, ignoring overflow and underflow (precision loss).\n     */\n    mulUnsafe(other: FixedNumber): FixedNumber { return this.#mul(other); }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%this%% multiplied\n     *  by %%other%%. A [[NumericFaultError]] is thrown if overflow\n     *  occurs.\n     */\n    mul(other: FixedNumber): FixedNumber { return this.#mul(other, \"mul\"); }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%this%% multiplied\n     *  by %%other%%. A [[NumericFaultError]] is thrown if overflow\n     *  occurs or if underflow (precision loss) occurs.\n     */\n    mulSignal(other: FixedNumber): FixedNumber {\n        this.#checkFormat(other);\n        const value = this.#val * other.#val;\n        assert((value % this.#tens) === BN_0, \"precision lost during signalling mul\", \"NUMERIC_FAULT\", {\n            operation: \"mulSignal\", fault: \"underflow\", value: this\n        });\n        return this.#checkValue(value / this.#tens, \"mulSignal\");\n    }\n\n    #div(o: FixedNumber, safeOp?: string): FixedNumber {\n        assert(o.#val !== BN_0, \"division by zero\", \"NUMERIC_FAULT\", {\n            operation: \"div\", fault: \"divide-by-zero\", value: this\n        });\n        this.#checkFormat(o);\n        return this.#checkValue((this.#val * this.#tens) / o.#val, safeOp);\n    }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%this%% divided\n     *  by %%other%%, ignoring underflow (precision loss). A\n     *  [[NumericFaultError]] is thrown if overflow occurs.\n     */\n    divUnsafe(other: FixedNumber): FixedNumber { return this.#div(other); }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%this%% divided\n     *  by %%other%%, ignoring underflow (precision loss). A\n     *  [[NumericFaultError]] is thrown if overflow occurs.\n     */\n    div(other: FixedNumber): FixedNumber { return this.#div(other, \"div\"); }\n\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%this%% divided\n     *  by %%other%%. A [[NumericFaultError]] is thrown if underflow\n     *  (precision loss) occurs.\n     */\n    divSignal(other: FixedNumber): FixedNumber {\n        assert(other.#val !== BN_0, \"division by zero\", \"NUMERIC_FAULT\", {\n            operation: \"div\", fault: \"divide-by-zero\", value: this\n        });\n        this.#checkFormat(other);\n        const value = (this.#val * this.#tens);\n        assert((value % other.#val) === BN_0, \"precision lost during signalling div\", \"NUMERIC_FAULT\", {\n            operation: \"divSignal\", fault: \"underflow\", value: this\n        });\n        return this.#checkValue(value / other.#val, \"divSignal\");\n    }\n\n    /**\n     *  Returns a comparison result between %%this%% and %%other%%.\n     *\n     *  This is suitable for use in sorting, where ``-1`` implies %%this%%\n     *  is smaller, ``1`` implies %%this%% is larger and ``0`` implies\n     *  both are equal.\n     */\n     cmp(other: FixedNumber): number {\n         let a = this.value, b = other.value;\n\n         // Coerce a and b to the same magnitude\n         const delta = this.decimals - other.decimals;\n         if (delta > 0) {\n             b *= getTens(delta);\n         } else if (delta < 0) {\n             a *= getTens(-delta);\n         }\n\n         // Comnpare\n         if (a < b) { return -1; }\n         if (a > b) { return 1; }\n         return 0;\n     }\n\n    /**\n     *  Returns true if %%other%% is equal to %%this%%.\n     */\n     eq(other: FixedNumber): boolean { return this.cmp(other) === 0; }\n\n    /**\n     *  Returns true if %%other%% is less than to %%this%%.\n     */\n     lt(other: FixedNumber): boolean { return this.cmp(other) < 0; }\n\n    /**\n     *  Returns true if %%other%% is less than or equal to %%this%%.\n     */\n     lte(other: FixedNumber): boolean { return this.cmp(other) <= 0; }\n\n    /**\n     *  Returns true if %%other%% is greater than to %%this%%.\n     */\n     gt(other: FixedNumber): boolean { return this.cmp(other) > 0; }\n\n    /**\n     *  Returns true if %%other%% is greater than or equal to %%this%%.\n     */\n     gte(other: FixedNumber): boolean { return this.cmp(other) >= 0; }\n\n    /**\n     *  Returns a new [[FixedNumber]] which is the largest **integer**\n     *  that is less than or equal to %%this%%.\n     *\n     *  The decimal component of the result will always be ``0``.\n     */\n    floor(): FixedNumber {\n        let val = this.#val;\n        if (this.#val < BN_0) { val -= this.#tens - BN_1; }\n        val = (this.#val / this.#tens) * this.#tens;\n        return this.#checkValue(val, \"floor\");\n    }\n\n    /**\n     *  Returns a new [[FixedNumber]] which is the smallest **integer**\n     *  that is greater than or equal to %%this%%.\n     *\n     *  The decimal component of the result will always be ``0``.\n     */\n    ceiling(): FixedNumber {\n        let val = this.#val;\n        if (this.#val > BN_0) { val += this.#tens - BN_1; }\n        val = (this.#val / this.#tens) * this.#tens;\n        return this.#checkValue(val, \"ceiling\");\n    }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the decimal component\n     *  rounded up on ties at %%decimals%% places.\n     */\n    round(decimals?: number): FixedNumber {\n        if (decimals == null) { decimals = 0; }\n\n        // Not enough precision to not already be rounded\n        if (decimals >= this.decimals) { return this; }\n\n        const delta = this.decimals - decimals;\n        const bump = BN_5 * getTens(delta - 1);\n\n        let value = this.value + bump;\n        const tens = getTens(delta);\n        value = (value / tens) * tens;\n\n        checkValue(value, this.#format, \"round\");\n\n        return new FixedNumber(_guard, value, this.#format);\n    }\n\n    /**\n     *  Returns true if %%this%% is equal to ``0``.\n     */\n    isZero(): boolean { return (this.#val === BN_0); }\n\n    /**\n     *  Returns true if %%this%% is less than ``0``.\n     */\n    isNegative(): boolean { return (this.#val < BN_0); }\n\n    /**\n     *  Returns the string representation of %%this%%.\n     */\n    toString(): string { return this._value; }\n\n    /**\n     *  Returns a float approximation.\n     *\n     *  Due to IEEE 754 precission (or lack thereof), this function\n     *  can only return an approximation and most values will contain\n     *  rounding errors.\n     */\n    toUnsafeFloat(): number { return parseFloat(this.toString()); }\n\n    /**\n     *  Return a new [[FixedNumber]] with the same value but has had\n     *  its field set to %%format%%.\n     *\n     *  This will throw if the value cannot fit into %%format%%.\n     */\n    toFormat(format: FixedFormat): FixedNumber {\n        return FixedNumber.fromString(this.toString(), format);\n    }\n\n    /**\n     *  Creates a new [[FixedNumber]] for %%value%% divided by\n     *  %%decimal%% places with %%format%%.\n     *\n     *  This will throw a [[NumericFaultError]] if %%value%% (once adjusted\n     *  for %%decimals%%) cannot fit in %%format%%, either due to overflow\n     *  or underflow (precision loss).\n     */\n    static fromValue(_value: BigNumberish, _decimals?: Numeric, _format?: FixedFormat): FixedNumber {\n        const decimals = (_decimals == null) ? 0: getNumber(_decimals);\n        const format = getFormat(_format);\n\n        let value = getBigInt(_value, \"value\");\n        const delta = decimals - format.decimals;\n        if (delta > 0) {\n            const tens = getTens(delta);\n            assert((value % tens) === BN_0, \"value loses precision for format\", \"NUMERIC_FAULT\", {\n                operation: \"fromValue\", fault: \"underflow\", value: _value\n            });\n            value /= tens;\n        } else if (delta < 0) {\n            value *= getTens(-delta);\n        }\n\n        checkValue(value, format, \"fromValue\");\n\n        return new FixedNumber(_guard, value, format);\n    }\n\n    /**\n     *  Creates a new [[FixedNumber]] for %%value%% with %%format%%.\n     *\n     *  This will throw a [[NumericFaultError]] if %%value%% cannot fit\n     *  in %%format%%, either due to overflow or underflow (precision loss).\n     */\n    static fromString(_value: string, _format?: FixedFormat): FixedNumber {\n        const match = _value.match(/^(-?)([0-9]*)\\.?([0-9]*)$/);\n        assertArgument(match && (match[2].length + match[3].length) > 0, \"invalid FixedNumber string value\", \"value\", _value);\n\n        const format = getFormat(_format);\n\n        let whole = (match[2] || \"0\"), decimal = (match[3] || \"\");\n\n        // Pad out the decimals\n        while (decimal.length < format.decimals) { decimal += Zeros; }\n\n        // Check precision is safe\n        assert(decimal.substring(format.decimals).match(/^0*$/), \"too many decimals for format\", \"NUMERIC_FAULT\", {\n            operation: \"fromString\", fault: \"underflow\", value: _value\n        });\n\n        // Remove extra padding\n        decimal = decimal.substring(0, format.decimals);\n\n        const value = BigInt(match[1] + whole + decimal)\n\n        checkValue(value, format, \"fromString\");\n\n        return new FixedNumber(_guard, value, format);\n    }\n\n    /**\n     *  Creates a new [[FixedNumber]] with the big-endian representation\n     *  %%value%% with %%format%%.\n     *\n     *  This will throw a [[NumericFaultError]] if %%value%% cannot fit\n     *  in %%format%% due to overflow.\n     */\n    static fromBytes(_value: BytesLike, _format?: FixedFormat): FixedNumber {\n        let value = toBigInt(getBytes(_value, \"value\"));\n        const format = getFormat(_format);\n\n        if (format.signed) { value = fromTwos(value, format.width); }\n\n        checkValue(value, format, \"fromBytes\");\n\n        return new FixedNumber(_guard, value, format);\n    }\n}\n\n//const f1 = FixedNumber.fromString(\"12.56\", \"fixed16x2\");\n//const f2 = FixedNumber.fromString(\"0.3\", \"fixed16x2\");\n//console.log(f1.divSignal(f2));\n//const BUMP = FixedNumber.from(\"0.5\");\n","/**\n *  Most interactions with Ethereum requires integer values, which use\n *  the smallest magnitude unit.\n *\n *  For example, imagine dealing with dollars and cents. Since dollars\n *  are divisible, non-integer values are possible, such as ``$10.77``.\n *  By using the smallest indivisible unit (i.e. cents), the value can\n *  be kept as the integer ``1077``.\n *\n *  When receiving decimal input from the user (as a decimal string),\n *  the value should be converted to an integer and when showing a user\n *  a value, the integer value should be converted to a decimal string.\n *\n *  This creates a clear distinction, between values to be used by code\n *  (integers) and values used for display logic to users (decimals).\n *\n *  The native unit in Ethereum, //ether// is divisible to 18 decimal places,\n *  where each individual unit is called a //wei//.\n *\n *  @_subsection api/utils:Unit Conversion  [about-units]\n */\nimport { assertArgument } from \"./errors.js\";\nimport { FixedNumber } from \"./fixednumber.js\";\nimport { getNumber } from \"./maths.js\";\n\nimport type { BigNumberish, Numeric } from \"../utils/index.js\";\n\n\nconst names = [\n    \"wei\",\n    \"kwei\",\n    \"mwei\",\n    \"gwei\",\n    \"szabo\",\n    \"finney\",\n    \"ether\",\n];\n\n/**\n *  Converts %%value%% into a //decimal string//, assuming %%unit%% decimal\n *  places. The %%unit%% may be the number of decimal places or the name of\n *  a unit (e.g. ``\"gwei\"`` for 9 decimal places).\n *\n */\nexport function formatUnits(value: BigNumberish, unit?: string | Numeric): string {\n    let decimals = 18;\n    if (typeof(unit) === \"string\") {\n        const index = names.indexOf(unit);\n        assertArgument(index >= 0, \"invalid unit\", \"unit\", unit);\n        decimals = 3 * index;\n    } else if (unit != null) {\n        decimals = getNumber(unit, \"unit\");\n    }\n\n    return FixedNumber.fromValue(value, decimals, { decimals, width: 512 }).toString();\n}\n\n/**\n *  Converts the //decimal string// %%value%% to a BigInt, assuming\n *  %%unit%% decimal places. The %%unit%% may the number of decimal places\n *  or the name of a unit (e.g. ``\"gwei\"`` for 9 decimal places).\n */\nexport function parseUnits(value: string, unit?: string | Numeric): bigint {\n    assertArgument(typeof(value) === \"string\", \"value must be a string\", \"value\", value);\n\n    let decimals = 18;\n    if (typeof(unit) === \"string\") {\n        const index = names.indexOf(unit);\n        assertArgument(index >= 0, \"invalid unit\", \"unit\", unit);\n        decimals = 3 * index;\n    } else if (unit != null) {\n        decimals = getNumber(unit, \"unit\");\n    }\n\n    return FixedNumber.fromString(value, { decimals, width: 512 }).value;\n}\n\n/**\n *  Converts %%value%% into a //decimal string// using 18 decimal places.\n */\nexport function formatEther(wei: BigNumberish): string {\n    return formatUnits(wei, 18);\n}\n\n/**\n *  Converts the //decimal string// %%ether%% to a BigInt, using 18\n *  decimal places.\n */\nexport function parseEther(ether: string): bigint {\n    return parseUnits(ether, 18);\n}\n","import React, { useEffect, useState } from 'react'\r\nimport { ethers, formatEther } from 'ethers';\r\n\r\nexport default function AccountInfo({ apiKey }) {\r\n    const [balance, setBalance] = useState(null);\r\n    const ownerAddress = \"0x994b342dd87fc825f66e51ffa3ef71ad818b6893\";\r\n    useEffect(() => {\r\n        const fetchBalance = async () => {\r\n            try {\r\n                const provider = new ethers.JsonRpcProvider(`https://eth-mainnet.alchemyapi.io/v2/${apiKey}`);\r\n                const balanceWei = await provider.getBalance(ownerAddress);\r\n                const balanceEth = parseFloat(formatEther(balanceWei)).toFixed(4);\r\n                setBalance(balanceEth);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n\r\n        fetchBalance();\r\n    }, []);\r\n    return (\r\n        <div className='account'>\r\n            <h3>Balance</h3>\r\n            <h2>{balance}</h2>\r\n        </div>\r\n    )\r\n}\r\n","// NFKC (composed)             // (decomposed)\n\n/**\n *  A constant for the ether symbol (normalized using NFKC).\n *\n *  (**i.e.** ``\"\\\\u039e\"``)\n */\nexport const EtherSymbol: string = \"\\u039e\";  // \"\\uD835\\uDF63\";\n\n\n/**\n *  A constant for the [[link-eip-191]] personal message prefix.\n *\n *  (**i.e.** ``\"\\\\x19Ethereum Signed Message:\\\\n\"``)\n */\nexport const MessagePrefix: string = \"\\x19Ethereum Signed Message:\\n\";\n","import { keccak256 } from \"../crypto/index.js\";\nimport { MessagePrefix } from \"../constants/index.js\";\nimport { recoverAddress } from \"../transaction/index.js\";\nimport { concat, toUtf8Bytes } from \"../utils/index.js\";\n\nimport type { SignatureLike } from \"../crypto/index.js\";\n/**\n *  Computes the [[link-eip-191]] personal-sign message digest to sign.\n *\n *  This prefixes the message with [[MessagePrefix]] and the decimal length\n *  of %%message%% and computes the [[keccak256]] digest.\n *\n *  If %%message%% is a string, it is converted to its UTF-8 bytes\n *  first. To compute the digest of a [[DataHexString]], it must be converted\n *  to [bytes](getBytes).\n *\n *  @example:\n *    hashMessage(\"Hello World\")\n *    //_result:\n *\n *    // Hashes the SIX (6) string characters, i.e.\n *    // [ \"0\", \"x\", \"4\", \"2\", \"4\", \"3\" ]\n *    hashMessage(\"0x4243\")\n *    //_result:\n *\n *    // Hashes the TWO (2) bytes [ 0x42, 0x43 ]...\n *    hashMessage(getBytes(\"0x4243\"))\n *    //_result:\n *\n *    // ...which is equal to using data\n *    hashMessage(new Uint8Array([ 0x42, 0x43 ]))\n *    //_result:\n *\n */\nexport function hashMessage(message: Uint8Array | string): string {\n    if (typeof(message) === \"string\") { message = toUtf8Bytes(message); }\n    return keccak256(concat([\n        toUtf8Bytes(MessagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n\n/**\n *  Return the address of the private key that produced\n *  the signature %%sig%% during signing for %%message%%.\n */\nexport function verifyMessage(message: Uint8Array | string, sig: SignatureLike): string {\n    const digest = hashMessage(message);\n    return recoverAddress(digest, sig);\n}\n","import { getAddress, resolveAddress } from \"../address/index.js\";\nimport { hashMessage, TypedDataEncoder } from \"../hash/index.js\";\nimport { AbstractSigner } from \"../providers/index.js\";\nimport { computeAddress, Transaction } from \"../transaction/index.js\";\nimport {\n    defineProperties, resolveProperties, assert, assertArgument\n} from \"../utils/index.js\";\n\nimport type { SigningKey } from \"../crypto/index.js\";\nimport type { TypedDataDomain, TypedDataField } from \"../hash/index.js\";\nimport type { Provider, TransactionRequest } from \"../providers/index.js\";\nimport type { TransactionLike } from \"../transaction/index.js\";\n\n\n/**\n *  The **BaseWallet** is a stream-lined implementation of a\n *  [[Signer]] that operates with a private key.\n *\n *  It is preferred to use the [[Wallet]] class, as it offers\n *  additional functionality and simplifies loading a variety\n *  of JSON formats, Mnemonic Phrases, etc.\n *\n *  This class may be of use for those attempting to implement\n *  a minimal Signer.\n */\nexport class BaseWallet extends AbstractSigner {\n    /**\n     *  The wallet address.\n     */\n    readonly address!: string;\n\n    readonly #signingKey: SigningKey;\n\n    /**\n     *  Creates a new BaseWallet for %%privateKey%%, optionally\n     *  connected to %%provider%%.\n     *\n     *  If %%provider%% is not specified, only offline methods can\n     *  be used.\n     */\n    constructor(privateKey: SigningKey, provider?: null | Provider) {\n        super(provider);\n\n        assertArgument(privateKey && typeof(privateKey.sign) === \"function\", \"invalid private key\", \"privateKey\", \"[ REDACTED ]\");\n\n        this.#signingKey = privateKey;\n\n        const address = computeAddress(this.signingKey.publicKey);\n        defineProperties<BaseWallet>(this, { address });\n    }\n\n    // Store private values behind getters to reduce visibility\n    // in console.log\n\n    /**\n     *  The [[SigningKey]] used for signing payloads.\n     */\n    get signingKey(): SigningKey { return this.#signingKey; }\n\n    /**\n     *  The private key for this wallet.\n     */\n    get privateKey(): string { return this.signingKey.privateKey; }\n\n    async getAddress(): Promise<string> { return this.address; }\n\n    connect(provider: null | Provider): BaseWallet {\n        return new BaseWallet(this.#signingKey, provider);\n    }\n\n    async signTransaction(tx: TransactionRequest): Promise<string> {\n\n        // Replace any Addressable or ENS name with an address\n        const { to, from } = await resolveProperties({\n            to: (tx.to ? resolveAddress(tx.to, this.provider): undefined),\n            from: (tx.from ? resolveAddress(tx.from, this.provider): undefined)\n        });\n\n        if (to != null) { tx.to = to; }\n        if (from != null) { tx.from = from; }\n\n        if (tx.from != null) {\n            assertArgument(getAddress(<string>(tx.from)) === this.address,\n                \"transaction from address mismatch\", \"tx.from\", tx.from);\n            delete tx.from;\n        }\n\n        // Build the transaction\n        const btx = Transaction.from(<TransactionLike<string>>tx);\n        btx.signature = this.signingKey.sign(btx.unsignedHash);\n\n        return btx.serialized;\n    }\n\n    async signMessage(message: string | Uint8Array): Promise<string> {\n        return this.signMessageSync(message);\n    }\n\n    // @TODO: Add a secialized signTx and signTyped sync that enforces\n    // all parameters are known?\n    /**\n     *  Returns the signature for %%message%% signed with this wallet.\n     */\n    signMessageSync(message: string | Uint8Array): string {\n        return this.signingKey.sign(hashMessage(message)).serialized;\n    }\n\n    async signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n\n        // Populate any ENS names\n        const populated = await TypedDataEncoder.resolveNames(domain, types, value, async (name: string) => {\n            // @TODO: this should use resolveName; addresses don't\n            //        need a provider\n\n            assert(this.provider != null, \"cannot resolve ENS names without a provider\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"resolveName\",\n                info: { name }\n            });\n\n            const address = await this.provider.resolveName(name);\n            assert(address != null, \"unconfigured ENS name\", \"UNCONFIGURED_NAME\", {\n                value: name\n            });\n\n            return address;\n        });\n\n        return this.signingKey.sign(TypedDataEncoder.hash(populated.domain, types, populated.value)).serialized;\n    }\n}\n","import { hash as assertHash, number as assertNumber } from './_assert.js';\nimport { hmac } from './hmac.js';\nimport { Hash, CHash, Input, createView, toBytes, checkOpts, asyncLoop } from './utils.js';\n\n// PBKDF (RFC 2898)\nexport type Pbkdf2Opt = {\n  c: number; // Iterations\n  dkLen?: number; // Desired key length in bytes (Intended output length in octets of the derived key\n  asyncTick?: number; // Maximum time in ms for which async function can block execution\n};\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash: CHash, _password: Input, _salt: Input, _opts: Pbkdf2Opt) {\n  assertHash(hash);\n  const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n  const { c, dkLen, asyncTick } = opts;\n  assertNumber(c);\n  assertNumber(dkLen);\n  assertNumber(asyncTick);\n  if (c < 1) throw new Error('PBKDF2: iterations (c) should be >= 1');\n  const password = toBytes(_password);\n  const salt = toBytes(_salt);\n  // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n  const DK = new Uint8Array(dkLen);\n  // U1 = PRF(Password, Salt + INT_32_BE(i))\n  const PRF = hmac.create(hash, password);\n  const PRFSalt = PRF._cloneInto().update(salt);\n  return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\n\nfunction pbkdf2Output<T extends Hash<T>>(\n  PRF: Hash<T>,\n  PRFSalt: Hash<T>,\n  DK: Uint8Array,\n  prfW: Hash<T>,\n  u: Uint8Array\n) {\n  PRF.destroy();\n  PRFSalt.destroy();\n  if (prfW) prfW.destroy();\n  u.fill(0);\n  return DK;\n}\n\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nexport function pbkdf2(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    for (let ui = 1; ui < c; ui++) {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    }\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n\nexport async function pbkdf2Async(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    await asyncLoop(c - 1, asyncTick, () => {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    });\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends SHA2<SHA512> {\n  // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n  // Also looks cleaner and easier to verify with spec.\n  // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x6a09e667 | 0;\n  Al = 0xf3bcc908 | 0;\n  Bh = 0xbb67ae85 | 0;\n  Bl = 0x84caa73b | 0;\n  Ch = 0x3c6ef372 | 0;\n  Cl = 0xfe94f82b | 0;\n  Dh = 0xa54ff53a | 0;\n  Dl = 0x5f1d36f1 | 0;\n  Eh = 0x510e527f | 0;\n  El = 0xade682d1 | 0;\n  Fh = 0x9b05688c | 0;\n  Fl = 0x2b3e6c1f | 0;\n  Gh = 0x1f83d9ab | 0;\n  Gl = 0xfb41bd6b | 0;\n  Hh = 0x5be0cd19 | 0;\n  Hl = 0x137e2179 | 0;\n\n  constructor() {\n    super(128, 64, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ) {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number) {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean() {\n    SHA512_W_H.fill(0);\n    SHA512_W_L.fill(0);\n  }\n  destroy() {\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nclass SHA512_224 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x8c3d37c8 | 0;\n  Al = 0x19544da2 | 0;\n  Bh = 0x73e19966 | 0;\n  Bl = 0x89dcd4d6 | 0;\n  Ch = 0x1dfab7ae | 0;\n  Cl = 0x32ff9c82 | 0;\n  Dh = 0x679dd514 | 0;\n  Dl = 0x582f9fcf | 0;\n  Eh = 0x0f6d2b69 | 0;\n  El = 0x7bd44da8 | 0;\n  Fh = 0x77e36f73 | 0;\n  Fl = 0x04c48942 | 0;\n  Gh = 0x3f9d85a8 | 0;\n  Gl = 0x6a1d36c8 | 0;\n  Hh = 0x1112e6ad | 0;\n  Hl = 0x91d692a1 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\nclass SHA512_256 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x22312194 | 0;\n  Al = 0xfc2bf72c | 0;\n  Bh = 0x9f555fa3 | 0;\n  Bl = 0xc84c64c2 | 0;\n  Ch = 0x2393b86b | 0;\n  Cl = 0x6f53b151 | 0;\n  Dh = 0x96387719 | 0;\n  Dl = 0x5940eabd | 0;\n  Eh = 0x96283ee2 | 0;\n  El = 0xa88effe3 | 0;\n  Fh = 0xbe5e1e25 | 0;\n  Fl = 0x53863992 | 0;\n  Gh = 0x2b0199fc | 0;\n  Gl = 0x2c85b8aa | 0;\n  Hh = 0x0eb72ddc | 0;\n  Hl = 0x81c52ca2 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 32;\n  }\n}\n\nclass SHA384 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0xcbbb9d5d | 0;\n  Al = 0xc1059ed8 | 0;\n  Bh = 0x629a292a | 0;\n  Bl = 0x367cd507 | 0;\n  Ch = 0x9159015a | 0;\n  Cl = 0x3070dd17 | 0;\n  Dh = 0x152fecd8 | 0;\n  Dl = 0xf70e5939 | 0;\n  Eh = 0x67332667 | 0;\n  El = 0xffc00b31 | 0;\n  Fh = 0x8eb44a87 | 0;\n  Fl = 0x68581511 | 0;\n  Gh = 0xdb0c2e0d | 0;\n  Gl = 0x64f98fa7 | 0;\n  Hh = 0x47b5481d | 0;\n  Hl = 0xbefa4fa4 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 48;\n  }\n}\n\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n","/* Browser Crypto Shims */\n\nimport { hmac } from \"@noble/hashes/hmac\";\nimport { pbkdf2 } from \"@noble/hashes/pbkdf2\";\nimport { sha256 } from \"@noble/hashes/sha256\";\nimport { sha512 } from \"@noble/hashes/sha512\";\n\nimport { assert, assertArgument } from \"../utils/index.js\";\n\n\ndeclare global {\n    interface Window { }\n\n    const window: Window;\n    const self: Window;\n}\n\n\nfunction getGlobal(): any {\n  if (typeof self !== 'undefined') { return self; }\n  if (typeof window !== 'undefined') { return window; }\n  if (typeof global !== 'undefined') { return global; }\n  throw new Error('unable to locate global object');\n};\n\nconst anyGlobal = getGlobal();\nconst crypto: any = anyGlobal.crypto || anyGlobal.msCrypto;\n\n\nexport interface CryptoHasher {\n    update(data: Uint8Array): CryptoHasher;\n    digest(): Uint8Array;\n}\n\nexport function createHash(algo: string): CryptoHasher {\n    switch (algo) {\n        case \"sha256\": return sha256.create();\n        case \"sha512\": return sha512.create();\n    }\n    assertArgument(false, \"invalid hashing algorithm name\", \"algorithm\", algo);\n}\n\nexport function createHmac(_algo: string, key: Uint8Array): CryptoHasher {\n    const algo = ({ sha256, sha512 }[_algo]);\n    assertArgument(algo != null, \"invalid hmac algorithm\", \"algorithm\", _algo);\n    return hmac.create(algo, key);\n}\n\nexport function pbkdf2Sync(password: Uint8Array, salt: Uint8Array, iterations: number, keylen: number, _algo: \"sha256\" | \"sha512\"): Uint8Array {\n    const algo = ({ sha256, sha512 }[_algo]);\n    assertArgument(algo != null, \"invalid pbkdf2 algorithm\", \"algorithm\", _algo);\n    return pbkdf2(algo, password, salt, { c: iterations, dkLen: keylen });\n}\n\nexport function randomBytes(length: number): Uint8Array {\n    assert(crypto != null, \"platform does not support secure random numbers\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"randomBytes\" });\n\n    assertArgument(Number.isInteger(length) && length > 0 && length <= 1024, \"invalid length\", \"length\", length);\n\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return result;\n}\n","import { createHash } from \"./crypto.js\";\n\nimport { getBytes, hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nconst _sha256 = function(data: Uint8Array): Uint8Array {\n    return createHash(\"sha256\").update(data).digest();\n}\n\nconst _sha512 = function(data: Uint8Array): Uint8Array {\n    return createHash(\"sha512\").update(data).digest();\n}\n\nlet __sha256: (data: Uint8Array) => BytesLike = _sha256;\nlet __sha512: (data: Uint8Array) => BytesLike = _sha512;\n\nlet locked256 = false, locked512 = false;\n\n\n/**\n *  Compute the cryptographic SHA2-256 hash of %%data%%.\n *\n *  @_docloc: api/crypto:Hash Functions\n *  @returns DataHexstring\n *\n *  @example:\n *    sha256(\"0x\")\n *    //_result:\n *\n *    sha256(\"0x1337\")\n *    //_result:\n *\n *    sha256(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n *\n */\nexport function sha256(_data: BytesLike): string {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__sha256(data));\n}\nsha256._ = _sha256;\nsha256.lock = function(): void { locked256 = true; }\nsha256.register = function(func: (data: Uint8Array) => BytesLike): void {\n    if (locked256) { throw new Error(\"sha256 is locked\"); }\n    __sha256 = func;\n}\nObject.freeze(sha256);\n\n\n/**\n *  Compute the cryptographic SHA2-512 hash of %%data%%.\n *\n *  @_docloc: api/crypto:Hash Functions\n *  @returns DataHexstring\n *\n *  @example:\n *    sha512(\"0x\")\n *    //_result:\n *\n *    sha512(\"0x1337\")\n *    //_result:\n *\n *    sha512(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n */\nexport function sha512(_data: BytesLike): string {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__sha512(data));\n}\nsha512._ = _sha512;\nsha512.lock = function(): void { locked512 = true; }\nsha512.register = function(func: (data: Uint8Array) => BytesLike): void {\n    if (locked512) { throw new Error(\"sha512 is locked\"); }\n    __sha512 = func;\n}\nObject.freeze(sha256);\n","/**\n *  An **HMAC** enables verification that a given key was used\n *  to authenticate a payload.\n *\n *  See: [[link-wiki-hmac]]\n *\n *  @_subsection: api/crypto:HMAC  [about-hmac]\n */\nimport { createHmac } from \"./crypto.js\";\nimport { getBytes, hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nlet locked = false;\n\nconst _computeHmac = function(algorithm: \"sha256\" | \"sha512\", key: Uint8Array, data: Uint8Array): BytesLike {\n    return createHmac(algorithm, key).update(data).digest();\n}\n\nlet __computeHmac = _computeHmac;\n\n/**\n *  Return the HMAC for %%data%% using the %%key%% key with the underlying\n *  %%algo%% used for compression.\n *\n *  @example:\n *    key = id(\"some-secret\")\n *\n *    // Compute the HMAC\n *    computeHmac(\"sha256\", key, \"0x1337\")\n *    //_result:\n *\n *    // To compute the HMAC of UTF-8 data, the data must be\n *    // converted to UTF-8 bytes\n *    computeHmac(\"sha256\", key, toUtf8Bytes(\"Hello World\"))\n *    //_result:\n *\n */\nexport function computeHmac(algorithm: \"sha256\" | \"sha512\", _key: BytesLike, _data: BytesLike): string {\n    const key = getBytes(_key, \"key\");\n    const data = getBytes(_data, \"data\");\n    return hexlify(__computeHmac(algorithm, key, data));\n}\ncomputeHmac._ = _computeHmac;\ncomputeHmac.lock =  function() { locked = true; }\ncomputeHmac.register = function(func: (algorithm: \"sha256\" | \"sha512\", key: Uint8Array, data: Uint8Array) => BytesLike) {\n    if (locked) { throw new Error(\"computeHmac is locked\"); }\n    __computeHmac = func;\n}\nObject.freeze(computeHmac);\n","import { SHA2 } from './_sha2.js';\nimport { wrapConstructor } from './utils.js';\n\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\nconst Rho = /* @__PURE__ */ new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);\nconst Id = /* @__PURE__ */ Uint8Array.from({ length: 16 }, (_, i) => i);\nconst Pi = /* @__PURE__ */ Id.map((i) => (9 * i + 5) % 16);\nlet idxL = [Id];\nlet idxR = [Pi];\nfor (let i = 0; i < 4; i++) for (let j of [idxL, idxR]) j.push(j[i].map((k) => Rho[k]));\n\nconst shifts = /* @__PURE__ */ [\n  [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n  [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n  [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n  [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n  [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => new Uint8Array(i));\nconst shiftsL = /* @__PURE__ */ idxL.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst shiftsR = /* @__PURE__ */ idxR.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst Kl = /* @__PURE__ */ new Uint32Array([\n  0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e,\n]);\nconst Kr = /* @__PURE__ */ new Uint32Array([\n  0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000,\n]);\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word: number, shift: number) => (word << shift) | (word >>> (32 - shift));\n// It's called f() in spec.\nfunction f(group: number, x: number, y: number, z: number): number {\n  if (group === 0) return x ^ y ^ z;\n  else if (group === 1) return (x & y) | (~x & z);\n  else if (group === 2) return (x | ~y) ^ z;\n  else if (group === 3) return (x & z) | (y & ~z);\n  else return x ^ (y | ~z);\n}\n// Temporary buffer, not used to store anything between runs\nconst BUF = /* @__PURE__ */ new Uint32Array(16);\nexport class RIPEMD160 extends SHA2<RIPEMD160> {\n  private h0 = 0x67452301 | 0;\n  private h1 = 0xefcdab89 | 0;\n  private h2 = 0x98badcfe | 0;\n  private h3 = 0x10325476 | 0;\n  private h4 = 0xc3d2e1f0 | 0;\n\n  constructor() {\n    super(64, 20, 8, true);\n  }\n  protected get(): [number, number, number, number, number] {\n    const { h0, h1, h2, h3, h4 } = this;\n    return [h0, h1, h2, h3, h4];\n  }\n  protected set(h0: number, h1: number, h2: number, h3: number, h4: number) {\n    this.h0 = h0 | 0;\n    this.h1 = h1 | 0;\n    this.h2 = h2 | 0;\n    this.h3 = h3 | 0;\n    this.h4 = h4 | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    for (let i = 0; i < 16; i++, offset += 4) BUF[i] = view.getUint32(offset, true);\n    // prettier-ignore\n    let al = this.h0 | 0, ar = al,\n        bl = this.h1 | 0, br = bl,\n        cl = this.h2 | 0, cr = cl,\n        dl = this.h3 | 0, dr = dl,\n        el = this.h4 | 0, er = el;\n\n    // Instead of iterating 0 to 80, we split it into 5 groups\n    // And use the groups in constants, functions, etc. Much simpler\n    for (let group = 0; group < 5; group++) {\n      const rGroup = 4 - group;\n      const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore\n      const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n      const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore\n      for (let i = 0; i < 16; i++) {\n        const tl = (rotl(al + f(group, bl, cl, dl) + BUF[rl[i]] + hbl, sl[i]) + el) | 0;\n        al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n      }\n      // 2 loops are 10% faster\n      for (let i = 0; i < 16; i++) {\n        const tr = (rotl(ar + f(rGroup, br, cr, dr) + BUF[rr[i]] + hbr, sr[i]) + er) | 0;\n        ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n      }\n    }\n    // Add the compressed chunk to the current hash value\n    this.set(\n      (this.h1 + cl + dr) | 0,\n      (this.h2 + dl + er) | 0,\n      (this.h3 + el + ar) | 0,\n      (this.h4 + al + br) | 0,\n      (this.h0 + bl + cr) | 0\n    );\n  }\n  protected roundClean() {\n    BUF.fill(0);\n  }\n  destroy() {\n    this.destroyed = true;\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0);\n  }\n}\n\n/**\n * RIPEMD-160 - a hash function from 1990s.\n * @param message - msg that would be hashed\n */\nexport const ripemd160 = /* @__PURE__ */ wrapConstructor(() => new RIPEMD160());\n","import { ripemd160 as noble_ripemd160 } from \"@noble/hashes/ripemd160\";\n\nimport { getBytes,  hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nlet locked = false;\n\nconst _ripemd160 = function(data: Uint8Array): Uint8Array {\n    return noble_ripemd160(data);\n}\n\nlet __ripemd160: (data: Uint8Array) => BytesLike = _ripemd160;\n\n/**\n *  Compute the cryptographic RIPEMD-160 hash of %%data%%.\n *\n *  @_docloc: api/crypto:Hash Functions\n *  @returns DataHexstring\n *\n *  @example:\n *    ripemd160(\"0x\")\n *    //_result:\n *\n *    ripemd160(\"0x1337\")\n *    //_result:\n *\n *    ripemd160(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n *\n */\nexport function ripemd160(_data: BytesLike): string {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__ripemd160(data));\n}\nripemd160._ = _ripemd160;\nripemd160.lock = function(): void { locked = true; }\nripemd160.register = function(func: (data: Uint8Array) => BytesLike) {\n    if (locked) { throw new TypeError(\"ripemd160 is locked\"); }\n    __ripemd160 = func;\n}\nObject.freeze(ripemd160);\n","/**\n *  A **Cryptographically Secure Random Value** is one that has been\n *  generated with additional care take to prevent side-channels\n *  from allowing others to detect it and prevent others from through\n *  coincidence generate the same values.\n *\n *  @_subsection: api/crypto:Random Values  [about-crypto-random]\n */\nimport { randomBytes as crypto_random } from \"./crypto.js\";\n\nlet locked = false;\n\nconst _randomBytes = function(length: number): Uint8Array {\n    return new Uint8Array(crypto_random(length));\n}\n\nlet __randomBytes = _randomBytes;\n\n/**\n *  Return %%length%% bytes of cryptographically secure random data.\n *\n *  @example:\n *    randomBytes(8)\n *    //_result:\n */\nexport function randomBytes(length: number): Uint8Array {\n    return __randomBytes(length);\n}\n\nrandomBytes._ = _randomBytes;\nrandomBytes.lock = function(): void { locked = true; }\nrandomBytes.register = function(func: (length: number) => Uint8Array) {\n    if (locked) { throw new Error(\"randomBytes is locked\"); }\n    __randomBytes = func;\n}\nObject.freeze(randomBytes);\n","import { assertArgument } from \"../utils/index.js\";\n\n\nconst subsChrs = \" !#$%&'()*+,-./<=>?@[]^_`{|}~\";\nconst Word = /^[a-z]*$/i;\n\nfunction unfold(words: Array<string>, sep: string): Array<string> {\n    let initial = 97;\n    return words.reduce((accum, word) => {\n        if (word === sep) {\n            initial++;\n        } else if (word.match(Word)) {\n            accum.push(String.fromCharCode(initial) + word);\n        } else {\n            initial = 97;\n            accum.push(word);\n        }\n        return accum;\n    }, <Array<string>>[]);\n}\n\n/**\n *  @_ignore\n */\nexport function decode(data: string, subs: string): Array<string> {\n\n    // Replace all the substitutions with their expanded form\n    for (let i = subsChrs.length - 1; i >= 0; i--) {\n        data = data.split(subsChrs[i]).join(subs.substring(2 * i, 2 * i + 2));\n    }\n\n    // Get all tle clumps; each suffix, first-increment and second-increment\n    const clumps: Array<string> = [ ];\n    const leftover = data.replace(/(:|([0-9])|([A-Z][a-z]*))/g, (all, item, semi, word) => {\n        if (semi) {\n            for (let i = parseInt(semi); i >= 0; i--) { clumps.push(\";\"); }\n        } else {\n            clumps.push(item.toLowerCase());\n        }\n        return \"\";\n    });\n    /* c8 ignore start */\n    if (leftover) { throw new Error(`leftovers: ${ JSON.stringify(leftover) }`); }\n    /* c8 ignore stop */\n\n    return unfold(unfold(clumps, \";\"), \":\");\n}\n\n/**\n *  @_ignore\n */\nexport function decodeOwl(data: string): Array<string> {\n    assertArgument(data[0] === \"0\", \"unsupported auwl data\", \"data\", data);\n\n    return decode(\n        data.substring(1 + 2 * subsChrs.length),\n        data.substring(1, 1 + 2 * subsChrs.length));\n}\n","import { defineProperties } from \"../utils/index.js\";\n\n/**\n *  A Wordlist represents a collection of language-specific\n *  words used to encode and devoce [[link-bip-39]] encoded data\n *  by mapping words to 11-bit values and vice versa.\n */\nexport abstract class Wordlist {\n    locale!: string;\n\n    /**\n     *  Creates a new Wordlist instance.\n     *\n     *  Sub-classes MUST call this if they provide their own constructor,\n     *  passing in the locale string of the language.\n     *\n     *  Generally there is no need to create instances of a Wordlist,\n     *  since each language-specific Wordlist creates an instance and\n     *  there is no state kept internally, so they are safe to share.\n     */\n    constructor(locale: string) {\n        defineProperties<Wordlist>(this, { locale });\n    }\n\n    /**\n     *  Sub-classes may override this to provide a language-specific\n     *  method for spliting %%phrase%% into individual words.\n     *\n     *  By default, %%phrase%% is split using any sequences of\n     *  white-space as defined by regular expressions (i.e. ``/\\s+/``).\n     */\n    split(phrase: string): Array<string> {\n        return phrase.toLowerCase().split(/\\s+/g)\n    }\n\n    /**\n     *  Sub-classes may override this to provider a language-specific\n     *  method for joining %%words%% into a phrase.\n     *\n     *  By default, %%words%% are joined by a single space.\n     */\n    join(words: Array<string>): string {\n        return words.join(\" \");\n    }\n\n    /**\n     *  Maps an 11-bit value into its coresponding word in the list.\n     *\n     *  Sub-classes MUST override this.\n     */\n    abstract getWord(index: number): string;\n\n    /**\n     *  Maps a word to its corresponding 11-bit value.\n     *\n     *  Sub-classes MUST override this.\n     */\n    abstract getWordIndex(word: string): number;\n}\n","\n// Use the encode-latin.js script to create the necessary\n// data files to be consumed by this class\n\nimport { id } from \"../hash/index.js\";\nimport { assertArgument } from \"../utils/index.js\";\n\nimport { decodeOwl } from \"./decode-owl.js\";\nimport { Wordlist } from \"./wordlist.js\";\n\n/**\n *  An OWL format Wordlist is an encoding method that exploits\n *  the general locality of alphabetically sorted words to\n *  achieve a simple but effective means of compression.\n *\n *  This class is generally not useful to most developers as\n *  it is used mainly internally to keep Wordlists for languages\n *  based on ASCII-7 small.\n *\n *  If necessary, there are tools within the ``generation/`` folder\n *  to create the necessary data.\n */\nexport class WordlistOwl extends Wordlist {\n    #data: string;\n    #checksum: string;\n\n    /**\n     *  Creates a new Wordlist for %%locale%% using the OWL %%data%%\n     *  and validated against the %%checksum%%.\n     */\n    constructor(locale: string, data: string, checksum: string) {\n        super(locale);\n        this.#data = data;\n        this.#checksum = checksum;\n        this.#words = null;\n    }\n\n    /**\n     *  The OWL-encoded data.\n     */\n    get _data(): string { return this.#data; }\n\n    /**\n     *  Decode all the words for the wordlist.\n     */\n    _decodeWords(): Array<string> {\n        return decodeOwl(this.#data);\n    }\n\n    #words: null | Array<string>;\n    #loadWords(): Array<string> {\n        if (this.#words == null) {\n            const words = this._decodeWords();\n\n            // Verify the computed list matches the official list\n            const checksum = id(words.join(\"\\n\") + \"\\n\");\n            /* c8 ignore start */\n            if (checksum !== this.#checksum) {\n                throw new Error(`BIP39 Wordlist for ${ this.locale } FAILED`);\n            }\n            /* c8 ignore stop */\n\n            this.#words = words;\n        }\n        return this.#words;\n    }\n\n    getWord(index: number): string {\n        const words = this.#loadWords();\n        assertArgument(index >= 0 && index < words.length, `invalid word index: ${ index }`, \"index\", index);\n        return words[index];\n    }\n\n    getWordIndex(word: string): number {\n        return this.#loadWords().indexOf(word);\n    }\n}\n","import { WordlistOwl } from \"./wordlist-owl.js\";\n\nconst words = \"0erleonalorenseinceregesticitStanvetearctssi#ch2Athck&tneLl0And#Il.yLeOutO=S|S%b/ra@SurdU'0Ce[Cid|CountCu'Hie=IdOu,-Qui*Ro[TT]T%T*[Tu$0AptDD-tD*[Ju,M.UltV<)Vi)0Rob-0FairF%dRaid0A(EEntRee0Ead0MRRp%tS!_rmBumCoholErtI&LLeyLowMo,O}PhaReadySoT Ways0A>urAz(gOngOuntU'd0Aly,Ch%Ci|G G!GryIm$K!Noun)Nu$O` Sw T&naTiqueXietyY1ArtOlogyPe?P!Pro=Ril1ChCt-EaEnaGueMMedM%MyOundR<+Re,Ri=RowTTefa@Ti,Tw%k0KPe@SaultSetSi,SumeThma0H!>OmTa{T&dT.udeTra@0Ct]D.Gu,NtTh%ToTumn0Era+OcadoOid0AkeA*AyEsomeFulKw?d0Is:ByChel%C#D+GL<)Lc#y~MbooN<aNn RRelyRga(R*lSeS-SketTt!3A^AnAutyCau'ComeEfF%eG(Ha=H(dLie=LowLtN^Nef./TrayTt Twe&Y#d3Cyc!DKeNdOlogyRdR`Tt _{AdeAmeAnketA,EakE[IndOodO[omOu'UeUrUsh_rdAtDyIlMbNeNusOkO,Rd R(gRrowSsTtomUn)XY_{etA(AndA[A=EadEezeI{Id+IefIghtIngIskOccoliOk&OnzeOomO` OwnUsh2Bb!DdyD+tFf$oIldLbLkL!tNd!Nk Rd&Rg R,SS(e[SyTt Y Zz:Bba+B(B!CtusGeKe~LmM aMpNN$N)lNdyNn#NoeNvasNy#Pab!P.$Pta(RRb#RdRgoRpetRryRtSeShS(o/!Su$TT$ogT^Teg%yTt!UghtU'Ut]Ve3Il(gL yM|NsusNturyRe$Rta(_irAlkAmp]An+AosApt Ar+A'AtEapE{Ee'EfErryE,I{&IefIldIm}yOi)Oo'R#-U{!UnkUrn0G?Nnam#Rc!Tiz&TyVil_imApArifyAwAyE<ErkEv I{I|IffImbIn-IpO{OgO'O`OudOwnUbUmpU, Ut^_^A,C#utDeFfeeIlInL!@L%LumnMb(eMeMf%tM-Mm#Mp<yNc tNdu@NfirmNg*[N}@Nsid NtrolNv()OkOlPp PyR$ReRnR*@/Tt#U^UntryUp!Ur'Us(V Yo>_{Ad!AftAmA}AshAt AwlAzyEamEd.EekEwI{etImeIspIt-OpO[Ou^OwdUci$UelUi'Umb!Un^UshYY,$2BeLtu*PPbo?dRiousRr|Rta(R=Sh]/omTe3C!:DMa+MpN)Ng R(gShUght WnY3AlBa>BrisCadeCemb CideCl(eC%a>C*a'ErF&'F(eFyG*eLayLiv M<dMi'Ni$Nti,NyP?tP&dPos.P`PutyRi=ScribeS tSignSkSpair/royTailTe@VelopVi)Vo>3AgramAlAm#dAryCeE'lEtFf G.$Gn.yLemmaNn NosaurRe@RtSag*eScov Sea'ShSmi[S%d Splay/<)V tVideV%)Zzy5Ct%Cum|G~Lph(Ma(Na>NkeyN%OrSeUb!Ve_ftAg#AmaA,-AwEamE[IftIllInkIpI=OpUmY2CkMbNeR(g/T^Ty1Arf1Nam-:G G!RlyRnR`Sily/Sy1HoOlogyOnomy0GeItUca>1F%t0G1GhtTh 2BowD E@r-Eg<tEm|Eph<tEvat%I>Se0B?kBodyBra)Er+Ot]PloyPow Pty0Ab!A@DD![D%'EmyErgyF%)Ga+G(eH<)JoyLi,OughR-hRollSu*T Ti*TryVelope1Isode0U$Uip0AA'OdeOs]R%Upt0CapeSayS&)Ta>0Ern$H-s1Id&)IlOkeOl=1A@Amp!Ce[Ch<+C.eCludeCu'Ecu>Erci'Hau,Hib.I!I,ItOt-P<dPe@Pi*Pla(Po'P*[T&dTra0EEbrow:Br-CeCultyDeIntI`~L'MeMilyMousNNcyNtasyRmSh]TT$Th TigueUltV%.e3Atu*Bru?yD $EEdElMa!N)/iv$T^V W3B Ct]EldGu*LeLmLt N$NdNeNg NishReRmR,Sc$ShTT}[X_gAmeAshAtAv%EeIghtIpOatO{O%Ow UidUshY_mCusGIlLd~owOdOtR)Re,R+tRkRtu}RumRw?dSsil/ UndX_gi!AmeEqu|EshI&dIn+OgOntO,OwnOz&U.2ElNNnyRna)RyTu*:D+tInLaxy~ yMePRa+Rba+Rd&Rl-Rm|SSpTeTh U+Ze3N $NiusN*Nt!Nu(e/u*2O,0AntFtGg!Ng RaffeRlVe_dAn)A*A[IdeImp'ObeOomOryO=OwUe_tDde[LdOdO'RillaSpelSsipV nWn_bA)A(AntApeA[Av.yEatE&IdIefItOc yOupOwUnt_rdE[IdeIltIt?N3M:B.IrLfMm M, NdPpyRb%RdRshR=,TVeWkZ?d3AdAl`ArtAvyD+hogIght~oLmetLpNRo3Dd&Gh~NtPRe/%y5BbyCkeyLdLeLiday~owMeNeyOdPeRnRr%R'Sp.$/TelUrV 5BGeM<Mb!M%Nd*dNgryNtRd!RryRtSb<d3Brid:1EOn0EaEntifyLe2N%e4LLeg$L}[0A+Ita>M&'Mu}Pa@Po'Pro=Pul'0ChCludeComeC*a'DexD-a>Do%Du,ryF<tFl-tF%mHa!H .Iti$Je@JuryMa>N Noc|PutQuiryS<eSe@SideSpi*/$lTa@T e,ToVe,V.eVol=3On0L<dOla>Sue0Em1Ory:CketGu?RZz3AlousAns~yWel9BInKeUr}yY5D+I)MpNg!Ni%Nk/:Ng?oo3EnEpT^upY3CkDD}yNdNgdomSsTT^&TeTt&Wi4EeIfeO{Ow:BBelB%Dd DyKeMpNgua+PtopR+T T(UghUndryVaWWnWsu.Y Zy3Ad AfArnA=Ctu*FtGG$G&dIsu*M#NdNg`NsOp?dSs#Tt Vel3ArB tyBr?yC&'FeFtGhtKeMbM.NkOnQuid/Tt!VeZ?d5AdAnB, C$CkG-NelyNgOpTt yUdUn+VeY$5CkyGga+Mb N?N^Xury3R-s:Ch(eDG-G}tIdIlInJ%KeMm$NNa+Nda>NgoNs]Nu$P!Rb!R^Rg(R(eRketRria+SkSs/ T^T i$ThTrixTt XimumZe3AdowAnAsu*AtCh<-D$DiaLodyLtMb M%yNt]NuRcyR+R.RryShSsa+T$Thod3Dd!DnightLk~]M-NdNimumN%Nu>Rac!Rr%S ySs/akeXXedXtu*5Bi!DelDifyMM|N.%NkeyN, N`OnR$ReRn(gSqu.oTh T]T%Unta(U'VeVie5ChFf(LeLtiplySc!SeumShroomS-/Tu$3Self/ yTh:I=MePk(Rrow/yT]Tu*3ArCkEdGati=G!@I` PhewR=/TTw%kUtr$V WsXt3CeGht5B!I'M(eeOd!Rm$R`SeTab!TeTh(gTi)VelW5C!?Mb R'T:K0EyJe@Li+Scu*S =Ta(Vious0CurE<Tob 0Or1FF Fi)T&2L1Ay0DI=Ymp-0It0CeEI#L(eLy1EnEraIn]Po'T]1An+B.Ch?dD D(?yG<I|Ig($Ph<0Tr-h0H 0Tdo%T TputTside0AlEnEr0NN 0Yg&0/ 0O}:CtDd!GeIrLa)LmNdaNelN-N` P RadeR|RkRrotRtySsT^ThTi|TrolTt nU'VeYm|3A)AnutArAs<tL-<NN$tyNcilOp!Pp Rfe@Rm.Rs#T2O}OtoRa'Ys-$0AnoCn-Ctu*E)GGe#~LotNkO} Pe/olT^Zza_)A}tA,-A>AyEa'Ed+U{UgUn+2EmEtIntL?LeLi)NdNyOlPul?Rt]S.]Ssib!/TatoTt yV tyWd W _@i)Ai'Ed-tEf Epa*Es|EttyEv|I)IdeIm?yIntI%.yIs#Iva>IzeOb!mO)[Odu)Of.OgramOje@Omo>OofOp tyOsp O>@OudOvide2Bl-Dd(g~LpL'Mpk(N^PilPpyR^a'R.yRpo'R'ShTZz!3Ramid:99Al.yAntumArt E,]I{ItIzO>:Bb.Cco#CeCkD?DioIlInI'~yMpN^NdomN+PidReTeTh V&WZ%3AdyAlAs#BelBuildC$lCei=CipeC%dCyc!Du)F!@F%mFu'G]G*tGul?Je@LaxLea'LiefLyMa(Memb M(dMo=Nd NewNtOp&PairPeatPla)P%tQui*ScueSemb!Si,Sour)Sp#'SultTi*T*atTurnUn]Ve$ViewW?d2Y`m0BBb#CeChDeD+F!GhtGidNgOtPp!SkTu$V$V 5AdA,BotBu,CketM<)OfOkieOmSeTa>UghUndU>Y$5Bb DeGLeNNwayR$:DDd!D}[FeIlLadLm#L#LtLu>MeMp!NdTisfyToshiU)Usa+VeY1A!AnA*Att E}HemeHoolI&)I[%sOrp]OutRapRe&RiptRub1AAr^As#AtC#dC*tCt]Cur.yEdEkGm|Le@~M(?Ni%N'Nt&)RiesRvi)Ss]Tt!TupV&_dowAftAllowA*EdEllEriffIeldIftI}IpIv O{OeOotOpOrtOuld O=RimpRugUff!Y0Bl(gCkDeE+GhtGnL|Lk~yLv Mil?Mp!N)NgR&/ Tua>XZe1A>Et^IIllInIrtUll0AbAmEepEnd I)IdeIghtImOg<OtOwUsh0AllArtI!OkeOo`0A{AkeApIffOw0ApCc Ci$CkDaFtL?Ldi LidLut]L=Me#eNgOnRryRtUlUndUpUr)U`0A)A*Ati$AwnEakEci$EedEllEndH eI)Id IkeInIr.L.OilOns%O#OrtOtRayReadR(gY0Ua*UeezeUir*l_b!AdiumAffA+AirsAmpAndArtA>AyEakEelEmEpE*oI{IllIngO{Oma^O}OolOryO=Ra>gyReetRikeR#gRugg!Ud|UffUmb!Y!0Bje@Bm.BwayC)[ChDd&Ff G?G+,ItMm NNnyN'tP PplyP*meReRfa)R+Rpri'RroundR=ySpe@/a(1AllowAmpApArmE?EetIftImIngIt^Ord1MbolMptomRup/em:B!Ck!GIlL|LkNkPeR+tSk/eTtooXi3A^Am~NN<tNnisNtRm/Xt_nkAtEmeEnE%yE*EyIngIsOughtReeRi=RowUmbUnd 0CketDeG LtMb MeNyPRedSsueT!5A,BaccoDayDdl EGe` I!tK&MatoM%rowNeNgueNightOlO`PP-Pp!R^RnadoRtoi'SsT$Uri,W?dW WnY_{AdeAff-Ag-A(Ansf ApAshA=lAyEatEeEndI$IbeI{Igg ImIpOphyOub!U{UeUlyUmpetU,U`Y2BeIt]Mb!NaN}lRkeyRnRt!1El=EntyI)InI,O1PeP-$:5Ly5B*lla0Ab!Awa*C!Cov D DoFairFoldHappyIf%mIqueItIv 'KnownLo{TilUsu$Veil1Da>GradeHoldOnP Set1B<Ge0A+EEdEfulE![U$0Il.y:C<tCuumGueLidL!yL=NNishP%Rious/Ult3H-!L=tNd%Ntu*NueRbRifyRs]RyS'lT <3Ab!Br<tCiousCt%yDeoEw~a+Nta+Ol(Rtu$RusSaS.Su$T$Vid5C$I)IdLc<oLumeTeYa+:GeG#ItLk~LnutNtRfa*RmRri%ShSp/eT VeY3Al`Ap#ArA'lA` BDd(gEk&dIrdLcome/T_!AtEatEelEnE*IpIsp 0DeD`FeLd~NNdowNeNgNkNn Nt ReSdomSeShT}[5LfM<Nd OdOlRdRkRldRryR`_pE{E,!I,I>Ong::Rd3Ar~ow9UUngU`:3BraRo9NeO\";\nconst checksum = \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\";\n\nlet wordlist: null | LangEn = null;\n\n/**\n *  The [[link-bip39-en]] for [mnemonic phrases](link-bip-39).\n *\n *  @_docloc: api/wordlists\n */\nexport class LangEn extends WordlistOwl {\n\n    /**\n     *  Creates a new instance of the English language Wordlist.\n     *\n     *  This should be unnecessary most of the time as the exported\n     *  [[langEn]] should suffice.\n     *\n     *  @_ignore:\n     */\n    constructor() { super(\"en\", words, checksum); }\n\n    /**\n     *  Returns a singleton instance of a ``LangEn``, creating it\n     *  if this is the first time being called.\n     */\n    static wordlist(): LangEn {\n        if (wordlist == null) { wordlist = new LangEn(); }\n        return wordlist;\n    }\n}\n","/**\n *  A **Password-Based Key-Derivation Function** is designed to create\n *  a sequence of bytes suitible as a **key** from a human-rememberable\n *  password.\n *\n *  @_subsection: api/crypto:Passwords  [about-pbkdf]\n */\n\nimport { pbkdf2Sync } from \"./crypto.js\";\n\nimport { getBytes, hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nlet locked = false;\n\nconst _pbkdf2 = function(password: Uint8Array, salt: Uint8Array, iterations: number, keylen: number, algo: \"sha256\" | \"sha512\"): BytesLike {\n    return pbkdf2Sync(password, salt, iterations, keylen, algo);\n}\n\nlet __pbkdf2 = _pbkdf2;\n\n/**\n *  Return the [[link-pbkdf2]] for %%keylen%% bytes for %%password%% using\n *  the %%salt%% and using %%iterations%% of %%algo%%.\n *\n *  This PBKDF is outdated and should not be used in new projects, but is\n *  required to decrypt older files.\n *\n *  @example:\n *    // The password must be converted to bytes, and it is generally\n *    // best practices to ensure the string has been normalized. Many\n *    // formats explicitly indicate the normalization form to use.\n *    password = \"hello\"\n *    passwordBytes = toUtf8Bytes(password, \"NFKC\")\n *\n *    salt = id(\"some-salt\")\n *\n *    // Compute the PBKDF2\n *    pbkdf2(passwordBytes, salt, 1024, 16, \"sha256\")\n *    //_result:\n */\nexport function pbkdf2(_password: BytesLike, _salt: BytesLike, iterations: number, keylen: number, algo: \"sha256\" | \"sha512\"): string {\n    const password = getBytes(_password, \"password\");\n    const salt = getBytes(_salt, \"salt\");\n    return hexlify(__pbkdf2(password, salt, iterations, keylen, algo));\n}\npbkdf2._ = _pbkdf2;\npbkdf2.lock = function(): void { locked = true; }\npbkdf2.register = function(func: (password: Uint8Array, salt: Uint8Array, iterations: number, keylen: number, algo: \"sha256\" | \"sha512\") => BytesLike) {\n    if (locked) { throw new Error(\"pbkdf2 is locked\"); }\n    __pbkdf2 = func;\n}\nObject.freeze(pbkdf2);\n","import { pbkdf2, sha256 } from \"../crypto/index.js\";\nimport {\n    defineProperties, getBytes, hexlify, assertNormalize, assertPrivate, assertArgument, toUtf8Bytes\n} from \"../utils/index.js\";\nimport { LangEn } from \"../wordlists/lang-en.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\nimport type { Wordlist } from \"../wordlists/index.js\";\n\n\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits: number): number {\n   return ((1 << bits) - 1) << (8 - bits) & 0xff;\n}\n\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits: number): number {\n   return ((1 << bits) - 1) & 0xff;\n}\n\n\nfunction mnemonicToEntropy(mnemonic: string, wordlist?: null | Wordlist): string {\n    assertNormalize(\"NFKD\");\n\n    if (wordlist == null) { wordlist = LangEn.wordlist(); }\n\n    const words = wordlist.split(mnemonic);\n    assertArgument((words.length % 3) === 0 && words.length >= 12 && words.length <= 24,\n        \"invalid mnemonic length\", \"mnemonic\", \"[ REDACTED ]\");\n\n    const entropy = new Uint8Array(Math.ceil(11 * words.length / 8));\n\n    let offset = 0;\n    for (let i = 0; i < words.length; i++) {\n        let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n        assertArgument(index >= 0, `invalid mnemonic word at index ${ i }`, \"mnemonic\", \"[ REDACTED ]\");\n\n        for (let bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n\n    const entropyBits = 32 * words.length / 3;\n\n\n    const checksumBits = words.length / 3;\n    const checksumMask = getUpperMask(checksumBits);\n\n    const checksum = getBytes(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n\n    assertArgument(checksum === (entropy[entropy.length - 1] & checksumMask),\n        \"invalid mnemonic checksum\", \"mnemonic\", \"[ REDACTED ]\");\n\n    return hexlify(entropy.slice(0, entropyBits / 8));\n}\n\nfunction entropyToMnemonic(entropy: Uint8Array, wordlist?: null | Wordlist): string {\n\n    assertArgument((entropy.length % 4) === 0 && entropy.length >= 16 && entropy.length <= 32,\n        \"invalid entropy size\", \"entropy\", \"[ REDACTED ]\");\n\n    if (wordlist == null) { wordlist = LangEn.wordlist(); }\n\n    const indices: Array<number> = [ 0 ];\n\n    let remainingBits = 11;\n    for (let i = 0; i < entropy.length; i++) {\n\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n\n            remainingBits -= 8;\n\n        // This byte will complete an 11-bit index\n        } else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n\n            remainingBits += 3;\n        }\n    }\n\n    // Compute the checksum bits\n    const checksumBits = entropy.length / 4;\n    const checksum = parseInt(sha256(entropy).substring(2, 4), 16) & getUpperMask(checksumBits);\n\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n\n    return wordlist.join(indices.map((index) => (<Wordlist>wordlist).getWord(index)));\n}\n\nconst _guard = { };\n\n/**\n *  A **Mnemonic** wraps all properties required to compute [[link-bip-39]]\n *  seeds and convert between phrases and entropy.\n */\nexport class Mnemonic {\n    /**\n     *  The mnemonic phrase of 12, 15, 18, 21 or 24 words.\n     *\n     *  Use the [[wordlist]] ``split`` method to get the individual words.\n     */\n    readonly phrase!: string;\n\n    /**\n     *  The password used for this mnemonic. If no password is used this\n     *  is the empty string (i.e. ``\"\"``) as per the specification.\n     */\n    readonly password!: string;\n\n    /**\n     *  The wordlist for this mnemonic.\n     */\n    readonly wordlist!: Wordlist;\n\n    /**\n     *  The underlying entropy which the mnemonic encodes.\n     */\n    readonly entropy!: string;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, entropy: string, phrase: string, password?: null | string, wordlist?: null | Wordlist) {\n        if (password == null) { password = \"\"; }\n        if (wordlist == null) { wordlist = LangEn.wordlist(); }\n        assertPrivate(guard, _guard, \"Mnemonic\");\n        defineProperties<Mnemonic>(this, { phrase, password, wordlist, entropy });\n    }\n\n    /**\n     *  Returns the seed for the mnemonic.\n     */\n    computeSeed(): string {\n        const salt = toUtf8Bytes(\"mnemonic\" + this.password, \"NFKD\");\n        return pbkdf2(toUtf8Bytes(this.phrase, \"NFKD\"), salt, 2048, 64, \"sha512\");\n    }\n\n    /**\n     *  Creates a new Mnemonic for the %%phrase%%.\n     *\n     *  The default %%password%% is the empty string and the default\n     *  wordlist is the [English wordlists](LangEn).\n     */\n    static fromPhrase(phrase: string, password?: null | string, wordlist?: null | Wordlist): Mnemonic {\n        // Normalize the case and space; throws if invalid\n        const entropy = mnemonicToEntropy(phrase, wordlist);\n        phrase = entropyToMnemonic(getBytes(entropy), wordlist);\n        return new Mnemonic(_guard, entropy, phrase, password, wordlist);\n    }\n\n    /**\n     *  Create a new **Mnemonic** from the %%entropy%%.\n     *\n     *  The default %%password%% is the empty string and the default\n     *  wordlist is the [English wordlists](LangEn).\n     */\n    static fromEntropy(_entropy: BytesLike, password?: null | string, wordlist?: null | Wordlist): Mnemonic {\n        const entropy = getBytes(_entropy, \"entropy\");\n        const phrase = entropyToMnemonic(entropy, wordlist);\n        return new Mnemonic(_guard, hexlify(entropy), phrase, password, wordlist);\n    }\n\n    /**\n     *  Returns the phrase for %%mnemonic%%.\n     */\n    static entropyToPhrase(_entropy: BytesLike, wordlist?: null | Wordlist): string {\n        const entropy = getBytes(_entropy, \"entropy\");\n        return entropyToMnemonic(entropy, wordlist);\n    }\n\n    /**\n     *  Returns the entropy for %%phrase%%.\n     */\n    static phraseToEntropy(phrase: string, wordlist?: null | Wordlist): string {\n        return mnemonicToEntropy(phrase, wordlist);\n    }\n\n    /**\n     *  Returns true if %%phrase%% is a valid [[link-bip-39]] phrase.\n     *\n     *  This checks all the provided words belong to the %%wordlist%%,\n     *  that the length is valid and the checksum is correct.\n     */\n    static isValidMnemonic(phrase: string, wordlist?: null | Wordlist): boolean {\n        try {\n            mnemonicToEntropy(phrase, wordlist);\n            return true;\n        } catch (error) { }\n        return false;\n    }\n}\n","/*! MIT License. Copyright 2015-2022 Richard Moore <me@ricmoo.com>. See LICENSE.txt. */\n\n// Number of rounds by keysize\nconst numberOfRounds: Record<number, number> = { 16: 10, 24: 12, 32: 14 };\n\n// Round constant words\nconst rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n// S-box and Inverse S-box (S is for Substitution)\nconst S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\nconst Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n// Transformations for encryption\nconst T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\nconst T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\nconst T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\nconst T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n// Transformations for decryption\nconst T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\nconst T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\nconst T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\nconst T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n// Transformations for decryption key expansion\nconst U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\nconst U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\nconst U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\nconst U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\nfunction convertToInt32(bytes: Uint8Array): Array<number> {\n  const result = [ ];\n  for (let i = 0; i < bytes.length; i += 4) {\n    result.push((bytes[i] << 24) | (bytes[i + 1] << 16) | (bytes[i + 2] <<  8) | bytes[i + 3]);\n  }\n  return result;\n}\n\nexport class AES {\n  readonly #key: Uint8Array;\n  readonly #Kd: Array<Array<number>>;\n  readonly #Ke: Array<Array<number>>;\n\n  get key(): Uint8Array { return this.#key.slice(); }\n\n  constructor(key: Uint8Array) {\n    if (!(this instanceof AES)) {\n      throw Error('AES must be instanitated with `new`');\n    }\n\n    this.#key = new Uint8Array(key);\n\n    const rounds = numberOfRounds[this.key.length];\n    if (rounds == null) {\n      throw new TypeError('invalid key size (must be 16, 24 or 32 bytes)');\n    }\n\n    // encryption round keys\n    this.#Ke = [];\n\n    // decryption round keys\n    this.#Kd = [];\n\n    for (let i = 0; i <= rounds; i++) {\n      this.#Ke.push([0, 0, 0, 0]);\n      this.#Kd.push([0, 0, 0, 0]);\n    }\n\n    const roundKeyCount = (rounds + 1) * 4;\n    const KC = this.key.length / 4;\n\n    // convert the key into ints\n    const tk = convertToInt32(this.key);\n\n    // copy values into round key arrays\n    let index;\n    for (let i = 0; i < KC; i++) {\n      index = i >> 2;\n      this.#Ke[index][i % 4] = tk[i];\n      this.#Kd[rounds - index][i % 4] = tk[i];\n    }\n\n    // key expansion (fips-197 section 5.2)\n    let rconpointer = 0;\n    let t = KC, tt;\n    while (t < roundKeyCount) {\n      tt = tk[KC - 1];\n      tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                (S[(tt >>  8) & 0xFF] << 16) ^\n                (S[ tt        & 0xFF] <<  8) ^\n                 S[(tt >> 24) & 0xFF]        ^\n                (rcon[rconpointer] << 24));\n      rconpointer += 1;\n\n      // key expansion (for non-256 bit)\n      if (KC != 8) {\n        for (let i = 1; i < KC; i++) {\n          tk[i] ^= tk[i - 1];\n        }\n\n      // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n      } else {\n        for (let i = 1; i < (KC / 2); i++) {\n          tk[i] ^= tk[i - 1];\n        }\n        tt = tk[(KC / 2) - 1];\n\n        tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                      (S[(tt >>  8) & 0xFF] <<  8) ^\n                      (S[(tt >> 16) & 0xFF] << 16) ^\n                      (S[(tt >> 24) & 0xFF] << 24));\n\n        for (let i = (KC / 2) + 1; i < KC; i++) {\n          tk[i] ^= tk[i - 1];\n        }\n      }\n\n      // copy values into round key arrays\n      let i = 0, r, c;\n      while (i < KC && t < roundKeyCount) {\n        r = t >> 2;\n        c = t % 4;\n        this.#Ke[r][c] = tk[i];\n        this.#Kd[rounds - r][c] = tk[i++];\n        t++;\n      }\n    }\n\n    // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n    for (let r = 1; r < rounds; r++) {\n      for (let c = 0; c < 4; c++) {\n        tt = this.#Kd[r][c];\n        this.#Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                          U2[(tt >> 16) & 0xFF] ^\n                          U3[(tt >>  8) & 0xFF] ^\n                          U4[ tt        & 0xFF]);\n      }\n    }\n  }\n\n  encrypt(plaintext: Uint8Array): Uint8Array {\n    if (plaintext.length != 16) {\n      throw new TypeError('invalid plaintext size (must be 16 bytes)');\n    }\n\n    const rounds = this.#Ke.length - 1;\n    const a = [0, 0, 0, 0];\n\n    // convert plaintext to (ints ^ key)\n    let t = convertToInt32(plaintext);\n    for (let i = 0; i < 4; i++) {\n      t[i] ^= this.#Ke[0][i];\n    }\n\n    // apply round transforms\n    for (let r = 1; r < rounds; r++) {\n      for (let i = 0; i < 4; i++) {\n        a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                T4[ t[(i + 3) % 4]        & 0xff] ^\n                this.#Ke[r][i]);\n      }\n      t = a.slice();\n    }\n\n    // the last round is special\n    const result = new Uint8Array(16);\n    let tt = 0;\n    for (let i = 0; i < 4; i++) {\n      tt = this.#Ke[rounds][i];\n      result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n      result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n      result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n      result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n    }\n\n    return result;\n  }\n\n  decrypt(ciphertext: Uint8Array): Uint8Array {\n    if (ciphertext.length != 16) {\n      throw new TypeError('invalid ciphertext size (must be 16 bytes)');\n    }\n\n    const rounds = this.#Kd.length - 1;\n    const a = [0, 0, 0, 0];\n\n    // convert plaintext to (ints ^ key)\n    let t = convertToInt32(ciphertext);\n    for (let i = 0; i < 4; i++) {\n      t[i] ^= this.#Kd[0][i];\n    }\n\n    // apply round transforms\n    for (let r = 1; r < rounds; r++) {\n      for (let i = 0; i < 4; i++) {\n        a[i] = (T5[(t[ i         ] >> 24) & 0xff] ^\n                T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                T8[ t[(i + 1) % 4]        & 0xff] ^\n                this.#Kd[r][i]);\n      }\n      t = a.slice();\n    }\n\n    // the last round is special\n    const result = new Uint8Array(16);\n    let tt = 0;\n    for (let i = 0; i < 4; i++) {\n      tt = this.#Kd[rounds][i];\n      result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n      result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n      result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n      result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n    }\n\n    return result;\n  }\n}\n","\nimport { AES } from \"./aes.js\";\n\nexport abstract class ModeOfOperation {\n  readonly aes!: AES;\n  readonly name!: string;\n\n  constructor(name: string, key: Uint8Array, cls?: any) {\n    if (cls && !(this instanceof cls)) {\n      throw new Error(`${ name } must be instantiated with \"new\"`);\n    }\n\n    Object.defineProperties(this, {\n      aes: { enumerable: true, value: new AES(key) },\n      name: { enumerable: true, value: name }\n    });\n  }\n\n  abstract encrypt(plaintext: Uint8Array): Uint8Array;\n  abstract decrypt(ciphertext: Uint8Array): Uint8Array;\n}\n","// Cipher Block Chaining\n\nimport { ModeOfOperation } from \"./mode.js\";\n\nexport class CBC extends ModeOfOperation {\n  #iv: Uint8Array;\n  #lastBlock: Uint8Array;\n\n  constructor(key: Uint8Array, iv?: Uint8Array) {\n    super(\"ECC\", key, CBC);\n\n    if (iv) {\n      if (iv.length % 16) {\n        throw new TypeError(\"invalid iv size (must be 16 bytes)\");\n      }\n      this.#iv = new Uint8Array(iv);\n    } else {\n      this.#iv = new Uint8Array(16);\n    }\n\n    this.#lastBlock = this.iv;\n  }\n\n  get iv(): Uint8Array { return new Uint8Array(this.#iv); }\n\n  encrypt(plaintext: Uint8Array): Uint8Array {\n    if (plaintext.length % 16) {\n      throw new TypeError(\"invalid plaintext size (must be multiple of 16 bytes)\");\n    }\n\n    const ciphertext = new Uint8Array(plaintext.length);\n    for (let i = 0; i < plaintext.length; i += 16) {\n      for (let j = 0; j < 16; j++) {\n        this.#lastBlock[j] ^= plaintext[i + j];\n      }\n\n      this.#lastBlock = this.aes.encrypt(this.#lastBlock);\n      ciphertext.set(this.#lastBlock, i);\n    }\n\n    return ciphertext;\n  }\n\n  decrypt(ciphertext: Uint8Array): Uint8Array {\n    if (ciphertext.length % 16) {\n        throw new TypeError(\"invalid ciphertext size (must be multiple of 16 bytes)\");\n    }\n\n    const plaintext = new Uint8Array(ciphertext.length);\n    for (let i = 0; i < ciphertext.length; i += 16) {\n        const block = this.aes.decrypt(ciphertext.subarray(i, i + 16));\n\n        for (let j = 0; j < 16; j++) {\n          plaintext[i + j] = block[j] ^ this.#lastBlock[j];\n          this.#lastBlock[j] = ciphertext[i + j];\n        }\n    }\n\n    return plaintext;\n  }\n}\n","// Counter Mode\n\nimport { ModeOfOperation } from \"./mode.js\";\n\nexport class CTR extends ModeOfOperation {\n\n  // Remaining bytes for the one-time pad\n  #remaining: Uint8Array;\n  #remainingIndex: number;\n\n  // The current counter\n  #counter: Uint8Array;\n\n  constructor(key: Uint8Array, initialValue?: number | Uint8Array) {\n    super(\"CTR\", key, CTR);\n\n    this.#counter = new Uint8Array(16)\n    this.#counter.fill(0);\n\n    this.#remaining = this.#counter;  // This will be discarded immediately\n    this.#remainingIndex = 16;\n\n    if (initialValue == null) { initialValue = 1; }\n\n    if (typeof(initialValue) === \"number\") {\n      this.setCounterValue(initialValue);\n    } else {\n      this.setCounterBytes(initialValue);\n    }\n  }\n\n  get counter(): Uint8Array { return new Uint8Array(this.#counter); }\n\n  setCounterValue(value: number): void {\n    if (!Number.isInteger(value) || value < 0 || value > Number.MAX_SAFE_INTEGER) {\n      throw new TypeError(\"invalid counter initial integer value\");\n    }\n\n    for (let index = 15; index >= 0; --index) {\n      this.#counter[index] = value % 256;\n      value = Math.floor(value / 256);\n    }\n  }\n\n  setCounterBytes(value: Uint8Array): void {\n    if (value.length !== 16) {\n      throw new TypeError(\"invalid counter initial Uint8Array value length\");\n    }\n\n    this.#counter.set(value);\n  }\n\n  increment() {\n    for (let i = 15; i >= 0; i--) {\n      if (this.#counter[i] === 255) {\n        this.#counter[i] = 0;\n      } else {\n        this.#counter[i]++;\n        break;\n      }\n    }\n  }\n\n  encrypt(plaintext: Uint8Array): Uint8Array {\n    const crypttext = new Uint8Array(plaintext);\n\n    for (let i = 0; i < crypttext.length; i++) {\n      if (this.#remainingIndex === 16) {\n        this.#remaining = this.aes.encrypt(this.#counter);\n        this.#remainingIndex = 0;\n        this.increment();\n      }\n      crypttext[i] ^= this.#remaining[this.#remainingIndex++];\n    }\n\n    return crypttext;\n  }\n\n  decrypt(ciphertext: Uint8Array): Uint8Array {\n    return this.encrypt(ciphertext);\n  }\n}\n","import { number as assertNumber } from './_assert.js';\nimport { sha256 } from './sha256.js';\nimport { pbkdf2 } from './pbkdf2.js';\nimport { asyncLoop, checkOpts, Input, u32 } from './utils.js';\n\n// RFC 7914 Scrypt KDF\n\n// Left rotate for uint32\nconst rotl = (a: number, b: number) => (a << b) | (a >>> (32 - b));\n\n// The main Scrypt loop: uses Salsa extensively.\n// Six versions of the function were tried, this is the fastest one.\n// prettier-ignore\nfunction XorAndSalsa(\n  prev: Uint32Array,\n  pi: number,\n  input: Uint32Array,\n  ii: number,\n  out: Uint32Array,\n  oi: number\n) {\n  // Based on https://cr.yp.to/salsa20.html\n  // Xor blocks\n  let y00 = prev[pi++] ^ input[ii++], y01 = prev[pi++] ^ input[ii++];\n  let y02 = prev[pi++] ^ input[ii++], y03 = prev[pi++] ^ input[ii++];\n  let y04 = prev[pi++] ^ input[ii++], y05 = prev[pi++] ^ input[ii++];\n  let y06 = prev[pi++] ^ input[ii++], y07 = prev[pi++] ^ input[ii++];\n  let y08 = prev[pi++] ^ input[ii++], y09 = prev[pi++] ^ input[ii++];\n  let y10 = prev[pi++] ^ input[ii++], y11 = prev[pi++] ^ input[ii++];\n  let y12 = prev[pi++] ^ input[ii++], y13 = prev[pi++] ^ input[ii++];\n  let y14 = prev[pi++] ^ input[ii++], y15 = prev[pi++] ^ input[ii++];\n  // Save state to temporary variables (salsa)\n  let x00 = y00, x01 = y01, x02 = y02, x03 = y03,\n      x04 = y04, x05 = y05, x06 = y06, x07 = y07,\n      x08 = y08, x09 = y09, x10 = y10, x11 = y11,\n      x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n  // Main loop (salsa)\n  for (let i = 0; i < 8; i += 2) {\n    x04 ^= rotl(x00 + x12 | 0,  7); x08 ^= rotl(x04 + x00 | 0,  9);\n    x12 ^= rotl(x08 + x04 | 0, 13); x00 ^= rotl(x12 + x08 | 0, 18);\n    x09 ^= rotl(x05 + x01 | 0,  7); x13 ^= rotl(x09 + x05 | 0,  9);\n    x01 ^= rotl(x13 + x09 | 0, 13); x05 ^= rotl(x01 + x13 | 0, 18);\n    x14 ^= rotl(x10 + x06 | 0,  7); x02 ^= rotl(x14 + x10 | 0,  9);\n    x06 ^= rotl(x02 + x14 | 0, 13); x10 ^= rotl(x06 + x02 | 0, 18);\n    x03 ^= rotl(x15 + x11 | 0,  7); x07 ^= rotl(x03 + x15 | 0,  9);\n    x11 ^= rotl(x07 + x03 | 0, 13); x15 ^= rotl(x11 + x07 | 0, 18);\n    x01 ^= rotl(x00 + x03 | 0,  7); x02 ^= rotl(x01 + x00 | 0,  9);\n    x03 ^= rotl(x02 + x01 | 0, 13); x00 ^= rotl(x03 + x02 | 0, 18);\n    x06 ^= rotl(x05 + x04 | 0,  7); x07 ^= rotl(x06 + x05 | 0,  9);\n    x04 ^= rotl(x07 + x06 | 0, 13); x05 ^= rotl(x04 + x07 | 0, 18);\n    x11 ^= rotl(x10 + x09 | 0,  7); x08 ^= rotl(x11 + x10 | 0,  9);\n    x09 ^= rotl(x08 + x11 | 0, 13); x10 ^= rotl(x09 + x08 | 0, 18);\n    x12 ^= rotl(x15 + x14 | 0,  7); x13 ^= rotl(x12 + x15 | 0,  9);\n    x14 ^= rotl(x13 + x12 | 0, 13); x15 ^= rotl(x14 + x13 | 0, 18);\n  }\n  // Write output (salsa)\n  out[oi++] = (y00 + x00) | 0; out[oi++] = (y01 + x01) | 0;\n  out[oi++] = (y02 + x02) | 0; out[oi++] = (y03 + x03) | 0;\n  out[oi++] = (y04 + x04) | 0; out[oi++] = (y05 + x05) | 0;\n  out[oi++] = (y06 + x06) | 0; out[oi++] = (y07 + x07) | 0;\n  out[oi++] = (y08 + x08) | 0; out[oi++] = (y09 + x09) | 0;\n  out[oi++] = (y10 + x10) | 0; out[oi++] = (y11 + x11) | 0;\n  out[oi++] = (y12 + x12) | 0; out[oi++] = (y13 + x13) | 0;\n  out[oi++] = (y14 + x14) | 0; out[oi++] = (y15 + x15) | 0;\n}\n\nfunction BlockMix(input: Uint32Array, ii: number, out: Uint32Array, oi: number, r: number) {\n  // The block B is r 128-byte chunks (which is equivalent of 2r 64-byte chunks)\n  let head = oi + 0;\n  let tail = oi + 16 * r;\n  for (let i = 0; i < 16; i++) out[tail + i] = input[ii + (2 * r - 1) * 16 + i]; // X ← B[2r−1]\n  for (let i = 0; i < r; i++, head += 16, ii += 16) {\n    // We write odd & even Yi at same time. Even: 0bXXXXX0 Odd:  0bXXXXX1\n    XorAndSalsa(out, tail, input, ii, out, head); // head[i] = Salsa(blockIn[2*i] ^ tail[i-1])\n    if (i > 0) tail += 16; // First iteration overwrites tmp value in tail\n    XorAndSalsa(out, head, input, (ii += 16), out, tail); // tail[i] = Salsa(blockIn[2*i+1] ^ head[i])\n  }\n}\n\nexport type ScryptOpts = {\n  N: number; // cost factor\n  r: number; // block size\n  p: number; // parallelization\n  dkLen?: number; // key length\n  asyncTick?: number; // block execution max time\n  maxmem?: number;\n  onProgress?: (progress: number) => void;\n};\n\n// Common prologue and epilogue for sync/async functions\nfunction scryptInit(password: Input, salt: Input, _opts?: ScryptOpts) {\n  // Maxmem - 1GB+1KB by default\n  const opts = checkOpts(\n    {\n      dkLen: 32,\n      asyncTick: 10,\n      maxmem: 1024 ** 3 + 1024,\n    },\n    _opts\n  );\n  const { N, r, p, dkLen, asyncTick, maxmem, onProgress } = opts;\n  assertNumber(N);\n  assertNumber(r);\n  assertNumber(p);\n  assertNumber(dkLen);\n  assertNumber(asyncTick);\n  assertNumber(maxmem);\n  if (onProgress !== undefined && typeof onProgress !== 'function')\n    throw new Error('progressCb should be function');\n  const blockSize = 128 * r;\n  const blockSize32 = blockSize / 4;\n  if (N <= 1 || (N & (N - 1)) !== 0 || N >= 2 ** (blockSize / 8) || N > 2 ** 32) {\n    // NOTE: we limit N to be less than 2**32 because of 32 bit variant of Integrify function\n    // There is no JS engines that allows alocate more than 4GB per single Uint8Array for now, but can change in future.\n    throw new Error(\n      'Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32'\n    );\n  }\n  if (p < 0 || p > ((2 ** 32 - 1) * 32) / blockSize) {\n    throw new Error(\n      'Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)'\n    );\n  }\n  if (dkLen < 0 || dkLen > (2 ** 32 - 1) * 32) {\n    throw new Error(\n      'Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32'\n    );\n  }\n  const memUsed = blockSize * (N + p);\n  if (memUsed > maxmem) {\n    throw new Error(\n      `Scrypt: parameters too large, ${memUsed} (128 * r * (N + p)) > ${maxmem} (maxmem)`\n    );\n  }\n  // [B0...Bp−1] ← PBKDF2HMAC-SHA256(Passphrase, Salt, 1, blockSize*ParallelizationFactor)\n  // Since it has only one iteration there is no reason to use async variant\n  const B = pbkdf2(sha256, password, salt, { c: 1, dkLen: blockSize * p });\n  const B32 = u32(B);\n  // Re-used between parallel iterations. Array(iterations) of B\n  const V = u32(new Uint8Array(blockSize * N));\n  const tmp = u32(new Uint8Array(blockSize));\n  let blockMixCb = () => {};\n  if (onProgress) {\n    const totalBlockMix = 2 * N * p;\n    // Invoke callback if progress changes from 10.01 to 10.02\n    // Allows to draw smooth progress bar on up to 8K screen\n    const callbackPer = Math.max(Math.floor(totalBlockMix / 10000), 1);\n    let blockMixCnt = 0;\n    blockMixCb = () => {\n      blockMixCnt++;\n      if (onProgress && (!(blockMixCnt % callbackPer) || blockMixCnt === totalBlockMix))\n        onProgress(blockMixCnt / totalBlockMix);\n    };\n  }\n  return { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick };\n}\n\nfunction scryptOutput(\n  password: Input,\n  dkLen: number,\n  B: Uint8Array,\n  V: Uint32Array,\n  tmp: Uint32Array\n) {\n  const res = pbkdf2(sha256, password, B, { c: 1, dkLen });\n  B.fill(0);\n  V.fill(0);\n  tmp.fill(0);\n  return res;\n}\n\n/**\n * Scrypt KDF from RFC 7914.\n * @param password - pass\n * @param salt - salt\n * @param opts - parameters\n * - `N` is cpu/mem work factor (power of 2 e.g. 2**18)\n * - `r` is block size (8 is common), fine-tunes sequential memory read size and performance\n * - `p` is parallelization factor (1 is common)\n * - `dkLen` is output key length in bytes e.g. 32.\n * - `asyncTick` - (default: 10) max time in ms for which async function can block execution\n * - `maxmem` - (default: `1024 ** 3 + 1024` aka 1GB+1KB). A limit that the app could use for scrypt\n * - `onProgress` - callback function that would be executed for progress report\n * @returns Derived key\n */\nexport function scrypt(password: Input, salt: Input, opts: ScryptOpts) {\n  const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb } = scryptInit(\n    password,\n    salt,\n    opts\n  );\n  for (let pi = 0; pi < p; pi++) {\n    const Pi = blockSize32 * pi;\n    for (let i = 0; i < blockSize32; i++) V[i] = B32[Pi + i]; // V[0] = B[i]\n    for (let i = 0, pos = 0; i < N - 1; i++) {\n      BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n      blockMixCb();\n    }\n    BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n    blockMixCb();\n    for (let i = 0; i < N; i++) {\n      // First u32 of the last 64-byte block (u32 is LE)\n      const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n      for (let k = 0; k < blockSize32; k++) tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n      BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n      blockMixCb();\n    }\n  }\n  return scryptOutput(password, dkLen, B, V, tmp);\n}\n\n/**\n * Scrypt KDF from RFC 7914.\n */\nexport async function scryptAsync(password: Input, salt: Input, opts: ScryptOpts) {\n  const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick } = scryptInit(\n    password,\n    salt,\n    opts\n  );\n  for (let pi = 0; pi < p; pi++) {\n    const Pi = blockSize32 * pi;\n    for (let i = 0; i < blockSize32; i++) V[i] = B32[Pi + i]; // V[0] = B[i]\n    let pos = 0;\n    await asyncLoop(N - 1, asyncTick, () => {\n      BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n      blockMixCb();\n    });\n    BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n    blockMixCb();\n    await asyncLoop(N, asyncTick, () => {\n      // First u32 of the last 64-byte block (u32 is LE)\n      const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n      for (let k = 0; k < blockSize32; k++) tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n      BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n      blockMixCb();\n    });\n  }\n  return scryptOutput(password, dkLen, B, V, tmp);\n}\n","import { scrypt as _nobleSync, scryptAsync as _nobleAsync } from \"@noble/hashes/scrypt\";\n\nimport { getBytes, hexlify as H } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n/**\n *  A callback during long-running operations to update any\n *  UI or provide programatic access to the progress.\n *\n *  The %%percent%% is a value between ``0`` and ``1``.\n *\n *  @_docloc: api/crypto:Passwords\n */\nexport type ProgressCallback = (percent: number) => void;\n\n\nlet lockedSync = false, lockedAsync = false;\n\nconst _scryptAsync = async function(passwd: Uint8Array, salt: Uint8Array, N: number, r: number, p: number, dkLen: number, onProgress?: ProgressCallback) {\n    return await _nobleAsync(passwd, salt, { N, r, p, dkLen, onProgress });\n}\nconst _scryptSync = function(passwd: Uint8Array, salt: Uint8Array, N: number, r: number, p: number, dkLen: number) {\n    return _nobleSync(passwd, salt, { N, r, p, dkLen });\n}\n\nlet __scryptAsync: (passwd: Uint8Array, salt: Uint8Array, N: number, r: number, p: number, dkLen: number, onProgress?: ProgressCallback) => Promise<BytesLike> = _scryptAsync;\nlet __scryptSync: (passwd: Uint8Array, salt: Uint8Array, N: number, r: number, p: number, dkLen: number) => BytesLike = _scryptSync\n\n\n/**\n *  The [[link-wiki-scrypt]] uses a memory and cpu hard method of\n *  derivation to increase the resource cost to brute-force a password\n *  for a given key.\n *\n *  This means this algorithm is intentionally slow, and can be tuned to\n *  become slower. As computation and memory speed improve over time,\n *  increasing the difficulty maintains the cost of an attacker.\n *\n *  For example, if a target time of 5 seconds is used, a legitimate user\n *  which knows their password requires only 5 seconds to unlock their\n *  account. A 6 character password has 68 billion possibilities, which\n *  would require an attacker to invest over 10,000 years of CPU time. This\n *  is of course a crude example (as password generally aren't random),\n *  but demonstrates to value of imposing large costs to decryption.\n *\n *  For this reason, if building a UI which involved decrypting or\n *  encrypting datsa using scrypt, it is recommended to use a\n *  [[ProgressCallback]] (as event short periods can seem lik an eternity\n *  if the UI freezes). Including the phrase //\"decrypting\"// in the UI\n *  can also help, assuring the user their waiting is for a good reason.\n *\n *  @_docloc: api/crypto:Passwords\n *\n *  @example:\n *    // The password must be converted to bytes, and it is generally\n *    // best practices to ensure the string has been normalized. Many\n *    // formats explicitly indicate the normalization form to use.\n *    password = \"hello\"\n *    passwordBytes = toUtf8Bytes(password, \"NFKC\")\n *\n *    salt = id(\"some-salt\")\n *\n *    // Compute the scrypt\n *    scrypt(passwordBytes, salt, 1024, 8, 1, 16)\n *    //_result:\n */\nexport async function scrypt(_passwd: BytesLike, _salt: BytesLike, N: number, r: number, p: number, dkLen: number, progress?: ProgressCallback): Promise<string> {\n    const passwd = getBytes(_passwd, \"passwd\");\n    const salt = getBytes(_salt, \"salt\");\n    return H(await __scryptAsync(passwd, salt, N, r, p, dkLen, progress));\n}\nscrypt._ = _scryptAsync;\nscrypt.lock = function(): void { lockedAsync = true; }\nscrypt.register = function(func: (passwd: Uint8Array, salt: Uint8Array, N: number, r: number, p: number, dkLen: number, progress?: ProgressCallback) => Promise<BytesLike>) {\n    if (lockedAsync) { throw new Error(\"scrypt is locked\"); }\n    __scryptAsync = func;\n}\nObject.freeze(scrypt);\n\n/**\n *  Provides a synchronous variant of [[scrypt]].\n *\n *  This will completely lock up and freeze the UI in a browser and will\n *  prevent any event loop from progressing. For this reason, it is\n *  preferred to use the [async variant](scrypt).\n *\n *  @_docloc: api/crypto:Passwords\n *\n *  @example:\n *    // The password must be converted to bytes, and it is generally\n *    // best practices to ensure the string has been normalized. Many\n *    // formats explicitly indicate the normalization form to use.\n *    password = \"hello\"\n *    passwordBytes = toUtf8Bytes(password, \"NFKC\")\n *\n *    salt = id(\"some-salt\")\n *\n *    // Compute the scrypt\n *    scryptSync(passwordBytes, salt, 1024, 8, 1, 16)\n *    //_result:\n */\nexport function scryptSync(_passwd: BytesLike, _salt: BytesLike, N: number, r: number, p: number, dkLen: number): string {\n    const passwd = getBytes(_passwd, \"passwd\");\n    const salt = getBytes(_salt, \"salt\");\n    return H(__scryptSync(passwd, salt, N, r, p, dkLen));\n}\nscryptSync._ = _scryptSync;\nscryptSync.lock = function(): void { lockedSync = true; }\nscryptSync.register = function(func: (passwd: Uint8Array, salt: Uint8Array, N: number, r: number, p: number, dkLen: number) => BytesLike) {\n    if (lockedSync) { throw new Error(\"scryptSync is locked\"); }\n    __scryptSync = func;\n}\nObject.freeze(scryptSync);\n","/**\n *  Explain UUID and link to RFC here.\n *\n *  @_subsection: api/utils:UUID  [about-uuid]\n */\nimport { getBytes, hexlify } from \"./data.js\";\n\nimport type { BytesLike } from \"./index.js\";\n\n/**\n *  Returns the version 4 [[link-uuid]] for the %%randomBytes%%.\n *\n *  @see: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\n */\nexport function uuidV4(randomBytes: BytesLike): string {\n    const bytes = getBytes(randomBytes, \"randomBytes\");\n\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n\n    const value = hexlify(bytes);\n\n    return [\n       value.substring(2, 10),\n       value.substring(10, 14),\n       value.substring(14, 18),\n       value.substring(18, 22),\n       value.substring(22, 34),\n    ].join(\"-\");\n}\n","/**\n *  @_ignore\n */\n\nimport {\n    getBytesCopy, assertArgument, toUtf8Bytes\n} from \"../utils/index.js\";\n\nexport function looseArrayify(hexString: string): Uint8Array {\n    if (typeof(hexString) === \"string\" && !hexString.startsWith(\"0x\")) {\n        hexString = \"0x\" + hexString;\n    }\n    return getBytesCopy(hexString);\n}\n\nexport function zpad(value: String | number, length: number): String {\n    value = String(value);\n    while (value.length < length) { value = '0' + value; }\n    return value;\n}\n\nexport function getPassword(password: string | Uint8Array): Uint8Array {\n    if (typeof(password) === 'string') {\n        return toUtf8Bytes(password, \"NFKC\");\n    }\n    return getBytesCopy(password);\n}\n\nexport function spelunk<T>(object: any, _path: string): T {\n\n    const match = _path.match(/^([a-z0-9$_.-]*)(:([a-z]+))?(!)?$/i);\n    assertArgument(match != null, \"invalid path\", \"path\", _path);\n\n    const path = match[1];\n    const type = match[3];\n    const reqd = (match[4] === \"!\");\n\n    let cur = object;\n    for (const comp of path.toLowerCase().split('.')) {\n\n        // Search for a child object with a case-insensitive matching key\n        if (Array.isArray(cur)) {\n            if (!comp.match(/^[0-9]+$/)) { break; }\n            cur = cur[parseInt(comp)];\n\n        } else if (typeof(cur) === \"object\") {\n            let found: any = null;\n            for (const key in cur) {\n                 if (key.toLowerCase() === comp) {\n                     found = cur[key];\n                     break;\n                 }\n            }\n            cur = found;\n\n        } else {\n            cur = null;\n        }\n\n        if (cur == null) { break; }\n    }\n\n    assertArgument(!reqd || cur != null, \"missing required value\", \"path\", path);\n\n    if (type && cur != null) {\n        if (type === \"int\") {\n            if (typeof(cur) === \"string\" && cur.match(/^-?[0-9]+$/)) {\n                return <T><unknown>parseInt(cur);\n            } else if (Number.isSafeInteger(cur)) {\n                return cur;\n            }\n        }\n\n        if (type === \"number\") {\n            if (typeof(cur) === \"string\" && cur.match(/^-?[0-9.]*$/)) {\n                return <T><unknown>parseFloat(cur);\n            }\n        }\n\n        if (type === \"data\") {\n            if (typeof(cur) === \"string\") { return <T><unknown>looseArrayify(cur); }\n        }\n\n        if (type === \"array\" && Array.isArray(cur)) { return <T><unknown>cur; }\n        if (type === typeof(cur)) { return cur; }\n\n        assertArgument(false, `wrong type found for ${ type } `, \"path\", path);\n    }\n\n    return cur;\n}\n/*\nexport function follow(object: any, path: string): null | string {\n    let currentChild = object;\n\n    for (const comp of path.toLowerCase().split('/')) {\n\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n             if (key.toLowerCase() === comp) {\n                 matchingChild = currentChild[key];\n                 break;\n             }\n        }\n\n        if (matchingChild === null) { return null; }\n\n        currentChild = matchingChild;\n    }\n\n    return currentChild;\n}\n\n// \"path/to/something:type!\"\nexport function followRequired(data: any, path: string): string {\n    const value = follow(data, path);\n    if (value != null) { return value; }\n    return logger.throwArgumentError(\"invalid value\", `data:${ path }`,\n    JSON.stringify(data));\n}\n*/\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\n/*\nexport function uuidV4(randomBytes: BytesLike): string {\n    const bytes = getBytes(randomBytes, \"randomBytes\");\n\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n\n    const value = hexlify(bytes);\n\n    return [\n       value.substring(2, 10),\n       value.substring(10, 14),\n       value.substring(14, 18),\n       value.substring(18, 22),\n       value.substring(22, 34),\n    ].join(\"-\");\n}\n*/\n","/**\n *  The JSON Wallet formats allow a simple way to store the private\n *  keys needed in Ethereum along with related information and allows\n *  for extensible forms of encryption.\n *\n *  These utilities facilitate decrypting and encrypting the most common\n *  JSON Wallet formats.\n *\n *  @_subsection: api/wallet:JSON Wallets  [json-wallets]\n */\n\nimport { CTR } from \"aes-js\";\n\nimport { getAddress } from \"../address/index.js\";\nimport { keccak256, pbkdf2, randomBytes, scrypt, scryptSync } from \"../crypto/index.js\";\nimport { computeAddress } from \"../transaction/index.js\";\nimport {\n    concat, getBytes, hexlify, uuidV4, assert, assertArgument\n} from \"../utils/index.js\";\n\nimport { getPassword, spelunk, zpad } from \"./utils.js\";\n\nimport type { ProgressCallback } from \"../crypto/index.js\";\nimport type { BytesLike } from \"../utils/index.js\";\n\nimport { version } from \"../_version.js\";\n\n\nconst defaultPath = \"m/44'/60'/0'/0/0\";\n\n/**\n *  The contents of a JSON Keystore Wallet.\n */\nexport type KeystoreAccount = {\n    address: string;\n    privateKey: string;\n    mnemonic?: {\n        path?: string;\n        locale?: string;\n        entropy: string;\n    }\n};\n\n/**\n *  The parameters to use when encrypting a JSON Keystore Wallet.\n */\nexport type EncryptOptions = {\n   progressCallback?: ProgressCallback;\n   iv?: BytesLike;\n   entropy?: BytesLike;\n   client?: string;\n   salt?: BytesLike;\n   uuid?: string;\n   scrypt?: {\n       N?: number;\n       r?: number;\n       p?: number;\n   }\n}\n\n/**\n *  Returns true if %%json%% is a valid JSON Keystore Wallet.\n */\nexport function isKeystoreJson(json: string): boolean {\n    try {\n        const data = JSON.parse(json);\n        const version = ((data.version != null) ? parseInt(data.version): 0);\n        if (version === 3) { return true; }\n    } catch (error) { }\n    return false;\n}\n\nfunction decrypt(data: any, key: Uint8Array, ciphertext: Uint8Array): string {\n    const cipher = spelunk<string>(data, \"crypto.cipher:string\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = spelunk<Uint8Array>(data, \"crypto.cipherparams.iv:data!\")\n        const aesCtr = new CTR(key, iv);\n        return hexlify(aesCtr.decrypt(ciphertext));\n    }\n\n    assert(false, \"unsupported cipher\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"decrypt\"\n    });\n}\n\nfunction getAccount(data: any, _key: string): KeystoreAccount {\n    const key = getBytes(_key);\n    const ciphertext = spelunk<Uint8Array>(data, \"crypto.ciphertext:data!\");\n\n    const computedMAC = hexlify(keccak256(concat([ key.slice(16, 32), ciphertext ]))).substring(2);\n    assertArgument(computedMAC === spelunk<string>(data, \"crypto.mac:string!\").toLowerCase(),\n        \"incorrect password\", \"password\", \"[ REDACTED ]\");\n\n    const privateKey = decrypt(data, key.slice(0, 16), ciphertext);\n\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (!check.startsWith(\"0x\")) { check = \"0x\" + check; }\n\n        assertArgument(getAddress(check) === address, \"keystore address/privateKey mismatch\", \"address\", data.address);\n    }\n\n    const account: KeystoreAccount = { address, privateKey };\n\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    const version = spelunk(data, \"x-ethers.version:string\");\n    if (version === \"0.1\") {\n        const mnemonicKey = key.slice(32, 64);\n\n        const mnemonicCiphertext = spelunk<Uint8Array>(data, \"x-ethers.mnemonicCiphertext:data!\");\n        const mnemonicIv = spelunk<Uint8Array>(data, \"x-ethers.mnemonicCounter:data!\");\n\n        const mnemonicAesCtr = new CTR(mnemonicKey, mnemonicIv);\n\n        account.mnemonic = {\n            path: (spelunk<null | string>(data, \"x-ethers.path:string\") || defaultPath),\n            locale: (spelunk<null | string>(data, \"x-ethers.locale:string\") || \"en\"),\n            entropy: hexlify(getBytes(mnemonicAesCtr.decrypt(mnemonicCiphertext)))\n        };\n    }\n\n    return account;\n}\n\ntype ScryptParams = {\n    name: \"scrypt\";\n    salt: Uint8Array;\n    N: number;\n    r: number;\n    p: number;\n    dkLen: number;\n};\n\ntype KdfParams = ScryptParams | {\n    name: \"pbkdf2\";\n    salt: Uint8Array;\n    count: number;\n    dkLen: number;\n    algorithm: \"sha256\" | \"sha512\";\n};\n\nfunction getDecryptKdfParams<T>(data: any): KdfParams {\n    const kdf = spelunk(data, \"crypto.kdf:string\");\n    if (kdf && typeof(kdf) === \"string\") {\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = spelunk<Uint8Array>(data, \"crypto.kdfparams.salt:data!\");\n            const N = spelunk<number>(data, \"crypto.kdfparams.n:int!\");\n            const r = spelunk<number>(data, \"crypto.kdfparams.r:int!\");\n            const p = spelunk<number>(data, \"crypto.kdfparams.p:int!\");\n\n            // Make sure N is a power of 2\n            assertArgument(N > 0 && (N & (N - 1)) === 0, \"invalid kdf.N\", \"kdf.N\", N);\n            assertArgument(r > 0 && p > 0, \"invalid kdf\", \"kdf\", kdf);\n\n            const dkLen = spelunk<number>(data, \"crypto.kdfparams.dklen:int!\");\n            assertArgument(dkLen === 32, \"invalid kdf.dklen\", \"kdf.dflen\", dkLen);\n\n            return { name: \"scrypt\", salt, N, r, p, dkLen: 64 };\n\n        } else if (kdf.toLowerCase() === \"pbkdf2\") {\n\n            const salt = spelunk<Uint8Array>(data, \"crypto.kdfparams.salt:data!\");\n\n            const prf = spelunk<string>(data, \"crypto.kdfparams.prf:string!\");\n            const algorithm = prf.split(\"-\").pop();\n            assertArgument(algorithm === \"sha256\" || algorithm === \"sha512\", \"invalid kdf.pdf\", \"kdf.pdf\", prf);\n\n            const count = spelunk<number>(data, \"crypto.kdfparams.c:int!\");\n\n            const dkLen = spelunk<number>(data, \"crypto.kdfparams.dklen:int!\");\n            assertArgument(dkLen === 32, \"invalid kdf.dklen\", \"kdf.dklen\", dkLen);\n\n            return { name: \"pbkdf2\", salt, count, dkLen, algorithm };\n        }\n    }\n\n    assertArgument(false, \"unsupported key-derivation function\", \"kdf\", kdf);\n}\n\n\n/**\n *  Returns the account details for the JSON Keystore Wallet %%json%%\n *  using %%password%%.\n *\n *  It is preferred to use the [async version](decryptKeystoreJson)\n *  instead, which allows a [[ProgressCallback]] to keep the user informed\n *  as to the decryption status.\n *\n *  This method will block the event loop (freezing all UI) until decryption\n *  is complete, which can take quite some time, depending on the wallet\n *  paramters and platform.\n */\nexport function decryptKeystoreJsonSync(json: string, _password: string | Uint8Array): KeystoreAccount {\n    const data = JSON.parse(json);\n\n    const password = getPassword(_password);\n\n    const params = getDecryptKdfParams(data);\n    if (params.name === \"pbkdf2\") {\n        const { salt, count, dkLen, algorithm } = params;\n        const key = pbkdf2(password, salt, count, dkLen, algorithm);\n        return getAccount(data, key);\n    }\n\n    assert(params.name === \"scrypt\", \"cannot be reached\", \"UNKNOWN_ERROR\", { params })\n\n    const { salt, N, r, p, dkLen } = params;\n    const key = scryptSync(password, salt, N, r, p, dkLen);\n    return getAccount(data, key);\n}\n\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => { setTimeout(() => { resolve(); }, duration); });\n}\n\n/**\n *  Resolves to the decrypted JSON Keystore Wallet %%json%% using the\n *  %%password%%.\n *\n *  If provided, %%progress%% will be called periodically during the\n *  decrpytion to provide feedback, and if the function returns\n *  ``false`` will halt decryption.\n *\n *  The %%progressCallback%% will **always** receive ``0`` before\n *  decryption begins and ``1`` when complete.\n */\nexport async function decryptKeystoreJson(json: string, _password: string | Uint8Array, progress?: ProgressCallback): Promise<KeystoreAccount> {\n    const data = JSON.parse(json);\n\n    const password = getPassword(_password);\n\n    const params = getDecryptKdfParams(data);\n    if (params.name === \"pbkdf2\") {\n        if (progress) {\n            progress(0);\n            await stall(0);\n        }\n        const { salt, count, dkLen, algorithm } = params;\n        const key = pbkdf2(password, salt, count, dkLen, algorithm);\n        if (progress) {\n            progress(1);\n            await stall(0);\n        }\n        return getAccount(data, key);\n    }\n\n    assert(params.name === \"scrypt\", \"cannot be reached\", \"UNKNOWN_ERROR\", { params })\n\n    const { salt, N, r, p, dkLen } = params;\n    const key = await scrypt(password, salt, N, r, p, dkLen, progress);\n    return getAccount(data, key);\n}\n\nfunction getEncryptKdfParams(options: EncryptOptions): ScryptParams {\n    // Check/generate the salt\n    const salt = (options.salt != null) ? getBytes(options.salt, \"options.salt\"): randomBytes(32);\n\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) { N = options.scrypt.N; }\n        if (options.scrypt.r) { r = options.scrypt.r; }\n        if (options.scrypt.p) { p = options.scrypt.p; }\n    }\n    assertArgument(typeof(N) === \"number\" && N > 0 && Number.isSafeInteger(N) && (BigInt(N) & BigInt(N - 1)) === BigInt(0), \"invalid scrypt N parameter\", \"options.N\", N);\n    assertArgument(typeof(r) === \"number\" && r > 0 && Number.isSafeInteger(r), \"invalid scrypt r parameter\", \"options.r\", r);\n    assertArgument(typeof(p) === \"number\" && p > 0 && Number.isSafeInteger(p), \"invalid scrypt p parameter\", \"options.p\", p);\n\n    return { name: \"scrypt\", dkLen: 32, salt, N, r, p };\n}\n\nfunction _encryptKeystore(key: Uint8Array, kdf: ScryptParams, account: KeystoreAccount, options: EncryptOptions): any {\n\n    const privateKey = getBytes(account.privateKey, \"privateKey\");\n\n    // Override initialization vector\n    const iv = (options.iv != null) ? getBytes(options.iv, \"options.iv\"): randomBytes(16);\n    assertArgument(iv.length === 16, \"invalid options.iv length\", \"options.iv\", options.iv);\n\n    // Override the uuid\n    const uuidRandom = (options.uuid != null) ? getBytes(options.uuid, \"options.uuid\"): randomBytes(16);\n    assertArgument(uuidRandom.length === 16, \"invalid options.uuid length\", \"options.uuid\", options.iv);\n\n    // This will be used to encrypt the wallet (as per Web3 secret storage)\n    // - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    // - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    const derivedKey = key.slice(0, 16);\n    const macPrefix = key.slice(16, 32);\n\n    // Encrypt the private key\n    const aesCtr = new CTR(derivedKey, iv);\n    const ciphertext = getBytes(aesCtr.encrypt(privateKey));\n\n    // Compute the message authentication code, used to check the password\n    const mac = keccak256(concat([ macPrefix, ciphertext ]))\n\n    // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n    const data: { [key: string]: any } = {\n        address: account.address.substring(2).toLowerCase(),\n        id: uuidV4(uuidRandom),\n        version: 3,\n        Crypto: {\n            cipher: \"aes-128-ctr\",\n            cipherparams: {\n                iv: hexlify(iv).substring(2),\n            },\n            ciphertext: hexlify(ciphertext).substring(2),\n            kdf: \"scrypt\",\n            kdfparams: {\n                salt: hexlify(kdf.salt).substring(2),\n                n: kdf.N,\n                dklen: 32,\n                p: kdf.p,\n                r: kdf.r\n            },\n            mac: mac.substring(2)\n        }\n    };\n\n    // If we have a mnemonic, encrypt it into the JSON wallet\n    if (account.mnemonic) {\n        const client = (options.client != null) ? options.client: `ethers/${ version }`;\n\n        const path = account.mnemonic.path || defaultPath;\n        const locale = account.mnemonic.locale || \"en\";\n\n        const mnemonicKey = key.slice(32, 64);\n\n        const entropy = getBytes(account.mnemonic.entropy, \"account.mnemonic.entropy\");\n        const mnemonicIv = randomBytes(16);\n        const mnemonicAesCtr = new CTR(mnemonicKey, mnemonicIv);\n        const mnemonicCiphertext = getBytes(mnemonicAesCtr.encrypt(entropy));\n\n        const now = new Date();\n        const timestamp = (now.getUTCFullYear() + \"-\" +\n                           zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n                           zpad(now.getUTCDate(), 2) + \"T\" +\n                           zpad(now.getUTCHours(), 2) + \"-\" +\n                           zpad(now.getUTCMinutes(), 2) + \"-\" +\n                           zpad(now.getUTCSeconds(), 2) + \".0Z\");\n        const gethFilename = (\"UTC--\" + timestamp + \"--\" + data.address);\n\n        data[\"x-ethers\"] = {\n            client, gethFilename, path, locale,\n            mnemonicCounter: hexlify(mnemonicIv).substring(2),\n            mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n            version: \"0.1\"\n        };\n    }\n\n    return JSON.stringify(data);\n}\n\n/**\n *  Return the JSON Keystore Wallet for %%account%% encrypted with\n *  %%password%%.\n *\n *  The %%options%% can be used to tune the password-based key\n *  derivation function parameters, explicitly set the random values\n *  used. Any provided [[ProgressCallback]] is ignord.\n */\nexport function encryptKeystoreJsonSync(account: KeystoreAccount, password: string | Uint8Array, options?: EncryptOptions): string {\n    if (options == null) { options = { }; }\n\n    const passwordBytes = getPassword(password);\n    const kdf = getEncryptKdfParams(options);\n    const key = scryptSync(passwordBytes, kdf.salt, kdf.N, kdf.r, kdf.p, 64);\n    return _encryptKeystore(getBytes(key), kdf, account, options);\n}\n\n/**\n *  Resolved to the JSON Keystore Wallet for %%account%% encrypted\n *  with %%password%%.\n *\n *  The %%options%% can be used to tune the password-based key\n *  derivation function parameters, explicitly set the random values\n *  used and provide a [[ProgressCallback]] to receive periodic updates\n *  on the completion status..\n */\nexport async function encryptKeystoreJson(account: KeystoreAccount, password: string | Uint8Array, options?: EncryptOptions): Promise<string> {\n    if (options == null) { options = { }; }\n\n    const passwordBytes = getPassword(password);\n    const kdf = getEncryptKdfParams(options);\n    const key = await scrypt(passwordBytes, kdf.salt, kdf.N, kdf.r, kdf.p, 64, options.progressCallback);\n    return _encryptKeystore(getBytes(key), kdf, account, options);\n}\n\n","/**\n *  Explain HD Wallets..\n *\n *  @_subsection: api/wallet:HD Wallets  [hd-wallets]\n */\nimport { computeHmac, randomBytes, ripemd160, SigningKey, sha256 } from \"../crypto/index.js\";\nimport { VoidSigner } from \"../providers/index.js\";\nimport { computeAddress } from \"../transaction/index.js\";\nimport {\n    concat, dataSlice, decodeBase58, defineProperties, encodeBase58,\n    getBytes, hexlify, isBytesLike,\n    getNumber, toBeArray, toBigInt, toBeHex,\n    assertPrivate, assert, assertArgument\n} from \"../utils/index.js\";\nimport { LangEn } from \"../wordlists/lang-en.js\";\n\nimport { BaseWallet } from \"./base-wallet.js\";\nimport { Mnemonic } from \"./mnemonic.js\";\nimport {\n    encryptKeystoreJson, encryptKeystoreJsonSync,\n} from \"./json-keystore.js\";\n\nimport type { ProgressCallback } from \"../crypto/index.js\";\nimport type { Provider } from \"../providers/index.js\";\nimport type { BytesLike, Numeric } from \"../utils/index.js\";\nimport type { Wordlist } from \"../wordlists/index.js\";\n\nimport type { KeystoreAccount } from \"./json-keystore.js\";\n\n/**\n *  The default derivation path for Ethereum HD Nodes. (i.e. ``\"m/44'/60'/0'/0/0\"``)\n */\nexport const defaultPath: string = \"m/44'/60'/0'/0/0\";\n\n\n// \"Bitcoin seed\"\nconst MasterSecret = new Uint8Array([ 66, 105, 116, 99, 111, 105, 110, 32, 115, 101, 101, 100 ]);\n\nconst HardenedBit = 0x80000000;\n\nconst N = BigInt(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n\nconst Nibbles = \"0123456789abcdef\";\nfunction zpad(value: number, length: number): string {\n    let result = \"\";\n    while (value) {\n        result = Nibbles[value % 16] + result;\n        value = Math.trunc(value / 16);\n    }\n    while (result.length < length * 2) { result = \"0\" + result; }\n    return \"0x\" + result;\n}\n\nfunction encodeBase58Check(_value: BytesLike): string {\n    const value = getBytes(_value);\n    const check = dataSlice(sha256(sha256(value)), 0, 4);\n    const bytes = concat([ value, check ]);\n    return encodeBase58(bytes);\n}\n\nconst _guard = { };\n\nfunction ser_I(index: number, chainCode: string, publicKey: string, privateKey: null | string): { IL: Uint8Array, IR: Uint8Array } {\n    const data = new Uint8Array(37);\n\n    if (index & HardenedBit) {\n        assert(privateKey != null, \"cannot derive child of neutered node\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"deriveChild\"\n        });\n\n        // Data = 0x00 || ser_256(k_par)\n        data.set(getBytes(privateKey), 1);\n\n    } else {\n        // Data = ser_p(point(k_par))\n        data.set(getBytes(publicKey));\n    }\n\n    // Data += ser_32(i)\n    for (let i = 24; i >= 0; i -= 8) { data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff); }\n    const I = getBytes(computeHmac(\"sha512\", chainCode, data));\n\n    return { IL: I.slice(0, 32), IR: I.slice(32) };\n}\n\ntype HDNodeLike<T> = { depth: number, deriveChild: (i: number) => T };\nfunction derivePath<T extends HDNodeLike<T>>(node: T, path: string): T {\n    const components = path.split(\"/\");\n\n    assertArgument(components.length > 0 && (components[0] === \"m\" || node.depth > 0), \"invalid path\", \"path\", path);\n\n    if (components[0] === \"m\") { components.shift(); }\n\n    let result: T = node;\n    for (let i = 0; i < components.length; i++) {\n        const component = components[i];\n\n        if (component.match(/^[0-9]+'$/)) {\n            const index = parseInt(component.substring(0, component.length - 1));\n            assertArgument(index < HardenedBit, \"invalid path index\", `path[${ i }]`, component);\n            result = result.deriveChild(HardenedBit + index);\n\n        } else if (component.match(/^[0-9]+$/)) {\n            const index = parseInt(component);\n            assertArgument(index < HardenedBit, \"invalid path index\", `path[${ i }]`, component);\n            result = result.deriveChild(index);\n\n        } else {\n            assertArgument(false, \"invalid path component\", `path[${ i }]`, component);\n        }\n    }\n\n    return result;\n}\n\n/**\n *  An **HDNodeWallet** is a [[Signer]] backed by the private key derived\n *  from an HD Node using the [[link-bip-32]] stantard.\n *\n *  An HD Node forms a hierarchal structure with each HD Node having a\n *  private key and the ability to derive child HD Nodes, defined by\n *  a path indicating the index of each child.\n */\nexport class HDNodeWallet extends BaseWallet {\n    /**\n     *  The compressed public key.\n     */\n    readonly publicKey!: string;\n\n    /**\n     *  The fingerprint.\n     *\n     *  A fingerprint allows quick qay to detect parent and child nodes,\n     *  but developers should be prepared to deal with collisions as it\n     *  is only 4 bytes.\n     */\n    readonly fingerprint!: string;\n\n    /**\n     *  The parent fingerprint.\n     */\n    readonly parentFingerprint!: string;\n\n    /**\n     *  The mnemonic used to create this HD Node, if available.\n     *\n     *  Sources such as extended keys do not encode the mnemonic, in\n     *  which case this will be ``null``.\n     */\n    readonly mnemonic!: null | Mnemonic;\n\n    /**\n     *  The chaincode, which is effectively a public key used\n     *  to derive children.\n     */\n    readonly chainCode!: string;\n\n    /**\n     *  The derivation path of this wallet.\n     *\n     *  Since extended keys do not provider full path details, this\n     *  may be ``null``, if instantiated from a source that does not\n     *  enocde it.\n     */\n    readonly path!: null | string;\n\n    /**\n     *  The child index of this wallet. Values over ``2 *\\* 31`` indicate\n     *  the node is hardened.\n     */\n    readonly index!: number;\n\n    /**\n     *  The depth of this wallet, which is the number of components\n     *  in its path.\n     */\n    readonly depth!: number;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, signingKey: SigningKey, parentFingerprint: string, chainCode: string, path: null | string, index: number, depth: number, mnemonic: null | Mnemonic, provider: null | Provider) {\n        super(signingKey, provider);\n        assertPrivate(guard, _guard, \"HDNodeWallet\");\n\n        defineProperties<HDNodeWallet>(this, { publicKey: signingKey.compressedPublicKey });\n\n        const fingerprint = dataSlice(ripemd160(sha256(this.publicKey)), 0, 4);\n        defineProperties<HDNodeWallet>(this, {\n            parentFingerprint, fingerprint,\n            chainCode, path, index, depth\n        });\n\n        defineProperties<HDNodeWallet>(this, { mnemonic });\n    }\n\n    connect(provider: null | Provider): HDNodeWallet {\n        return new HDNodeWallet(_guard, this.signingKey, this.parentFingerprint,\n            this.chainCode, this.path, this.index, this.depth, this.mnemonic, provider);\n    }\n\n    #account(): KeystoreAccount {\n        const account: KeystoreAccount = { address: this.address, privateKey: this.privateKey };\n        const m = this.mnemonic;\n        if (this.path && m && m.wordlist.locale === \"en\" && m.password === \"\") {\n            account.mnemonic = {\n                path: this.path,\n                locale: \"en\",\n                entropy: m.entropy\n            };\n        }\n\n        return account;\n    }\n\n    /**\n     *  Resolves to a [JSON Keystore Wallet](json-wallets) encrypted with\n     *  %%password%%.\n     *\n     *  If %%progressCallback%% is specified, it will receive periodic\n     *  updates as the encryption process progreses.\n     */\n    async encrypt(password: Uint8Array | string, progressCallback?: ProgressCallback): Promise<string> {\n        return await encryptKeystoreJson(this.#account(), password, { progressCallback });\n    }\n\n    /**\n     *  Returns a [JSON Keystore Wallet](json-wallets) encryped with\n     *  %%password%%.\n     *\n     *  It is preferred to use the [async version](encrypt) instead,\n     *  which allows a [[ProgressCallback]] to keep the user informed.\n     *\n     *  This method will block the event loop (freezing all UI) until\n     *  it is complete, which may be a non-trivial duration.\n     */\n    encryptSync(password: Uint8Array | string): string {\n        return encryptKeystoreJsonSync(this.#account(), password);\n    }\n\n    /**\n     *  The extended key.\n     *\n     *  This key will begin with the prefix ``xpriv`` and can be used to\n     *  reconstruct this HD Node to derive its children.\n     */\n    get extendedKey(): string {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n\n        assert(this.depth < 256, \"Depth too deep\", \"UNSUPPORTED_OPERATION\", { operation: \"extendedKey\" });\n\n        return encodeBase58Check(concat([\n            \"0x0488ADE4\", zpad(this.depth, 1), this.parentFingerprint,\n            zpad(this.index, 4), this.chainCode,\n            concat([ \"0x00\", this.privateKey ])\n        ]));\n    }\n\n    /**\n     *  Returns true if this wallet has a path, providing a Type Guard\n     *  that the path is non-null.\n     */\n    hasPath(): this is { path: string } { return (this.path != null); }\n\n    /**\n     *  Returns a neutered HD Node, which removes the private details\n     *  of an HD Node.\n     *\n     *  A neutered node has no private key, but can be used to derive\n     *  child addresses and other public data about the HD Node.\n     */\n    neuter(): HDNodeVoidWallet {\n        return new HDNodeVoidWallet(_guard, this.address, this.publicKey,\n            this.parentFingerprint, this.chainCode, this.path, this.index,\n            this.depth, this.provider);\n    }\n\n    /**\n     *  Return the child for %%index%%.\n     */\n    deriveChild(_index: Numeric): HDNodeWallet {\n        const index = getNumber(_index, \"index\");\n        assertArgument(index <= 0xffffffff, \"invalid index\", \"index\", index);\n\n        // Base path\n        let path = this.path;\n        if (path) {\n            path += \"/\" + (index & ~HardenedBit);\n            if (index & HardenedBit) { path += \"'\"; }\n        }\n\n        const { IR, IL } = ser_I(index, this.chainCode, this.publicKey, this.privateKey);\n        const ki = new SigningKey(toBeHex((toBigInt(IL) + BigInt(this.privateKey)) % N, 32));\n\n        return new HDNodeWallet(_guard, ki, this.fingerprint, hexlify(IR),\n            path, index, this.depth + 1, this.mnemonic, this.provider);\n\n    }\n\n    /**\n     *  Return the HDNode for %%path%% from this node.\n     */\n    derivePath(path: string): HDNodeWallet {\n        return derivePath<HDNodeWallet>(this, path);\n    }\n\n    static #fromSeed(_seed: BytesLike, mnemonic: null | Mnemonic): HDNodeWallet {\n        assertArgument(isBytesLike(_seed), \"invalid seed\", \"seed\", \"[REDACTED]\");\n\n        const seed = getBytes(_seed, \"seed\");\n        assertArgument(seed.length >= 16 && seed.length <= 64 , \"invalid seed\", \"seed\", \"[REDACTED]\");\n\n        const I = getBytes(computeHmac(\"sha512\", MasterSecret, seed));\n        const signingKey = new SigningKey(hexlify(I.slice(0, 32)));\n\n        return new HDNodeWallet(_guard, signingKey, \"0x00000000\", hexlify(I.slice(32)),\n            \"m\", 0, 0, mnemonic, null);\n    }\n\n    /**\n     *  Creates a new HD Node from %%extendedKey%%.\n     *\n     *  If the %%extendedKey%% will either have a prefix or ``xpub`` or\n     *  ``xpriv``, returning a neutered HD Node ([[HDNodeVoidWallet]])\n     *  or full HD Node ([[HDNodeWallet) respectively.\n     */\n    static fromExtendedKey(extendedKey: string): HDNodeWallet | HDNodeVoidWallet {\n        const bytes = toBeArray(decodeBase58(extendedKey)); // @TODO: redact\n\n        assertArgument(bytes.length === 82 || encodeBase58Check(bytes.slice(0, 78)) === extendedKey,\n            \"invalid extended key\", \"extendedKey\", \"[ REDACTED ]\");\n\n        const depth = bytes[4];\n        const parentFingerprint = hexlify(bytes.slice(5, 9));\n        const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n        const chainCode = hexlify(bytes.slice(13, 45));\n        const key = bytes.slice(45, 78);\n\n        switch (hexlify(bytes.slice(0, 4))) {\n            // Public Key\n            case \"0x0488b21e\": case \"0x043587cf\": {\n                const publicKey = hexlify(key);\n                return new HDNodeVoidWallet(_guard, computeAddress(publicKey), publicKey,\n                    parentFingerprint, chainCode, null, index, depth, null);\n            }\n\n            // Private Key\n            case \"0x0488ade4\": case \"0x04358394 \":\n                if (key[0] !== 0) { break; }\n                return new HDNodeWallet(_guard, new SigningKey(key.slice(1)),\n                    parentFingerprint, chainCode, null, index, depth, null, null);\n        }\n\n\n        assertArgument(false, \"invalid extended key prefix\", \"extendedKey\", \"[ REDACTED ]\");\n    }\n\n    /**\n     *  Creates a new random HDNode.\n     */\n    static createRandom(password?: string, path?: string, wordlist?: Wordlist): HDNodeWallet {\n        if (password == null) { password = \"\"; }\n        if (path == null) { path = defaultPath; }\n        if (wordlist == null) { wordlist = LangEn.wordlist(); }\n        const mnemonic = Mnemonic.fromEntropy(randomBytes(16), password, wordlist)\n        return HDNodeWallet.#fromSeed(mnemonic.computeSeed(), mnemonic).derivePath(path);\n    }\n\n    /**\n     *  Create an HD Node from %%mnemonic%%.\n     */\n    static fromMnemonic(mnemonic: Mnemonic, path?: string): HDNodeWallet {\n        if (!path) { path = defaultPath; }\n        return HDNodeWallet.#fromSeed(mnemonic.computeSeed(), mnemonic).derivePath(path);\n    }\n\n    /**\n     *  Creates an HD Node from a mnemonic %%phrase%%.\n     */\n    static fromPhrase(phrase: string, password?: string, path?: string, wordlist?: Wordlist): HDNodeWallet {\n        if (password == null) { password = \"\"; }\n        if (path == null) { path = defaultPath; }\n        if (wordlist == null) { wordlist = LangEn.wordlist(); }\n        const mnemonic = Mnemonic.fromPhrase(phrase, password, wordlist)\n        return HDNodeWallet.#fromSeed(mnemonic.computeSeed(), mnemonic).derivePath(path);\n    }\n\n    /**\n     *  Creates an HD Node from a %%seed%%.\n     */\n    static fromSeed(seed: BytesLike): HDNodeWallet {\n        return HDNodeWallet.#fromSeed(seed, null);\n    }\n}\n\n/**\n *  A **HDNodeVoidWallet** cannot sign, but provides access to\n *  the children nodes of a [[link-bip-32]] HD wallet addresses.\n *\n *  The can be created by using an extended ``xpub`` key to\n *  [[HDNodeWallet_fromExtendedKey]] or by \n *  [nuetering](HDNodeWallet-neuter) a [[HDNodeWallet]].\n */\nexport class HDNodeVoidWallet extends VoidSigner {\n    /**\n     *  The compressed public key.\n     */\n    readonly publicKey!: string;\n\n    /**\n     *  The fingerprint.\n     *\n     *  A fingerprint allows quick qay to detect parent and child nodes,\n     *  but developers should be prepared to deal with collisions as it\n     *  is only 4 bytes.\n     */\n    readonly fingerprint!: string;\n\n    /**\n     *  The parent node fingerprint.\n     */\n    readonly parentFingerprint!: string;\n\n    /**\n     *  The chaincode, which is effectively a public key used\n     *  to derive children.\n     */\n    readonly chainCode!: string;\n\n    /**\n     *  The derivation path of this wallet.\n     *\n     *  Since extended keys do not provider full path details, this\n     *  may be ``null``, if instantiated from a source that does not\n     *  enocde it.\n     */\n    readonly path!: null | string;\n\n    /**\n     *  The child index of this wallet. Values over ``2 *\\* 31`` indicate\n     *  the node is hardened.\n     */\n    readonly index!: number;\n\n    /**\n     *  The depth of this wallet, which is the number of components\n     *  in its path.\n     */\n    readonly depth!: number;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, address: string, publicKey: string, parentFingerprint: string, chainCode: string, path: null | string, index: number, depth: number, provider: null | Provider) {\n        super(address, provider);\n        assertPrivate(guard, _guard, \"HDNodeVoidWallet\");\n\n        defineProperties<HDNodeVoidWallet>(this, { publicKey });\n\n        const fingerprint = dataSlice(ripemd160(sha256(publicKey)), 0, 4);\n        defineProperties<HDNodeVoidWallet>(this, {\n            publicKey, fingerprint, parentFingerprint, chainCode, path, index, depth\n        });\n    }\n\n    connect(provider: null | Provider): HDNodeVoidWallet {\n        return new HDNodeVoidWallet(_guard, this.address, this.publicKey,\n            this.parentFingerprint, this.chainCode, this.path, this.index, this.depth, provider);\n    }\n\n    /**\n     *  The extended key.\n     *\n     *  This key will begin with the prefix ``xpub`` and can be used to\n     *  reconstruct this neutered key to derive its children addresses.\n     */\n    get extendedKey(): string {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n\n        assert(this.depth < 256, \"Depth too deep\", \"UNSUPPORTED_OPERATION\", { operation: \"extendedKey\" });\n\n        return encodeBase58Check(concat([\n            \"0x0488B21E\",\n            zpad(this.depth, 1),\n            this.parentFingerprint,\n            zpad(this.index, 4),\n            this.chainCode,\n            this.publicKey,\n        ]));\n    }\n\n    /**\n     *  Returns true if this wallet has a path, providing a Type Guard\n     *  that the path is non-null.\n     */\n    hasPath(): this is { path: string } { return (this.path != null); }\n\n    /**\n     *  Return the child for %%index%%.\n     */\n    deriveChild(_index: Numeric): HDNodeVoidWallet {\n        const index = getNumber(_index, \"index\");\n        assertArgument(index <= 0xffffffff, \"invalid index\", \"index\", index);\n\n        // Base path\n        let path = this.path;\n        if (path) {\n            path += \"/\" + (index & ~HardenedBit);\n            if (index & HardenedBit) { path += \"'\"; }\n        }\n\n        const { IR, IL } = ser_I(index, this.chainCode, this.publicKey, null);\n        const Ki = SigningKey.addPoints(IL, this.publicKey, true);\n\n        const address = computeAddress(Ki);\n\n        return new HDNodeVoidWallet(_guard, address, Ki, this.fingerprint, hexlify(IR),\n            path, index, this.depth + 1, this.provider);\n\n    }\n\n    /**\n     *  Return the signer for %%path%% from this node.\n     */\n    derivePath(path: string): HDNodeVoidWallet {\n        return derivePath<HDNodeVoidWallet>(this, path);\n    }\n}\n\n/*\nexport class HDNodeWalletManager {\n    #root: HDNodeWallet;\n\n    constructor(phrase: string, password?: null | string, path?: null | string, locale?: null | Wordlist) {\n        if (password == null) { password = \"\"; }\n        if (path == null) { path = \"m/44'/60'/0'/0\"; }\n        if (locale == null) { locale = LangEn.wordlist(); }\n        this.#root = HDNodeWallet.fromPhrase(phrase, password, path, locale);\n    }\n\n    getSigner(index?: number): HDNodeWallet {\n        return this.#root.deriveChild((index == null) ? 0: index);\n    }\n}\n*/\n\n/**\n *  Returns the [[link-bip-32]] path for the account at %%index%%.\n *\n *  This is the pattern used by wallets like Ledger.\n *\n *  There is also an [alternate pattern](getIndexedAccountPath) used by\n *  some software.\n */\nexport function getAccountPath(_index: Numeric): string {\n    const index = getNumber(_index, \"index\");\n    assertArgument(index >= 0 && index < HardenedBit, \"invalid account index\", \"index\", index);\n    return `m/44'/60'/${ index }'/0/0`;\n}\n\n/**\n *  Returns the path using an alternative pattern for deriving accounts,\n *  at %%index%%.\n *\n *  This derivation path uses the //index// component rather than the\n *  //account// component to derive sequential accounts.\n *\n *  This is the pattern used by wallets like MetaMask.\n */\nexport function getIndexedAccountPath(_index: Numeric): string {\n    const index = getNumber(_index, \"index\");\n    assertArgument(index >= 0 && index < HardenedBit, \"invalid account index\", \"index\", index);\n    return `m/44'/60'/0'/0/${ index}`;\n}\n\n","/**\n *  @_subsection: api/wallet:JSON Wallets  [json-wallets]\n */\n\nimport { CBC, pkcs7Strip } from \"aes-js\";\n\nimport { getAddress } from \"../address/index.js\";\nimport { pbkdf2 } from \"../crypto/index.js\";\nimport { id } from \"../hash/index.js\";\nimport { getBytes, assertArgument } from \"../utils/index.js\";\n\nimport { getPassword, looseArrayify, spelunk } from \"./utils.js\";\n\n\n/**\n *  The data stored within a JSON Crowdsale wallet is fairly\n *  minimal.\n */\nexport type CrowdsaleAccount = {\n    privateKey: string;\n    address: string;\n}\n\n/**\n *  Returns true if %%json%% is a valid JSON Crowdsale wallet.\n */\nexport function isCrowdsaleJson(json: string): boolean {\n    try {\n        const data = JSON.parse(json);\n        if (data.encseed) { return true; }\n    } catch (error) { }\n    return false;\n}\n\n// See: https://github.com/ethereum/pyethsaletool\n\n/**\n *  Before Ethereum launched, it was necessary to create a wallet\n *  format for backers to use, which would be used to receive ether\n *  as a reward for contributing to the project.\n *\n *  The [[link-crowdsale]] format is now obsolete, but it is still\n *  useful to support and the additional code is fairly trivial as\n *  all the primitives required are used through core portions of\n *  the library.\n */\nexport function decryptCrowdsaleJson(json: string, _password: string | Uint8Array): CrowdsaleAccount {\n    const data = JSON.parse(json);\n    const password = getPassword(_password);\n\n    // Ethereum Address\n    const address = getAddress(spelunk(data, \"ethaddr:string!\"));\n\n    // Encrypted Seed\n    const encseed = looseArrayify(spelunk(data, \"encseed:string!\"));\n    assertArgument(encseed && (encseed.length % 16) === 0, \"invalid encseed\", \"json\", json);\n\n    const key = getBytes(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n\n    // Decrypt the seed\n    const aesCbc = new CBC(key, iv);\n    const seed = pkcs7Strip(getBytes(aesCbc.decrypt(encryptedSeed)));\n\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n\n    return { address, privateKey: id(seedHex) };\n}\n","\nexport function pkcs7Pad(data: Uint8Array): Uint8Array {\n    const padder = 16 - (data.length % 16);\n\n    const result = new Uint8Array(data.length + padder);\n    result.set(data);\n\n    for (let i = data.length; i < result.length; i++) {\n        result[i] = padder;\n    }\n\n    return result;\n}\n\nexport function pkcs7Strip(data: Uint8Array): Uint8Array {\n    if (data.length < 16) { throw new TypeError('PKCS#7 invalid length'); }\n\n    const padder = data[data.length - 1];\n    if (padder > 16) { throw new TypeError('PKCS#7 padding byte out of range'); }\n\n    const length = data.length - padder;\n    for (let i = 0; i < padder; i++) {\n        if (data[length + i] !== padder) {\n            throw new TypeError('PKCS#7 invalid padding byte');\n        }\n    }\n\n    return new Uint8Array(data.subarray(0, length));\n}\n","import { SigningKey } from \"../crypto/index.js\";\nimport { assertArgument } from \"../utils/index.js\";\n\nimport { BaseWallet } from \"./base-wallet.js\";\nimport { HDNodeWallet } from \"./hdwallet.js\";\nimport { decryptCrowdsaleJson, isCrowdsaleJson  } from \"./json-crowdsale.js\";\nimport {\n    decryptKeystoreJson, decryptKeystoreJsonSync,\n    encryptKeystoreJson, encryptKeystoreJsonSync,\n    isKeystoreJson\n} from \"./json-keystore.js\";\nimport { Mnemonic } from \"./mnemonic.js\";\n\nimport type { ProgressCallback } from \"../crypto/index.js\";\nimport type { Provider } from \"../providers/index.js\";\n\nimport type { CrowdsaleAccount } from \"./json-crowdsale.js\";\nimport type { KeystoreAccount } from \"./json-keystore.js\";\n\n\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => { setTimeout(() => { resolve(); }, duration); });\n}\n\n/**\n *  A **Wallet** manages a single private key which is used to sign\n *  transactions, messages and other common payloads.\n *\n *  This class is generally the main entry point for developers\n *  that wish to use a private key directly, as it can create\n *  instances from a large variety of common sources, including\n *  raw private key, [[link-bip-39]] mnemonics and encrypte JSON\n *  wallets.\n */\nexport class Wallet extends BaseWallet {\n\n    /**\n     *  Create a new wallet for the private %%key%%, optionally connected\n     *  to %%provider%%.\n     */\n    constructor(key: string | SigningKey, provider?: null | Provider) {\n        if (typeof(key) === \"string\" && !key.startsWith(\"0x\")) {\n            key = \"0x\" + key;\n        }\n\n        let signingKey = (typeof(key) === \"string\") ? new SigningKey(key): key;\n        super(signingKey, provider);\n    }\n\n    connect(provider: null | Provider): Wallet {\n        return new Wallet(this.signingKey, provider);\n    }\n\n    /**\n     *  Resolves to a [JSON Keystore Wallet](json-wallets) encrypted with\n     *  %%password%%.\n     *\n     *  If %%progressCallback%% is specified, it will receive periodic\n     *  updates as the encryption process progreses.\n     */\n    async encrypt(password: Uint8Array | string, progressCallback?: ProgressCallback): Promise<string> {\n        const account = { address: this.address, privateKey: this.privateKey };\n        return await encryptKeystoreJson(account, password, { progressCallback });\n    }\n\n    /**\n     *  Returns a [JSON Keystore Wallet](json-wallets) encryped with\n     *  %%password%%.\n     *\n     *  It is preferred to use the [async version](encrypt) instead,\n     *  which allows a [[ProgressCallback]] to keep the user informed.\n     *\n     *  This method will block the event loop (freezing all UI) until\n     *  it is complete, which may be a non-trivial duration.\n     */\n    encryptSync(password: Uint8Array | string): string {\n        const account = { address: this.address, privateKey: this.privateKey };\n        return encryptKeystoreJsonSync(account, password);\n    }\n\n    static #fromAccount(account: null | CrowdsaleAccount | KeystoreAccount): HDNodeWallet | Wallet {\n        assertArgument(account, \"invalid JSON wallet\", \"json\", \"[ REDACTED ]\");\n\n        if (\"mnemonic\" in account && account.mnemonic && account.mnemonic.locale === \"en\") {\n            const mnemonic = Mnemonic.fromEntropy(account.mnemonic.entropy);\n            const wallet = HDNodeWallet.fromMnemonic(mnemonic, account.mnemonic.path);\n            if (wallet.address === account.address && wallet.privateKey === account.privateKey) {\n                return wallet;\n            }\n            console.log(\"WARNING: JSON mismatch address/privateKey != mnemonic; fallback onto private key\");\n        }\n\n        const wallet = new Wallet(account.privateKey);\n\n        assertArgument(wallet.address === account.address,\n            \"address/privateKey mismatch\", \"json\", \"[ REDACTED ]\");\n\n        return wallet;\n    }\n\n    /**\n     *  Creates (asynchronously) a **Wallet** by decrypting the %%json%%\n     *  with %%password%%.\n     *\n     *  If %%progress%% is provided, it is called periodically during\n     *  decryption so that any UI can be updated.\n     */\n    static async fromEncryptedJson(json: string, password: Uint8Array | string, progress?: ProgressCallback): Promise<HDNodeWallet | Wallet> {\n        let account: null | CrowdsaleAccount | KeystoreAccount = null;\n        if (isKeystoreJson(json)) {\n            account = await decryptKeystoreJson(json, password, progress);\n\n        } else if (isCrowdsaleJson(json)) {\n            if (progress) { progress(0); await stall(0); }\n            account = decryptCrowdsaleJson(json, password);\n            if (progress) { progress(1); await stall(0); }\n\n        }\n\n        return Wallet.#fromAccount(account);\n    }\n\n    /**\n     *  Creates a **Wallet** by decrypting the %%json%% with %%password%%.\n     *\n     *  The [[fromEncryptedJson]] method is preferred, as this method\n     *  will lock up and freeze the UI during decryption, which may take\n     *  some time.\n     */\n    static fromEncryptedJsonSync(json: string, password: Uint8Array | string): HDNodeWallet | Wallet {\n        let account: null | CrowdsaleAccount | KeystoreAccount = null;\n        if (isKeystoreJson(json)) {\n            account = decryptKeystoreJsonSync(json, password);\n        } else if (isCrowdsaleJson(json)) {\n            account = decryptCrowdsaleJson(json, password);\n        } else {\n            assertArgument(false, \"invalid JSON wallet\", \"json\", \"[ REDACTED ]\");\n        }\n\n        return Wallet.#fromAccount(account);\n    }\n\n    /**\n     *  Creates a new random [[HDNodeWallet]] using the available\n     *  [cryptographic random source](randomBytes).\n     *\n     *  If there is no crytographic random source, this will throw.\n     */\n    static createRandom(provider?: null | Provider): HDNodeWallet {\n        const wallet = HDNodeWallet.createRandom();\n        if (provider) { return wallet.connect(provider); }\n        return wallet;\n    }\n\n    /**\n     *  Creates a [[HDNodeWallet]] for %%phrase%%.\n     */\n    static fromPhrase(phrase: string, provider?: Provider): HDNodeWallet {\n        const wallet = HDNodeWallet.fromPhrase(phrase);\n        if (provider) { return wallet.connect(provider); }\n        return wallet;\n    }\n}\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst TransactionHistory = ({ apiKey }) => {\r\n    const [transactionCount, setTransactionCount] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchBlockTransactionCount = async () => {\r\n            try {\r\n                const options = {\r\n                    method: 'POST',\r\n                    url: `https://eth-mainnet.g.alchemy.com/v2/${apiKey}`,\r\n                    headers: { accept: 'application/json', 'content-type': 'application/json' },\r\n                    data: {\r\n                        id: 1,\r\n                        jsonrpc: '2.0',\r\n                        method: 'alchemy_getTransactionReceipts',\r\n                        params: ['latest', 10],\r\n                    },\r\n                };\r\n                const response = await axios.request(options);\r\n                setTransactionCount(response.data.result);\r\n            } catch (error) {\r\n                console.error('Error fetching block transaction count:', error);\r\n            }\r\n        };\r\n\r\n        fetchBlockTransactionCount();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h3>Transaction History</h3>\r\n            {transactionCount !== null ? (\r\n                <p>{transactionCount}</p>\r\n            ) : (\r\n                <p>Loading...</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React, { useState } from 'react';\r\nimport { ethers, parseEther, getAddress, parseUnits } from 'ethers';\r\nimport TransactionHistory from './TransactionHistory';\r\n\r\nexport default function TransactionForm({ apiKey }) {\r\n    const [recipientAddress, setRecipientAddress] = useState('');\r\n    const [transactionAmount, setTransactionAmount] = useState('');\r\n    const [transactionStatus, setTransactionStatus] = useState('');\r\n    const [error, setError] = useState(null);\r\n\r\n    const validateInputs = () => {\r\n        try {\r\n            getAddress(recipientAddress);\r\n            parseUnits(transactionAmount, 'ether');\r\n            setError(null);\r\n            return true;\r\n        } catch (validationError) {\r\n            setError(validationError.message);\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const handleTransaction = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!validateInputs()) {\r\n            return;\r\n        }\r\n\r\n        const provider = new ethers.JsonRpcProvider(`https://eth-mainnet.alchemyapi.io/v2/${apiKey}`);\r\n        const signer = new ethers.Wallet(\"alcht_54tl1cqMymkd4clRXQmjMSjd4kuIYX\", provider);\r\n\r\n        try {\r\n            const amountWei = parseEther(transactionAmount);\r\n\r\n            const transaction = {\r\n                to: recipientAddress,\r\n                value: amountWei,\r\n            };\r\n\r\n            const signedTransaction = await signer.signTransaction(transaction);\r\n            const sentTransaction = await provider.sendTransaction(signedTransaction);\r\n\r\n            console.log('Transaction sent:', sentTransaction);\r\n            setTransactionStatus('Transaction sent successfully');\r\n\r\n        } catch (error) {\r\n            console.error('Error sending transaction:', error.message);\r\n            setTransactionStatus(`Error: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Transaction Form</h2>\r\n            <form onSubmit={handleTransaction}>\r\n                <div>\r\n                    <label htmlFor=\"recipientAddress\">Recipient Address:</label><br />\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"recipientAddress\"\r\n                        style={{ width: \"100%\" }}\r\n                        value={recipientAddress}\r\n                        onChange={(e) => setRecipientAddress(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"transactionAmount\">Transaction Amount (ETH):</label><br />\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"transactionAmount\"\r\n                        style={{ width: \"100%\" }}\r\n                        value={transactionAmount}\r\n                        onChange={(e) => setTransactionAmount(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n                <button type=\"submit\">Send Transaction</button>\r\n            </form>\r\n            <TransactionHistory apiKey={apiKey} />\r\n            {transactionStatus && <p>{transactionStatus}</p>}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Popup.css';\r\nimport { Alchemy, Network } from \"alchemy-sdk\";\r\nimport axios from 'axios';\r\nimport AccountInfo from './AccountInfo';\r\nimport TransactionForm from './TransactionForm';\r\n\r\nfunction Popup() {\r\n    const [accountInfo, setAccountInfo] = useState([]);\r\n    const [apiKey, setApiKey] = useState(\"hV8IPjtpCKf4lpHfNE12ZD940DykzQfX\")\r\n    const [decodedValues, setDecodedValues] = useState([]);\r\n    const [newApiKay, setNewApiKey] = useState()\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const config = {\r\n                apiKey: apiKey,\r\n                network: Network.ETH_MAINNET,\r\n            };\r\n            const alchemy = new Alchemy(config);\r\n\r\n            const ownerAddress = \"0x994b342dd87fc825f66e51ffa3ef71ad818b6893\";\r\n\r\n            try {\r\n                const data = await alchemy.core.getTokenBalances(ownerAddress);\r\n                setAccountInfo(data);\r\n                decodeValues(data.tokenBalances);\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n\r\n        };\r\n\r\n        const decodeValues = async (tokenBalances) => {\r\n            const fetchURL = `https://eth-mainnet.g.alchemy.com/v2/${apiKey}`;\r\n            const decoded = await Promise.all(tokenBalances.map(async (ele) => {\r\n                const metadataParams = {\r\n                    \"jsonrpc\": \"2.0\",\r\n                    \"method\": \"alchemy_getTokenMetadata\",\r\n                    \"params\": [`${ele.contractAddress}`],\r\n                    \"id\": 42\r\n                };\r\n\r\n                const metadataConfig = {\r\n                    method: 'post',\r\n                    url: fetchURL,\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    data: metadataParams\r\n                };\r\n\r\n                try {\r\n                    const response = await axios(metadataConfig);\r\n                    let metadata = response.data.result;\r\n                    const tokenName = metadata.name + \"(\" + metadata.symbol + \")\";\r\n                    const tokenBalance = ele.tokenBalance / Math.pow(10, metadata.decimals);\r\n                    return { name: tokenName, balance: tokenBalance };\r\n                } catch (error) {\r\n                    console.error('Error fetching metadata:', error);\r\n                    return null;\r\n                }\r\n            }));\r\n            setDecodedValues(decoded.filter(Boolean));\r\n        };\r\n        fetchData();\r\n    }, [apiKey]);\r\n    return (\r\n        <>\r\n            <div style={{ width: \"100%\", textAlign: 'center' }}>\r\n                <h2>Ethereum Wallet</h2>\r\n                <div>\r\n                    <AccountInfo apiKey={apiKey} />\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <TransactionForm apiKey={apiKey} />\r\n            </div>\r\n            <div>\r\n            </div>\r\n            <h2>Token Balances</h2>\r\n            <table style={{ border: \"1px solid black\", borderRadius: \"20px\", padding: \"20px\" }}>\r\n                <thead>\r\n\r\n                    <th style={{ textAlign: \"start\" }}>Name</th>\r\n                    <th style={{ textAlign: \"start\" }}>Balance</th>\r\n\r\n                </thead>\r\n                <tbody>\r\n                    {decodedValues.map((decoded, index) => (\r\n                        <tr key={index}>\r\n                            <div style={{ overflow: \"hidden\", whiteSpace: \"nowrap\", textOverflow: \"ellipsis\", width: \"250px\", marginRight: \"100px\" }}>{decoded.name}</div>\r\n                            <td>{decoded.balance}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            <form>\r\n            </form>\r\n            <label htmlFor=\"privateKey\">Import Existing Account (Api Key):</label>\r\n            <input type=\"text\" id=\"privateKey\" value={newApiKay} onChange={(e) => setNewApiKey(e.target.value)} />\r\n            <button type=\"button\" onClick={() => setApiKey(newApiKay)}>\r\n                Import Account\r\n            </button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Popup;\r\n","import React from \"react\";\nimport Popup from \"./popup/Popup\";\n\nexport default function App() {\n  return (\n    <div style={{padding:\"20px\"}}>\n      <Popup />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"names":["version","BN","_BN","logger","Logger","_constructorGuard","MAX_SAFE","isBigNumberish","value","BigNumber","isBigNumber","match","isHexString","isBytes","_warnedToStringRadix","constructor","constructorGuard","hex","throwError","errors","UNSUPPORTED_OPERATION","operation","this","_hex","_isBigNumber","Object","freeze","fromTwos","toBigNumber","toBN","toTwos","abs","from","substring","add","other","sub","div","isZero","throwFault","mul","mod","isNeg","umod","pow","and","isNegative","or","xor","mask","maskn","shl","shln","shr","shrn","eq","lt","lte","gt","gte","toNumber","error","toString","toBigInt","BigInt","e","arguments","length","warn","UNEXPECTED_ARGUMENT","toHexString","toJSON","key","type","toHex","throwArgumentError","String","anyValue","hexlify","fault","params","NUMERIC_FAULT","_base36To16","isHexable","addSlice","array","slice","args","Array","prototype","call","Uint8Array","apply","isBytesLike","isInteger","i","v","arrayify","options","checkSafeUint53","result","unshift","parseInt","push","allowMissingPrefix","hexPad","concat","items","objects","map","item","reduce","accum","offset","object","set","stripZeros","start","HexCharacters","Math","floor","toLowerCase","hexDataLength","data","hexDataSlice","endOffset","hexConcat","forEach","hexValue","trimmed","hexStripZeros","hexZeroPad","splitSignature","signature","r","s","_vs","recoveryParam","yParityAndS","compact","bytes","vs","zeroPad","recId","_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","off","_logLevel","_globalLogger","_normalizeError","missing","form","normalize","Error","join","fromCharCode","message","_checkNormalize","LogLevel","ErrorCode","HEX","defineProperty","enumerable","writable","_log","logLevel","level","console","log","_len","_key","levels","DEBUG","_len2","_key2","INFO","_len3","_key3","WARNING","makeError","code","UNKNOWN_ERROR","messageDetails","keys","JSON","stringify","reason","url","CALL_EXCEPTION","INSUFFICIENT_FUNDS","MISSING_NEW","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","TRANSACTION_REPLACED","UNPREDICTABLE_GAS_LIMIT","name","INVALID_ARGUMENT","argument","assert","condition","assertArgument","checkNormalize","checkArgumentCount","count","expectedCount","MISSING_ARGUMENT","checkNew","target","kind","checkAbstract","globalLogger","setCensorship","censorship","permanent","setLogLevel","Zero","NegativeOne","undefined","zeros","getMultiplier","decimals","formatFixed","multiplier","negative","fraction","whole","parseFixed","comps","split","wholeValue","fractionValue","wei","FixedFormat","signed","width","_multiplier","check","defaultValue","FixedNumber","format","_value","_isFixedNumber","_checkFormat","addUnsafe","a","b","fromValue","subUnsafe","mulUnsafe","divUnsafe","hasFraction","ONE","toFormat","ceiling","round","factor","bump","BUMP","toUnsafeFloat","parseFloat","fromString","fixedFormat","numeric","decimal","fromBytes","isFixedNumber","names","formatUnits","unitName","index","indexOf","Network","TokenBalanceType","AssetTransfersCategory","GetTransfersForOwnerTransferType","SortingOrder","OpenSeaSafelistRequestStatus","AlchemySubscription","SimulateAssetType","SimulateChangeType","DecodingAuthority","DebugCallType","GasOptimizedTransactionStatus","WebhookVersion","WebhookType","CommitmentLevel","DebugTracerType","NftTokenType","NftSpamClassification","NftFilters","NftOrdering","NftSaleMarketplace","NftSaleTakerType","NftRefreshState","NftCollectionMarketplace","DEFAULT_ALCHEMY_API_KEY","DEFAULT_NETWORK","ETH_MAINNET","getAlchemyHttpUrl","network","apiKey","getAlchemyWsUrl","AlchemyApiType","EthersNetwork","ETH_GOERLI","ETH_SEPOLIA","OPT_MAINNET","OPT_GOERLI","OPT_SEPOLIA","ARB_MAINNET","ARB_GOERLI","ARB_SEPOLIA","MATIC_MAINNET","MATIC_MUMBAI","ASTAR_MAINNET","POLYGONZKEVM_MAINNET","POLYGONZKEVM_TESTNET","BASE_MAINNET","BASE_GOERLI","BASE_SEPOLIA","CustomNetworks","chainId","sepolia","noop","AlchemyConfig","config","maxRetries","authToken","batchRequests","requestTimeout","_getRequestUrl","apiType","NFT","WEBHOOK","getProvider","_baseAlchemyProvider","__awaiter$1","AlchemyProvider","getWebSocketProvider","_baseAlchemyWssProvider","AlchemyWebSocketProvider","LogLevel$1","Logger$1","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","done","then","defineReadOnly","resolveProperties","promises","all","opaque","bigint","boolean","number","string","_isFrozen","isArray","isFrozen","_deepCopy","deepCopy","fromHex","hexString","num","formatBlock","block","Number","stringToEnum","x","enumb","values","includes","getNftContractsForOwnerFromRaw","rawNftContract","nullsToUndefined","assign","getNftContractFromRaw","displayNft","image","totalBalance","numDistinctTokensOwned","isSpam","tokenType","parseNftTokenType","openSeaMetadata","safelistRequestStatus","getBaseNftFromRaw","rawBaseNft","contractAddress","tokenId","getNftFromRaw","rawNft","contract","spamClassifications","parseNftSpamClassification","acquiredAt","collection","mint","parseNftSaleMarketplace","marketplace","LOOKSRARE","SEAPORT","X2Y2","WYVERN","CRYPTOPUNKS","BLUR","UNKNOWN","parseNftCollectionMarketplace","OPENSEA","parseNftTaker","taker","BUYER","SELLER","res","Unknown","ERC721","ERC1155","NO_SUPPORTED_NFT_STANDARD","NOT_A_CONTRACT","IS_BROWSER","window","obj","getAssetTransfers","srcMethod","provider","fromAddress","_getAddress","toAddress","_send","fromBlock","toBlock","maxCount","getTransactionReceipts","getLogs","filter","getNetwork","getFilter","logs","send","removed","formatter","filterLog","bind","resolvedFilter","_getBlockTag","address","CoreNamespace","getBalance","addressOrName","blockTag","isContractAddress","getCode","getStorageAt","position","getTransactionCount","getBlock","blockHashOrBlockTag","getBlockWithTransactions","getBlockNumber","getGasPrice","getFeeData","ready","transaction","estimateGas","getTransaction","transactionHash","getTransactionReceipt","sendTransaction","signedTransaction","waitForTransaction","confirmations","timeout","method","findContractDeployer","currentBlockNum","firstBlock","binarySearchFirstBlock","txReceipts","blockNumber","matchingReceipt","_a","receipts","find","receipt","deployerAddress","getTokenBalances","contractAddressesOrOptions","ERC20","pageKey","getTokensForOwner","contractAddresses","response","formattedBalances","tokenBalances","balance","rawBalance","tokenBalance","metadata","allSettled","token","p","status","symbol","logo","tokens","t","getTokenMetadata","resolveName","lookupAddress","end","mid","DebugNamespace","traceCall","blockIdentifier","tracer","parseTracerParams","traceTransaction","traceBlock","onlyTopCall","tracerConfig","sanitizeTokenType","WARN","ERROR","SILENT","logLevelToConsoleFn","DEFAULT_LOG_LEVEL","logDebug","_len4","_key4","loggerClient","logInfo","_len5","_key5","logWarn","_len6","_key6","val","TypeError","_len7","_key7","_len8","_key8","_len9","_key9","_len10","_key10","now","Date","toISOString","_len11","_key11","VERSION","sendAxiosRequest","baseUrl","restApiName","methodName","overrides","requestUrl","headers","axios","ExponentialBackoff","maxAttempts","initialDelayMs","backoffMultiplier","maxDelayMs","numAttempts","currentDelayMs","isInBackoff","backoff","backoffDelayWithJitterMs","withJitterMs","max","min","setTimeout","delayMs","random","requestHttpWithBackoff","lastError","attempt","err","isRetryableHttpError","retryableCodes","paginateEndpoint","reqPageKey","resPageKey","hasNext","requestParams","__await","getNftMetadata","tokenUriTimeoutInMs","refreshCache","getNftMetadataBatch","nfts","nft","getCollectionMetadata","collectionSlug","rawNftCollection","floorPrice","getNftsForOwner","owner","withMetadata","omitMetadataToWithMetadata","omitMetadata","excludeFilters","includeFilters","pageSize","orderBy","ownedNfts","totalCount","validAt","nftTokenTypeToCategory","SPECIALNFT","getNftSales","order","sellerAddress","buyerAddress","limit","nftSales","rawNftSales","rawNftSale","refreshNftMetadata","tokenIdString","first","second","refresh","timeLastUpdated","nftFromGetNftResponse","ownedNft","isNftWithMetadata","nftFromGetNftContractResponse","getNftsForTransfers","metadataTransfers","transfers","transfer","rawContract","flatMap","category","erc1155Metadata","parse1155Transfer","getTokensFromTransfer","to","hash","blockNum","requestBatches","batch","flat","nftsByTokenId","Map","get","parseReingestionState","reingestionState","DOES_NOT_EXIST","ALREADY_QUEUED","IN_PROGRESS","FINISHED","QUEUED","QUEUE_FAILED","NftNamespace","optionsOrTokenType","getContractMetadata","getContractMetadataBatch","contracts","getNftsForOwnerIterator","_c","_b","__asyncValues","getNftsForContract","getNftsForContractIterator","getOwnersForContract","withTokenBalances","owners","getOwnersForNft","getContractsForOwner","getTransfersForOwner","transferType","ownerAddress","excludeZeroValue","TO","transfersResponse","getTransfersForContract","getMintedNfts","verifyNftOwnership","acc","curr","isSpamContract","getSpamContracts","reportSpam","isAirdropNft","getFloorPrice","computeRarity","searchContractMetadata","query","summarizeNftAttributes","refreshContract","refreshState","progress","NotifyNamespace","getAllWebhooks","verifyConfig","sendWebhookRequest","webhooks","parseRawWebhookResponse","getAddresses","webhookOrId","webhookId","id","addresses","pagination","total_count","cursors","after","parseRawAddressActivityResponse","webhook_id","getGraphqlQuery","graphqlQuery","graphql_query","parseRawCustomGraphqlWebhookResponse","getNftFilters","filters","f","token_id","contract_address","parseRawNftFiltersResponse","updateWebhook","update","is_active","isActive","nft_filters_to_add","addFilters","nftFilterToParam","nft_filters_to_remove","removeFilters","nft_metadata_filters_to_add","addMetadataFilters","nft_metadata_filters_to_remove","removeMetadataFilters","addresses_to_add","resolveAddresses","addAddresses","addresses_to_remove","removeAddresses","newAddresses","createWebhook","appId","MINED_TRANSACTION","DROPPED_TRANSACTION","nftFilterObj","NETWORK_TO_WEBHOOK_NETWORK","NFT_ACTIVITY","NFT_METADATA_UPDATE","nft_filters","nft_metadata_filters","ADDRESS_ACTIVITY","GRAPHQL","webhook_type","webhook_url","app_id","parseRawWebhook","deleteWebhook","resolvedAddresses","rawAddress","WEBHOOK_NETWORK_TO_NETWORK","rawWebhook","timeCreated","time_created","signingKey","signing_key","GAS_OPTIMIZED_TX_FEE_MULTIPLES","TransactNamespace","sendPrivateTransaction","maxBlockNumber","hexBlockNumber","tx","preferences","cancelPrivateTransaction","txHash","simulateAssetChangesBundle","transactions","simulateAssetChanges","simulateExecutionBundle","simulateExecution","getMaxPriorityFeePerGas","sendGasOptimizedTransaction","transactionOrSignedTxs","wallet","_sendGasOptimizedTransaction","gasLimit","priorityFee","baseFee","baseFeePerGas","gasSpreadTransactions","feeMultiplier","maxFeePerGas","maxPriorityFeePerGas","generateGasSpreadTransactions","signedTransactions","signTransaction","getGasOptimizedTransactionStatus","trackingId","rawTransactions","ALCHEMY_PENDING_TRANSACTIONS_EVENT_TYPE","ALCHEMY_MINED_TRANSACTIONS_EVENT_TYPE","ALCHEMY_EVENT_TYPES","Event","tag","listener","once","_lastBlockNumber","_inflight","event","topics","topic","deserializeTopics","pollable","EthersEvent","deserializeAddressField","hashesOnly","includeRemoved","addressStr","addressPair","deserializeAddressesField","isAlchemyEvent","getAlchemyEventTag","PENDING_TRANSACTIONS","serializeAddressField","serializeBooleanField","serializePendingTransactionsEvent","MINED_TRANSACTIONS","serializeAddressesField","serializeMinedTransactionsEvent","verifyAlchemyEventName","eventName","field","WebSocketNamespace","on","processedEvent","_resolveEnsAlchemyEvent","removeAllListeners","listenerCount","listeners","processedAddresses","_resolveNameOrError","resolved","Alchemy","settings","core","ws","transact","notify","module","exports","utils","require","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","transitionalDefaults","Cancel","onCanceled","requestData","requestHeaders","responseType","cancelToken","unsubscribe","signal","removeEventListener","isFormData","request","XMLHttpRequest","auth","username","password","unescape","encodeURIComponent","Authorization","btoa","fullPath","baseURL","onloadend","responseHeaders","getAllResponseHeaders","responseText","statusText","open","toUpperCase","paramsSerializer","onreadystatechange","readyState","responseURL","onabort","onerror","ontimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","isStandardBrowserEnv","xsrfValue","withCredentials","xsrfCookieName","read","xsrfHeaderName","setRequestHeader","isUndefined","onDownloadProgress","addEventListener","onUploadProgress","upload","cancel","abort","subscribe","aborted","Axios","mergeConfig","createInstance","defaultConfig","context","instance","extend","create","instanceConfig","CancelToken","isCancel","spread","isAxiosError","__CANCEL__","executor","resolvePromise","promise","_listeners","l","onfulfilled","_resolve","throwIfRequested","splice","source","c","InterceptorManager","dispatchRequest","validator","validators","defaults","interceptors","configOrUrl","assertOptions","silentJSONParsing","forcedJSONParsing","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","responseInterceptorChain","chain","shift","newConfig","onFulfilled","onRejected","getUri","replace","handlers","use","eject","fn","h","isAbsoluteURL","combineURLs","requestedURL","enhanceError","transformData","throwIfCancellationRequested","transformRequest","merge","common","adapter","transformResponse","description","fileName","lineNumber","columnNumber","stack","config1","config2","getMergedValue","isPlainObject","mergeDeepProperties","prop","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","configValue","validateStatus","fns","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","process","getDefaultAdapter","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isObject","rawValue","parser","encoder","isString","parse","trim","stringifySafely","strictJSONParsing","maxContentLength","maxBodyLength","encode","serializedParams","parts","isDate","hashmarkIndex","relativeURL","write","expires","path","domain","secure","cookie","isNumber","toGMTString","document","RegExp","decodeURIComponent","remove","test","payload","originURL","msie","navigator","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","protocol","host","search","hostname","port","pathname","charAt","location","requestURL","parsed","normalizedName","ignoreDuplicateOf","line","substr","callback","arr","thing","deprecatedWarnings","formatMessage","opt","desc","opts","schema","allowUnknown","getPrototypeOf","isFunction","hasOwnProperty","ArrayBuffer","isView","pipe","product","assignValue","str","stripBOM","content","charCodeAt","msg","inherits","ctor","superCtor","super_","TempCtor","base","endian","isBN","words","red","_init","Buffer","wordSize","parseHex4Bits","parseHexByte","lowerBound","parseBase","len","move","dest","src","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","toArray","ceil","j","w","_strip","limbLen","limbPow","total","word","imuln","_iaddn","copy","_move","clone","_expand","size","_normSign","Symbol","for","inspect","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","modrn","idivn","ret","toBuffer","toArrayLike","smallMulTo","self","lo","k","ncarry","rword","maxJ","ArrayType","byteLength","reqLength","allocUnsafe","allocate","_toArrayLikeLE","_toArrayLikeBE","clz32","_countBits","_zeroBits","bitLength","hi","zeroBits","inotn","iaddn","testn","notn","ineg","neg","iuor","ior","uor","iuand","iand","uand","iuxor","ixor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","comb10MulTo","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","y","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","maskedWords","ishrn","ushln","ushrn","imaskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","divmod","positive","divn","divRound","dm","half","r2","andln","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gten","ltn","lten","eqn","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","strip","input","output","outLen","prev","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","aa","ca","da","Set","ea","fa","ha","ia","ja","ka","la","ma","d","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","ra","sa","ta","pa","isNaN","qa","oa","removeAttribute","setAttributeNS","xlinkHref","ua","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","va","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","iterator","Ka","La","Ma","Na","Oa","prepareStackTrace","Reflect","construct","displayName","Pa","render","Qa","$$typeof","_context","_payload","Ra","Sa","Ta","nodeName","Va","_valueTracker","getOwnPropertyDescriptor","configurable","getValue","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","body","Ya","defaultChecked","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","ownerDocument","eb","fb","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","children","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","valueOf","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","sb","style","setProperty","tb","menuitem","area","br","col","embed","hr","img","keygen","link","meta","param","track","wbr","ub","vb","is","wb","xb","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Nb","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","dc","unstable_requestPaint","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","pc","qc","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","transition","fd","gd","hd","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","repeat","locale","which","Rd","Td","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","le","color","date","datetime","email","month","range","tel","text","time","week","me","ne","oe","pe","qe","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","node","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","selectionStart","selectionEnd","defaultView","getSelection","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","element","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","nf","Ub","of","has","pf","qf","rf","sf","capture","passive","J","F","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","Gf","clearTimeout","Hf","Jf","queueMicrotask","catch","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","E","G","Vf","H","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","I","zg","Ag","Bg","elementType","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","defaultProps","Mg","Ng","Og","Pg","Qg","Rg","_currentValue","Sg","childLanes","Tg","dependencies","firstContext","lanes","Ug","Vg","memoizedValue","Wg","Xg","Yg","interleaved","Zg","$g","ah","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","bh","ch","eventTime","lane","dh","K","eh","fh","gh","hh","ih","jh","Component","refs","kh","nh","isMounted","_reactInternals","enqueueSetState","L","lh","mh","enqueueReplaceState","enqueueForceUpdate","oh","shouldComponentUpdate","isPureReactComponent","contextType","state","updater","qh","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","rh","props","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","sh","ref","_owner","_stringRef","th","uh","vh","wh","xh","yh","implementation","zh","Ah","Bh","Ch","Dh","Eh","Fh","Gh","Hh","Ih","tagName","Jh","Kh","Lh","M","Mh","revealOrder","Nh","Oh","_workInProgressVersionPrimary","Ph","ReactCurrentDispatcher","Qh","Rh","O","Sh","Th","Uh","Vh","Q","Wh","Xh","Yh","Zh","$h","ai","bi","ci","baseQueue","queue","di","ei","fi","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","gi","ii","ji","ki","getSnapshot","li","mi","R","ni","lastEffect","stores","oi","pi","qi","ri","destroy","deps","si","ti","ui","vi","wi","xi","yi","zi","Ai","Bi","Ci","Di","Ei","Fi","Gi","Hi","Ii","Ji","readContext","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ki","digest","Li","Mi","Ni","WeakMap","Oi","Pi","Qi","Ri","getDerivedStateFromError","componentDidCatch","Si","componentStack","Ti","pingCache","Ui","Vi","Wi","Xi","ReactCurrentOwner","Yi","Zi","$i","aj","bj","compare","cj","dj","ej","baseLanes","cachePool","transitions","fj","gj","hj","ij","jj","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","kj","lj","pendingContext","mj","Aj","Bj","Cj","Dj","nj","oj","pj","fallback","rj","tj","dataset","dgst","uj","vj","_reactRetry","sj","subtreeFlags","wj","xj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","yj","Ej","S","Fj","Gj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","createElementNS","autoFocus","createTextNode","T","Hj","Ij","Jj","Kj","U","Lj","WeakSet","V","Mj","W","Nj","Oj","Qj","Rj","Sj","Tj","Uj","Vj","Wj","insertBefore","_reactRootContainer","Xj","X","Yj","Zj","ak","onCommitFiberUnmount","componentWillUnmount","bk","ck","dk","ek","fk","isHidden","gk","hk","display","ik","jk","kk","lk","__reactInternalSnapshotBeforeUpdate","Wk","mk","nk","ok","pk","Y","Z","qk","rk","sk","tk","uk","Infinity","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","Ek","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","Pk","finishedWork","finishedLanes","Qk","timeoutHandle","Rk","Sk","Tk","Uk","Vk","mutableReadLanes","Bc","Pj","onCommitFiberRoot","mc","onRecoverableError","Xk","onPostCommitFiberRoot","Yk","Zk","al","isReactComponent","pendingChildren","bl","mutableSourceEagerHydrationData","cl","cache","pendingSuspenseBoundaries","el","fl","gl","hl","il","jl","zj","$k","ll","reportError","ml","_internalRoot","nl","ol","pl","ql","sl","rl","unmount","unstable_scheduleHydration","querySelectorAll","tl","usingClientEntryPoint","Events","ul","findFiberByHostInstance","bundleType","rendererPackageName","vl","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","wl","isDisabled","supportsFiber","inject","createPortal","dl","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","__self","__source","Fragment","jsx","jsxs","setState","forceUpdate","escape","_status","_result","default","Children","only","Profiler","PureComponent","StrictMode","Suspense","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","createFactory","createRef","forwardRef","isValidElement","lazy","memo","startTransition","unstable_act","pop","sortIndex","performance","setImmediate","startTime","expirationTime","priorityLevel","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","delay","unstable_wrapCallback","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","amdO","getter","__esModule","definition","chunkId","miniCssF","globalThis","Function","inProgress","dataWebpackPrefix","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","nc","onScriptComplete","onload","doneFns","head","toStringTag","nmd","paths","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","kindOf","kindOfTest","typeOfTest","isFileList","allOwnKeys","getOwnPropertyNames","findKey","_global","global","isContextDefined","isTypedArray","TypedArray","isHTMLForm","_ref","isRegExp","reduceDescriptors","reducer","descriptors","getOwnPropertyDescriptors","reducedDescriptors","descriptor","defineProperties","ALPHA","DIGIT","ALPHABET","ALPHA_DIGIT","isAsyncFn","FormData","append","isBoolean","caseless","targetKey","superConstructor","toFlatObject","sourceObj","destObj","propFilter","merged","endsWith","searchString","lastIndex","forEachEntry","pair","matchAll","regExp","matches","exec","hasOwnProp","freezeMethods","toObjectSet","arrayOrString","delimiter","define","toCamelCase","p1","p2","toFiniteNumber","isFinite","generateString","alphabet","isSpecCompliantForm","toJSONObject","visit","reducedValue","isThenable","AxiosError","captureStackTrace","customProps","axiosError","cause","isVisitable","removeBrackets","renderKey","dots","predicates","formData","metaTokens","indexes","option","visitor","defaultVisitor","useBlob","Blob","convertValue","isFlatArray","exposedHelpers","build","charMap","AxiosURLSearchParams","_pairs","toFormData","_encode","serializeFn","serialize","clear","isBrowser","classes","URLSearchParams","protocols","hasBrowserEnv","hasStandardBrowserEnv","hasStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","platform","buildPath","isNumericKey","isLast","arrayToObject","entries","parsePropPath","contentType","getContentType","hasJSONContentType","isObjectPayload","formDataToJSON","setContentType","helpers","isNode","toURLEncodedForm","formSerializer","_FormData","env","JSONRequested","ERR_BAD_RESPONSE","$internals","normalizeHeader","header","normalizeValue","matchHeaderValue","isHeaderNameFilter","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_header","_rewrite","lHeader","setHeaders","rawHeaders","tokensRE","parseTokens","matcher","deleted","deleteHeader","normalized","formatHeader","targets","asStrings","computed","accessor","accessors","defineAccessor","accessorName","arg1","arg2","arg3","buildAccessors","_ref2","mapped","headerValue","CanceledError","ERR_CANCELED","samplesCount","timestamps","firstSampleTS","chunkLength","startedAt","bytesCount","passed","progressEventReducer","isDownloadStream","bytesNotified","_speedometer","speedometer","lengthComputable","progressBytes","rate","estimated","knownAdapters","http","xhr","withXSRFToken","Boolean","ERR_BAD_REQUEST","ECONNABORTED","ERR_NETWORK","ETIMEDOUT","parseProtocol","renderReason","isResolvedHandle","adapters","nameOrAdapter","rejectedReasons","reasons","headersToObject","timeoutMessage","decompress","beforeRedirect","transport","httpAgent","httpsAgent","socketPath","responseEncoding","ERR_DEPRECATED","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","function","contextHeaders","generateHTTPMethod","isForm","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","formToJSON","getAdapter","_checkPrivateRedeclaration","privateCollection","_classPrivateMethodInitSpec","privateSet","privateMap","_classPrivateMethodGet","receiver","_classExtractFieldDescriptor","_typeof","toPropertyKey","toPrimitive","_defineProperty","checkType","types","async","sort","isError","isCallException","shortMessage","details","RangeError","assertArgumentCount","_normalizeForms","assertNormalize","assertPrivate","givenGuard","guard","className","_getBytes","getBytes","getBytesCopy","datas","dataLength","dataSlice","fill","zeroPadValue","BN_0","BN_1","maxValue","_width","getUint","getNumber","getBigInt","_bits","Nibbles","toBeHex","toBeArray","toQuantity","startsWith","WordSize","Padding","passProperties","_guard","wrapped","_names","Result","wrap","super","_classPrivateFieldInitSpec","nameCounts","_classPrivateFieldSet","Proxy","toObject","_classPrivateFieldGet","fromItems","Coder","localName","dynamic","_throwError","_data","_dataLength","_writeData","Writer","appendWriter","writer","_writeData2","writeBytes","paddingOffset","writeValue","writeUpdatableValue","_data2","_offset","_bytesRead","_parent","_maxInflation","_incrementBytesRead","_peekBytes","Reader","allowLoose","maxInflation","consumed","subReader","reader","readBytes","loose","_peekBytes2","_incrementBytesRead2","readValue","readIndex","_classPrivateFieldGet2","bytesRead","alignedLength","isSafeInteger","lengths","outputLen","blockLen","exists","checkFinished","destroyed","finished","U32_MASK64","_32n","fromBig","lst","Uint32Array","Al","rotlSH","rotlSL","rotlBH","rotlBL","toBig","shrSH","_l","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","_h","rotr32L","Bl","add3L","Cl","add3H","low","add4L","Dl","add4H","add5H","add5L","El","crypto","u8a","u32","byteOffset","createView","DataView","rotr","nextTick","asyncLoop","iters","tick","ts","toBytes","TextEncoder","utf8ToBytes","Hash","_cloneInto","toStr","checkOpts","wrapConstructor","hashCons","hashC","randomBytes","bytesLength","getRandomValues","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_0n","_1n","_2n","_7n","_256n","_0x71n","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","Keccak","suffix","enableXOF","rounds","pos","posOut","state32","keccak","idx1","idx0","B0","B1","Tl","curH","curL","keccakP","take","finish","writeInto","bufferOut","subarray","xofInto","xof","digestInto","gen","keccak_256","locked","_keccak256","__keccak256","keccak256","lock","register","func","BN_36","getChecksumAddress","chars","expanded","hashed","ibanLookup","safeDigits","ibanChecksum","checksum","Base36","getAddress","fromBase36","_gaurd","Typed","_typedSymbol","_options","gaurd","minValue","isBigInt","isData","tupleName","arrayLength","uint8","uint16","uint24","uint32","uint40","uint48","uint56","uint64","uint72","uint80","uint88","uint96","uint104","uint112","uint120","uint128","uint136","uint144","uint152","uint160","uint168","uint176","uint184","uint192","uint200","uint208","uint216","uint224","uint232","uint240","uint248","uint256","uint","int8","int16","int24","int32","int40","int48","int56","int64","int72","int80","int88","int96","int104","int112","int120","int128","int136","int144","int152","int160","int168","int176","int184","int192","int200","int208","int216","int224","int232","int240","int248","int256","int","bytes1","bytes2","bytes3","bytes4","bytes5","bytes6","bytes7","bytes8","bytes9","bytes10","bytes11","bytes12","bytes13","bytes14","bytes15","bytes16","bytes17","bytes18","bytes19","bytes20","bytes21","bytes22","bytes23","bytes24","bytes25","bytes26","bytes27","bytes28","bytes29","bytes30","bytes31","bytes32","bool","tuple","isTyped","dereference","AddressCoder","decode","AnonymousCoder","coder","pack","coders","arrayValues","unique","staticWriter","dynamicWriter","updateFuncs","dynamicOffset","updateFunc","baseOffset","unpack","baseReader","offsetReader","baseType","ArrayCoder","defaultChild","BooleanCoder","DynamicBytesCoder","BytesCoder","FixedBytesCoder","Empty","NullCoder","BN_MAX_UINT256","NumberCoder","maxUintValue","bounds","ignoreFunc","badCodepoint","Utf8ErrorFuncs","ignore","getUtf8CodePoints","_bytes","extraLength","overlongMask","nextChar","toUtf8Bytes","c2","toUtf8String","codePoint","StringCoder","TupleCoder","uniqueNames","setify","KwVisibDeploy","_kwVisib","KwVisib","_kwTypes","KwTypes","_kwModifiers","KwModifiers","Keywords","SimpleTokens","regexWhitespacePrefix","regexNumberPrefix","regexIdPrefix","regexId","regexType","_tokens","_subTokenString","TokenString","reset","popKeyword","allowed","peek","popType","popParen","_subTokenString2","popParams","linkNext","peekKeyword","peekType","_this$offset","linkBack","lex","brackets","commas","cur","depth","allowSingle","included","consumeName","keyword","consumeKeywords","keywords","consumeMutability","modifiers","consumeParams","allowIndexed","ParamType","consumeGas","consumeEoi","_class","regexArrayType","verifyBasicType","internal","ParamTypeInternal","ErrorFragmentInternal","EventFragmentInternal","ConstructorFragmentInternal","FallbackFragmentInternal","FunctionFragmentInternal","StructFragmentInternal","_walkAsync","indexed","components","arrayChildren","isTuple","comp","isIndexable","walk","_this","walkAsync","_walkAsync2","isParamType","bracket","arrayMatch","childType","_components$index","inputs","ConstructorFragment","ErrorFragment","EventFragment","FallbackFragment","FunctionFragment","StructFragment","isConstructor","isFragment","isEvent","isStruct","NamedFragment","joinParams","selector","anonymous","topicHash","getTopicHash","payable","gas","stateMutability","errorObj","mutability","outputs","constant","getSelector","PanicReasons","paramTypeBytes","paramTypeNumber","defaultCoder","defaultMaxInflation","_getCoder","AbiCoder","getDefaultValue","_getCoder2","_setDefaultMaxInflation","defaultAbiCoder","getBuiltinCallException","abiCoder","revert","invocation","isAddressable","checkAddress","resolveAddress","resolver","BN__1","hexTrue","hexFalse","domainFieldTypes","verifyingContract","salt","domainFieldNames","checkString","domainChecks","getBaseEncoder","boundsUpper","boundsLower","padOffset","hexPadRight","encodeType","fields","_types","_fullTypes","_encoderCache","_getEncoder","TypedDataEncoder","links","parents","subtypes","primaryTypes","primaryType","checkCircular","found","subtype","st","getEncoder","_getEncoder2","encodeData","hashStruct","_visit","getPrimaryType","hashDomain","domainFields","EIP712Domain","resolveNames","ensCache","getPayload","domainValues","domainTypes","typesWithDomain","subEncoder","encodedType","_ref3","accessSetify","addr","storageKeys","storageKey","accessListify","localeCompare","createGetUrl","req","_signal","credentials","allowInsecureAuthentication","controller","AbortController","addListener","init","Headers","resp","fetch","respBody","arrayBuffer","statusCode","statusMessage","defaultGetUrlFunc","reData","reIpfs","dataGatewayFunc","FetchResponse","textData","atob","decodeBase64","FetchRequest","getIpfsGatewayFunc","Gateways","fetchSignals","_cancelled","FetchCancelSignal","cancelled","checkSignal","_allowInsecure","_gzip","_headers","_method","_timeout","_url","_body","_bodyType","_creds","_preflight","_process","_retry","_throttle","_getUrlFunc","_Symbol$iterator","hasBody","encodeBase64","allowGzip","getHeader","clearHeaders","setCredentials","preflightFunc","preflight","processFunc","retryFunc","retry","getUrlFunc","slotInterval","setThrottleParams","_send2","getTime","redirect","lockConfig","getGateway","scheme","registerGateway","registerGetUrl","getUrl","createGetUrlFunc","createDataGateway","createIpfsGatewayFunc","_request","_response","makeServerError","wait","throttle","stall","assertOk","_req$redirect","_req$clone","retryAfter","trunc","_req$clone2","_statusCode","_statusMessage","_headers2","_body2","_request2","_error","_Symbol$iterator2","bodyText","bodyJson","throwThrottleError","ZeroAddress","LogDescription","fragment","TransactionDescription","ErrorDescription","Indexed","isIndexed","_isIndexed","BuiltinErrors","_errors","_events","_functions","_abiCoder","_getFunction","_getEvent","Interface","fragments","abi","frags","receive","getAbiCoder","bucket","deploy","minimal","formatJson","getFunctionName","_getFunction2","hasFunction","getFunction","forEachFunction","getEventName","_getEvent2","hasEvent","getEvent","forEachEvent","getError","matching","matchStr","forEachError","_decodeParams","_encodeParams","encodeDeploy","decodeErrorResult","encodeErrorResult","decodeFunctionData","encodeFunctionData","decodeFunctionResult","parseTransaction","encodeFunctionResult","encodeFilterTopics","encodeTopic","encodeEventLog","dataTypes","dataValues","decodeEventLog","eventTopic","nonIndexed","resultIndexed","resultNonIndexed","nonIndexedIndex","indexedIndex","parseCallResult","parseLog","parseError","hexData","forceUnique","lastValue","valueLength","allowOptions","lastArg","toJson","FeeData","gasPrice","_type","copyRequest","bigIntKeys","numberKeys","accessList","enableCcipRead","customData","_transactions","Block","TransactionResponse","timestamp","parentHash","nonce","difficulty","gasUsed","miner","extraData","prefetchedTransactions","txs","indexOrHash","getPrefetchedTransaction","isMined","isLondon","orphanedEvent","orphan","Log","blockHash","transactionIndex","removedEvent","_logs","TransactionReceipt","effectiveGasPrice","logsBloom","cumulativeGasUsed","root","fee","getResult","getTransactionResult","createRemovedTransactionFilter","reorderedEvent","createReorderedTransactionFilter","_startBlock","_confirms","confirms","startBlock","nextScan","stopScanning","checkReplacement","mined","replacement","replaceableTransaction","checkReceipt","waiter","cancellers","timer","txListener","replaceListener","isLegacy","isBerlin","_listener","EventPayload","emitter","removeListener","EventLog","iface","interface","eventSignature","UndecodedEventLog","_iface","ContractTransactionReceipt","_iface2","ContractTransactionResponse","ContractUnknownEventPayload","ContractEventPayload","canCall","canEstimate","canResolve","canSend","getResolver","_filter","PreparedTopicFilter","runner","getRunner","resolvedArgs","getTopicFilter","feature","copyOverrides","arg","_overrides","buildWrappedFallback","populateTransaction","noValue","noData","_contract","staticCall","buildWrappedMethod","getFragment","_runner","resolveArgs","staticCallResult","internalValues","getInternal","getSubInfo","topicHashify","hasSub","subs","getSub","foundFragment","_foundFragment","emit","starting","stop","started","lastEmit","payloadFunc","resultPromise","passArgs","_emit","BaseContract","_deployTx","addrPromise","deployTx","connect","attach","getDeployedCode","waitForDeployment","deploymentTransaction","checkCode","buildWrappedEvent","queryTransaction","queryFilter","_ref4","buildClass","Contract","_ContractBase","COMPRESSED$1","FENCED","NSM_MAX","read_compressed_payload","read_payload","u16","symbol_count","skip","pos_payload","read_width","read_buffer","read_bit","FULL","HALF","MASK","symbols","decode_arithmetic","lookup","unsafe_atob","read_deltas","read_sorted","read_sorted_arrays","read_array_while","read_mapped","read_linear_table","read_replacement_table","read_transposed","dx","dy","vN","ys","j_dy","quote_cp","cp","padStart","hex_cp","explode_cp","cps","codePointAt","str_from_cps","fromCodePoint","buf","compare_arrays","COMPRESSED","S0","L0","V0","T0","T_COUNT","N_COUNT","S1","L1","V1","T1","unpack_cc","packed","unpack_cp","SHIFTED_RANK","EXCLUSIONS","DECOMP","RECOMP","is_hangul","compose_pair","recomp","decomposed","reverse","init$1","check_order","s_index","v_index","t_index","prev_cc","nfd","nfc","prev_cp","composed","composed_from_decomposed","HYPHEN","STOP_CH","FE0F","UNIQUE_PH","Array_from","group_has_cp","Emoji","is_emoji","MAPPED","IGNORED","CM","NSM","ESCAPE","NFC_CHECK","GROUPS","WHOLE_VALID","WHOLE_MAP","VALID","EMOJI_LIST","EMOJI_ROOT","read_sorted_array","read_sorted_set","chunks","unrestricted","read_chunked","wholes","recs","gs","rec","union","complement","multi","add_to_union","sorted","expand","saved","read_trie","quoted_cp","should_escape","bidi_qq","safe_str_from_cps","quoter","label","tokens_from_str","token_count","norm","lastIndexOf","check_leading_underscore","emoji","every","check_label_extension","error_placement","check_fenced","groups","error_group_member","error_disallowed","determine_group","check_group","group","maker","check_whole","flatten","quoted","where","consume_emoji_reversed","filter_fe0f","eaten","Zeros","checkComponent","ensNameSplit","ens_normalize","ensNormalize","namehash","ZeroHash","BN_2","BN_27","BN_28","BN_35","toUint256","_r2","_s","_v2","_networkV","_Symbol$for","Signature","networkV","legacyChainId","getChainId","yParity","compactSerialized","serialized","bv","getChainIdV","getNormalizedV","sig","assertError","_r","_v","SHA2","isLE","dataView","roundClean","setBigUint64","_u32_max","setUint32","oview","Chi","Maj","SHA256_K","IV","SHA256_W","SHA256","getUint32","W15","W2","s0","s1","T2","sha256","hexes","bytesToHex","hexToNumber","hexToBytes","hexByte","byte","bytesToNumberBE","bytesToNumberLE","numberToBytesBE","numberToBytesLE","ensureBytes","title","expectedLength","concatBytes","arrays","sum","pad","bitMask","u8n","u8fr","createHmacDrbg","hashLen","qByteLen","hmacFn","reseed","seed","genUntil","pred","validatorFns","stringOrUint8Array","Fp","isValid","validateObject","optValidators","checkField","fieldName","isOptional","checkVal","_3n","_4n","_5n","_8n","power","modulo","pow2","invert","FpSqrt","p1div4","eql","c1","n2","nv","legendreC","Q1div2","ZERO","t2","tonelliShanks","FIELD_FIELDS","nLength","nBitLength","_nBitLength","nByteLength","getFieldBytesLength","fieldOrder","getMinHashLength","HMAC","assertHash","iHash","oHash","assertExists","assertBytes","hmac","validateBasic","curve","ORDER","BYTES","BITS","Gx","Gy","b2n","h2b","ut","DER","Err","_parseInt","toSig","sBytes","rBytesLeft","hexFromSig","rhl","weierstrassPoints","CURVE","allowedPrivateKeyLengths","wrapPrivateKey","isTorsionFree","clearCofactor","allowInfinityPoint","endo","beta","splitScalar","validatePointOpts","point","_isCompressed","toAffine","weierstrassEquation","x3","isWithinCurveOrder","assertGE","normPrivateKeyToScalar","pointPrecomputes","assertPrjPoint","Point","px","py","pz","fromAffine","is0","normalizeZ","points","toInv","invertBatch","assertValidity","fromPrivateKey","privateKey","BASE","multiply","_setWindowSize","windowSize","_WINDOW_SIZE","hasEvenY","equals","X1","Y1","Z1","X2","Y2","Z2","U1","U2","negate","double","X3","Y3","Z3","t0","t1","t3","t4","t5","subtract","wNAF","wnaf","wNAFCached","multiplyUnsafe","unsafeLadder","k1neg","k1","k2neg","k2","k1p","k2p","scalar","fake","f1p","f2p","constTimeNegate","multiplyAndAddUnsafe","iz","ax","ay","zz","cofactor","toRawBytes","isCompressed","windows","elm","precomputeWindow","precomputes","maxNumber","shiftBy","wbits","offset1","offset2","cond1","cond2","precomputesMap","ProjectivePoint","weierstrass","curveDef","bits2int","bits2int_modN","lowS","validateOpts","CURVE_ORDER","compressedLen","uncompressedLen","modN","invN","cat","y2","numToNByteStr","isBiggerThanHalfOrder","slcNum","recovery","fromCompact","fromDER","addRecoveryBit","recoverPublicKey","msgHash","radj","prefix","ir","u1","u2","hasHighS","normalizeS","toDERRawBytes","toDERHex","toCompactRawBytes","toCompactHex","isValidPrivateKey","randomPrivateKey","fieldLen","minLen","reduced","precompute","isProbPub","ORDER_MASK","int2octets","prepSig","defaultSigOpts","prehash","extraEntropy","ent","h1int","seedArgs","k2sig","kBytes","normS","defaultVerOpts","getPublicKey","getSharedSecret","privateA","publicB","sign","privKey","drbg","verify","publicKey","_Point$BASE$multiplyA","_sig","derError","getHash","msgs","secp256k1P","secp256k1N","divNearest","sqrtMod","_6n","_11n","_22n","_23n","_44n","_88n","b11","b22","b44","b88","b176","b220","b223","bitLen","redef","sqrtP","lhs","rhs","FpPow","sqrN","addN","subN","mulN","nums","lastMultiplied","inverted","reduceRight","FpInvertBatch","cmov","Field","secp256k1","defHash","createCurve","POW_2_128","_privateKey","SigningKey","computePublicKey","compressedPublicKey","computeSharedSecret","pubKey","compressed","pub","secpSig","addPoints","p0","pub0","pub1","hexlifyByte","unarrayifyInteger","_decodeChildren","childOffset","decoded","_decode","checkOffset","lengthLength","decodeRlp","arrayifyInteger","nibbles","encodeRlp","computeAddress","pubkey","BN_MAX_UINT","handleAddress","handleAccessList","handleNumber","handleUint","formatNumber","formatAccessList","_serializeLegacy","legacy","_parseEipSignature","_serializeEip1559","_serializeEip2930","_to","_nonce","_gasLimit","_gasPrice","_maxPriorityFeePerGas","_maxFeePerGas","_value2","_chainId","_accessList","Transaction","typeName","unsignedHash","unsignedSerialized","fromPublicKey","isSigned","inferType","inferTypes","hasGasPrice","hasFee","hasAccessList","_parseLegacy","_parseEip2930","_parseEip1559","_classStaticPrivateMethodGet","classConstructor","Alphabet","Lookup","getAlpha","letter","BN_58","encodeBase58","getIpfsLink","MulticoinProviderPlugin","proivder","supportsCoinType","coinType","encodeAddress","decodeAddress","matcherIpfs","matchers","_supports","_resolver","_fetch","EnsResolver","supportsWildcard","supportsInterface","_fetch2","ethCoinType","coinPlugin","plugin","plugins","getText","getContentHash","ipfs","swarm","getAvatar","_getAvatar","linkage","avatar","tokenOwner","ownerOf","balanceOf","metadataUrl","imageUrl","getEnsAddress","ensPlugin","getPlugin","fromName","currentName","_getResolver","funcName","ensAddr","_class2","allowNull","nullValue","arrayOf","altNames","srcKey","formatData","formatHash","_formatLog","_formatBlock","_formatReceiptLog","_formatTransactionReceipt","formatTransactionResponse","creates","nonceHex","getCreateAddress","NetworkPlugin","GasCostPlugin","effectiveBlock","costs","nullish","EnsPlugin","targetNetwork","_processFunc","FetchUrlFeeDataNetworkPlugin","Networks","_name","_plugins","attachPlugin","getPlugins","basename","computeIntrinsicGas","txBase","txCreate","txDataZero","txDataNonzero","txAccessListAddress","txAccessListStorageKey","injected","registerEth","ensNetwork","getGasStationPlugin","injectCommonNetworks","networkFunc","custom","ensAddress","nameOrChainId","existing","parseUnits","frac","fetchFeeData","_feeData","standard","maxFee","maxPriorityFee","_provider","_poller","_interval","_blockNumber","_poll","PollingBlockSubscriber","pollingInterval","_setTimeout","_poll2","_clearTimeout","pause","dropWhilePaused","resume","_provider2","_poll3","_running","OnBlockSubscriber","_tag","_lastBlock","PollingBlockTagSubscriber","PollingOrphanSubscriber","_hash","PollingTransactionSubscriber","_provider3","_filter2","_poller2","_running2","_blockNumber2","_poll4","PollingEventSubscriber","_poll5","isPromise","getTag","UnmanagedSubscriber","concisify","getSubscription","_event","addAddress","defaultOptions","cacheTimeout","_subs","_pausedState","_destroyed","_networkPromise","_anyNetwork","_performCache","_nextTimer","_timers","_disableCcipRead","_perform","_call","_checkNetwork","_getAccountValue","_getBlock","_hasSub","_getSub","AbstractProvider","_network","disableCcipRead","ccipReadFetch","calldata","urls","sender","errorMessages","errorMessage","_wrapBlock","_wrapLog","formatLog","_wrapTransactionReceipt","formatTransactionReceipt","_wrapTransactionResponse","_detectNetwork","_perform2","_getFilter","_address","_getTransactionRequest","detectNetwork","networkPromise","expected","actual","getFeeDataFunc","_block","_getBlock2","feeData","_tx","_checkNetwork2","_call2","_getAccountValue2","getStorage","_position","broadcastTransaction","signedTx","prefetchTxs","_getProvider","ensContract","resolverContract","waitForBlock","timerId","_func","_this$nextTimer","_this$nextTimer2","paused","_forEachSubscriber","subscriber","_getSubscriber","_recoverSubscriber","oldSub","newSub","_getSub2","_hasSub2","perform","txSender","ccipArgs","errorArgs","urlsOffset","urlsLength","urlsData","_parseString","_parseBytes","parseOffchainLookup","ccipResult","encodeBytes","_blockTag","includeTransactions","emitArgs","subscription","addressableMap","nameMap","numPad","padded","bytesPad","empty","byteCount","checkProvider","signer","populate","AbstractSigner","getNonce","populateCall","hasEip1559","txObj","_throwUnsupported","VoidSigner","_throwUnsupported2","signMessage","signTypedData","_filterIdPromise","_hault","_teardown","FilterIdSubscriber","_subscribe","_emitResults","_recover","_teardown2","filterId","filterIdPromise","FilterIdEventSubscriber","results","FilterIdPendingSubscriber","Primitive","duration","getLowerCase","isPollable","polling","staticNetwork","batchStallTime","batchMaxSize","batchMaxCount","JsonRpcSigner","sendUncheckedTransaction","_from","hexTx","getRpcTransaction","timeouts","invalids","checkTx","sendTransactionHash","_message","populated","unlock","_legacySignMessage","_nextId","_payloads","_drainTimer","_notReady","_pendingDetectNetwork","_scheduleDrain","JsonRpcApiProvider","_getOption","getRpcRequest","_this$nextId","_this$nextId2","jsonrpc","getRpcError","_start","_scheduleDrain2","_waitUntilReady","dstKey","spelunkData","_spelunkMessage","spelunkMessage","eth_sign","personal_sign","eth_signTypedData_v4","eth_signTransaction","eth_sendTransaction","eth_requestAccounts","wallet_requestAccounts","unsupported","_this$nextId3","_this$nextId4","getSigner","accountsPromise","accounts","account","listAccounts","stallTime","payloads","_pollingInterval","JsonRpcApiPollingProvider","_connect","JsonRpcProvider","_getConnection","BN_N1","BN_5","getTens","checkValue","safeOp","getFormat","_format2","_val","_tens","_checkValue","_add","_sub","_mul","_div","_add2","_sub2","_mul2","mulSignal","_checkFormat2","_checkValue2","_div2","divSignal","tens","_decimals","_format","unit","formatEther","AccountInfo","setBalance","ethers","balanceWei","balanceEth","toFixed","fetchBalance","_jsxs","_jsx","MessagePrefix","hashMessage","_signingKey","BaseWallet","btx","signMessageSync","pbkdf2Init","_password","_salt","_opts","dkLen","asyncTick","assertNumber","DK","PRF","PRFSalt","pbkdf2Output","prfW","pbkdf2","setInt32","SHA512_Kh","SHA512_Kl","u64","SHA512_W_H","SHA512_W_L","SHA512","Fl","Gl","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","sha512","anyGlobal","getGlobal","msCrypto","createHash","algo","_sha256","_sha512","__sha256","__sha512","locked256","locked512","_computeHmac","algorithm","_algo","createHmac","__computeHmac","computeHmac","Rho","idxL","idxR","shifts","shiftsL","idx","shiftsR","Kl","Kr","rotl","BUF","RIPEMD160","h0","h1","h2","h3","h4","ar","cr","dr","er","rGroup","hbl","hbr","rr","sr","tr","ripemd160","_ripemd160","noble_ripemd160","__ripemd160","_randomBytes","crypto_random","__randomBytes","subsChrs","Word","unfold","sep","initial","decodeOwl","clumps","leftover","semi","Wordlist","phrase","_checksum","_words","_loadWords","WordlistOwl","_decodeWords","getWord","_loadWords2","getWordIndex","wordlist","LangEn","_pbkdf2","iterations","keylen","pbkdf2Sync","__pbkdf2","getUpperMask","mnemonicToEntropy","mnemonic","entropy","entropyBits","checksumMask","entropyToMnemonic","indices","remainingBits","checksumBits","Mnemonic","computeSeed","fromPhrase","fromEntropy","_entropy","entropyToPhrase","phraseToEntropy","isValidMnemonic","numberOfRounds","rcon","T3","T4","T5","T6","T7","T8","U3","U4","convertToInt32","AES","__classPrivateFieldGet","_AES_key","_AES_Kd","_AES_Ke","__classPrivateFieldSet","roundKeyCount","KC","tt","rconpointer","encrypt","plaintext","decrypt","ciphertext","ModeOfOperation","cls","aes","CBC","iv","_CBC_iv","_CBC_lastBlock","CTR","_CTR_remaining","_CTR_remainingIndex","_CTR_counter","setCounterValue","setCounterBytes","counter","MAX_SAFE_INTEGER","increment","crypttext","XorAndSalsa","y00","y01","y02","y03","y04","y05","y06","y07","y08","y09","y10","y11","y12","y13","y14","y15","x00","x01","x02","x03","x04","x05","x06","x07","x08","x09","x10","x11","x12","x13","x14","x15","BlockMix","scryptInit","maxmem","onProgress","blockSize","blockSize32","memUsed","B32","blockMixCb","totalBlockMix","callbackPer","blockMixCnt","scryptOutput","lockedSync","lockedAsync","_scryptAsync","passwd","_nobleAsync","_scryptSync","_nobleSync","__scryptAsync","__scryptSync","scrypt","_passwd","scryptSync","uuidV4","looseArrayify","zpad","getPassword","spelunk","_path","reqd","defaultPath","isKeystoreJson","json","getAccount","mnemonicKey","mnemonicCiphertext","mnemonicIv","mnemonicAesCtr","getDecryptKdfParams","kdf","prf","getEncryptKdfParams","_encryptKeystore","uuidRandom","uuid","derivedKey","macPrefix","mac","Crypto","cipher","cipherparams","kdfparams","dklen","client","gethFilename","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","mnemonicCounter","encryptKeystoreJsonSync","passwordBytes","encryptKeystoreJson","progressCallback","MasterSecret","HardenedBit","encodeBase58Check","ser_I","chainCode","IL","IR","derivePath","component","deriveChild","_account","HDNodeWallet","parentFingerprint","fingerprint","_account2","encryptSync","extendedKey","hasPath","neuter","HDNodeVoidWallet","_index","fromExtendedKey","decodeBase58","createRandom","_fromSeed","fromMnemonic","fromSeed","_seed","isCrowdsaleJson","encseed","decryptCrowdsaleJson","encryptedSeed","padder","pkcs7Strip","seedHex","Wallet","fromEncryptedJson","decryptKeystoreJson","_fromAccount","fromEncryptedJsonSync","decryptKeystoreJsonSync","transactionCount","setTransactionCount","accept","fetchBlockTransactionCount","TransactionForm","recipientAddress","setRecipientAddress","transactionAmount","setTransactionAmount","transactionStatus","setTransactionStatus","setError","onSubmit","validateInputs","validationError","amountWei","sentTransaction","htmlFor","onChange","required","TransactionHistory","accountInfo","setAccountInfo","setApiKey","decodedValues","setDecodedValues","newApiKay","setNewApiKey","decodeValues","fetchURL","metadataParams","ele","metadataConfig","tokenName","alchemy","fetchData","_Fragment","textAlign","border","borderRadius","whiteSpace","textOverflow","marginRight","App","Popup","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById","React","reportWebVitals"],"sourceRoot":""}